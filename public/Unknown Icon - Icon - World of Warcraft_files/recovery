(function(){
/*
 Copyright (c) 2019, Uponit (Aderz Media Ltd.) All rights reserved.
 See license text at: https://uponit.com/license
*/
var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.createTemplateTagFirstArg=function(B){return B.raw=B};$jscomp.createTemplateTagFirstArgWithRaw=function(B,S){B.raw=S;return B};$jscomp.arrayIteratorImpl=function(B){var S=0;return function(){return S<B.length?{done:!1,value:B[S++]}:{done:!0}}};$jscomp.arrayIterator=function(B){return{next:$jscomp.arrayIteratorImpl(B)}};$jscomp.makeIterator=function(B){var S="undefined"!=typeof Symbol&&Symbol.iterator&&B[Symbol.iterator];return S?S.call(B):$jscomp.arrayIterator(B)};
$jscomp.arrayFromIterator=function(B){for(var S,Y=[];!(S=B.next()).done;)Y.push(S.value);return Y};$jscomp.arrayFromIterable=function(B){return B instanceof Array?B:$jscomp.arrayFromIterator($jscomp.makeIterator(B))};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;$jscomp.ISOLATE_POLYFILLS=!1;
$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(B,S,Y){if(B==Array.prototype||B==Object.prototype)return B;B[S]=Y.value;return B};$jscomp.getGlobal=function(B){B=["object"==typeof globalThis&&globalThis,B,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global];for(var S=0;S<B.length;++S){var Y=B[S];if(Y&&Y.Math==Math)return Y}throw Error("Cannot find global object");};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.IS_SYMBOL_NATIVE="function"===typeof Symbol&&"symbol"===typeof Symbol("x");$jscomp.TRUST_ES6_POLYFILLS=!$jscomp.ISOLATE_POLYFILLS||$jscomp.IS_SYMBOL_NATIVE;$jscomp.polyfills={};$jscomp.propertyToPolyfillSymbol={};$jscomp.POLYFILL_PREFIX="$jscp$";var $jscomp$lookupPolyfilledValue=function(B,S){var Y=$jscomp.propertyToPolyfillSymbol[S];if(null==Y)return B[S];Y=B[Y];return void 0!==Y?Y:B[S]};
$jscomp.polyfill=function(B,S,Y,X){S&&($jscomp.ISOLATE_POLYFILLS?$jscomp.polyfillIsolated(B,S,Y,X):$jscomp.polyfillUnisolated(B,S,Y,X))};$jscomp.polyfillUnisolated=function(B,S,Y,X){Y=$jscomp.global;B=B.split(".");for(X=0;X<B.length-1;X++){var ja=B[X];if(!(ja in Y))return;Y=Y[ja]}B=B[B.length-1];X=Y[B];S=S(X);S!=X&&null!=S&&$jscomp.defineProperty(Y,B,{configurable:!0,writable:!0,value:S})};
$jscomp.polyfillIsolated=function(B,S,Y,X){var ja=B.split(".");B=1===ja.length;X=ja[0];X=!B&&X in $jscomp.polyfills?$jscomp.polyfills:$jscomp.global;for(var ya=0;ya<ja.length-1;ya++){var ha=ja[ya];if(!(ha in X))return;X=X[ha]}ja=ja[ja.length-1];Y=$jscomp.IS_SYMBOL_NATIVE&&"es6"===Y?X[ja]:null;S=S(Y);null!=S&&(B?$jscomp.defineProperty($jscomp.polyfills,ja,{configurable:!0,writable:!0,value:S}):S!==Y&&($jscomp.propertyToPolyfillSymbol[ja]=$jscomp.IS_SYMBOL_NATIVE?$jscomp.global.Symbol(ja):$jscomp.POLYFILL_PREFIX+
ja,ja=$jscomp.propertyToPolyfillSymbol[ja],$jscomp.defineProperty(X,ja,{configurable:!0,writable:!0,value:S})))};$jscomp.underscoreProtoCanBeSet=function(){var B={a:!0},S={};try{return S.__proto__=B,S.a}catch(Y){}return!1};$jscomp.setPrototypeOf=$jscomp.TRUST_ES6_POLYFILLS&&"function"==typeof Object.setPrototypeOf?Object.setPrototypeOf:$jscomp.underscoreProtoCanBeSet()?function(B,S){B.__proto__=S;if(B.__proto__!==S)throw new TypeError(B+" is not extensible");return B}:null;$jscomp.generator={};
$jscomp.generator.ensureIteratorResultIsObject_=function(B){if(!(B instanceof Object))throw new TypeError("Iterator result "+B+" is not an object");};$jscomp.generator.Context=function(){this.isRunning_=!1;this.yieldAllIterator_=null;this.yieldResult=void 0;this.nextAddress=1;this.finallyAddress_=this.catchAddress_=0;this.finallyContexts_=this.abruptCompletion_=null};
$jscomp.generator.Context.prototype.start_=function(){if(this.isRunning_)throw new TypeError("Generator is already running");this.isRunning_=!0};$jscomp.generator.Context.prototype.stop_=function(){this.isRunning_=!1};$jscomp.generator.Context.prototype.jumpToErrorHandler_=function(){this.nextAddress=this.catchAddress_||this.finallyAddress_};$jscomp.generator.Context.prototype.next_=function(B){this.yieldResult=B};
$jscomp.generator.Context.prototype.throw_=function(B){this.abruptCompletion_={exception:B,isException:!0};this.jumpToErrorHandler_()};$jscomp.generator.Context.prototype.return=function(B){this.abruptCompletion_={return:B};this.nextAddress=this.finallyAddress_};$jscomp.generator.Context.prototype.jumpThroughFinallyBlocks=function(B){this.abruptCompletion_={jumpTo:B};this.nextAddress=this.finallyAddress_};$jscomp.generator.Context.prototype.yield=function(B,S){this.nextAddress=S;return{value:B}};
$jscomp.generator.Context.prototype.yieldAll=function(B,S){B=$jscomp.makeIterator(B);var Y=B.next();$jscomp.generator.ensureIteratorResultIsObject_(Y);if(Y.done)this.yieldResult=Y.value,this.nextAddress=S;else return this.yieldAllIterator_=B,this.yield(Y.value,S)};$jscomp.generator.Context.prototype.jumpTo=function(B){this.nextAddress=B};$jscomp.generator.Context.prototype.jumpToEnd=function(){this.nextAddress=0};
$jscomp.generator.Context.prototype.setCatchFinallyBlocks=function(B,S){this.catchAddress_=B;void 0!=S&&(this.finallyAddress_=S)};$jscomp.generator.Context.prototype.setFinallyBlock=function(B){this.catchAddress_=0;this.finallyAddress_=B||0};$jscomp.generator.Context.prototype.leaveTryBlock=function(B,S){this.nextAddress=B;this.catchAddress_=S||0};
$jscomp.generator.Context.prototype.enterCatchBlock=function(B){this.catchAddress_=B||0;B=this.abruptCompletion_.exception;this.abruptCompletion_=null;return B};$jscomp.generator.Context.prototype.enterFinallyBlock=function(B,S,Y){Y?this.finallyContexts_[Y]=this.abruptCompletion_:this.finallyContexts_=[this.abruptCompletion_];this.catchAddress_=B||0;this.finallyAddress_=S||0};
$jscomp.generator.Context.prototype.leaveFinallyBlock=function(B,S){S=this.finallyContexts_.splice(S||0)[0];if(S=this.abruptCompletion_=this.abruptCompletion_||S){if(S.isException)return this.jumpToErrorHandler_();void 0!=S.jumpTo&&this.finallyAddress_<S.jumpTo?(this.nextAddress=S.jumpTo,this.abruptCompletion_=null):this.nextAddress=this.finallyAddress_}else this.nextAddress=B};$jscomp.generator.Context.prototype.forIn=function(B){return new $jscomp.generator.Context.PropertyIterator(B)};
$jscomp.generator.Context.PropertyIterator=function(B){this.object_=B;this.properties_=[];for(var S in B)this.properties_.push(S);this.properties_.reverse()};$jscomp.generator.Context.PropertyIterator.prototype.getNext=function(){for(;0<this.properties_.length;){var B=this.properties_.pop();if(B in this.object_)return B}return null};$jscomp.generator.Engine_=function(B){this.context_=new $jscomp.generator.Context;this.program_=B};
$jscomp.generator.Engine_.prototype.next_=function(B){this.context_.start_();if(this.context_.yieldAllIterator_)return this.yieldAllStep_(this.context_.yieldAllIterator_.next,B,this.context_.next_);this.context_.next_(B);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.return_=function(B){this.context_.start_();var S=this.context_.yieldAllIterator_;if(S)return this.yieldAllStep_("return"in S?S["return"]:function(Y){return{value:Y,done:!0}},B,this.context_.return);this.context_.return(B);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.throw_=function(B){this.context_.start_();if(this.context_.yieldAllIterator_)return this.yieldAllStep_(this.context_.yieldAllIterator_["throw"],B,this.context_.next_);this.context_.throw_(B);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.yieldAllStep_=function(B,S,Y){try{var X=B.call(this.context_.yieldAllIterator_,S);$jscomp.generator.ensureIteratorResultIsObject_(X);if(!X.done)return this.context_.stop_(),X;var ja=X.value}catch(ya){return this.context_.yieldAllIterator_=null,this.context_.throw_(ya),this.nextStep_()}this.context_.yieldAllIterator_=null;Y.call(this.context_,ja);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.nextStep_=function(){for(;this.context_.nextAddress;)try{var B=this.program_(this.context_);if(B)return this.context_.stop_(),{value:B.value,done:!1}}catch(S){this.context_.yieldResult=void 0,this.context_.throw_(S)}this.context_.stop_();if(this.context_.abruptCompletion_){B=this.context_.abruptCompletion_;this.context_.abruptCompletion_=null;if(B.isException)throw B.exception;return{value:B.return,done:!0}}return{value:void 0,done:!0}};
$jscomp.generator.Generator_=function(B){this.next=function(S){return B.next_(S)};this.throw=function(S){return B.throw_(S)};this.return=function(S){return B.return_(S)};this[Symbol.iterator]=function(){return this}};$jscomp.generator.createGenerator=function(B,S){S=new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(S));$jscomp.setPrototypeOf&&B.prototype&&$jscomp.setPrototypeOf(S,B.prototype);return S};
$jscomp.asyncExecutePromiseGenerator=function(B){function S(X){return B.next(X)}function Y(X){return B.throw(X)}return new Promise(function(X,ja){function ya(ha){ha.done?X(ha.value):Promise.resolve(ha.value).then(S,Y).then(ya,ja)}ya(B.next())})};$jscomp.asyncExecutePromiseGeneratorFunction=function(B){return $jscomp.asyncExecutePromiseGenerator(B())};$jscomp.asyncExecutePromiseGeneratorProgram=function(B){return $jscomp.asyncExecutePromiseGenerator(new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(B)))};
$jscomp.initSymbol=function(){};$jscomp.polyfill("Symbol",function(B){if(B)return B;var S=function(ja,ya){this.$jscomp$symbol$id_=ja;$jscomp.defineProperty(this,"description",{configurable:!0,writable:!0,value:ya})};S.prototype.toString=function(){return this.$jscomp$symbol$id_};var Y=0,X=function(ja){if(this instanceof X)throw new TypeError("Symbol is not a constructor");return new S("jscomp_symbol_"+(ja||"")+"_"+Y++,ja)};return X},"es6","es3");$jscomp.initSymbolIterator=function(){};
$jscomp.polyfill("Symbol.iterator",function(B){if(B)return B;B=Symbol("Symbol.iterator");for(var S="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),Y=0;Y<S.length;Y++){var X=$jscomp.global[S[Y]];"function"===typeof X&&"function"!=typeof X.prototype[B]&&$jscomp.defineProperty(X.prototype,B,{configurable:!0,writable:!0,value:function(){return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))}})}return B},"es6",
"es3");$jscomp.initSymbolAsyncIterator=function(){};$jscomp.iteratorPrototype=function(B){B={next:B};B[Symbol.iterator]=function(){return this};return B};$jscomp.FORCE_POLYFILL_PROMISE=!1;
$jscomp.polyfill("Promise",function(B){function S(){this.batch_=null}function Y(ha){return ha instanceof ja?ha:new ja(function(Ga,T){Ga(ha)})}if(B&&!$jscomp.FORCE_POLYFILL_PROMISE)return B;S.prototype.asyncExecute=function(ha){if(null==this.batch_){this.batch_=[];var Ga=this;this.asyncExecuteFunction(function(){Ga.executeBatch_()})}this.batch_.push(ha)};var X=$jscomp.global.setTimeout;S.prototype.asyncExecuteFunction=function(ha){X(ha,0)};S.prototype.executeBatch_=function(){for(;this.batch_&&this.batch_.length;){var ha=
this.batch_;this.batch_=[];for(var Ga=0;Ga<ha.length;++Ga){var T=ha[Ga];ha[Ga]=null;try{T()}catch(x){this.asyncThrow_(x)}}}this.batch_=null};S.prototype.asyncThrow_=function(ha){this.asyncExecuteFunction(function(){throw ha;})};var ja=function(ha){this.state_=0;this.result_=void 0;this.onSettledCallbacks_=[];var Ga=this.createResolveAndReject_();try{ha(Ga.resolve,Ga.reject)}catch(T){Ga.reject(T)}};ja.prototype.createResolveAndReject_=function(){function ha(x){return function(ra){T||(T=!0,x.call(Ga,
ra))}}var Ga=this,T=!1;return{resolve:ha(this.resolveTo_),reject:ha(this.reject_)}};ja.prototype.resolveTo_=function(ha){if(ha===this)this.reject_(new TypeError("A Promise cannot resolve to itself"));else if(ha instanceof ja)this.settleSameAsPromise_(ha);else{a:switch(typeof ha){case "object":var Ga=null!=ha;break a;case "function":Ga=!0;break a;default:Ga=!1}Ga?this.resolveToNonPromiseObj_(ha):this.fulfill_(ha)}};ja.prototype.resolveToNonPromiseObj_=function(ha){var Ga=void 0;try{Ga=ha.then}catch(T){this.reject_(T);
return}"function"==typeof Ga?this.settleSameAsThenable_(Ga,ha):this.fulfill_(ha)};ja.prototype.reject_=function(ha){this.settle_(2,ha)};ja.prototype.fulfill_=function(ha){this.settle_(1,ha)};ja.prototype.settle_=function(ha,Ga){if(0!=this.state_)throw Error("Cannot settle("+ha+", "+Ga+"): Promise already settled in state"+this.state_);this.state_=ha;this.result_=Ga;this.executeOnSettledCallbacks_()};ja.prototype.executeOnSettledCallbacks_=function(){if(null!=this.onSettledCallbacks_){for(var ha=0;ha<
this.onSettledCallbacks_.length;++ha)ya.asyncExecute(this.onSettledCallbacks_[ha]);this.onSettledCallbacks_=null}};var ya=new S;ja.prototype.settleSameAsPromise_=function(ha){var Ga=this.createResolveAndReject_();ha.callWhenSettled_(Ga.resolve,Ga.reject)};ja.prototype.settleSameAsThenable_=function(ha,Ga){var T=this.createResolveAndReject_();try{ha.call(Ga,T.resolve,T.reject)}catch(x){T.reject(x)}};ja.prototype.then=function(ha,Ga){function T(na,db){return"function"==typeof na?function(jb){try{x(na(jb))}catch(eb){ra(eb)}}:
db}var x,ra,Ja=new ja(function(na,db){x=na;ra=db});this.callWhenSettled_(T(ha,x),T(Ga,ra));return Ja};ja.prototype.catch=function(ha){return this.then(void 0,ha)};ja.prototype.callWhenSettled_=function(ha,Ga){function T(){switch(x.state_){case 1:ha(x.result_);break;case 2:Ga(x.result_);break;default:throw Error("Unexpected state: "+x.state_);}}var x=this;null==this.onSettledCallbacks_?ya.asyncExecute(T):this.onSettledCallbacks_.push(T)};ja.resolve=Y;ja.reject=function(ha){return new ja(function(Ga,
T){T(ha)})};ja.race=function(ha){return new ja(function(Ga,T){for(var x=$jscomp.makeIterator(ha),ra=x.next();!ra.done;ra=x.next())Y(ra.value).callWhenSettled_(Ga,T)})};ja.all=function(ha){var Ga=$jscomp.makeIterator(ha),T=Ga.next();return T.done?Y([]):new ja(function(x,ra){function Ja(jb){return function(eb){na[jb]=eb;db--;0==db&&x(na)}}var na=[],db=0;do na.push(void 0),db++,Y(T.value).callWhenSettled_(Ja(na.length-1),ra),T=Ga.next();while(!T.done)})};return ja},"es6","es3");
$jscomp.polyfill("Object.setPrototypeOf",function(B){return B||$jscomp.setPrototypeOf},"es6","es5");$jscomp.checkEs6ConformanceViaProxy=function(){try{var B={},S=Object.create(new $jscomp.global.Proxy(B,{get:function(Y,X,ja){return Y==B&&"q"==X&&ja==S}}));return!0===S.q}catch(Y){return!1}};$jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS=!1;$jscomp.ES6_CONFORMANCE=$jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS&&$jscomp.checkEs6ConformanceViaProxy();
$jscomp.owns=function(B,S){return Object.prototype.hasOwnProperty.call(B,S)};
$jscomp.polyfill("WeakMap",function(B){function S(){if(!B||!Object.seal)return!1;try{var x=Object.seal({}),ra=Object.seal({}),Ja=new B([[x,2],[ra,3]]);if(2!=Ja.get(x)||3!=Ja.get(ra))return!1;Ja.delete(x);Ja.set(ra,4);return!Ja.has(x)&&4==Ja.get(ra)}catch(na){return!1}}function Y(){}function X(x){var ra=typeof x;return"object"===ra&&null!==x||"function"===ra}function ja(x){if(!$jscomp.owns(x,ha)){var ra=new Y;$jscomp.defineProperty(x,ha,{value:ra})}}function ya(x){if(!$jscomp.ISOLATE_POLYFILLS){var ra=
Object[x];ra&&(Object[x]=function(Ja){if(Ja instanceof Y)return Ja;Object.isExtensible(Ja)&&ja(Ja);return ra(Ja)})}}if($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS){if(B&&$jscomp.ES6_CONFORMANCE)return B}else if(S())return B;var ha="$jscomp_hidden_"+Math.random();ya("freeze");ya("preventExtensions");ya("seal");var Ga=0,T=function(x){this.id_=(Ga+=Math.random()+1).toString();if(x){x=$jscomp.makeIterator(x);for(var ra;!(ra=x.next()).done;)ra=ra.value,this.set(ra[0],ra[1])}};T.prototype.set=function(x,
ra){if(!X(x))throw Error("Invalid WeakMap key");ja(x);if(!$jscomp.owns(x,ha))throw Error("WeakMap key fail: "+x);x[ha][this.id_]=ra;return this};T.prototype.get=function(x){return X(x)&&$jscomp.owns(x,ha)?x[ha][this.id_]:void 0};T.prototype.has=function(x){return X(x)&&$jscomp.owns(x,ha)&&$jscomp.owns(x[ha],this.id_)};T.prototype.delete=function(x){return X(x)&&$jscomp.owns(x,ha)&&$jscomp.owns(x[ha],this.id_)?delete x[ha][this.id_]:!1};return T},"es6","es3");$jscomp.MapEntry=function(){};
$jscomp.polyfill("Map",function(B){function S(){if($jscomp.ASSUME_NO_NATIVE_MAP||!B||"function"!=typeof B||!B.prototype.entries||"function"!=typeof Object.seal)return!1;try{var T=Object.seal({x:4}),x=new B($jscomp.makeIterator([[T,"s"]]));if("s"!=x.get(T)||1!=x.size||x.get({x:4})||x.set({x:4},"t")!=x||2!=x.size)return!1;var ra=x.entries(),Ja=ra.next();if(Ja.done||Ja.value[0]!=T||"s"!=Ja.value[1])return!1;Ja=ra.next();return Ja.done||4!=Ja.value[0].x||"t"!=Ja.value[1]||!ra.next().done?!1:!0}catch(na){return!1}}
if($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS){if(B&&$jscomp.ES6_CONFORMANCE)return B}else if(S())return B;var Y=new WeakMap,X=function(T){this.data_={};this.head_=ha();this.size=0;if(T){T=$jscomp.makeIterator(T);for(var x;!(x=T.next()).done;)x=x.value,this.set(x[0],x[1])}};X.prototype.set=function(T,x){T=0===T?0:T;var ra=ja(this,T);ra.list||(ra.list=this.data_[ra.id]=[]);ra.entry?ra.entry.value=x:(ra.entry={next:this.head_,previous:this.head_.previous,head:this.head_,key:T,value:x},ra.list.push(ra.entry),
this.head_.previous.next=ra.entry,this.head_.previous=ra.entry,this.size++);return this};X.prototype.delete=function(T){T=ja(this,T);return T.entry&&T.list?(T.list.splice(T.index,1),T.list.length||delete this.data_[T.id],T.entry.previous.next=T.entry.next,T.entry.next.previous=T.entry.previous,T.entry.head=null,this.size--,!0):!1};X.prototype.clear=function(){this.data_={};this.head_=this.head_.previous=ha();this.size=0};X.prototype.has=function(T){return!!ja(this,T).entry};X.prototype.get=function(T){return(T=
ja(this,T).entry)&&T.value};X.prototype.entries=function(){return ya(this,function(T){return[T.key,T.value]})};X.prototype.keys=function(){return ya(this,function(T){return T.key})};X.prototype.values=function(){return ya(this,function(T){return T.value})};X.prototype.forEach=function(T,x){for(var ra=this.entries(),Ja;!(Ja=ra.next()).done;)Ja=Ja.value,T.call(x,Ja[1],Ja[0],this)};X.prototype[Symbol.iterator]=X.prototype.entries;var ja=function(T,x){var ra=x&&typeof x;"object"==ra||"function"==ra?Y.has(x)?
ra=Y.get(x):(ra=""+ ++Ga,Y.set(x,ra)):ra="p_"+x;var Ja=T.data_[ra];if(Ja&&$jscomp.owns(T.data_,ra))for(T=0;T<Ja.length;T++){var na=Ja[T];if(x!==x&&na.key!==na.key||x===na.key)return{id:ra,list:Ja,index:T,entry:na}}return{id:ra,list:Ja,index:-1,entry:void 0}},ya=function(T,x){var ra=T.head_;return $jscomp.iteratorPrototype(function(){if(ra){for(;ra.head!=T.head_;)ra=ra.previous;for(;ra.next!=ra.head;)return ra=ra.next,{done:!1,value:x(ra)};ra=null}return{done:!0,value:void 0}})},ha=function(){var T=
{};return T.previous=T.next=T.head=T},Ga=0;return X},"es6","es3");
$jscomp.polyfill("Set",function(B){function S(){if($jscomp.ASSUME_NO_NATIVE_SET||!B||"function"!=typeof B||!B.prototype.entries||"function"!=typeof Object.seal)return!1;try{var X=Object.seal({x:4}),ja=new B($jscomp.makeIterator([X]));if(!ja.has(X)||1!=ja.size||ja.add(X)!=ja||1!=ja.size||ja.add({x:4})!=ja||2!=ja.size)return!1;var ya=ja.entries(),ha=ya.next();if(ha.done||ha.value[0]!=X||ha.value[1]!=X)return!1;ha=ya.next();return ha.done||ha.value[0]==X||4!=ha.value[0].x||ha.value[1]!=ha.value[0]?!1:
ya.next().done}catch(Ga){return!1}}if($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS){if(B&&$jscomp.ES6_CONFORMANCE)return B}else if(S())return B;var Y=function(X){this.map_=new Map;if(X){X=$jscomp.makeIterator(X);for(var ja;!(ja=X.next()).done;)this.add(ja.value)}this.size=this.map_.size};Y.prototype.add=function(X){X=0===X?0:X;this.map_.set(X,X);this.size=this.map_.size;return this};Y.prototype.delete=function(X){X=this.map_.delete(X);this.size=this.map_.size;return X};Y.prototype.clear=function(){this.map_.clear();
this.size=0};Y.prototype.has=function(X){return this.map_.has(X)};Y.prototype.entries=function(){return this.map_.entries()};Y.prototype.values=function(){return this.map_.values()};Y.prototype.keys=Y.prototype.values;Y.prototype[Symbol.iterator]=Y.prototype.values;Y.prototype.forEach=function(X,ja){var ya=this;this.map_.forEach(function(ha){return X.call(ja,ha,ha,ya)})};return Y},"es6","es3");
$jscomp.polyfill("Object.is",function(B){return B?B:function(S,Y){return S===Y?0!==S||1/S===1/Y:S!==S&&Y!==Y}},"es6","es3");$jscomp.polyfill("Array.prototype.includes",function(B){return B?B:function(S,Y){var X=this;X instanceof String&&(X=String(X));var ja=X.length;Y=Y||0;for(0>Y&&(Y=Math.max(Y+ja,0));Y<ja;Y++){var ya=X[Y];if(ya===S||Object.is(ya,S))return!0}return!1}},"es7","es3");
$jscomp.checkStringArgs=function(B,S,Y){if(null==B)throw new TypeError("The 'this' value for String.prototype."+Y+" must not be null or undefined");if(S instanceof RegExp)throw new TypeError("First argument to String.prototype."+Y+" must not be a regular expression");return B+""};$jscomp.polyfill("String.prototype.includes",function(B){return B?B:function(S,Y){return-1!==$jscomp.checkStringArgs(this,S,"includes").indexOf(S,Y||0)}},"es6","es3");
$jscomp.polyfill("Object.entries",function(B){return B?B:function(S){var Y=[],X;for(X in S)$jscomp.owns(S,X)&&Y.push([X,S[X]]);return Y}},"es8","es3");$jscomp.polyfill("String.prototype.endsWith",function(B){return B?B:function(S,Y){var X=$jscomp.checkStringArgs(this,S,"endsWith");S+="";void 0===Y&&(Y=X.length);Y=Math.max(0,Math.min(Y|0,X.length));for(var ja=S.length;0<ja&&0<Y;)if(X[--Y]!=S[--ja])return!1;return 0>=ja}},"es6","es3");
$jscomp.iteratorFromArray=function(B,S){B instanceof String&&(B+="");var Y=0,X={next:function(){if(Y<B.length){var ja=Y++;return{value:S(ja,B[ja]),done:!1}}X.next=function(){return{done:!0,value:void 0}};return X.next()}};X[Symbol.iterator]=function(){return X};return X};$jscomp.polyfill("Array.prototype.keys",function(B){return B?B:function(){return $jscomp.iteratorFromArray(this,function(S){return S})}},"es6","es3");
$jscomp.findInternal=function(B,S,Y){B instanceof String&&(B=String(B));for(var X=B.length,ja=0;ja<X;ja++){var ya=B[ja];if(S.call(Y,ya,ja,B))return{i:ja,v:ya}}return{i:-1,v:void 0}};$jscomp.polyfill("Array.prototype.find",function(B){return B?B:function(S,Y){return $jscomp.findInternal(this,S,Y).v}},"es6","es3");
$jscomp.polyfill("Array.prototype.flat",function(B){return B?B:function(S){S=void 0===S?1:S;for(var Y=[],X=0;X<this.length;X++){var ja=this[X];Array.isArray(ja)&&0<S?(ja=Array.prototype.flat.call(ja,S-1),Y.push.apply(Y,ja)):Y.push(ja)}return Y}},"es9","es5");
$jscomp.polyfill("Object.fromEntries",function(B){return B?B:function(S){var Y={};if(!(Symbol.iterator in S))throw new TypeError(""+S+" is not iterable");S=S[Symbol.iterator].call(S);for(var X=S.next();!X.done;X=S.next()){X=X.value;if(Object(X)!==X)throw new TypeError("iterable for fromEntries should yield objects");Y[X[0]]=X[1]}return Y}},"es_2019","es3");window.SVGFEFuncCMYKElement=!0;window===top&&(window.YSVGFEFuncCMYKElement=!0);
(function(B){var S={};(function(J){var A={};(function(H){"object"===typeof J&&"undefined"!==typeof module?module.exports=H():("undefined"!==typeof window?window:"undefined"!==typeof global?global:"undefined"!==typeof self?self:this).pako=H()})(function(){return function(){function H(D,G,q){function l(h,c){if(!G[h]){if(!D[h]){var d="function"==typeof require&&require;if(!c&&d)return d(h,!0);if(e)return e(h,!0);c=Error("Cannot find module '"+h+"'");throw c.code="MODULE_NOT_FOUND",c;}c=G[h]={exports:{}};
D[h][0].call(c.exports,function(f){return l(D[h][1][f]||f)},c,c.exports,H,D,G,q)}return G[h].exports}for(var e="function"==typeof require&&require,g=0;g<q.length;g++)l(q[g]);return l}return H}()({1:[function(H,D,G){function q(m){if(!(this instanceof q))return new q(m);m=this.options=g.assign({level:-1,method:8,chunkSize:16384,windowBits:15,memLevel:8,strategy:0,to:""},m||{});m.raw&&0<m.windowBits?m.windowBits=-m.windowBits:m.gzip&&0<m.windowBits&&16>m.windowBits&&(m.windowBits+=16);this.err=0;this.msg=
"";this.ended=!1;this.chunks=[];this.strm=new d;this.strm.avail_out=0;var y=e.deflateInit2(this.strm,m.level,m.method,m.windowBits,m.memLevel,m.strategy);if(0!==y)throw Error(c[y]);m.header&&e.deflateSetHeader(this.strm,m.header);if(m.dictionary){m="string"===typeof m.dictionary?h.string2buf(m.dictionary):"[object ArrayBuffer]"===f.call(m.dictionary)?new Uint8Array(m.dictionary):m.dictionary;y=e.deflateSetDictionary(this.strm,m);if(0!==y)throw Error(c[y]);this._dict_set=!0}}function l(m,y){y=new q(y);
y.push(m,!0);if(y.err)throw y.msg||c[y.err];return y.result}var e=H("./zlib/deflate"),g=H("./utils/common"),h=H("./utils/strings"),c=H("./zlib/messages"),d=H("./zlib/zstream"),f=Object.prototype.toString;q.prototype.push=function(m,y){var E=this.strm,C=this.options.chunkSize;if(this.ended)return!1;y=y===~~y?y:!0===y?4:0;"string"===typeof m?E.input=h.string2buf(m):"[object ArrayBuffer]"===f.call(m)?E.input=new Uint8Array(m):E.input=m;E.next_in=0;E.avail_in=E.input.length;do{0===E.avail_out&&(E.output=
new g.Buf8(C),E.next_out=0,E.avail_out=C);m=e.deflate(E,y);if(1!==m&&0!==m)return this.onEnd(m),this.ended=!0,!1;if(0===E.avail_out||0===E.avail_in&&(4===y||2===y))if("string"===this.options.to)this.onData(h.buf2binstring(g.shrinkBuf(E.output,E.next_out)));else this.onData(g.shrinkBuf(E.output,E.next_out))}while((0<E.avail_in||0===E.avail_out)&&1!==m);if(4===y)return m=e.deflateEnd(this.strm),this.onEnd(m),this.ended=!0,0===m;2===y&&(this.onEnd(0),E.avail_out=0);return!0};q.prototype.onData=function(m){this.chunks.push(m)};
q.prototype.onEnd=function(m){0===m&&(this.result="string"===this.options.to?this.chunks.join(""):g.flattenChunks(this.chunks));this.chunks=[];this.err=m;this.msg=this.strm.msg};G.Deflate=q;G.deflate=l;G.deflateRaw=function(m,y){y=y||{};y.raw=!0;return l(m,y)};G.gzip=function(m,y){y=y||{};y.gzip=!0;return l(m,y)}},{"./utils/common":3,"./utils/strings":4,"./zlib/deflate":8,"./zlib/messages":13,"./zlib/zstream":15}],2:[function(H,D,G){H("./utils/common");H("./utils/strings");H("./zlib/constants");H("./zlib/messages");
H("./zlib/zstream");H("./zlib/gzheader")},{"./utils/common":3,"./utils/strings":4,"./zlib/constants":6,"./zlib/gzheader":9,"./zlib/messages":13,"./zlib/zstream":15}],3:[function(H,D,G){H="undefined"!==typeof Uint8Array&&"undefined"!==typeof Uint16Array&&"undefined"!==typeof Int32Array;G.assign=function(e){for(var g=Array.prototype.slice.call(arguments,1);g.length;){var h=g.shift();if(h){if("object"!==typeof h)throw new TypeError(h+"must be non-object");for(var c in h)Object.prototype.hasOwnProperty.call(h,
c)&&(e[c]=h[c])}}return e};G.shrinkBuf=function(e,g){if(e.length===g)return e;if(e.subarray)return e.subarray(0,g);e.length=g;return e};var q={arraySet:function(e,g,h,c,d){if(g.subarray&&e.subarray)e.set(g.subarray(h,h+c),d);else for(var f=0;f<c;f++)e[d+f]=g[h+f]},flattenChunks:function(e){var g,h;var c=h=0;for(g=e.length;c<g;c++)h+=e[c].length;var d=new Uint8Array(h);c=h=0;for(g=e.length;c<g;c++){var f=e[c];d.set(f,h);h+=f.length}return d}},l={arraySet:function(e,g,h,c,d){for(var f=0;f<c;f++)e[d+
f]=g[h+f]},flattenChunks:function(e){return[].concat.apply([],e)}};G.setTyped=function(e){e?(G.Buf8=Uint8Array,G.Buf16=Uint16Array,G.Buf32=Int32Array,G.assign(G,q)):(G.Buf8=Array,G.Buf16=Array,G.Buf32=Array,G.assign(G,l))};G.setTyped(H)},{}],4:[function(H,D,G){var q=H("./common"),l=!0,e=!0;try{String.fromCharCode.apply(null,[0])}catch(h){l=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){e=!1}var g=new q.Buf8(256);for(H=0;256>H;H++)g[H]=252<=H?6:248<=H?5:240<=H?4:224<=H?3:192<=H?
2:1;g[254]=g[254]=1;G.string2buf=function(h){var c,d,f=h.length,m=0;for(c=0;c<f;c++){var y=h.charCodeAt(c);if(55296===(y&64512)&&c+1<f){var E=h.charCodeAt(c+1);56320===(E&64512)&&(y=65536+(y-55296<<10)+(E-56320),c++)}m+=128>y?1:2048>y?2:65536>y?3:4}var C=new q.Buf8(m);for(c=d=0;d<m;c++)y=h.charCodeAt(c),55296===(y&64512)&&c+1<f&&(E=h.charCodeAt(c+1),56320===(E&64512)&&(y=65536+(y-55296<<10)+(E-56320),c++)),128>y?C[d++]=y:(2048>y?C[d++]=192|y>>>6:(65536>y?C[d++]=224|y>>>12:(C[d++]=240|y>>>18,C[d++]=
128|y>>>12&63),C[d++]=128|y>>>6&63),C[d++]=128|y&63);return C};G.buf2binstring=function(h){var c=h.length;if(65534>c&&(h.subarray&&e||!h.subarray&&l))h=String.fromCharCode.apply(null,q.shrinkBuf(h,c));else{for(var d="",f=0;f<c;f++)d+=String.fromCharCode(h[f]);h=d}return h};G.binstring2buf=function(h){for(var c=new q.Buf8(h.length),d=0,f=c.length;d<f;d++)c[d]=h.charCodeAt(d);return c};G.utf8border=function(h,c){var d;c=c||h.length;c>h.length&&(c=h.length);for(d=c-1;0<=d&&128===(h[d]&192);)d--;return 0>
d||0===d?c:d+g[h[d]]>c?d:c}},{"./common":3}],5:[function(H,D,G){D.exports=function(q,l,e,g){var h=q&65535|0;q=q>>>16&65535|0;for(var c;0!==e;){c=2E3<e?2E3:e;e-=c;do h=h+l[g++]|0,q=q+h|0;while(--c);h%=65521;q%=65521}return h|q<<16|0}},{}],6:[function(H,D,G){D.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,
Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],7:[function(H,D,G){var q=function(){for(var l,e=[],g=0;256>g;g++){l=g;for(var h=0;8>h;h++)l=l&1?3988292384^l>>>1:l>>>1;e[g]=l}return e}();D.exports=function(l,e,g,h){g=h+g;for(l^=-1;h<g;h++)l=l>>>8^q[(l^e[h])&255];return l^-1}},{}],8:[function(H,D,G){function q(a,z){a.msg=I[z];return z}function l(a){for(var z=a.length;0<=--z;)a[z]=0}function e(a){var z=a.state,
k=z.pending;k>a.avail_out&&(k=a.avail_out);0!==k&&(w.arraySet(a.output,z.pending_buf,z.pending_out,k,a.next_out),a.next_out+=k,z.pending_out+=k,a.total_out+=k,a.avail_out-=k,z.pending-=k,0===z.pending&&(z.pending_out=0))}function g(a,z){M._tr_flush_block(a,0<=a.block_start?a.block_start:-1,a.strstart-a.block_start,z);a.block_start=a.strstart;e(a.strm)}function h(a,z){a.pending_buf[a.pending++]=z}function c(a,z){a.pending_buf[a.pending++]=z>>>8&255;a.pending_buf[a.pending++]=z&255}function d(a,z){var k=
a.max_chain_length,N=a.strstart,V=a.prev_length,la=a.nice_match,Ea=a.strstart>a.w_size-262?a.strstart-(a.w_size-262):0,aa=a.window,Ma=a.w_mask,L=a.prev,b=a.strstart+258,p=aa[N+V-1],F=aa[N+V];a.prev_length>=a.good_match&&(k>>=2);la>a.lookahead&&(la=a.lookahead);do{var R=z;if(aa[R+V]===F&&aa[R+V-1]===p&&aa[R]===aa[N]&&aa[++R]===aa[N+1]){N+=2;for(R++;aa[++N]===aa[++R]&&aa[++N]===aa[++R]&&aa[++N]===aa[++R]&&aa[++N]===aa[++R]&&aa[++N]===aa[++R]&&aa[++N]===aa[++R]&&aa[++N]===aa[++R]&&aa[++N]===aa[++R]&&
N<b;);R=258-(b-N);N=b-258;if(R>V){a.match_start=z;V=R;if(R>=la)break;p=aa[N+V-1];F=aa[N+V]}}}while((z=L[z&Ma])>Ea&&0!==--k);return V<=a.lookahead?V:a.lookahead}function f(a){var z=a.w_size,k;do{var N=a.window_size-a.lookahead-a.strstart;if(a.strstart>=z+(z-262)){w.arraySet(a.window,a.window,z,z,0);a.match_start-=z;a.strstart-=z;a.block_start-=z;var V=k=a.hash_size;do{var la=a.head[--V];a.head[V]=la>=z?la-z:0}while(--k);V=k=z;do la=a.prev[--V],a.prev[V]=la>=z?la-z:0;while(--k);N+=z}if(0===a.strm.avail_in)break;
V=a.strm;k=a.window;la=a.strstart+a.lookahead;var Ea=V.avail_in;Ea>N&&(Ea=N);0===Ea?k=0:(V.avail_in-=Ea,w.arraySet(k,V.input,V.next_in,Ea,la),1===V.state.wrap?V.adler=U(V.adler,k,Ea,la):2===V.state.wrap&&(V.adler=ea(V.adler,k,Ea,la)),V.next_in+=Ea,V.total_in+=Ea,k=Ea);a.lookahead+=k;if(3<=a.lookahead+a.insert)for(N=a.strstart-a.insert,a.ins_h=a.window[N],a.ins_h=(a.ins_h<<a.hash_shift^a.window[N+1])&a.hash_mask;a.insert&&!(a.ins_h=(a.ins_h<<a.hash_shift^a.window[N+3-1])&a.hash_mask,a.prev[N&a.w_mask]=
a.head[a.ins_h],a.head[a.ins_h]=N,N++,a.insert--,3>a.lookahead+a.insert););}while(262>a.lookahead&&0!==a.strm.avail_in)}function m(a,z){for(var k;;){if(262>a.lookahead){f(a);if(262>a.lookahead&&0===z)return 1;if(0===a.lookahead)break}k=0;3<=a.lookahead&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+3-1])&a.hash_mask,k=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);0!==k&&a.strstart-k<=a.w_size-262&&(a.match_length=d(a,k));if(3<=a.match_length)if(k=M._tr_tally(a,a.strstart-
a.match_start,a.match_length-3),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&3<=a.lookahead){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+3-1])&a.hash_mask,a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else k=M._tr_tally(a,0,a.window[a.strstart]),
a.lookahead--,a.strstart++;if(k&&(g(a,!1),0===a.strm.avail_out))return 1}a.insert=2>a.strstart?a.strstart:2;return 4===z?(g(a,!0),0===a.strm.avail_out?3:4):a.last_lit&&(g(a,!1),0===a.strm.avail_out)?1:2}function y(a,z){for(var k,N;;){if(262>a.lookahead){f(a);if(262>a.lookahead&&0===z)return 1;if(0===a.lookahead)break}k=0;3<=a.lookahead&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+3-1])&a.hash_mask,k=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);a.prev_length=a.match_length;
a.prev_match=a.match_start;a.match_length=2;0!==k&&a.prev_length<a.max_lazy_match&&a.strstart-k<=a.w_size-262&&(a.match_length=d(a,k),5>=a.match_length&&(1===a.strategy||3===a.match_length&&4096<a.strstart-a.match_start)&&(a.match_length=2));if(3<=a.prev_length&&a.match_length<=a.prev_length){N=a.strstart+a.lookahead-3;k=M._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-3);a.lookahead-=a.prev_length-1;a.prev_length-=2;do++a.strstart<=N&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+3-1])&
a.hash_mask,a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);a.match_available=0;a.match_length=2;a.strstart++;if(k&&(g(a,!1),0===a.strm.avail_out))return 1}else if(a.match_available){if((k=M._tr_tally(a,0,a.window[a.strstart-1]))&&g(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return 1}else a.match_available=1,a.strstart++,a.lookahead--}a.match_available&&(M._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0);a.insert=2>a.strstart?
a.strstart:2;return 4===z?(g(a,!0),0===a.strm.avail_out?3:4):a.last_lit&&(g(a,!1),0===a.strm.avail_out)?1:2}function E(a,z){for(var k,N,V,la=a.window;;){if(258>=a.lookahead){f(a);if(258>=a.lookahead&&0===z)return 1;if(0===a.lookahead)break}a.match_length=0;if(3<=a.lookahead&&0<a.strstart&&(N=a.strstart-1,k=la[N],k===la[++N]&&k===la[++N]&&k===la[++N])){for(V=a.strstart+258;k===la[++N]&&k===la[++N]&&k===la[++N]&&k===la[++N]&&k===la[++N]&&k===la[++N]&&k===la[++N]&&k===la[++N]&&N<V;);a.match_length=258-
(V-N);a.match_length>a.lookahead&&(a.match_length=a.lookahead)}3<=a.match_length?(k=M._tr_tally(a,1,a.match_length-3),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(k=M._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++);if(k&&(g(a,!1),0===a.strm.avail_out))return 1}a.insert=0;return 4===z?(g(a,!0),0===a.strm.avail_out?3:4):a.last_lit&&(g(a,!1),0===a.strm.avail_out)?1:2}function C(a,z){for(var k;;){if(0===a.lookahead&&(f(a),0===a.lookahead)){if(0===z)return 1;
break}a.match_length=0;k=M._tr_tally(a,0,a.window[a.strstart]);a.lookahead--;a.strstart++;if(k&&(g(a,!1),0===a.strm.avail_out))return 1}a.insert=0;return 4===z?(g(a,!0),0===a.strm.avail_out?3:4):a.last_lit&&(g(a,!1),0===a.strm.avail_out)?1:2}function r(a,z,k,N,V){this.good_length=a;this.max_lazy=z;this.nice_length=k;this.max_chain=N;this.func=V}function u(){this.strm=null;this.status=0;this.pending_buf=null;this.wrap=this.pending=this.pending_out=this.pending_buf_size=0;this.gzhead=null;this.gzindex=
0;this.method=8;this.last_flush=-1;this.w_mask=this.w_bits=this.w_size=0;this.window=null;this.window_size=0;this.head=this.prev=null;this.nice_match=this.good_match=this.strategy=this.level=this.max_lazy_match=this.max_chain_length=this.prev_length=this.lookahead=this.match_start=this.strstart=this.match_available=this.prev_match=this.match_length=this.block_start=this.hash_shift=this.hash_mask=this.hash_bits=this.hash_size=this.ins_h=0;this.dyn_ltree=new w.Buf16(1146);this.dyn_dtree=new w.Buf16(122);
this.bl_tree=new w.Buf16(78);l(this.dyn_ltree);l(this.dyn_dtree);l(this.bl_tree);this.bl_desc=this.d_desc=this.l_desc=null;this.bl_count=new w.Buf16(16);this.heap=new w.Buf16(573);l(this.heap);this.heap_max=this.heap_len=0;this.depth=new w.Buf16(573);l(this.depth);this.bi_valid=this.bi_buf=this.insert=this.matches=this.static_len=this.opt_len=this.d_buf=this.last_lit=this.lit_bufsize=this.l_buf=0}function K(a){if(!a||!a.state)return q(a,-2);a.total_in=a.total_out=0;a.data_type=2;var z=a.state;z.pending=
0;z.pending_out=0;0>z.wrap&&(z.wrap=-z.wrap);z.status=z.wrap?42:113;a.adler=2===z.wrap?0:1;z.last_flush=0;M._tr_init(z);return 0}function v(a){var z=K(a);0===z&&(a=a.state,a.window_size=2*a.w_size,l(a.head),a.max_lazy_match=P[a.level].max_lazy,a.good_match=P[a.level].good_length,a.nice_match=P[a.level].nice_length,a.max_chain_length=P[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=2,a.match_available=0,a.ins_h=0);return z}function n(a,z,k,N,V,
la){if(!a)return-2;var Ea=1;-1===z&&(z=6);0>N?(Ea=0,N=-N):15<N&&(Ea=2,N-=16);if(1>V||9<V||8!==k||8>N||15<N||0>z||9<z||0>la||4<la)return q(a,-2);8===N&&(N=9);var aa=new u;a.state=aa;aa.strm=a;aa.wrap=Ea;aa.gzhead=null;aa.w_bits=N;aa.w_size=1<<aa.w_bits;aa.w_mask=aa.w_size-1;aa.hash_bits=V+7;aa.hash_size=1<<aa.hash_bits;aa.hash_mask=aa.hash_size-1;aa.hash_shift=~~((aa.hash_bits+3-1)/3);aa.window=new w.Buf8(2*aa.w_size);aa.head=new w.Buf16(aa.hash_size);aa.prev=new w.Buf16(aa.w_size);aa.lit_bufsize=
1<<V+6;aa.pending_buf_size=4*aa.lit_bufsize;aa.pending_buf=new w.Buf8(aa.pending_buf_size);aa.d_buf=1*aa.lit_bufsize;aa.l_buf=3*aa.lit_bufsize;aa.level=z;aa.strategy=la;aa.method=k;return v(a)}var w=H("../utils/common"),M=H("./trees"),U=H("./adler32"),ea=H("./crc32"),I=H("./messages");var P=[new r(0,0,0,0,function(a,z){var k=65535;for(k>a.pending_buf_size-5&&(k=a.pending_buf_size-5);;){if(1>=a.lookahead){f(a);if(0===a.lookahead&&0===z)return 1;if(0===a.lookahead)break}a.strstart+=a.lookahead;a.lookahead=
0;var N=a.block_start+k;if(0===a.strstart||a.strstart>=N)if(a.lookahead=a.strstart-N,a.strstart=N,g(a,!1),0===a.strm.avail_out)return 1;if(a.strstart-a.block_start>=a.w_size-262&&(g(a,!1),0===a.strm.avail_out))return 1}a.insert=0;if(4===z)return g(a,!0),0===a.strm.avail_out?3:4;a.strstart>a.block_start&&g(a,!1);return 1}),new r(4,4,8,4,m),new r(4,5,16,8,m),new r(4,6,32,32,m),new r(4,4,16,16,y),new r(8,16,32,32,y),new r(8,16,128,128,y),new r(8,32,128,256,y),new r(32,128,258,1024,y),new r(32,258,258,
4096,y)];G.deflateInit=function(a,z){return n(a,z,8,15,8,0)};G.deflateInit2=n;G.deflateReset=v;G.deflateResetKeep=K;G.deflateSetHeader=function(a,z){if(!a||!a.state||2!==a.state.wrap)return-2;a.state.gzhead=z;return 0};G.deflate=function(a,z){if(!a||!a.state||5<z||0>z)return a?q(a,-2):-2;var k=a.state;if(!a.output||!a.input&&0!==a.avail_in||666===k.status&&4!==z)return q(a,0===a.avail_out?-5:-2);k.strm=a;var N=k.last_flush;k.last_flush=z;if(42===k.status)if(2===k.wrap)a.adler=0,h(k,31),h(k,139),h(k,
8),k.gzhead?(h(k,(k.gzhead.text?1:0)+(k.gzhead.hcrc?2:0)+(k.gzhead.extra?4:0)+(k.gzhead.name?8:0)+(k.gzhead.comment?16:0)),h(k,k.gzhead.time&255),h(k,k.gzhead.time>>8&255),h(k,k.gzhead.time>>16&255),h(k,k.gzhead.time>>24&255),h(k,9===k.level?2:2<=k.strategy||2>k.level?4:0),h(k,k.gzhead.os&255),k.gzhead.extra&&k.gzhead.extra.length&&(h(k,k.gzhead.extra.length&255),h(k,k.gzhead.extra.length>>8&255)),k.gzhead.hcrc&&(a.adler=ea(a.adler,k.pending_buf,k.pending,0)),k.gzindex=0,k.status=69):(h(k,0),h(k,
0),h(k,0),h(k,0),h(k,0),h(k,9===k.level?2:2<=k.strategy||2>k.level?4:0),h(k,3),k.status=113);else{var V=8+(k.w_bits-8<<4)<<8;V|=(2<=k.strategy||2>k.level?0:6>k.level?1:6===k.level?2:3)<<6;0!==k.strstart&&(V|=32);k.status=113;c(k,V+(31-V%31));0!==k.strstart&&(c(k,a.adler>>>16),c(k,a.adler&65535));a.adler=1}if(69===k.status)if(k.gzhead.extra){for(V=k.pending;k.gzindex<(k.gzhead.extra.length&65535)&&(k.pending!==k.pending_buf_size||(k.gzhead.hcrc&&k.pending>V&&(a.adler=ea(a.adler,k.pending_buf,k.pending-
V,V)),e(a),V=k.pending,k.pending!==k.pending_buf_size));)h(k,k.gzhead.extra[k.gzindex]&255),k.gzindex++;k.gzhead.hcrc&&k.pending>V&&(a.adler=ea(a.adler,k.pending_buf,k.pending-V,V));k.gzindex===k.gzhead.extra.length&&(k.gzindex=0,k.status=73)}else k.status=73;if(73===k.status)if(k.gzhead.name){V=k.pending;do{if(k.pending===k.pending_buf_size&&(k.gzhead.hcrc&&k.pending>V&&(a.adler=ea(a.adler,k.pending_buf,k.pending-V,V)),e(a),V=k.pending,k.pending===k.pending_buf_size)){var la=1;break}la=k.gzindex<
k.gzhead.name.length?k.gzhead.name.charCodeAt(k.gzindex++)&255:0;h(k,la)}while(0!==la);k.gzhead.hcrc&&k.pending>V&&(a.adler=ea(a.adler,k.pending_buf,k.pending-V,V));0===la&&(k.gzindex=0,k.status=91)}else k.status=91;if(91===k.status)if(k.gzhead.comment){V=k.pending;do{if(k.pending===k.pending_buf_size&&(k.gzhead.hcrc&&k.pending>V&&(a.adler=ea(a.adler,k.pending_buf,k.pending-V,V)),e(a),V=k.pending,k.pending===k.pending_buf_size)){la=1;break}la=k.gzindex<k.gzhead.comment.length?k.gzhead.comment.charCodeAt(k.gzindex++)&
255:0;h(k,la)}while(0!==la);k.gzhead.hcrc&&k.pending>V&&(a.adler=ea(a.adler,k.pending_buf,k.pending-V,V));0===la&&(k.status=103)}else k.status=103;103===k.status&&(k.gzhead.hcrc?(k.pending+2>k.pending_buf_size&&e(a),k.pending+2<=k.pending_buf_size&&(h(k,a.adler&255),h(k,a.adler>>8&255),a.adler=0,k.status=113)):k.status=113);if(0!==k.pending){if(e(a),0===a.avail_out)return k.last_flush=-1,0}else if(0===a.avail_in&&(z<<1)-(4<z?9:0)<=(N<<1)-(4<N?9:0)&&4!==z)return q(a,-5);if(666===k.status&&0!==a.avail_in)return q(a,
-5);if(0!==a.avail_in||0!==k.lookahead||0!==z&&666!==k.status){N=2===k.strategy?C(k,z):3===k.strategy?E(k,z):P[k.level].func(k,z);if(3===N||4===N)k.status=666;if(1===N||3===N)return 0===a.avail_out&&(k.last_flush=-1),0;if(2===N&&(1===z?M._tr_align(k):5!==z&&(M._tr_stored_block(k,0,0,!1),3===z&&(l(k.head),0===k.lookahead&&(k.strstart=0,k.block_start=0,k.insert=0))),e(a),0===a.avail_out))return k.last_flush=-1,0}if(4!==z)return 0;if(0>=k.wrap)return 1;2===k.wrap?(h(k,a.adler&255),h(k,a.adler>>8&255),
h(k,a.adler>>16&255),h(k,a.adler>>24&255),h(k,a.total_in&255),h(k,a.total_in>>8&255),h(k,a.total_in>>16&255),h(k,a.total_in>>24&255)):(c(k,a.adler>>>16),c(k,a.adler&65535));e(a);0<k.wrap&&(k.wrap=-k.wrap);return 0!==k.pending?0:1};G.deflateEnd=function(a){if(!a||!a.state)return-2;var z=a.state.status;if(42!==z&&69!==z&&73!==z&&91!==z&&103!==z&&113!==z&&666!==z)return q(a,-2);a.state=null;return 113===z?q(a,-3):0};G.deflateSetDictionary=function(a,z){var k=z.length;if(!a||!a.state)return-2;var N=a.state;
var V=N.wrap;if(2===V||1===V&&42!==N.status||N.lookahead)return-2;1===V&&(a.adler=U(a.adler,z,k,0));N.wrap=0;if(k>=N.w_size){0===V&&(l(N.head),N.strstart=0,N.block_start=0,N.insert=0);var la=new w.Buf8(N.w_size);w.arraySet(la,z,k-N.w_size,N.w_size,0);z=la;k=N.w_size}la=a.avail_in;var Ea=a.next_in;var aa=a.input;a.avail_in=k;a.next_in=0;a.input=z;for(f(N);3<=N.lookahead;){z=N.strstart;k=N.lookahead-2;do N.ins_h=(N.ins_h<<N.hash_shift^N.window[z+3-1])&N.hash_mask,N.prev[z&N.w_mask]=N.head[N.ins_h],
N.head[N.ins_h]=z,z++;while(--k);N.strstart=z;N.lookahead=2;f(N)}N.strstart+=N.lookahead;N.block_start=N.strstart;N.insert=N.lookahead;N.lookahead=0;N.match_length=N.prev_length=2;N.match_available=0;a.next_in=Ea;a.input=aa;a.avail_in=la;N.wrap=V;return 0};G.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":3,"./adler32":5,"./crc32":7,"./messages":13,"./trees":14}],9:[function(H,D,G){D.exports=function(){this.os=this.xflags=this.time=this.text=0;this.extra=null;this.extra_len=0;
this.comment=this.name="";this.hcrc=0;this.done=!1}},{}],10:[function(H,D,G){D.exports=function(q,l){var e=q.state;var g=q.next_in;var h=q.input;var c=g+(q.avail_in-5);var d=q.next_out;var f=q.output;l=d-(l-q.avail_out);var m=d+(q.avail_out-257);var y=e.dmax;var E=e.wsize;var C=e.whave;var r=e.wnext;var u=e.window;var K=e.hold;var v=e.bits;var n=e.lencode;var w=e.distcode;var M=(1<<e.lenbits)-1;var U=(1<<e.distbits)-1;a:do{15>v&&(K+=h[g++]<<v,v+=8,K+=h[g++]<<v,v+=8);var ea=n[K&M];b:for(;;){var I=
ea>>>24;K>>>=I;v-=I;I=ea>>>16&255;if(0===I)f[d++]=ea&65535;else if(I&16){var P=ea&65535;if(I&=15)v<I&&(K+=h[g++]<<v,v+=8),P+=K&(1<<I)-1,K>>>=I,v-=I;15>v&&(K+=h[g++]<<v,v+=8,K+=h[g++]<<v,v+=8);ea=w[K&U];c:for(;;){I=ea>>>24;K>>>=I;v-=I;I=ea>>>16&255;if(I&16){ea&=65535;I&=15;v<I&&(K+=h[g++]<<v,v+=8,v<I&&(K+=h[g++]<<v,v+=8));ea+=K&(1<<I)-1;if(ea>y){q.msg="invalid distance too far back";e.mode=30;break a}K>>>=I;v-=I;I=d-l;if(ea>I){I=ea-I;if(I>C&&e.sane){q.msg="invalid distance too far back";e.mode=30;
break a}var a=0;var z=u;if(0===r){if(a+=E-I,I<P){P-=I;do f[d++]=u[a++];while(--I);a=d-ea;z=f}}else if(r<I){if(a+=E+r-I,I-=r,I<P){P-=I;do f[d++]=u[a++];while(--I);a=0;if(r<P){I=r;P-=I;do f[d++]=u[a++];while(--I);a=d-ea;z=f}}}else if(a+=r-I,I<P){P-=I;do f[d++]=u[a++];while(--I);a=d-ea;z=f}for(;2<P;)f[d++]=z[a++],f[d++]=z[a++],f[d++]=z[a++],P-=3;P&&(f[d++]=z[a++],1<P&&(f[d++]=z[a++]))}else{a=d-ea;do f[d++]=f[a++],f[d++]=f[a++],f[d++]=f[a++],P-=3;while(2<P);P&&(f[d++]=f[a++],1<P&&(f[d++]=f[a++]))}}else if(0===
(I&64)){ea=w[(ea&65535)+(K&(1<<I)-1)];continue c}else{q.msg="invalid distance code";e.mode=30;break a}break}}else if(0===(I&64)){ea=n[(ea&65535)+(K&(1<<I)-1)];continue b}else{I&32?e.mode=12:(q.msg="invalid literal/length code",e.mode=30);break a}break}}while(g<c&&d<m);P=v>>3;g-=P;v-=P<<3;q.next_in=g;q.next_out=d;q.avail_in=g<c?5+(c-g):5-(g-c);q.avail_out=d<m?257+(m-d):257-(d-m);e.hold=K&(1<<v)-1;e.bits=v}},{}],11:[function(H,D,G){H("../utils/common");H("./adler32");H("./crc32");H("./inffast");H("./inftrees")},
{"../utils/common":3,"./adler32":5,"./crc32":7,"./inffast":10,"./inftrees":12}],12:[function(H,D,G){var q=H("../utils/common"),l=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],e=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],g=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],h=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,
25,25,26,26,27,27,28,28,29,29,64,64];D.exports=function(c,d,f,m,y,E,C,r){var u=r.bits,K,v,n,w,M,U,ea=0,I=new q.Buf16(16);var P=new q.Buf16(16);var a,z=0;for(K=0;15>=K;K++)I[K]=0;for(v=0;v<m;v++)I[d[f+v]]++;var k=u;for(n=15;1<=n&&0===I[n];n--);k>n&&(k=n);if(0===n)return y[E++]=20971520,y[E++]=20971520,r.bits=1,0;for(u=1;u<n&&0===I[u];u++);k<u&&(k=u);for(K=w=1;15>=K;K++)if(w<<=1,w-=I[K],0>w)return-1;if(0<w&&(0===c||1!==n))return-1;P[1]=0;for(K=1;15>K;K++)P[K+1]=P[K]+I[K];for(v=0;v<m;v++)0!==d[f+v]&&
(C[P[d[f+v]]++]=v);if(0===c){var N=a=C;var V=19}else 1===c?(N=l,ea-=257,a=e,z-=257,V=256):(N=g,a=h,V=-1);v=M=0;K=u;var la=E;m=k;P=0;var Ea=-1;var aa=1<<k;var Ma=aa-1;if(1===c&&852<aa||2===c&&592<aa)return 1;for(;;){var L=K-P;if(C[v]<V){var b=0;var p=C[v]}else C[v]>V?(b=a[z+C[v]],p=N[ea+C[v]]):(b=96,p=0);w=1<<K-P;u=U=1<<m;do U-=w,y[la+(M>>P)+U]=L<<24|b<<16|p|0;while(0!==U);for(w=1<<K-1;M&w;)w>>=1;0!==w?(M&=w-1,M+=w):M=0;v++;if(0===--I[K]){if(K===n)break;K=d[f+C[v]]}if(K>k&&(M&Ma)!==Ea){0===P&&(P=k);
la+=u;m=K-P;for(w=1<<m;m+P<n;){w-=I[m+P];if(0>=w)break;m++;w<<=1}aa+=1<<m;if(1===c&&852<aa||2===c&&592<aa)return 1;Ea=M&Ma;y[Ea]=k<<24|m<<16|la-E|0}}0!==M&&(y[la+M]=K-P<<24|4194304);r.bits=k;return 0}},{"../utils/common":3}],13:[function(H,D,G){D.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},{}],14:[function(H,D,G){function q(b){for(var p=b.length;0<=--p;)b[p]=0}
function l(b,p,F,R,W){this.static_tree=b;this.extra_bits=p;this.extra_base=F;this.elems=R;this.max_length=W;this.has_stree=b&&b.length}function e(b,p){this.dyn_tree=b;this.max_code=0;this.stat_desc=p}function g(b,p){b.pending_buf[b.pending++]=p&255;b.pending_buf[b.pending++]=p>>>8&255}function h(b,p,F){b.bi_valid>16-F?(b.bi_buf|=p<<b.bi_valid&65535,g(b,b.bi_buf),b.bi_buf=p>>16-b.bi_valid,b.bi_valid+=F-16):(b.bi_buf|=p<<b.bi_valid&65535,b.bi_valid+=F)}function c(b,p,F){h(b,F[2*p],F[2*p+1])}function d(b,
p){var F=0;do F|=b&1,b>>>=1,F<<=1;while(0<--p);return F>>>1}function f(b,p,F){var R=Array(16),W=0,ma;for(ma=1;15>=ma;ma++)R[ma]=W=W+F[ma-1]<<1;for(F=0;F<=p;F++)W=b[2*F+1],0!==W&&(b[2*F]=d(R[W]++,W))}function m(b){var p;for(p=0;286>p;p++)b.dyn_ltree[2*p]=0;for(p=0;30>p;p++)b.dyn_dtree[2*p]=0;for(p=0;19>p;p++)b.bl_tree[2*p]=0;b.dyn_ltree[512]=1;b.opt_len=b.static_len=0;b.last_lit=b.matches=0}function y(b){8<b.bi_valid?g(b,b.bi_buf):0<b.bi_valid&&(b.pending_buf[b.pending++]=b.bi_buf);b.bi_buf=0;b.bi_valid=
0}function E(b,p,F,R){var W=2*p,ma=2*F;return b[W]<b[ma]||b[W]===b[ma]&&R[p]<=R[F]}function C(b,p,F){for(var R=b.heap[F],W=F<<1;W<=b.heap_len;){W<b.heap_len&&E(p,b.heap[W+1],b.heap[W],b.depth)&&W++;if(E(p,R,b.heap[W],b.depth))break;b.heap[F]=b.heap[W];F=W;W<<=1}b.heap[F]=R}function r(b,p,F){var R=0;if(0!==b.last_lit){do{var W=b.pending_buf[b.d_buf+2*R]<<8|b.pending_buf[b.d_buf+2*R+1];var ma=b.pending_buf[b.l_buf+R];R++;if(0===W)c(b,ma,p);else{var ka=N[ma];c(b,ka+256+1,p);var za=U[ka];0!==za&&(ma-=
V[ka],h(b,ma,za));W--;ka=256>W?k[W]:k[256+(W>>>7)];c(b,ka,F);za=ea[ka];0!==za&&(W-=la[ka],h(b,W,za))}}while(R<b.last_lit)}c(b,256,p)}function u(b,p){var F=p.dyn_tree,R=p.stat_desc.static_tree,W=p.stat_desc.has_stree,ma=p.stat_desc.elems,ka,za=-1;b.heap_len=0;b.heap_max=573;for(ka=0;ka<ma;ka++)0!==F[2*ka]?(b.heap[++b.heap_len]=za=ka,b.depth[ka]=0):F[2*ka+1]=0;for(;2>b.heap_len;){var ta=b.heap[++b.heap_len]=2>za?++za:0;F[2*ta]=1;b.depth[ta]=0;b.opt_len--;W&&(b.static_len-=R[2*ta+1])}p.max_code=za;for(ka=
b.heap_len>>1;1<=ka;ka--)C(b,F,ka);ta=ma;do ka=b.heap[1],b.heap[1]=b.heap[b.heap_len--],C(b,F,1),R=b.heap[1],b.heap[--b.heap_max]=ka,b.heap[--b.heap_max]=R,F[2*ta]=F[2*ka]+F[2*R],b.depth[ta]=(b.depth[ka]>=b.depth[R]?b.depth[ka]:b.depth[R])+1,F[2*ka+1]=F[2*R+1]=ta,b.heap[1]=ta++,C(b,F,1);while(2<=b.heap_len);b.heap[--b.heap_max]=b.heap[1];ka=p.dyn_tree;ta=p.max_code;R=p.stat_desc.static_tree;W=p.stat_desc.has_stree;ma=p.stat_desc.extra_bits;var Aa=p.stat_desc.extra_base,Ra=p.stat_desc.max_length,Q,
Z=0;for(Q=0;15>=Q;Q++)b.bl_count[Q]=0;ka[2*b.heap[b.heap_max]+1]=0;for(p=b.heap_max+1;573>p;p++){var oa=b.heap[p];Q=ka[2*ka[2*oa+1]+1]+1;Q>Ra&&(Q=Ra,Z++);ka[2*oa+1]=Q;if(!(oa>ta)){b.bl_count[Q]++;var Da=0;oa>=Aa&&(Da=ma[oa-Aa]);var Ha=ka[2*oa];b.opt_len+=Ha*(Q+Da);W&&(b.static_len+=Ha*(R[2*oa+1]+Da))}}if(0!==Z){do{for(Q=Ra-1;0===b.bl_count[Q];)Q--;b.bl_count[Q]--;b.bl_count[Q+1]+=2;b.bl_count[Ra]--;Z-=2}while(0<Z);for(Q=Ra;0!==Q;Q--)for(oa=b.bl_count[Q];0!==oa;)R=b.heap[--p],R>ta||(ka[2*R+1]!==Q&&
(b.opt_len+=(Q-ka[2*R+1])*ka[2*R],ka[2*R+1]=Q),oa--)}f(F,za,b.bl_count)}function K(b,p,F){var R,W=-1,ma=p[1],ka=0,za=7,ta=4;0===ma&&(za=138,ta=3);p[2*(F+1)+1]=65535;for(R=0;R<=F;R++){var Aa=ma;ma=p[2*(R+1)+1];++ka<za&&Aa===ma||(ka<ta?b.bl_tree[2*Aa]+=ka:0!==Aa?(Aa!==W&&b.bl_tree[2*Aa]++,b.bl_tree[32]++):10>=ka?b.bl_tree[34]++:b.bl_tree[36]++,ka=0,W=Aa,0===ma?(za=138,ta=3):Aa===ma?(za=6,ta=3):(za=7,ta=4))}}function v(b,p,F){var R,W=-1,ma=p[1],ka=0,za=7,ta=4;0===ma&&(za=138,ta=3);for(R=0;R<=F;R++){var Aa=
ma;ma=p[2*(R+1)+1];if(!(++ka<za&&Aa===ma)){if(ka<ta){do c(b,Aa,b.bl_tree);while(0!==--ka)}else 0!==Aa?(Aa!==W&&(c(b,Aa,b.bl_tree),ka--),c(b,16,b.bl_tree),h(b,ka-3,2)):10>=ka?(c(b,17,b.bl_tree),h(b,ka-3,3)):(c(b,18,b.bl_tree),h(b,ka-11,7));ka=0;W=Aa;0===ma?(za=138,ta=3):Aa===ma?(za=6,ta=3):(za=7,ta=4)}}}function n(b){var p=4093624447,F;for(F=0;31>=F;F++,p>>>=1)if(p&1&&0!==b.dyn_ltree[2*F])return 0;if(0!==b.dyn_ltree[18]||0!==b.dyn_ltree[20]||0!==b.dyn_ltree[26])return 1;for(F=32;256>F;F++)if(0!==b.dyn_ltree[2*
F])return 1;return 0}function w(b,p,F,R){h(b,R?1:0,3);y(b);g(b,F);g(b,~F);M.arraySet(b.pending_buf,b.window,p,F,b.pending);b.pending+=F}var M=H("../utils/common"),U=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ea=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],I=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],P=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],a=Array(576);q(a);var z=Array(60);q(z);var k=Array(512);q(k);var N=Array(256);q(N);var V=Array(29);q(V);var la=
Array(30);q(la);var Ea,aa,Ma,L=!1;G._tr_init=function(b){if(!L){var p,F,R,W=Array(16);for(R=F=0;28>R;R++)for(V[R]=F,p=0;p<1<<U[R];p++)N[F++]=R;N[F-1]=R;for(R=F=0;16>R;R++)for(la[R]=F,p=0;p<1<<ea[R];p++)k[F++]=R;for(F>>=7;30>R;R++)for(la[R]=F<<7,p=0;p<1<<ea[R]-7;p++)k[256+F++]=R;for(p=0;15>=p;p++)W[p]=0;for(p=0;143>=p;)a[2*p+1]=8,p++,W[8]++;for(;255>=p;)a[2*p+1]=9,p++,W[9]++;for(;279>=p;)a[2*p+1]=7,p++,W[7]++;for(;287>=p;)a[2*p+1]=8,p++,W[8]++;f(a,287,W);for(p=0;30>p;p++)z[2*p+1]=5,z[2*p]=d(p,5);Ea=
new l(a,U,257,286,15);aa=new l(z,ea,0,30,15);Ma=new l([],I,0,19,7);L=!0}b.l_desc=new e(b.dyn_ltree,Ea);b.d_desc=new e(b.dyn_dtree,aa);b.bl_desc=new e(b.bl_tree,Ma);b.bi_buf=0;b.bi_valid=0;m(b)};G._tr_stored_block=w;G._tr_flush_block=function(b,p,F,R){var W=0;if(0<b.level){2===b.strm.data_type&&(b.strm.data_type=n(b));u(b,b.l_desc);u(b,b.d_desc);K(b,b.dyn_ltree,b.l_desc.max_code);K(b,b.dyn_dtree,b.d_desc.max_code);u(b,b.bl_desc);for(W=18;3<=W&&0===b.bl_tree[2*P[W]+1];W--);b.opt_len+=3*(W+1)+14;var ma=
b.opt_len+3+7>>>3;var ka=b.static_len+3+7>>>3;ka<=ma&&(ma=ka)}else ma=ka=F+5;if(F+4<=ma&&-1!==p)w(b,p,F,R);else if(4===b.strategy||ka===ma)h(b,2+(R?1:0),3),r(b,a,z);else{h(b,4+(R?1:0),3);p=b.l_desc.max_code+1;F=b.d_desc.max_code+1;W+=1;h(b,p-257,5);h(b,F-1,5);h(b,W-4,4);for(ma=0;ma<W;ma++)h(b,b.bl_tree[2*P[ma]+1],3);v(b,b.dyn_ltree,p-1);v(b,b.dyn_dtree,F-1);r(b,b.dyn_ltree,b.dyn_dtree)}m(b);R&&y(b)};G._tr_tally=function(b,p,F){b.pending_buf[b.d_buf+2*b.last_lit]=p>>>8&255;b.pending_buf[b.d_buf+2*
b.last_lit+1]=p&255;b.pending_buf[b.l_buf+b.last_lit]=F&255;b.last_lit++;0===p?b.dyn_ltree[2*F]++:(b.matches++,p--,b.dyn_ltree[2*(N[F]+256+1)]++,b.dyn_dtree[2*(256>p?k[p]:k[256+(p>>>7)])]++);return b.last_lit===b.lit_bufsize-1};G._tr_align=function(b){h(b,2,3);c(b,256,a);16===b.bi_valid?(g(b,b.bi_buf),b.bi_buf=0,b.bi_valid=0):8<=b.bi_valid&&(b.pending_buf[b.pending++]=b.bi_buf&255,b.bi_buf>>=8,b.bi_valid-=8)}},{"../utils/common":3}],15:[function(H,D,G){D.exports=function(){this.input=null;this.total_in=
this.avail_in=this.next_in=0;this.output=null;this.total_out=this.avail_out=this.next_out=0;this.msg="";this.state=null;this.data_type=2;this.adler=0}},{}],"/":[function(H,D,G){D=H("./lib/utils/common").assign;G=H("./lib/deflate");H=H("./lib/zlib/constants");A.pako={};D(A.pako,G,H)},{"./lib/deflate":1,"./lib/utils/common":3,"./lib/zlib/constants":6}]},{},[])("/")});J.compress=A.pako.deflate})(S);var Y={};(function(J){J.hashString=function(A){for(var H=A.length,D=5381,G=52711;H--;){var q=A.charCodeAt(H);
D=33*D^q;G=33*G^q}return 4096*(D>>>0)+(G>>>0)}})(Y);(function(J){J.crypt=function(A,H){var D=new Uint8Array(H),G=new ArrayBuffer(H.byteLength);G=new Uint8Array(G);for(var q=0;q<H.byteLength;q++)G[q]=D[q]^A.charCodeAt(q%A.length);return G.buffer}})({});var X={};(function(J){J.onDomLoaded=function(A){if("complete"===document.readyState||"loaded"===document.readyState||"interactive"===document.readyState)A();else{var H=!1;document.addEventListener("DOMContentLoaded",function(){H||(H=!0,A())},!1);window.addEventListener("load",
function(){H||(H=!0,A())})}};J.onScroll=function(A){window.addEventListener("scroll",function(H){A()})};J.onBlur=function(A){window.addEventListener("blur",function(H){A()})};J.onFocus=function(A){window.addEventListener("focus",function(H){A()})}})(X);(function(J){J.encode=function(A){A=new Uint8Array(A);for(var H="",D=0;D<A.length;D++)H+=String.fromCharCode(A[D]);return btoa(H)};J.decode=function(A){A=atob(A);for(var H=new Uint8Array(A.length),D=0;D<A.length;D++)H[D]=A.charCodeAt(D);return H.buffer}})({});
var ja={};(function(J){J.sum32a=function(A){A=new Uint8Array(A);for(var H=2166136261,D=0;D<A.byteLength;++D)H^=A[D],H+=(H<<1)+(H<<4)+(H<<7)+(H<<8)+(H<<24);return H>>>0}})(ja);var ya={};(function(J){var A=!1,H=!1,D=!(!window.console||!window.console.info);try{H=0<=window.location.href.indexOf("bt_debug=true")||"true"===window.localStorage.bt_debug}catch(w){H=!1}var G={0:"DFT",1:"DBG",2:"INF",3:"NTC",4:"WRN",5:"ERR",6:"CRT",7:"ALR",8:"EMR"},q={0:"#F5F5F5",1:"#BBDEFB",2:"#B3E5FC",3:"#DCEDC8",4:"#FFE0B2",
5:"#FFCCBC",6:"#E57373",7:"#F06292",8:"#BA68C8"},l="#B71C1C #880E4F #4A148C #311B92 #1A237E #0D47A1 #01579B #006064 #004D40 #1B5E20 #33691E #827717 #F57F17 #FF6F00 #E65100 #BF360C #3E2723 #37474F".split(" "),e=function(w){w=w?w.id||null:null;if(!w)return"#000000";for(var M=2166136261,U=0;U<w.length;++U)M^=w.charCodeAt(U),M+=(M<<1)+(M<<4)+(M<<7)+(M<<8)+(M<<24);return l[(M>>>0)%l.length]},g=(new Date).getTime(),h=function(){return(new Date).getTime()-g},c=function(){this.tag="Blockthrough";this.prefix=
"";this.level=0;this.filters=[]};c.prototype.setPrefix=function(w){this.prefix=w};c.prototype.setLevel=function(w){this.level="number"!==typeof w||0>w||8<w?0:w};c.prototype.setFilter=function(w){for(var M=[],U=0;U<arguments.length;U++){if(!(arguments[U]instanceof RegExp))throw new TypeError;M[U]=arguments[U]}this.filters=M};c.prototype.log=function(w,M,U,ea){if(H){if(3>arguments.length)throw new TypeError;if("number"!==typeof w||0>w||8<w)throw new TypeError;if("object"!==typeof M)throw new TypeError;
if("string"!==typeof U)throw new TypeError;if(!(w<this.level)||A){for(var I=0;I<this.filters.length;I++)if(null!==U.match(this.filters[I]))return;I=h();var P=M?M.id||null:null;var a="%c["+this.tag+" - "+G[w]+"]%c";a+="%c[%s]%c ";P&&(a+="%c["+P+"]%c ");this.prefix&&(a+=this.prefix);var z=[];z.push(a+U);z.push("color: #000000; background-color: "+q[w]);z.push("background-color: inherit");z.push("color: #757575;");z.push(1E3>I?Math.round(I).toString()+"ms":(I/1E3).toFixed(2)+"s");z.push("background-color: inherit");
P&&(z.push("color: "+e(M)),z.push("color: inherit"));z=z.concat(Array.prototype.slice.call(arguments,3));D&&console.info.apply(console,z)}}};c.prototype.debugf=function(w,M,U){this.log.apply(this,[1].concat(Array.prototype.slice.call(arguments)))};c.prototype.infof=function(w,M,U){this.log.apply(this,[2].concat(Array.prototype.slice.call(arguments)))};c.prototype.noticef=function(w,M,U){this.log.apply(this,[3].concat(Array.prototype.slice.call(arguments)))};c.prototype.warningf=function(w,M,U){this.log.apply(this,
[4].concat(Array.prototype.slice.call(arguments)))};c.prototype.errorf=function(w,M,U){this.log.apply(this,[5].concat(Array.prototype.slice.call(arguments)))};c.prototype.criticalf=function(w,M,U){this.log.apply(this,[6].concat(Array.prototype.slice.call(arguments)))};c.prototype.alertf=function(w,M,U){this.log.apply(this,[7].concat(Array.prototype.slice.call(arguments)))};c.prototype.emergencyf=function(w,M,U){this.log.apply(this,[8].concat(Array.prototype.slice.call(arguments)))};var d=new c,f=
d.setPrefix.bind(d),m=d.setLevel.bind(d),y=d.setFilter.bind(d),E=d.debugf.bind(d),C=d.infof.bind(d),r=d.noticef.bind(d),u=d.warningf.bind(d),K=d.errorf.bind(d),v=d.criticalf.bind(d),n=d.alertf.bind(d);d=d.emergencyf.bind(d);J.DEFAULT=0;J.DEBUG=1;J.INFO=2;J.NOTICE=3;J.WARNING=4;J.ERROR=5;J.CRITICAL=6;J.ALERT=7;J.EMERGENCY=8;J.new=function(){return new c};J.newContext=function(w,M){var U={},ea;for(ea in w)w.hasOwnProperty(ea)&&(U[ea]=w[ea]);U.id=M;return U};J.timestamp=h;J.debugf=E;J.infof=C;J.noticef=
r;J.warningf=u;J.errorf=K;J.criticalf=v;J.alertf=n;J.emergencyf=d;J.setPrefix=f;J.setLevel=m;J.setFilter=y;J.setVerbose=function(w){A=w};J.setOutputEnabled=function(w){H=w}})(ya);window.__upo_d=window.__upo_d||{};var ha={};(function(J){var A=new function(){this.events={};this.addEventListener=function(D,G){this.events.hasOwnProperty(D)?this.events[D].push(G):this.events[D]=[G]};this.removeEventListener=function(D,G){this.events.hasOwnProperty(D)&&(G=this.events[D].indexOf(G),-1!=G&&this.events[D].splice(G,
1))};this.fireEvent=function(D,G,q,l){if(this.events.hasOwnProperty(D)){G=new H(D,G);D=this.events[D];l=D.length;for(var e=0;e<l;e++){try{var g=D[e].call(q,G)}catch(h){}if(void 0!=g)return g;if(G.shouldStop)break}}}},H=function(D,G){this.name=D;this.data=G;this.shouldStop=!1};J.CustomEvents=A})(ha);(function(J){var A=function(H,D,G,q){D=Error(D,G,q);D.type=H;Object.setPrototypeOf(D,Object.getPrototypeOf(this));Error.captureStackTrace&&Error.captureStackTrace(D,A);return D};A.prototype=Object.create(Error.prototype,
{constructor:{value:Error,enumerable:!1,writable:!0,configurable:!0}});Object.setPrototypeOf?Object.setPrototypeOf(A,Error):A.__proto__=Error;J.CustomError=A})({});var Ga={};(function(J){function A(e){return e.map(function(g){if("fluid"===g)return"fluid";var h=$jscomp.makeIterator(g.split("x").map(function(c){return parseInt(c,10)}));g=h.next().value;h=h.next().value;return isNaN(g)||isNaN(h)?null:{width:g,height:h}}).filter(function(g){return null!==g})}function H(e,g,h,c){switch(e){case "equals":return c===
g;case "startsWith":case "endsWith":case "includes":return c[e](g);case "equalsOneOf":return h.includes(c);case "startsWithOneOf":case "endsWithOneOf":case "includesOneOf":var d=e.split("OneOf")[0];return h.some(function(f){return c[d](f)})}}function D(e){e=void 0===e?{}:e;var g=void 0===e.forAllAdUnits?[]:e.forAllAdUnits,h=void 0===e.forAdUnits?[]:e.forAdUnits;if(0<g.length||0<h.length)return function(c){var d=[];g.forEach(function(f){var m=void 0===f.bidders?[]:f.bidders;l(f.whenDevice)&&d.push.apply(d,
m)});h.forEach(function(f){var m=f.code,y=f.codeList,E=f.whenCode,C=void 0===f.bidders?[]:f.bidders;l(f.whenDevice)&&q(E,m,y,c.code)&&d.push.apply(d,C)});c.bids=c.bids.filter(function(f){return!d.includes(f.bidder)});return c}}function G(e){return function(g){return e.some(function(h){var c=h.code,d=h.codeList,f=h.whenCode;if(l(h.whenDevice))return q(f,c,d,g.code)})}}function q(e,g,h,c){switch(e){case "equals":return c===g;case "startsWith":case "endsWith":case "includes":return c[e](g);case "equalsOneOf":return h.includes(c);
case "startsWithOneOf":case "endsWithOneOf":case "includesOneOf":var d=e.split("OneOf")[0];return h.some(function(f){return c[d](f)})}}function l(e){var g=ab.isMobile();switch(e){case "mobile":return g;case "desktop":return!g;default:return!0}}J.customCSS={parseSettingValue:function(e){var g=void 0===e.org?"":e.org,h=void 0===e.website?"":e.website;return e.websiteOverridesOrg?h:(g?g+"\n\n":"")+h},handler:function(e){if(""!==e){var g=document.createElement("style");g.textContent=e;(document.head||
document.body||document.documentElement).appendChild(g)}}};J.hideElementsWithCSS={parseSettingValue:function(e){var g=void 0===e.org?[]:e.org,h=void 0===e.website?[]:e.website;return e.websiteOverridesOrg?h:[].concat($jscomp.arrayFromIterable(g),$jscomp.arrayFromIterable(h))},handler:function(e){if(e&&0<e.length){var g=document.createElement("style");g.textContent=e.join(", ")+" { display: none !important; }";(document.head||document.body||document.documentElement).appendChild(g)}}};J.prebidConfig=
{hookName:"prebidDoneInit",parseSettingValue:function(e){var g=void 0===e.org?{}:e.org,h=void 0===e.website?{}:e.website;return e.websiteOverridesOrg?h:Object.assign({},g,h)},handler:function(e,g){var h=g.cpbjs;h.que.push(function(){h.setConfig(e)})}};J.removeSizes={hookName:"sizesToRemoveBySpace",parseSettingValue:function(e){var g=e.websiteOverridesOrg,h=void 0===e.org?{}:e.org,c=void 0===h.forAllSpaces?[]:h.forAllSpaces;h=void 0===h.forSpaces?[]:h.forSpaces;var d=void 0===e.website?{}:e.website;
e=void 0===d.forAllSpaces?[]:d.forAllSpaces;d=void 0===d.forSpaces?[]:d.forSpaces;c=g?e:[].concat($jscomp.arrayFromIterable(c),$jscomp.arrayFromIterable(e));g=g?d:[].concat($jscomp.arrayFromIterable(h),$jscomp.arrayFromIterable(d));return{forAllSpaces:c,forSpaces:g}},handler:function(e,g){var h=e.forAllSpaces;e=e.forSpaces;var c=g.spaceName,d=new Set;h.forEach(function(f){var m=void 0===f.sizes?[]:f.sizes;l(f.whenDevice)&&m.forEach(function(y){d.add(y)})});e.forEach(function(f){var m=f.name,y=f.nameList,
E=f.whenName,C=void 0===f.sizes?[]:f.sizes;l(f.whenDevice)&&H(E,m,y,c)&&C.forEach(function(r){d.add(r)})});return A([].concat($jscomp.arrayFromIterable(d)))}};J.scrapeGAMSlots={hookName:"scrapeGoogletagSlots",handler:function(e){return e}};J.scrapePrebid={hookName:"scrapePrebidAdUnits",parseSettingValue:function(e){var g=void 0===e.org?{}:e.org,h=void 0===e.website?{}:e.website;if(e.websiteOverridesOrg)return h;e={};e.adUnitsVar=g.adUnitsVar||h.adUnitsVar;var c=g.parse||{},d=c.func;c=c.removeBidders;
var f=h.parse||{},m=f.func;f=f.removeBidders;if(d||c||m||f)e.parse={},e.parse.func=d&&m?function(C){return m(d(C))}:d||m,e.parse.removeBidders=c&&f?{forAllAdUnits:[].concat($jscomp.arrayFromIterable(c.forAllAdUnits||[]),$jscomp.arrayFromIterable(f.forAllAdUnits||[])),forAdUnits:[].concat($jscomp.arrayFromIterable(c.forAdUnits||[]),$jscomp.arrayFromIterable(f.forAdUnits||[]))}:c||f;g=g.filterOut||{};var y=g.func;g=g.adUnits;h=h.filterOut||{};var E=h.func;h=h.adUnits;if(y||g||E||h)e.filterOut={},e.filterOut.func=
y&&E?function(C){return y(C)||E(C)}:y||E,e.filterOut.adUnits=g&&h?[].concat($jscomp.arrayFromIterable(g),$jscomp.arrayFromIterable(h)):g||h;return e},handler:function(e,g){var h=e.adUnitsVar,c=e.parse;g=e.filterOut;if(e.dontScrape)e=!1;else{e={};h&&(e.getAdUnits=function(){return Fa.extractVariableFromString(h)});if(c){var d=c.func,f=(c=c.removeBidders)?D(c):null;if(d&&f)e.parseAdUnit=function(E){return d(f(E))};else if(d||f)e.parseAdUnit=d||f}if(g){var m=g.func,y=(g=g.adUnits)?G(g):null;if(m&&y)e.filterOutAdUnit=
function(E){return m(E)||y(E)};else if(m||y)e.filterOutAdUnit=m||y}}return e}}})(Ga);var T={};(function(J){J.consts={selectorPosition:{APPEND_CHILD:0,INSERT_BEFORE:1},complianceStatus:{UNKNOWN:0,COMPLIANT:1,INCOMPLIANT:2,ERROR:3,PENDING:4},acceptableStandardScreenSize:{width:1366,height:768},headerBiddingType:{prebid:1},refreshType:{UNKNOWN:0,ALL:1,VISIBLE:2,HIDDEN:3}};J.cpbjs=void 0;J.upoSettings={acceptableURLParam:"upapi=true",timeout:3E3,refreshTimeout:3E3,whitelistedFrameSettings:{url:"//mrb.upapi.net/safeFrame.html?upapi=true",
laterSrcModification:void 0,isOurOriginSafeFrame:!0},minTimeBetweenRefreshes:3E4};var A=new function(){this.data={};this.setItem=function(H,D){this.data[H]=D};this.getItem=function(H){return this.data[H]};this.removeItem=function(H){delete this.data[H]};this.clearSharedObject=function(){this.data={}}};J.SharedObject=A;J.uGoogletag=void 0;J.whitelistedFrame=void 0})(T);var x={};(function(J){var A=function(q,l,e){for(var g=[],h=0;h<q.length;h++)l.call(e,q[h],h,q)&&g.push(q[h]);return g},H=function(q){return"[object Array]"===
Object.prototype.toString.call(q)};J.map=function(q,l){for(var e=[],g=0;g<q.length;g++)e.push(l(q[g],g,q));return e};J.filter=A;J.reject=function(q,l,e){for(var g=[],h=0;h<q.length;h++)l.call(e,q[h],h,q)||g.push(q[h]);return g};J.forEach=function(q,l){if(q)for(var e=0;e<q.length;e++)l(q[e],e,q)};J.find=function(q,l){for(var e=0;e<q.length;e++){var g=q[e];if(l(g,e,q))return g}};J.flat=function(q){for(var l=[],e=0;e<q.length;e++){var g=q[e];if(H(g))for(var h=0;h<g.length;h++)l.push(g[h]);else l.push(g)}return l};
J.isArray=H;J.distict=function(q){return A(q,function(l,e,g){return g.indexOf(l)===e})};J.reduce=function(q,l){if(null===q)throw new TypeError("Array.prototype.reduce called on null or undefined");if("function"!==typeof l)throw new TypeError(l+" is not a function");var e=Object(q),g=e.length>>>0,h=0;if(3<=arguments.length)var c=arguments[2];else{for(;h<g&&!(h in e);)h++;if(h>=g)throw new TypeError("Reduce of empty array with no initial value");c=e[h++]}for(;h<g;)h in e&&(c=l(c,e[h],h,e)),h++;return c};
J.CDefer=function(){this.fate="unresolved";this.state="pending";var q,l;this.promise=new G(function(e,g){q=e;l=g});this.promise.then(function(e){this.state="fulfilled";return e},function(e){this.state="rejected";return e});this.resolve=function(e){if("resolved"===this.fate)throw"Deferred cannot be resolved twice";this.fate="resolved";q(e)};this.reject=function(e){if("resolved"===this.fate)throw"Deferred cannot be resolved twice";this.fate="resolved";l(e)};this.isResolved=function(){return"resolved"===
this.fate};this.isPending=function(){return"pending"===this.state};this.isFulfilled=function(){return"fulfilled"===this.state};this.isRejected=function(){return"rejected"===this.state}};var D=window.Promise,G=D&&"[object Promise]"==Object.prototype.toString.call(D.resolve())?window.Promise:function(){function q(Q){return"function"===typeof Q}function l(){return function(){return process.nextTick(d)}}function e(){return"undefined"!==typeof la?function(){la(d)}:c()}function g(){var Q=0,Z=new L(d),oa=
document.createTextNode("");Z.observe(oa,{characterData:!0});return function(){oa.data=Q=++Q%2}}function h(){var Q=new MessageChannel;Q.port1.onmessage=d;return function(){return Q.port2.postMessage(0)}}function c(){var Q=setTimeout;return function(){return Q(d,1)}}function d(){for(var Q=0;Q<V;Q+=2)(0,p[Q])(p[Q+1]),p[Q]=void 0,p[Q+1]=void 0;V=0}function f(){try{var Q=Function("return this")().require("vertx");la=Q.runOnLoop||Q.runOnContext;return e()}catch(Z){return c()}}function m(Q,Z){var oa=this,
Da=new this.constructor(E);void 0===Da[R]&&z(Da);var Ha=oa._state;if(Ha){var Qa=arguments[Ha-1];aa(function(){return P(Ha,Da,Qa,oa._result)})}else ea(oa,Da,Q,Z);return Da}function y(Q){if(Q&&"object"===typeof Q&&Q.constructor===this)return Q;var Z=new this(E);n(Z,Q);return Z}function E(){}function C(Q){try{return Q.then}catch(Z){return za.error=Z,za}}function r(Q,Z,oa,Da){try{Q.call(Z,oa,Da)}catch(Ha){return Ha}}function u(Q,Z,oa){aa(function(Da){var Ha=!1,Qa=r(oa,Z,function(Xa){Ha||(Ha=!0,Z!==Xa?
n(Da,Xa):M(Da,Xa))},function(Xa){Ha||(Ha=!0,U(Da,Xa))},"Settle: "+(Da._label||" unknown promise"));!Ha&&Qa&&(Ha=!0,U(Da,Qa))},Q)}function K(Q,Z){Z._state===ma?M(Q,Z._result):Z._state===ka?U(Q,Z._result):ea(Z,void 0,function(oa){return n(Q,oa)},function(oa){return U(Q,oa)})}function v(Q,Z,oa){Z.constructor===Q.constructor&&oa===m&&Z.constructor.resolve===y?K(Q,Z):oa===za?(U(Q,za.error),za.error=null):void 0===oa?M(Q,Z):q(oa)?u(Q,Z,oa):M(Q,Z)}function n(Q,Z){if(Q===Z)U(Q,new TypeError("You cannot resolve a promise with itself"));
else{var oa=typeof Z;null===Z||"object"!==oa&&"function"!==oa?M(Q,Z):v(Q,Z,C(Z))}}function w(Q){Q._onerror&&Q._onerror(Q._result);I(Q)}function M(Q,Z){Q._state===W&&(Q._result=Z,Q._state=ma,0!==Q._subscribers.length&&aa(I,Q))}function U(Q,Z){Q._state===W&&(Q._state=ka,Q._result=Z,aa(w,Q))}function ea(Q,Z,oa,Da){var Ha=Q._subscribers,Qa=Ha.length;Q._onerror=null;Ha[Qa]=Z;Ha[Qa+ma]=oa;Ha[Qa+ka]=Da;0===Qa&&Q._state&&aa(I,Q)}function I(Q){var Z=Q._subscribers,oa=Q._state;if(0!==Z.length){for(var Da,Ha,
Qa=Q._result,Xa=0;Xa<Z.length;Xa+=3)Da=Z[Xa],Ha=Z[Xa+oa],Da?P(oa,Da,Ha,Qa):Ha(Qa);Q._subscribers.length=0}}function P(Q,Z,oa,Da){var Ha=q(oa),Qa=void 0,Xa=void 0,kb=void 0,t=void 0;if(Ha){try{Qa=oa(Da)}catch(O){za.error=O,Qa=za}Qa===za?(t=!0,Xa=Qa.error,Qa.error=null):kb=!0;if(Z===Qa){U(Z,new TypeError("A promises callback cannot return that same promise."));return}}else Qa=Da,kb=!0;Z._state===W&&(Ha&&kb?n(Z,Qa):t?U(Z,Xa):Q===ma?M(Z,Qa):Q===ka&&U(Z,Qa))}function a(Q,Z){try{Z(function(oa){n(Q,oa)},
function(oa){U(Q,oa)})}catch(oa){U(Q,oa)}}function z(Q){Q[R]=ta++;Q._state=void 0;Q._result=void 0;Q._subscribers=[]}var k=void 0,N=k=Array.isArray?Array.isArray:function(Q){return"[object Array]"===Object.prototype.toString.call(Q)},V=0,la=void 0,Ea=void 0,aa=function(Q,Z){p[V]=Q;p[V+1]=Z;V+=2;2===V&&(Ea?Ea(d):F())},Ma=(k="undefined"!==typeof window?window:void 0)||{},L=Ma.MutationObserver||Ma.WebKitMutationObserver;Ma="undefined"===typeof self&&"undefined"!==typeof process&&"[object process]"===
{}.toString.call(process);var b="undefined"!==typeof Uint8ClampedArray&&"undefined"!==typeof importScripts&&"undefined"!==typeof MessageChannel,p=Array(1E3),F=void 0;F=Ma?l():L?g():b?h():void 0===k&&"function"===typeof require?f():c();var R=Math.random().toString(36).substring(2),W=void 0,ma=1,ka=2,za={error:null},ta=0,Aa=function(){function Q(Z,oa){this._instanceConstructor=Z;this.promise=new Z(E);this.promise[R]||z(this.promise);N(oa)?(this._remaining=this.length=oa.length,this._result=Array(this.length),
0===this.length?M(this.promise,this._result):(this.length=this.length||0,this._enumerate(oa),0===this._remaining&&M(this.promise,this._result))):U(this.promise,Error("Array Methods must be provided an Array"))}Q.prototype._enumerate=function(Z){for(var oa=0;this._state===W&&oa<Z.length;oa++)this._eachEntry(Z[oa],oa)};Q.prototype._eachEntry=function(Z,oa){var Da=this._instanceConstructor,Ha=Da.resolve;Ha===y?(Ha=C(Z),Ha===m&&Z._state!==W?this._settledAt(Z._state,oa,Z._result):"function"!==typeof Ha?
(this._remaining--,this._result[oa]=Z):Da===Ra?(Da=new Da(E),v(Da,Z,Ha),this._willSettleAt(Da,oa)):this._willSettleAt(new Da(function(Qa){return Qa(Z)}),oa)):this._willSettleAt(Ha(Z),oa)};Q.prototype._settledAt=function(Z,oa,Da){var Ha=this.promise;Ha._state===W&&(this._remaining--,Z===ka?U(Ha,Da):this._result[oa]=Da);0===this._remaining&&M(Ha,this._result)};Q.prototype._willSettleAt=function(Z,oa){var Da=this;ea(Z,void 0,function(Ha){return Da._settledAt(ma,oa,Ha)},function(Ha){return Da._settledAt(ka,
oa,Ha)})};return Q}(),Ra=function(){function Q(Z){this[R]=ta++;this._result=this._state=void 0;this._subscribers=[];if(E!==Z){if("function"!==typeof Z)throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");if(this instanceof Q)a(this,Z);else throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");}}Q.prototype.catch=function(Z){return this.then(null,Z)};Q.prototype.finally=
function(Z){var oa=this.constructor;return q(Z)?this.then(function(Da){return oa.resolve(Z()).then(function(){return Da})},function(Da){return oa.resolve(Z()).then(function(){throw Da;})}):this.then(Z,Z)};return Q}();Ra.prototype.then=m;Ra.all=function(Q){return(new Aa(this,Q)).promise};Ra.race=function(Q){var Z=this;return N(Q)?new Z(function(oa,Da){for(var Ha=Q.length,Qa=0;Qa<Ha;Qa++)Z.resolve(Q[Qa]).then(oa,Da)}):new Z(function(oa,Da){return Da(new TypeError("You must pass an array to race."))})};
Ra.resolve=y;Ra.reject=function(Q){var Z=new this(E);U(Z,Q);return Z};Ra._setScheduler=function(Q){Ea=Q};Ra._setAsap=function(Q){aa=Q};Ra._asap=aa;Ra.polyfill=function(){var Q=void 0;if("undefined"!==typeof global)Q=global;else if("undefined"!==typeof self)Q=self;else try{Q=Function("return this")()}catch(Da){throw Error("polyfill failed because global object is unavailable in this environment");}var Z=Q.Promise;if(Z){var oa=null;try{oa=Object.prototype.toString.call(Z.resolve())}catch(Da){}if("[object Promise]"===
oa&&!Z.cast)return}Q.Promise=Ra};return Ra.Promise=Ra}();J.CPromise=G;J.addClass=function(q,l){if(l&&q){var e=l.className;-1==e.indexOf(q)&&(""!=e&&(q=" "+q),l.className=e+q)}};J.removeClass=function(q,l){if(l&&q){var e=l.className;e=e.replace(new RegExp("\\b"+q+"\\b","g"),"");l.className=e}};J.hasClass=function(q,l){if(q&&l)return-1<(" "+q.className+" ").indexOf(" "+l+" ")};J.objectAssign=function(q,l){if(null===q||void 0===q)throw new TypeError("Cannot convert undefined or null to object");for(var e=
Object(q),g=1;g<arguments.length;g++){var h=arguments[g];if(null!==h&&void 0!==h)for(var c in h)Object.prototype.hasOwnProperty.call(h,c)&&(e[c]=h[c])}return e}})(x);var ra={};(function(J){var A=function(q,l,e){if(!q||"number"!==typeof l||"number"!==typeof e||0>=l||0>=e||l>e)throw new TypeError;l=Math.floor(Math.random()*(e+1-l))+l;e="";for(var g=0;g<l;g++)e+=q.charAt(Math.floor(Math.random()*q.length));return e},H=function(q,l){return A("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
q,l)},D=function(q,l){return A("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",q,l)},G=function(q,l){return A("0123456789",q,l)};J.stringRange=H;J.string=function(q){return H(q,q)};J.lettersRange=D;J.letters=function(q){return D(q,q)};J.digitsRange=G;J.digits=function(q){return G(q,q)}})(ra);var Ja={};(function(J){var A=ya.new();A.setPrefix("utf8: ");J.encode=function(H){try{if(window.TextEncoder)return(new window.TextEncoder("utf-8")).encode(H).buffer}catch(q){A.debugf(null,"TextEncoder %o",
q)}H=unescape(encodeURIComponent(H));for(var D=new Uint8Array(H.length),G=0;G<H.length;G++)D[G]=H.charCodeAt(G);return D.buffer};J.decode=function(H){try{if(window.TextDecoder)return(new window.TextDecoder("utf-8")).decode(new Uint8Array(H))}catch(l){A.debugf(null,"TextDecoder %o",l)}var D="";H=new Uint8Array(H);for(var G=H.byteLength,q=0;q<G;q++)D+=String.fromCharCode(H[q]);return decodeURIComponent(escape(D))}})(Ja);var na={};(function(J){var A=ha.CustomEvents,H=new function(){this.Types={XHR_OPEN_PRE:"xhropenpre",
FETCH_PRE:"fetchpre",REMOVE_CHILD_PRE:"removechildpre",INSERT_BEFORE_PRE:"insertbeforepre",APPEND_CHILD_PRE:"appendchildpre",APPEND_CHILD_POST:"appendchildpost",IMG_SET_ATTRIBUTE_PRE:"imgsetattributepre",SET_ATTRIBUTE_PRE:"setattributepre",WIN_OPEN_PRE:"winopenpre",HTML_SRC_PROP_PRE:"htmlsrcproppre",HTML_ELEMENT_INNERHTML_PRE:"htmlelementinnerhtmlpre",HTML_ELEMENT_INNERHTML_POST:"htmlelementinnerhtmlpost",HTML_ELEMENT_HAS_CHILD_NODES_PRE:"htmlelementhaschildnodespre",HTML_ELEMENT_TEXTCONTENT_PRE:"htmlelementtextcontentpre"};
var D=["xhrThwartOpen","fetchThwartOpen"];this.hookFunction=function(G,q,l,e,g){var h=G[q];h&&(G[q]=function(){var c=Array.prototype.slice.call(arguments);if(window.__bt_intrnl.stopFlag)return h.apply(this,c);if(l)try{var d=A.fireEvent(l,c,this);if(void 0!=d)return d}catch(f){if(!g)throw f;if(0<=D.indexOf(f.type))throw f;}d=h.apply(this,c);if(e)try{A.fireEvent(e,d,this)}catch(f){if(!g)throw f;if(0<=D.indexOf(f.type))throw f;}return d})};this.hookPropertySetter=function(G,q,l,e,g){var h=G.__lookupGetter__(q),
c=G.__lookupSetter__(q);h&&(G.__defineSetter__(q,function(){var d=Array.prototype.slice.call(arguments);if(window.__bt_intrnl.stopFlag)return c.apply(this,d);if(l)try{var f=A.fireEvent(l,d,this);if(void 0!=f)return f}catch(m){if(!g)throw m;if(0<=D.indexOf(m.type))throw m;}f=c.apply(this,d);if(e)try{A.fireEvent(e,f,this)}catch(m){if(!g)throw m;if(0<=D.indexOf(m.type))throw m;}return f}),G.__defineGetter__(q,function(){try{return h.apply(this)}catch(d){}}))};this.addEventListener=function(G,q){A.addEventListener(G,
q)}};J.Hooks=H})(na);var db={};(function(J){var A=ha.CustomEvents,H={"scrapePrebid__org":{"_enabled":true,"value":{}},"scrapePrebid__website":{"_enabled":true,"_overrides_org":false,"value":{"filterOut":{"adUnits":[{"code":"guide-body-article-au-","whenCode":"startsWith","whenDevice":"any"},{"code":"ad-mobileFooter","whenCode":"equals","whenDevice":"any"}]}}}},D=Object.entries(H).reduce(function(G,q){q=$jscomp.makeIterator(q);var l=q.next().value;q=q.next().value;q._enabled&&(l.endsWith("__org")?(l=l.split("__org")[0],G[l]=G[l]||{},G[l].org=q.value):l.endsWith("__website")?(l=l.split("__website")[0],G[l]=G[l]||{},G[l].websiteOverridesOrg=!!q._overrides_org,G[l].website=q.value):G[l]=q.value);return G},{});J.settings={rawSettings:H,parsed:D};J.loadSettings=function(){Object.entries(D).forEach(function(G){var q=
$jscomp.makeIterator(G);G=q.next().value;q=q.next().value;if(Ga[G]){var l=Ga[G],e=l.hookName,g=l.parseSettingValue,h=l.handler,c=g?g(q):q;e?A.addEventListener(e,function(d){d.shouldStop=!0;return h(c,d.data)}):(h(c),ya.infof(null,"scriptsettings: loadSettings: "+G+" (no associated hook): Setting applied."))}else ya.errorf(null,"scriptsettings: loadSettings: No setting handler found for %o (setting will not be applied).",G)})}})(db);var jb={};(function(J){var A=ha.CustomEvents,H=function(){var D="push";
window.googletag.cmd.unshift&&(D="unshift");window.googletag.cmd[D](function(){window.__cmp&&window.__cmp("getVendorConsents",null,function(G){!G||!G.gdprApplies||G.purposeConsents&&G.purposeConsents[1]&&G.purposeConsents[2]&&G.purposeConsents[3]&&G.purposeConsents[4]&&G.purposeConsents[5]||window.googletag.pubads().setRequestNonPersonalizedAds(1)});A.fireEvent("disableInitialLoad")&&window.googletag.pubads().disableInitialLoad();A.fireEvent("disableSingleRequest")||window.googletag.pubads().enableSingleRequest();
A.fireEvent("collapseEmptyDivs")&&window.googletag.pubads().collapseEmptyDivs(!0);window.googletag.pubads().enableAsyncRendering();window.googletag.enableServices()})};J.presetProvider=function(D){switch(D){case "dfp":return H}}})(jb);var eb={};(function(J){var A=ya.new();A.setPrefix("visibiliy: ");var H=[],D=function(l){l=l.getBoundingClientRect();return document.hasFocus()&&0<=l.top&&0<=l.left&&l.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&l.right<=(window.innerWidth||document.documentElement.clientWidth)},
G=function(){for(var l=[],e=0;e<H.length;e++){var g=H[e][0];if(g&&g.parentElement){var h=H[e][1];D(g)?h():l.push([g,h])}}H=l};X.onFocus(function(){G()});X.onScroll(function(){G()});var q=function(l){if(l){var e=l.getBoundingClientRect();return e.width||e.height?(l=document.documentElement,{top:e.top+window.pageYOffset-l.clientTop,left:e.left+window.pageXOffset-l.clientLeft}):e}};J.onVisible=function(l,e){l&&l.parentElement&&(D(l)?e():H.push([l,e]))};J.calculateElementOffset=q;J.isElementVisible=function(l){var e=
!1;try{var g=document.querySelector(l)}catch(r){A.errorf(null,"document.querySelector:%o - error:%o",l,r)}if(!g)return!1;if("none"===window.getComputedStyle(g).display){var h=g.style.getPropertyValue("display");var c=g.style.getPropertyPriority("display");g.style.setProperty("display","block","important");e=!0}l=q(g);var d=document.documentElement.scrollLeft||window.scrollX,f=document.documentElement.scrollTop||window.scrollY,m=window.innerHeight,y=window.innerWidth,E=g.offsetHeight,C=g.offsetWidth;
l=l.left>=d&&l.top>=f&&C+l.left<=d+y&&E+l.top<=f+m?!0:(l.left<=d&&l.left+C>d||l.left>=d&&l.left<=d+y)&&(l.top<=f&&l.top+E>f||l.top>=f&&l.top<=f+m)?!0:!1;"hidden"===document.visibilityState&&(l=!1);e&&g.style.setProperty("display",h,c);return l}})(eb);var ab={};(function(J){J.PlatformUnknown="unknown";J.PlatformAndroid="android";J.PlatformIOS="ios";J.PlatformWindows="windows";J.PlatformLinux="linux";J.PlatformOSX="osx";J.BrowserUnknown="unknown";J.BrowserChrome="chrome";J.BrowserFirefox="firefox";
J.BrowserIE="ie";J.BrowserEdge="edge";J.BrowserOpera="opera";J.BrowserSafari="safari";J.BrowserUCBrowser="uc";J.DeviceUnknown="unknown";J.DeviceHighEndPhone="highendphone";J.DeviceTablet="tablet";J.DevicePersonalComputer="pc";J.DeviceConnectedTV="tv";J.DeviceGameConsole="console";J.browser=function(){var A=navigator.userAgent;return/edge/i.test(A)?"edge":/opera/i.test(A)||/opr|opios/i.test(A)?"opera":/chrome|chromium/i.test(A)?"chrome":/firefox|iceweasel|fxios/i.test(A)?"firefox":/msie|trident/i.test(A)?
"ie":/^((?!chrome|android).)*safari/i.test(A)?"safari":/ucbrowser/i.test(A)?"uc":window.chrome?"chrome":"undefined"!==typeof InstallTrigger?"firefox":eval("/*@cc_on!@*/false")||document.documentMode?"ie":window.StyleMedia?"edge":"unknown"};J.platform=function(){var A=navigator.userAgent;return/windows|win32/i.test(A)?"windows":/ipod|iphone|ipad/i.test(A)?"ios":/android/i.test(A)?"android":/macintosh|mac os x/i.test(A)?"osx":/linux/i.test(A)?"linux":/windows phone/i.test(A)?"windowsphone":"unknown"};
J.device=function(){var A=navigator.userAgent;return/tablet|ipad/i.test(A)?"tablet":/mobile/i.test(A)||/android|webos|iphone|ipod|blackberry|iemobile|windows phone|opera mini/i.test(A)||/ucbrowser/i.test(A)&&window.ucweb?"highendphone":"pc"};J.isMobile=function(){return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(navigator.userAgent||
navigator.vendor||window.opera)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test((navigator.userAgent||
navigator.vendor||window.opera).substr(0,4))}})(ab);var qb={};(function(J){J.set=function(A,H){if(!window.localStorage&&!window.sessionStorage)return ya.errorf(null,"no Storage implementations"),!1;var D=!1;if(window.localStorage)try{window.localStorage.setItem(A,H),D=!0}catch(G){ya.errorf(null,"webstore: set: localStorage(%s): %o",A,G)}if(window.sessionStorage)try{window.sessionStorage.setItem(A,H),D=!0}catch(G){ya.errorf(null,"webstore: set: sessionStorage(%s): %o",A,G)}return D};J.get=function(A){return window.localStorage?
window.localStorage.getItem(A):window.sessionStorage?window.sessionStorage.getItem(A):null};J.remove=function(A){var H=null;if(window.localStorage)try{window.localStorage.removeItem(A)}catch(D){ya.errorf(null,"webstore: remove: localStorage(%s): %o",A,D),H=D}if(window.sessionStorage)try{window.sessionStorage.removeItem(A)}catch(D){ya.errorf(null,"webstore: remove: sessionStorage(%s): %o",A,D),H=D}return null!=H?!1:!0}})(qb);var bb={};(function(J){var A=new function(){var q=ha.CustomEvents,l=ra.stringRange(8,
10);window.__upo_d.recoveryScriptVersion="2.8.36-7-gd9185f4";var e=ab.browser(),g=ab.device(),h=ab.platform(),c=ra.stringRange(8,10);window.sessionStorage&&(window.sessionStorage._upsesid?c=window.sessionStorage._upsesid:window.sessionStorage._upsesid=c);var d=function(f,m){""==f&&(f="/");var y="?";m.upapi=["true"];m.tid=[c];m.cv=["2.8.36-7-gd9185f4"];for(var E=Object.keys(m),C=0;C<E.length;C++)for(var r=E[C],u=m[r],K=0;K<u.length;K++){var v=u[K];f+=y+encodeURIComponent(r)+"="+encodeURIComponent(v);
y="&"}return f};this.sendLog=function(f,m){var y={};y.event=[f];if(m)for(var E in m)y[E]=[encodeURIComponent(m[E])];(f=(f=T.SharedObject.getItem("websiteConfig"))&&f.websiteID)&&(y.websiteID=[f]);y.session=[c];y.pid=[l];y.ver=["2.8.36-7-gd9185f4"];y.browser=[e];y.device=[g];y.platform=[h];y.ref=[location.href];y.t=[Date.now()];y={url:d("/l",y)};return G.$fetch(y)};this.testCompliance=function(f){return new x.CPromise(function(m,y){var E={};E.pid=[l];E.nr=["1"];var C=f,r=d("/tc",E),u=JSON.stringify(f);
try{u&&2048<=u.length&&window.localStorage&&!window.localStorage.updebug?(C=S.compress(u).buffer,E.z=[1],r=d("/tc",E)):C=Ja.encode(u)}catch(K){C=Ja.encode(u)}G.$fetch({method:"POST",url:r,body:C}).then(function(K){K=JSON.parse(Ja.decode(K.body));var v={},n;for(n in K)K.hasOwnProperty(n)&&(v[n]={status:K[n].status,id:K[n].id});m(v)},function(K){y(Error())})})};this.reportPageView=function(f,m,y,E){var C={};C.pid=[l];C.br=[e];C.sid=[c];C.w=[f];C.r=[m];m&&(C.rt=y,C.aa=[E]);f={url:d("/pv",C)};return G.$fetch(f)};
this.reportPageFocus=function(f,m,y,E){var C={};C.pid=[l];C.sid=[c];C.w=[f];C.r=[m];m&&(C.rt=y,C.aa=[E]);f={url:d("/pf",C)};return G.$fetch(f)};this.reportAuctionStarted=function(f,m,y,E){var C={};C.pid=[l];C.nr=["1"];var r={};r.websiteID=E;r.auctionID=f;r.spaceExternalID=m;r.bids=x.map(y,function(u){return{bidderExternalID:u.bidderId,provider:u.provider}});q.fireEvent("auctionStartChangeRequestData",{query:C,body:r});f={method:"POST",url:d("/as",C),body:Ja.encode(JSON.stringify(r))};return G.$fetch(f)};
this.reportAuctionEnd=function(f,m,y,E,C){var r={};r.pid=[l];r.seid=[C];r.nr=["1"];E.websiteID=y;E.auctionID=f;E.spaceExternalID=m;E.dfpAdUnit=C;E.adUnitCode=C;q.fireEvent("auctionEndChangeRequestData",{query:r,body:E});f={method:"POST",url:d("/ae",r),body:Ja.encode(JSON.stringify(E))};return G.$fetch(f)};this.reportRender=function(f,m,y,E,C){var r={};r.websiteID=C;r.auctionID=f;r.spaceExternalID=E;r.bidderExternalID=m;r.provider=y;f={method:"POST",url:d("/r",{nr:["1"]}),body:Ja.encode(JSON.stringify(r))};
return G.$fetch(f)};this.reportView=function(f,m,y,E,C){var r={};r.websiteID=C;r.auctionID=f;r.spaceExternalID=E;r.bidderExternalID=m;r.provider=y;f={method:"POST",url:d("/v",{nr:["1"]}),body:Ja.encode(JSON.stringify(r))};return G.$fetch(f)};this.reportClick=function(f){var m={};m.pid=[l];m.sid=[c];m.bd=[f];m.sr=["1"];f={url:d("/c",m)};return G.$fetch(f)}};J.Home=A;A=ya.new();A.setPrefix("transport: ");A.setLevel(ya.INFO);var H=function(q){for(var l={},e=Object.keys(q),g=0;g<e.length;g++)l[e[g].toLowerCase()]=
q[e[g]];return l};A=function(q,l,e){e=e||{};if(e.merge&&e.override)throw new TypeError;this.tr=q;this.headers=H(l);this.merge=e.merge||!1;this.override=e.override||!1};A.prototype.$fetch=function(q,l,e){e=e||{};if("object"!==typeof l||"string"!==typeof l.url)throw new TypeError;l=this.addHeaders(l);this.tr.$fetch(q,l,e)};A.prototype.addHeaders=function(q){var l=q.url,e=q.headers||{},g={};for(c in e)if(e.hasOwnProperty(c)){g[c]=[];for(var h=0;h<e[c].length;h++)g[c].push(e[c][h])}q={url:l,headers:H(g),
body:q.body,method:q.method};var c=this.headers;l=q.headers;for(var d in c)if(c.hasOwnProperty(d)){if(this.override)l[d]=[];else if(!this.merge&&l[d])continue;l[d]||(l[d]=[]);for(e=0;e<c[d].length;e++)l[d].push(c[d][e])}return q};J.WithHeaders=A;var D=function(q){q=q.toLowerCase();if("proxy-"===q.substr(0,6)||"sec-"===q.substr(0,4))return!1;switch(q){case "accept-charset":case "accept-encoding":case "access-control-request-headers":case "access-control-request-method":case "connection":case "content-length":case "cookie":case "cookie2":case "date":case "dnt":case "expect":case "host":case "keep-alive":case "origin":case "te":case "trailer":case "transfer-encoding":case "upgrade":case "via":return!1;
case "x-client-version":case "x-cookie":case "x-referer":return!1}return!0},G=new function(){this.init=function(q,l){l=l||{};if(!q||"string"!==typeof q)throw new TypeError;this.host=q;this.protocol=("undefined"!==typeof l.secure?l.secure:1)?"https":"http";this.suffix="undefined"!==typeof l.suffix?l.suffix:""};this.$fetch=function(q){return new x.CPromise(function(l,e){if("object"!==typeof q||"string"!==typeof q.url)throw new TypeError;var g=!1,h=q.url||"";if(1>h.length||"/"!=h[0])h="/"+h;h=this.protocol+
"://"+this.host+h;h+=this.suffix?"#"+this.suffix:"";var c=q.method||"GET",d=q.headers||{},f=q.body?q.body:null,m=new XMLHttpRequest;m.onreadystatechange=function(E){if(4==m.readyState)if(0==m.status)g||(g=!0,e("status -> "+m.status));else{var C=m.getAllResponseHeaders();E={};if(C){C=C.split("\r\n");for(var r=0;r<C.length;r++){var u=C[r],K=u.indexOf(": ");if(0<K){var v=u.substring(0,K);u=u.substring(K+2);E[v]||(E[v]=[]);E[v].push(u)}}}E=H(E);E["x-content-type"]&&(E["content-type"]=E["x-content-type"],
delete E["x-content-type"]);200<=m.status&&300>m.status?l({status:m.status,headers:E,body:m.response}):e("status -> "+m.status)}};m.onerror=function(E){g||(g=!0,e(E))};m.open(c,h,!0);m.responseType="arraybuffer";for(var y in d)d.hasOwnProperty(y)&&0!=d[y].length&&(D(y)||m.setRequestHeader(y,d[y][0]));m.send(f)}.bind(this))}};J.$XHRService=G})(bb);(function(J){var A="0",H=function(){var d=h(A);return d?(d=JSON.parse(d),"object"!=typeof d?{}:d):{}},D=function(d){return(d=JSON.stringify(d))?g(A,d):!1},
G=function(d){return null==d?!1:0>d-(new Date).getTime()},q=function(d){var f=H();delete f[d];return D(f)};J.setFlag=function(d,f,m){var y=H();y[d]={v:f,e:m};return D(y)};J.getFlag=function(d){var f=H();return void 0==f[d]?null:G(f[d].e)?(q(d),null):f[d].v};J.removeFlag=q;J.clearFlags=function(d){return c(A)};J.expireFlags=function(){var d=H(),f=[],m;for(m in d)G(d[m].e)&&f.push(m);if(0!=f.length){for(m in f)delete d[m];D(d)}};var l=0,e=function(d){return ja.sum32a(Ja.encode(l.toString()+"___"+d)).toString()},
g=function(d,f){d=e(d);return qb.set(d,btoa(f))},h=function(d){d=e(d);return(d=qb.get(d))?atob(d):null},c=function(d){d=e(d);return qb.remove(d)};J.setSeed=function(d){l=d;A=e("opt_"+d.toString())};J.set=g;J.get=h;J.remove=c})({});var sb={};(function(J){var A=ya.new();A.setPrefix("report: ");A.setLevel(ya.INFO);var H=new function(){var D=ha.CustomEvents;this.init=function(){var q=T.SharedObject.getItem("websiteConfig");D.addEventListener("FirePublisherEvent",function(l){var e=l.data;l=e.eventName;
e=e.payload||{bubbles:!1,cancelable:!1,detail:void 0};if(window.CustomEvent)try{var g=new window.CustomEvent(l,e);window.dispatchEvent(g);return}catch(h){g=document.createEvent("CustomEvent");g.initCustomEvent(l,e.bubbles,e.cancelable,e.detail);window.dispatchEvent(g);return}g=document.createEvent("CustomEvent");g.initCustomEvent(l,e.bubbles,e.cancelable,e.detail);window.dispatchEvent(g)});D.addEventListener("sendLog",function(l){l=l.data;bb.Home.sendLog(l.eventName,l.payload).then(function(e){A.infof(null,
"sendLog - %o",e)},function(e){A.errorf(null,"sendLog - %o",e)})});D.addEventListener("onPageView",function(l){var e=l.data;l=e.contentRestriction;e=e.acceptableAds;var g=[];l&&(g=[G.UNKNOWN]);bb.Home.reportPageView(q.websiteID,l,g,e).then(function(h){A.infof(null,"onPageView - %o",h)},function(h){A.errorf(null,"onPageView - %o",h)})});D.addEventListener("onPageFocus",function(l){var e=l.data;l=e.contentRestriction;e=e.acceptableAds;var g=[];l&&(g=[G.UNKNOWN]);bb.Home.reportPageFocus(q.websiteID,
l,g,e).then(function(h){A.infof(null,"onPageFocus - %o",h)},function(h){A.errorf(null,"onPageFocus - %o",h)})});D.addEventListener("onAuctionStarted",function(l){var e=l.data.auction;l=e.auctionId;var g=e.unit.space.id,h=[],c=e.unit.space.preBiddingSettings&&e.unit.space.preBiddingSettings.biddingSettings;e=e.unit.space.postBiddingSettings;if(c)for(var d in c)d=parseInt(d),c.hasOwnProperty(d)&&x.forEach(c[d],function(f){h.push({bidderId:f.id,provider:f.name})});e&&(e.adxId&&h.push({bidderId:e.adxId,
provider:"gad"}),e.directId&&h.push({bidderId:e.directId,provider:"direct"}));bb.Home.reportAuctionStarted(l,g,h,q.websiteID).then(function(f){A.infof(null,"onAuctionStarted - %o",f)},function(f){A.errorf(null,"onAuctionStarted - %o",f)})});D.addEventListener("onAuctionEnded",function(l){var e=l.data;l=e.auction;e=e.bid;var g=l.bids,h=l.unit.space.name;try{if(q.dfpEnabled)for(var c=window.googletag.pubads().getSlots(),d=0;d<c.length;d++){var f=c[d],m=f.getSlotElementId();if(document.getElementById(m)==
l.unit.element){h=f.getAdUnitPath().split("/")[f.getAdUnitPath().split("/").length-1];break}}}catch(E){A.errorf(null,"onAuctionEnded: %o",E)}c={bids:[],aliens:[],win:void 0};for(d=0;d<g.length;d++){f=g[d];m=D.fireEvent("bidCpmAdjustment",{bid:{cpm:f.cpm,bidderCode:f.bidderCode,complianceStatus:f.complianceStatus}})||1;m*=f.cpm/1E3;var y=D.fireEvent("prebidTimeout")||3E3;m={bidderExternalID:f.bidderId,provider:f.bidderCode,amount:m,complianceStatus:f.complianceStatus,timeout:y,latency:f.timeToRespond,
requestStatus:"OK",creativeID:f.contentIdHash,adUnit:h,adSize:String(f.width)+"x"+String(f.height),adID:f.adId};if(f==e)c.win=m;else switch(m.complianceStatus){case T.consts.complianceStatus.COMPLIANT:case T.consts.complianceStatus.INCOMPLIANT:c.bids.push(m);break;default:c.aliens.push(m)}}bb.Home.reportAuctionEnd(l.auctionId,l.unit.space.id,q.websiteID,c,h).then(function(E){A.infof(null,"onAuctionEnded - %o",E)},function(E){A.errorf(null,"onAuctionEnded - %o",E)})});D.addEventListener("onAuctionRendered",
function(l){var e=l.data;l=e.auction;e=e.bid;bb.Home.reportRender(l.auctionId,e.bidderId,e.bidderCode,l.unit.space.id,q.websiteID).then(function(g){A.infof(null,"onAuctionRendered - %o",g)},function(g){A.errorf(null,"onAuctionRendered - %o",g)})});D.addEventListener("onAdViewed",function(l){var e=l.data;l=e.auction;e=e.bid;bb.Home.reportView(l.auctionId,e.bidderId,e.bidderCode,l.unit.space.id,q.websiteID).then(function(g){A.infof(null,"onAdViewed - %o",g)},function(g){A.errorf(null,"onAdViewed - %o",
g)})});D.addEventListener("onAdClicked",function(l){bb.Home.reportClick(l.data.bid.bidderId).then(function(e){viewIndex++;A.infof(null,"onAdClicked - %o",e)},function(e){A.errorf(null,"onAdClicked - %o",e)})})};var G={UNKNOWN:0,ADBLOCK:1,ADBLOCK_PLUS:2,UBLOCK:3,ADGUARD:4,GHOSTERY:5,UC_BROWSER:6}};J.Report=H;H=new function(){var D=ha.CustomEvents;this.run=function(){l();G()};var G=function(){D.addEventListener("getRestrictionSettingsEnded",function(e){var g=D.fireEvent("acceptableAbTest");if(g){e=
"//static.criteo.net/images/pixel.gif?ch=1&upapi=true";g&&(e=g.src);var h=new Image;h.addEventListener("load",function(){g.callback(!0)},!1);h.addEventListener("error",function(){g.callback(!1)},!1);h.src=e}})},q=!1,l=function(){D.addEventListener("getRestrictionSettingsEnded",function(e){e=e.data;e.contentRestriction&&e.acceptableAds&&(window.pbjs=window.pbjs||{},window.pbjs.que=window.pbjs.que||[],window.pbjs.que.push(function(){window.pbjs.onEvent("bidResponse",function(g){if(!q&&g&&0<g.length)for(var h=
0;h<g.length;h++)if(0<g[h].cpm&&"emx_digital"!==g[h].bidder&&"districtmDMX"!==g[h].bidder){q=!0;D.fireEvent("disableStopFlag")||(window.__bt_intrnl.stopFlag=!0);var c=T.SharedObject.getItem("renderedUnits");c={adBlockDetectionType:T.SharedObject.getItem("adBlockDetectionType"),stopedProcess:!c||0==c.length};bb.Home.sendLog("pbjsDetected",c)}g&&bb.Home.sendLog("pbjsBidReceived",{cpm:g.cpm?g.cpm:0,creativeLength:g.ad?g.ad.length:0,bidderCode:g.bidderCode||"",adUnitCode:g.adUnitCode||""})})}))})}};J.Verifications=
H})(sb);var Fa={};(function(J){function A(r,u){return u?"\x00"===r?"\ufffd":r.slice(0,-1)+"\\"+r.charCodeAt(r.length-1).toString(16)+" ":"\\"+r}function H(r){var u=r.charAt(0);return"#"===u||"."===u?u+r.substring(1).replace(G,A):r}J.addAcceptableParam=function(r){if(-1<r.indexOf(T.upoSettings.acceptableURLParam))return r;r=-1<r.indexOf("?")?r+"&"+T.upoSettings.acceptableURLParam:r+"?"+T.upoSettings.acceptableURLParam;return r=r.replace("&&upapi=true","&upapi=true")};var D=function(r){if(!r)return r;
var u=[Number,String,Boolean];try{if(x.forEach(u,function(n){r instanceof n&&(K=n(r))}),"undefined"==typeof K)if("[object Array]"===Object.prototype.toString.call(r)){var K=[];x.forEach(r,function(n,w,M){K[w]=D(n)})}else if("object"==typeof r)if(r.nodeType&&"function"==typeof r.cloneNode)K=r.cloneNode(!0);else if(r.prototype)K=r;else if(r instanceof Date)K=new Date(r);else{K={};for(var v in r)K[v]=D(r[v])}else K=r}catch(n){K=r}return K},G=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g,q=function(r){try{if(r){try{var u=
document.querySelector(H(r))}catch(w){}if(u){r=!1;if("none"===window.getComputedStyle(u).display){var K=u.style.getPropertyValue("display");var v=u.style.getPropertyPriority("display");u.style.setProperty("display","block","important");r=!0}var n=u.getBoundingClientRect().top+window.scrollY;r&&u.style.setProperty("display",K,v);return n<=T.consts.acceptableStandardScreenSize.height}}}catch(w){}};J.deepClone=D;J.isNil=function(r){return null==r};J.escapeSelector=H;J.isFirstViewPortElement=q;J.extractQueryParamFromUrl=
function(r,u){r=r.replace(/[\[\]]/g,"\\$&");return(r=(new RegExp("[?&]"+r+"(=([^&#]*)|&|#|$)")).exec(u))?r[2]?decodeURIComponent(r[2].replace(/\+/g," ")):"":null};J.doesBrowserSupportDocOpen=function(){var r=ab.browser();return!("edge"===r||"ie"===r)};J.getTopmostAccessibleWindow=function(){var r=window;try{for(;r!==r.parent;)r.parent.document,r=r.parent}catch(u){}return r};J.extractVariableFromString=function(r,u){if(r){u=u.split(".");for(var K=0;K<u.length;K++){var v=u[K];if(!r[v])return;r=r[v]}return r}};
var l=new function(){this.insertElement=function(r,u,K){switch(K){case "appendChild":u.appendChild(r);break;case "insertBefore":u.parentElement.insertBefore(r,u);break;case "insertAfter":u.nextElementSibling?this.insertElement(r,u.nextElementSibling,"insertBefore"):this.insertElement(r,u.parentElement,"appendChild")}}};J.ElementInsertion=l;var e=function(r){var u=r.width,K=16<=u*r.height/(T.consts.acceptableStandardScreenSize.width*T.consts.acceptableStandardScreenSize.height)*100;return 2==(350<
r.width?1:2)?K||350<u:K||200<r.height},g=function(r,u){var K=r&&document.querySelector(H(r)),v=350<u.width?1:2,n=!1,w=!1,M=u.height,U=u.width;if(K){if("none"===window.getComputedStyle(K).display){var ea=K.style.getPropertyValue("display");var I=K.style.getPropertyPriority("display");K.style.setProperty("display","block","important");n=!0}M=K.getBoundingClientRect().top;M=(w=M+u.height>T.consts.acceptableStandardScreenSize.height)?T.consts.acceptableStandardScreenSize.height-M:u.height}r=2==v&&w?g(r,
{width:U,height:M})&&h(u):e(u);n&&K.style.setProperty("display",ea,I);return r},h=function(r){var u=350<r.width?1:2;return 26<=r.width*r.height/(T.consts.acceptableStandardScreenSize.width*T.consts.acceptableStandardScreenSize.height)*100||1==u&&400<r.height},c=function(r,u){return r&&document.querySelector(H(r))&&!q(r)?h(u):g(r,u)};J.isUnacceptable=c;var d=[{width:300,height:250},{width:336,height:280},{width:300,height:600},{width:160,height:600},{width:120,height:600},{width:120,height:240},{width:250,
height:250},{width:200,height:200},{width:180,height:150},{width:125,height:125},{width:728,height:90},{width:970,height:90},{width:970,height:250},{width:468,height:60},{width:234,height:60}],f=function(r,u){return x.filter(r,function(K){return(350<K.width?1:2)==u})},m=function(r,u){r=f(d,r);return r=x.filter(r,function(K){return e(K)?!u:!0})},y=function(r,u,K){for(var v,n,w=n=v=0;w<r.length;w++){var M=r[w];M&&M.width&&M.height&&(M.width>v&&(v=M.width),M.height>n&&(n=M.height))}u=m(350<u.width?1:
2,K);for(K=0;K<u.length;K++)if(w=u[K],w.width<=v&&w.height<=n){M=!0;for(var U=0;U<r.length;U++){var ea=r[U];if(ea&&ea.width==w.width&&ea.height==w.height){M=!1;break}}if(M)return w}};J.sizesReplacer=function(r,u){var K=[];x.forEach(u,function(w){K.push({width:w.width,height:w.height})});for(u=0;u<K.length;u++){var v=K[u],n=q(r);v&&v.width&&v.height&&c(r,v)&&(K[u]=y(K,v,n))}return K};J.SubscriptionLayer=function(){var r={};this.subscribeForEvent=function(u,K){r[u]=r[u]||[];0>r[u].indexOf(K)&&r[u].push(K)};
this.invokeEventCallbacks=function(u,K){x.forEach(r[u]||[],function(v){v.call(void 0,K)})}};var E=function(r){var u=document.createElement("a");u.setAttribute("href",r);return u},C=function(r,u){if(r&&0<r.length)for(var K=0;K<r.length;K++){for(var v=r[K],n=!0,w=0;w<v.length;w++){var M=v[w];if(0>u[M.type].indexOf(M.string)){n=!1;break}}if(n)return!0}};J.isSyncUrl=function(r,u){if("IMG"!==u)return!1;r=E(r);u=[[{string:"/sync",type:"pathname"}],[{string:"/cookiesync",type:"pathname"}],[{string:"/rset",
type:"pathname"}],[{string:"/getuid",type:"pathname"}],[{string:"/track",type:"pathname"}],[{string:"/pixel",type:"pathname"}],[{string:"/Pixel",type:"pathname"}],[{string:".pixel",type:"pathname"}],[{string:"pixel.",type:"pathname"}],[{string:"/match",type:"pathname"}],[{string:"/partner",type:"pathname"}],[{string:"/visitormatch",type:"pathname"}],[{string:"/ping_match",type:"pathname"}],[{string:"/ImgSync",type:"pathname"}],[{string:"/identify",type:"pathname"}],[{string:"/usync/",type:"pathname"}],
[{string:"/usersync",type:"pathname"}],[{string:"/user-sync",type:"pathname"}],[{string:"/ddm/trackimp",type:"pathname"}],[{string:"/user_sync.php",type:"pathname"}],[{string:"/bh/rtset",type:"pathname"}],[{string:"%2Fsync",type:"pathname"}],[{string:"cksync.php",type:"pathname"}],[{string:".sync",type:"hostname"}],[{string:"sync-",type:"hostname"}],[{string:"storygize.net",type:"hostname"},{string:"/ccm",type:"href"}],[{string:"geo-um.btrll.com",type:"hostname"}],[{string:"nexac.com",type:"hostname"},
{string:"/e/sr",type:"href"}],[{string:"api.bttrack.com",type:"hostname"}],[{string:"postrelease.com",type:"hostname"}],[{string:"sitescout.com",type:"hostname"}],[{string:"criteo.net",type:"hostname"}],[{string:"3lift.com",type:"hostname"},{string:"/sync",type:"href"}]];for(var K=0;K<u.length;K++){for(var v=u[K],n=!0,w=0;w<v.length;w++){var M=v[w];if(0>r[M.type].indexOf(M.string)){n=!1;break}}if(n)return!0}return!1};J.isWhitelistURL=function(r,u){r=E(r);return C({SCRIPT:[[{string:"3lift.com",type:"hostname"},
{string:"/header",type:"href"}]]}[u],r)?!1:C({IMG:[[{string:"adsafeprotected.com",type:"hostname"}],[{string:"doubleclick.net",type:"hostname"}],[{string:"moatads.com",type:"hostname"}],[{string:"postrelease.com",type:"hostname"}],[{string:"mynativeplatform.com",type:"hostname"}],[{string:"360yield.com",type:"hostname"}],[{string:"sharethrough.com",type:"hostname"}],[{string:"doubleverify.com",type:"hostname"}],[{string:"zemanta.com",type:"hostname"}],[{string:"adnxs.com",type:"hostname"}],[{string:"sonobi.com",
type:"hostname"}],[{string:"insight.adsrvr.org",type:"hostname"}],[{string:"serving-sys.com",type:"hostname"}],[{string:"advertising.com",type:"hostname"}],[{string:"openx.net",type:"hostname"}],[{string:"3lift.com",type:"hostname"}],[{string:"flashtalking.com",type:"hostname"},{string:"/imp",type:"href"}],[{string:"adroll.com",type:"hostname"}],[{string:"33across.com",type:"hostname"},{string:"/ps",type:"href"}],[{string:"adsrvr.org/bid",type:"href"}],[{string:"imrworldwide.com",type:"hostname"}],
[{string:"criteo.com",type:"hostname"},{string:"/delivery",type:"href"}],[{string:"ad_overlays",type:"pathname"}]],IFRAME:[[{string:"googlesyndication.com/safeframe",type:"href"}],[{string:"ad.doubleclick.net/ddm",type:"hostname"}],[{string:"rubiconproject.com",type:"hostname"},{string:"multi-sync.html",type:"href"}],[{string:"3lift.com",type:"hostname"},{string:"sync?",type:"href"}],[{string:"ca-pub-15988",type:"href"}],[{string:"ff.doubleclick.net",type:"hostname"}]],SCRIPT:[[{string:"adnxs.com",
type:"hostname"},{string:"trk.js",type:"href"}],[{string:"/sync",type:"pathname"}],[{string:"pagead2.googlesyndication.com",type:"hostname"}],[{string:"adservice.google.",type:"hostname"}],[{string:"doubleclick.net/gpt/pubads_impl_",type:"href"}],[{string:"native.sharethrough.com/assets/sfp.js",type:"href"}],[{string:"sharethrough.com/api",type:"href"}],[{string:"moatads.com",type:"hostname"}],[{string:"3lift.com",type:"hostname"}],[{string:"adsafeprotected.com",type:"hostname"}],[{string:"doubleverify.com",
type:"hostname"}],[{string:"match.adsrvr.org",type:"hostname"}],[{string:".adnxs.com/getuidp",type:"href"}],[{string:"pubads_impl_rendering_",type:"href"}],[{string:"cdn.ampproject.org",type:"href"}]],LINK:[[{string:"//tpc.googlesyndication.com/safeframe",type:"href"}],[{string:"ntv.io",type:"hostname"}],[{string:"moatads.com",type:"hostname"}],[{string:"adservice.google.",type:"hostname"}]]}[u],r)?!0:!1}})(Fa);var ob={};(function(J){function A(c){try{return document.querySelector(c)}catch(d){H.errorf(null,
"document.querySelector:%o - error:%o",c,d)}}var H=ya.new();H.setPrefix("utils: ");var D=function(c){return{unitID:c.unitID,element:c.element,space:G(c.space),currentBid:c.currentBid,countOfDispatches:c.countOfDispatches,lastInvokeTime:c.lastInvokeTime}},G=function(c){var d={id:c.id,name:c.name,staging:c.staging,selector:{position:c.selector.position,value:c.selector.value},sizes:c.sizes};if(c.preBiddingSettings&&(d.preBiddingSettings={enabled:c.preBiddingSettings.enabled,biddingSettings:{}},c.preBiddingSettings.enabled&&
c.preBiddingSettings.biddingSettings))for(var f in c.preBiddingSettings.biddingSettings)if(c.preBiddingSettings.biddingSettings.hasOwnProperty(f)){var m=c.preBiddingSettings.biddingSettings[f];d.preBiddingSettings.biddingSettings[f]=[];for(var y=0;y<m.length;y++){var E=m[y];d.preBiddingSettings.biddingSettings[f].push({id:E.id,name:E.name,testCompliance:E.testCompliance,params:E.params})}}d.postBiddingSettings={enabled:!1};if(c.postBiddingSettings&&c.postBiddingSettings.enabled)for(d.postBiddingSettings=
{adxId:c.postBiddingSettings.adxId,directId:c.postBiddingSettings.directId,enabled:c.postBiddingSettings.enabled,type:c.postBiddingSettings.type,order:[]},y=0;y<c.postBiddingSettings.order.length;y++)f=c.postBiddingSettings.order[y],d.postBiddingSettings.order.push({params:{keyValues:f.params.keyValues||{},queryParams:f.params.queryParams||{}},adx:{bidderID:f.adx.bidderID,testCompliance:f.adx.testCompliance},direct:{bidderID:f.direct.bidderID,testCompliance:f.direct.testCompliance}});return d},q=
function(c){if(c)return{bidId:c.bidId,ad:c.ad,adId:c.adId,adUrl:c.adUrl,bidderId:c.bidderId,bidder:c.bidder,bidderCode:c.bidderCode,contentIdHash:c.contentIdHash,currency:c.currency,creativeId:c.creativeId,c:c.c,cpm:c.cpm,complianceStatus:c.complianceStatus,height:c.height,timeToRespond:c.timeToRespond,size:c.size,width:c.width,rawBid:c.rawBid,type:c.type,status:c.status}};J.auctionDecoder=function(c){return{auctionId:c.auctionId,unit:D(c.unit),state:c.state,creationTime:c.creationTime,bids:x.map(c.bids,
function(d){return q(d)}),winningBid:q(c.getWinningBid())}};J.unitDecoder=D;J.spaceDecoder=G;J.bidDecoder=q;J.refreshTypeDecoder=function(c){switch(c){case "ALL":return T.consts.refreshType.ALL;case "VISIBLE":return T.consts.refreshType.VISIBLE;case "HIDDEN":return T.consts.refreshType.HIDDEN;default:return T.consts.refreshType.UNKNOWN}};J.getElementWithSelector=A;J.getSpaceElement=function(c){return c&&c.selector?A(c.selector.value):null};var l=new function(){var c=[],d=[];this.setMovePositionRules=
function(m){c=m||[]};this.dispatch=function(m){try{if(!(!c||0>=c.length||!(m=x.filter(m,function(E){return 0>d.indexOf(E)}))||0>=m.length)){var y=function(E,C){if(!(E>C)){for(var r=0;r<m.length;r++){for(var u=m[r],K=[],v=0;v<c.length;v++){var n=c[v],w={space:G(u)};f(n,w)&&(d.push(u),n.stayLive||K.push(n))}c=0<K.length?x.filter(c,function(M){return 0>K.indexOf(M)}):c}0<c.length&&setTimeout(function(){y(E+1,C)},100)}};y(0,20)}}catch(E){}};var f=function(m,y){var E=m.elementToMove(y);y=m.relativeElement(y);
return E&&y&&!E.__upo_moved?(Fa.ElementInsertion.insertElement(E,y,m.htmlElementInsertionType),E.__upo_moved=!0):!1}};J.movePositionService=l;var e={},g=function(c,d){try{c.addEventListenerOrginal=c.addEventListener,c.addEventListener=function(){var f=Array.prototype.slice.call(arguments);if("load"==f[0])e[d]=e[d]||[],e[d].push(f[1]);else return c.addEventListenerOrginal.apply(this,f)},c.removeEventListenerOrginal=c.removeEventListener,c.removeEventListener=function(){var f=Array.prototype.slice.call(arguments);
if("load"==f[0])e[d]&&(e[d]=x.filter(e[d],function(m){return m!=f[1]}));else return c.removeEventListenerOrginal.apply(this,f)}}catch(f){}},h=function(c){c=c.contentWindow;var d=function(n){0==n.indexOf("//")&&(n=Fa.getTopmostAccessibleWindow().location.protocol+n);return n},f=function(n,w){if(n&&""==n.src&&n.outerHTML){var M=(new RegExp(w+'="([^"]+)"',"g")).exec(n.outerHTML);M&&M[1]&&(n[w]=d(M[1]))}},m=c.XMLHttpRequest.prototype.open;c.XMLHttpRequest.prototype.open=function(){try{var n=Array.prototype.slice.call(arguments);
n[1]=d(n[1])}catch(w){}return m.apply(this,n)};var y=c.open;c.open=function(){try{var n=Array.prototype.slice.call(arguments);n[0]=d(n[0])}catch(w){}return y.apply(this,n)};var E=c.HTMLElement.prototype.insertBefore;c.HTMLElement.prototype.insertBefore=function(){try{var n=Array.prototype.slice.call(arguments),w=E.apply(this,n);-1<["SCRIPT","IFRAME"].indexOf(n[0].tagName)&&f(n[0],"src");"LINK"===n[0].tagName&&f(n[0],"href")}catch(M){}return w};var C=c.HTMLElement.prototype.appendChild;c.HTMLElement.prototype.appendChild=
function(){try{var n=Array.prototype.slice.call(arguments),w=C.apply(this,n);-1<["SCRIPT","IFRAME"].indexOf(n[0].tagName)&&f(n[0],"src");"LINK"===n[0].tagName&&f(n[0],"href")}catch(M){}return w};var r=c.HTMLElement.prototype.__lookupGetter__("innerHTML"),u=c.HTMLElement.prototype.__lookupSetter__("innerHTML");c.HTMLElement.prototype.__defineSetter__("innerHTML",function(){try{var n=Array.prototype.slice.call(arguments),w=u.apply(this,n);f(this.firstChild,"src")}catch(M){}return w});c.HTMLElement.prototype.__defineGetter__("innerHTML",
function(){try{return r.apply(this)}catch(n){}});for(var K="HTMLScriptElement HTMLElement HTMLVideoElement HTMLAudioElement HTMLHtmlElement HTMLHeadElement HTMLLinkElement HTMLStyleElement HTMLBodyElement HTMLFormElement HTMLSelectElement HTMLOptionElement HTMLInputElement HTMLTextAreaElement HTMLButtonElement HTMLLabelElement HTMLFieldSetElement HTMLLegendElement HTMLUListElement HTMLOListElement HTMLDListElement HTMLDirectoryElement HTMLMenuElement HTMLLIElement HTMLDivElement HTMLParagraphElement HTMLHeadingElement HTMLQuoteElement HTMLPreElement HTMLBRElement HTMLFontElement HTMLHRElement HTMLAnchorElement HTMLImageElement HTMLObjectElement HTMLParamElement HTMLMapElement HTMLModElement HTMLAreaElement HTMLTableElement HTMLTableCaptionElement HTMLTableColElement HTMLTableSectionElement HTMLTableRowElement HTMLTableCellElement HTMLFrameSetElement HTMLFrameElement HTMLIFrameElement".split(" "),
v=0;v<K.length;v++)c[K[v]]&&function(n){n=n.prototype;var w=n.__lookupGetter__("src"),M=n.__lookupSetter__("src");w&&(n.__defineSetter__("src",function(){try{var U=Array.prototype.slice.call(arguments);U[0]=d(U[0])}catch(ea){}return M.apply(this,U)}),n.__defineGetter__("src",function(){try{return w.apply(this)}catch(U){}}))}(c[K[v]])};J.createSafeFrame=function(){var c=document.createElement("iframe"),d=ra.stringRange(16,24),f=function(){this.removeEventListener("load",f);try{if(-1<this.src.indexOf("about:blank")&&
h(this),"firefox"===ab.browser())if(T.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame){var y="var script = document.createElement('script'); script.textContent=atob('"+btoa('document.write(\'<html> <head> <script> var evalCode = function (code) { try { window.eval(code) } catch (error) { } }; window.addEventListener("message", function (event) { var data; if (typeof(event) === "object" && event.data.type) { data = event.data; } else { try { data = JSON.parse(event.data); } catch (err) { } }; if (!data) { return; } switch (data.type) { case "eval": evalCode(data.code); break; default: break; } }); \x3c/script> </head> <body> </body> </html>\');try{document.__defineGetter__("readyState",function(){return "complete"});window.setTimeout(function(){document.close();},300);}catch(e){};')+
"'); document.documentElement.appendChild(script);";this.contentWindow.postMessage({type:"eval",code:y},"*")}else{var E=this.contentWindow.document,C=E.createElement("script");C.textContent='document.write(\'<html><head></head><body><div></div></body></html>\');try{document.__defineGetter__("readyState",function(){return "complete"});window.setTimeout(function(){document.close();},300);}catch(e){};';E.documentElement.appendChild(C)}}catch(r){}},m=function(){try{this.addEventListener=this.addEventListenerOrginal,
delete this.addEventListenerOrginal,this.removeEventListener=this.removeEventListenerOrginal,delete this.removeEventListenerOrginal}catch(y){}this.removeEventListener("load",m);this.addEventListener("load",f);e[d]&&x.forEach(e[d],function(y){this.addEventListener("load",y)}.bind(this));this.src=T.upoSettings.whitelistedFrameSettings.laterSrcModification};T.upoSettings.whitelistedFrameSettings.laterSrcModification?(c.addEventListener("load",m),g(c,d)):c.addEventListener("load",f);c.src=T.upoSettings.whitelistedFrameSettings.url;
return c}})(ob);var lb={};(function(J){var A=new function(){var l=new Fa.SubscriptionLayer;this.subscribeForEvent=function(c,d){l.subscribeForEvent(c,d)};var e=function(){return new x.CPromise(function(c,d){var f=!1;try{if(window.googletag&&window.googletag.getVersion){f=!0;var m=document.createElement("script");m.async="true";m.type="text/javascript";m.addEventListener("load",function(){c()});m.addEventListener("error",function(w){d(w)});m.src="https://securepubads.g.doubleclick.net/gpt/pubads_impl_"+
window.googletag.getVersion()+".js?upapi=true";(document.head||document.body||document.documentElement).appendChild(m)}}catch(w){d("error in getting pubads_impl -> "+w)}if(window.googletag._vars_){var y=window.googletag._vars_,E=[21063911,21063048,21063670,21063817,21063671],C=[],r;for(r in y){var u=y[r];if("string"===typeof u&&-1<u.indexOf("pubads_impl_")&&!f)try{f=!0,m=document.createElement("script"),m.async="true",m.type="text/javascript",m.addEventListener("load",function(){c()}),m.addEventListener("error",
function(w){d(w)}),-1<u.indexOf("?")?m.src=u+"&upapi=true":m.src=u+"?upapi=true",(document.head||document.body||document.documentElement).appendChild(m)}catch(w){d("error in getting pubads_impl -> "+w)}else if(Array.isArray(u))try{var K=u.length;if(E)for(;K--;){var v=u[K];-1<E.indexOf(v)&&u.splice(K,1)}if(C)for(var n=0;n<C.length;n++)v=C[n],-1===u.indexOf(v)&&u.push(v)}catch(w){}}}f||d()})},g=function(){return new x.CPromise(function(c,d){var f=document.createElement("script");f.async="true";f.type=
"text/javascript";f.addEventListener("load",function(){c()});f.addEventListener("error",function(m){d(m)});f.src="https://adservice.google.com/adsid/integrator.js?domain="+window.location.hostname+"&upapi=true";(document.head||document.body||document.documentElement).appendChild(f)})},h=function(){return new x.CPromise(function(c,d){var f=document.createElement("script");f.async="true";f.type="text/javascript";f.addEventListener("load",function(){x.CPromise.all([g(),e()]).then(function(){c()},function(m){d(m)})});
f.addEventListener("error",function(){d()});f.src="//www.googletagservices.com/tag/js/gpt.js?upapi=true";(document.head||document.body||document.documentElement).appendChild(f)})};this.load=function(){window.googletag=window.googletag||{};window.googletag.cmd=window.googletag.cmd||[];l.invokeEventCallbacks("preset");h()}},H=new Fa.SubscriptionLayer,D=!1,G=function(){D||(D=!0,A.subscribeForEvent("preset",function(){H.invokeEventCallbacks("dfp")}),A.subscribeForEvent("postset",function(){H.invokeEventCallbacks("dfp")}),
q.subscribeForEvent("preset",function(){H.invokeEventCallbacks("prebid")}),q.subscribeForEvent("postset",function(){H.invokeEventCallbacks("prebid")}))};J.init=G;J.loadThirdParty=function(l){D||G();switch(l){case "dfp":A.load();break;case "prebid":q.load()}};J.addPresetCallback=function(l,e){H.subscribeForEvent(l,e)};J.addPostsetCallback=function(l,e){H.subscribeForEvent(l,e)};var q=new function(){var l=new Fa.SubscriptionLayer;this.subscribeForEvent=function(g,h){l.subscribeForEvent(g,h)};var e=
function(){try{var g=atob("LyogcHJlYmlkLmpzIHY0LjE3LjAKVXBkYXRlZCA6IDIwMjEtMDEtMTIgKi8KIWZ1bmN0aW9uKHUpe3ZhciBzPXdpbmRvdy51cGJqc0NodW5rO3dpbmRvdy51cGJqc0NodW5rPWZ1bmN0aW9uKGUsdCxuKXtmb3IodmFyIHIsaSxvLGE9MCxjPVtdO2E8ZS5sZW5ndGg7YSsrKWk9ZVthXSxkW2ldJiZjLnB1c2goZFtpXVswXSksZFtpXT0wO2ZvcihyIGluIHQpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQscikmJih1W3JdPXRbcl0pO2ZvcihzJiZzKGUsdCxuKTtjLmxlbmd0aDspYy5zaGlmdCgpKCk7aWYobilmb3IoYT0wO2E8bi5sZW5ndGg7YSsrKW89ZihmLnM9blthXSk7cmV0dXJuIG99O3ZhciBuPXt9LGQ9ezM2NjowfTtmdW5jdGlvbiBmKGUpe2lmKG5bZV0pcmV0dXJuIG5bZV0uZXhwb3J0czt2YXIgdD1uW2VdPXtpOmUsbDohMSxleHBvcnRzOnt9fTtyZXR1cm4gdVtlXS5jYWxsKHQuZXhwb3J0cyx0LHQuZXhwb3J0cyxmKSx0Lmw9ITAsdC5leHBvcnRzfWYubT11LGYuYz1uLGYuZD1mdW5jdGlvbihlLHQsbil7Zi5vKGUsdCl8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQse2NvbmZpZ3VyYWJsZTohMSxlbnVtZXJhYmxlOiEwLGdldDpufSl9LGYubj1mdW5jdGlvbihlKXt2YXIgdD1lJiZlLl9fZXNNb2R1bGU/ZnVuY3Rpb24oKXtyZXR1cm4gZS5kZWZhdWx0fTpmdW5jdGlvbigpe3JldHVybiBlfTtyZXR1cm4gZi5kKHQsImEiLHQpLHR9LGYubz1mdW5jdGlvbihlLHQpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSx0KX0sZi5wPSIiLGYub2U9ZnVuY3Rpb24oZSl7dGhyb3cgY29uc29sZS5lcnJvcihlKSxlfSxmKGYucz05MTYpfSh7MDpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxuLmQodCwiaW50ZXJuYWwiLGZ1bmN0aW9uKCl7cmV0dXJuIER9KSxuLmQodCwiYmluZCIsZnVuY3Rpb24oKXtyZXR1cm4gTX0pLHQuZ2V0VW5pcXVlSWRlbnRpZmllclN0cj1HLHQuZ2VuZXJhdGVVVUlEPWZ1bmN0aW9uIGUodCl7cmV0dXJuIHQ/KHReVygpPj50LzQpLnRvU3RyaW5nKDE2KTooWzFlN10rLTFlMystNGUzKy04ZTMrLTFlMTEpLnJlcGxhY2UoL1swMThdL2csZSl9LHQuZ2V0QmlkSWRQYXJhbWV0ZXI9ZnVuY3Rpb24oZSx0KXtpZih0JiZ0W2VdKXJldHVybiB0W2VdO3JldHVybiIifSx0LnRyeUFwcGVuZFF1ZXJ5U3RyaW5nPWZ1bmN0aW9uKGUsdCxuKXtpZihuKXJldHVybiBlK3QrIj0iK2VuY29kZVVSSUNvbXBvbmVudChuKSsiJiI7cmV0dXJuIGV9LHQucGFyc2VRdWVyeVN0cmluZ1BhcmFtZXRlcnM9ZnVuY3Rpb24oZSl7dmFyIHQ9IiI7Zm9yKHZhciBuIGluIGUpZS5oYXNPd25Qcm9wZXJ0eShuKSYmKHQrPW4rIj0iK2VuY29kZVVSSUNvbXBvbmVudChlW25dKSsiJiIpO3JldHVybiB0PXQucmVwbGFjZSgvJiQvLCIiKX0sdC50cmFuc2Zvcm1BZFNlcnZlclRhcmdldGluZ09iaj1mdW5jdGlvbih0KXtyZXR1cm4gdCYmMDxPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0KS5sZW5ndGg/YmUodCkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiIiLmNvbmNhdChlLCI9IikuY29uY2F0KGVuY29kZVVSSUNvbXBvbmVudCh0W2VdKSl9KS5qb2luKCImIik6IiJ9LHQuZ2V0QWRVbml0U2l6ZXM9ZnVuY3Rpb24oZSl7aWYoIWUpcmV0dXJuO3ZhciB0PVtdO3t2YXIgbjtlLm1lZGlhVHlwZXMmJmUubWVkaWFUeXBlcy5iYW5uZXImJkFycmF5LmlzQXJyYXkoZS5tZWRpYVR5cGVzLmJhbm5lci5zaXplcyk/KG49ZS5tZWRpYVR5cGVzLmJhbm5lci5zaXplcyxBcnJheS5pc0FycmF5KG5bMF0pP3Q9bjp0LnB1c2gobikpOkFycmF5LmlzQXJyYXkoZS5zaXplcykmJihBcnJheS5pc0FycmF5KGUuc2l6ZXNbMF0pP3Q9ZS5zaXplczp0LnB1c2goZS5zaXplcykpfXJldHVybiB0fSx0LnBhcnNlU2l6ZXNJbnB1dD1mdW5jdGlvbihlKXt2YXIgdD1bXTtpZigic3RyaW5nIj09dHlwZW9mIGUpe3ZhciBuPWUuc3BsaXQoIiwiKSxyPS9eKFxkKSt4KFxkKSskL2k7aWYobilmb3IodmFyIGkgaW4gbiljZShuLGkpJiZuW2ldLm1hdGNoKHIpJiZ0LnB1c2gobltpXSl9ZWxzZSBpZigib2JqZWN0Ij09PW0oZSkpe3ZhciBvPWUubGVuZ3RoO2lmKDA8bylpZigyPT09byYmIm51bWJlciI9PXR5cGVvZiBlWzBdJiYibnVtYmVyIj09dHlwZW9mIGVbMV0pdC5wdXNoKEwoZSkpO2Vsc2UgZm9yKHZhciBhPTA7YTxvO2ErKyl0LnB1c2goTChlW2FdKSl9cmV0dXJuIHR9LHQucGFyc2VHUFRTaW5nbGVTaXplQXJyYXk9TCx0LnBhcnNlR1BUU2luZ2xlU2l6ZUFycmF5VG9SdGJTaXplPWZ1bmN0aW9uKGUpe2lmKEYoZSkpcmV0dXJue3c6ZVswXSxoOmVbMV19fSx0LmdldFdpbmRvd1RvcD16LHQuZ2V0V2luZG93U2VsZj1WLHQuZ2V0V2luZG93TG9jYXRpb249SCx0LmxvZ01lc3NhZ2U9Syx0LmxvZ0luZm89Six0LmxvZ1dhcm49WSx0LmxvZ0Vycm9yPVEsdC5oYXNDb25zb2xlTG9nZ2VyPWZ1bmN0aW9uKCl7cmV0dXJuIFV9LHQuZGVidWdUdXJuZWRPbj1YLHQuY3JlYXRlSW52aXNpYmxlSWZyYW1lPWZ1bmN0aW9uKCl7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaWZyYW1lIik7cmV0dXJuIGUuaWQ9RygpLGUuaGVpZ2h0PTAsZS53aWR0aD0wLGUuYm9yZGVyPSIwcHgiLGUuaHNwYWNlPSIwIixlLnZzcGFjZT0iMCIsZS5tYXJnaW5XaWR0aD0iMCIsZS5tYXJnaW5IZWlnaHQ9IjAiLGUuc3R5bGUuYm9yZGVyPSIwIixlLnNjcm9sbGluZz0ibm8iLGUuZnJhbWVCb3JkZXI9IjAiLGUuc3JjPSJhYm91dDpibGFuayIsZS5zdHlsZS5kaXNwbGF5PSJub25lIixlfSx0LmdldFBhcmFtZXRlckJ5TmFtZT1mdW5jdGlvbihlKXtyZXR1cm4gd2UoSCgpLnNlYXJjaClbZV18fCIifSx0LmlzQT1aLHQuaXNGbj1lZSx0LmlzU3RyPXRlLHQuaXNBcnJheT1uZSx0LmlzTnVtYmVyPXJlLHQuaXNQbGFpbk9iamVjdD1pZSx0LmlzQm9vbGVhbj1mdW5jdGlvbihlKXtyZXR1cm4gWihlLHcpfSx0LmlzRW1wdHk9b2UsdC5pc0VtcHR5U3RyPWZ1bmN0aW9uKGUpe3JldHVybiB0ZShlKSYmKCFlfHwwPT09ZS5sZW5ndGgpfSx0Ll9lYWNoPWFlLHQuY29udGFpbnM9ZnVuY3Rpb24oZSx0KXtpZihvZShlKSlyZXR1cm4hMTtpZihlZShlLmluZGV4T2YpKXJldHVybi0xIT09ZS5pbmRleE9mKHQpO3ZhciBuPWUubGVuZ3RoO2Zvcig7bi0tOylpZihlW25dPT09dClyZXR1cm4hMDtyZXR1cm4hMX0sdC5fbWFwPWZ1bmN0aW9uKG4scil7aWYob2UobikpcmV0dXJuW107aWYoZWUobi5tYXApKXJldHVybiBuLm1hcChyKTt2YXIgaT1bXTtyZXR1cm4gYWUobixmdW5jdGlvbihlLHQpe2kucHVzaChyKGUsdCxuKSl9KSxpfSx0Lmhhc093bj1jZSx0Lmluc2VydEVsZW1lbnQ9dWUsdC50cmlnZ2VyUGl4ZWw9c2UsdC5jYWxsQnVybD1mdW5jdGlvbihlKXt2YXIgdD1lLnNvdXJjZSxuPWUuYnVybDt0PT09QS5TMlMuU1JDJiZuJiZELnRyaWdnZXJQaXhlbChuKX0sdC5pbnNlcnRIdG1sSW50b0lmcmFtZT1mdW5jdGlvbihlKXtpZighZSlyZXR1cm47dmFyIHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaWZyYW1lIik7dC5pZD1HKCksdC53aWR0aD0wLHQuaGVpZ2h0PTAsdC5oc3BhY2U9IjAiLHQudnNwYWNlPSIwIix0Lm1hcmdpbldpZHRoPSIwIix0Lm1hcmdpbkhlaWdodD0iMCIsdC5zdHlsZS5kaXNwbGF5PSJub25lIix0LnN0eWxlLmhlaWdodD0iMHB4Iix0LnN0eWxlLndpZHRoPSIwcHgiLHQuc2Nyb2xsaW5nPSJubyIsdC5mcmFtZUJvcmRlcj0iMCIsdC5hbGxvd3RyYW5zcGFyZW5jeT0idHJ1ZSIsRC5pbnNlcnRFbGVtZW50KHQsZG9jdW1lbnQsImJvZHkiKSx0LmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQub3BlbigpLHQuY29udGVudFdpbmRvdy5kb2N1bWVudC53cml0ZShlKSx0LmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQuY2xvc2UoKX0sdC5pbnNlcnRVc2VyU3luY0lmcmFtZT1kZSx0LmNyZWF0ZVRyYWNrUGl4ZWxIdG1sPWZ1bmN0aW9uKGUpe2lmKCFlKXJldHVybiIiO2U9ZC5jKGUpO3ZhciB0PWVuY29kZVVSSShlKSxuPSc8ZGl2IHN0eWxlPSJwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjBweDt0b3A6MHB4O3Zpc2liaWxpdHk6aGlkZGVuOyI+JztyZXR1cm4gbis9JzxpbWcgc3JjPSInK3QrJyI+PC9kaXY+J30sdC5jcmVhdGVUcmFja1BpeGVsSWZyYW1lSHRtbD1mZSx0LmdldFZhbHVlU3RyaW5nPWxlLHQudW5pcXVlcz1wZSx0LmZsYXR0ZW49Z2UsdC5nZXRCaWRSZXF1ZXN0PWZ1bmN0aW9uKG4sZSl7cmV0dXJuIG4/KGUuc29tZShmdW5jdGlvbihlKXt2YXIgdD1jKCkoZS5iaWRzLGZ1bmN0aW9uKHQpe3JldHVyblsiYmlkSWQiLCJhZElkIiwiYmlkX2lkIl0uc29tZShmdW5jdGlvbihlKXtyZXR1cm4gdFtlXT09PW59KX0pO3JldHVybiB0JiYocj10KSx0fSkscik6dm9pZCAwO3ZhciByfSx0LmdldEtleXM9YmUsdC5nZXRWYWx1ZT12ZSx0LmdldEtleUJ5VmFsdWU9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG4gaW4gZSlpZihlLmhhc093blByb3BlcnR5KG4pJiZlW25dPT09dClyZXR1cm4gbn0sdC5nZXRCaWRkZXJDb2Rlcz1mdW5jdGlvbigpe3JldHVybigwPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06dXBianMuYWRVbml0cykubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLmJpZHMubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLmJpZGRlcn0pLnJlZHVjZShnZSxbXSl9KS5yZWR1Y2UoZ2UpLmZpbHRlcihwZSl9LHQuaXNHcHRQdWJhZHNEZWZpbmVkPXllLG4uZCh0LCJnZXRIaWdoZXN0Q3BtIixmdW5jdGlvbigpe3JldHVybiBoZX0pLG4uZCh0LCJnZXRPbGRlc3RIaWdoZXN0Q3BtQmlkIixmdW5jdGlvbigpe3JldHVybiBtZX0pLG4uZCh0LCJnZXRMYXRlc3RIaWdoZXN0Q3BtQmlkIixmdW5jdGlvbigpe3JldHVybiBTZX0pLHQuc2h1ZmZsZT1mdW5jdGlvbihlKXt2YXIgdD1lLmxlbmd0aDtmb3IoOzA8dDspe3ZhciBuPU1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSp0KSxyPWVbLS10XTtlW3RdPWVbbl0sZVtuXT1yfXJldHVybiBlfSx0LmFkVW5pdHNGaWx0ZXI9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gcygpKGUsdCYmdC5hZFVuaXRDb2RlKX0sdC5kZWVwQ2xvbmU9RWUsdC5pbklmcmFtZT1mdW5jdGlvbigpe3RyeXtyZXR1cm4gRC5nZXRXaW5kb3dTZWxmKCkhPT1ELmdldFdpbmRvd1RvcCgpfWNhdGNoKGUpe3JldHVybiEwfX0sdC5pc1NhZmFyaUJyb3dzZXI9ZnVuY3Rpb24oKXtyZXR1cm4vXigoPyFjaHJvbWV8YW5kcm9pZHxjcmlvc3xmeGlvcykuKSpzYWZhcmkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpfSx0LnJlcGxhY2VBdWN0aW9uUHJpY2U9ZnVuY3Rpb24oZSx0KXtpZighZSlyZXR1cm47cmV0dXJuIGUucmVwbGFjZSgvXCRce0FVQ1RJT05fUFJJQ0VcfS9nLHQpfSx0LnJlcGxhY2VDbGlja1Rocm91Z2g9ZnVuY3Rpb24oZSx0KXtpZighZXx8IXR8fCJzdHJpbmciIT10eXBlb2YgdClyZXR1cm47cmV0dXJuIGUucmVwbGFjZSgvXCR7Q0xJQ0tUSFJPVUdIfS9nLHQpfSx0LnRpbWVzdGFtcD1mdW5jdGlvbigpe3JldHVybihuZXcgRGF0ZSkuZ2V0VGltZSgpfSx0LmdldFBlcmZvcm1hbmNlTm93PWZ1bmN0aW9uKCl7cmV0dXJuIHdpbmRvdy5wZXJmb3JtYW5jZSYmd2luZG93LnBlcmZvcm1hbmNlLm5vdyYmd2luZG93LnBlcmZvcm1hbmNlLm5vdygpfHwwfSx0Lmhhc0RldmljZUFjY2Vzcz1mdW5jdGlvbigpe3JldHVybiExIT09ci5iLmdldENvbmZpZygiZGV2aWNlQWNjZXNzIil9LHQuY2hlY2tDb29raWVTdXBwb3J0PU9lLHQuZGVsYXlFeGVjdXRpb249ZnVuY3Rpb24oZSx0KXtpZih0PDEpdGhyb3cgbmV3IEVycm9yKCJudW1SZXF1aXJlZENhbGxzIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIuIEdvdCAiLmNvbmNhdCh0KSk7dmFyIG49MDtyZXR1cm4gZnVuY3Rpb24oKXsrK249PT10JiZlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19LHQuZ3JvdXBCeT1mdW5jdGlvbihlLG4pe3JldHVybiBlLnJlZHVjZShmdW5jdGlvbihlLHQpe3JldHVybihlW3Rbbl1dPWVbdFtuXV18fFtdKS5wdXNoKHQpLGV9LHt9KX0sdC5nZXREZWZpbmVkUGFyYW1zPWZ1bmN0aW9uKG4sZSl7cmV0dXJuIGUuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBuW2VdfSkucmVkdWNlKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGgoZSx5KHt9LHQsblt0XSkpfSx7fSl9LHQuaXNWYWxpZE1lZGlhVHlwZXM9ZnVuY3Rpb24oZSl7dmFyIHQ9WyJiYW5uZXIiLCJuYXRpdmUiLCJ2aWRlbyJdO2lmKCFPYmplY3Qua2V5cyhlKS5ldmVyeShmdW5jdGlvbihlKXtyZXR1cm4gcygpKHQsZSl9KSlyZXR1cm4hMTtpZihlLnZpZGVvJiZlLnZpZGVvLmNvbnRleHQpcmV0dXJuIHMoKShbImluc3RyZWFtIiwib3V0c3RyZWFtIiwiYWRwb2QiXSxlLnZpZGVvLmNvbnRleHQpO3JldHVybiEwfSx0LmdldEJpZGRlclJlcXVlc3Q9ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBjKCkoZSxmdW5jdGlvbihlKXtyZXR1cm4gMDxlLmJpZHMuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBlLmJpZGRlcj09PXQmJmUuYWRVbml0Q29kZT09PW59KS5sZW5ndGh9KXx8e3N0YXJ0Om51bGwsYXVjdGlvbklkOm51bGx9fSx0LmdldFVzZXJDb25maWd1cmVkUGFyYW1zPWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gZS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGUuY29kZT09PXR9KS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGUuYmlkc30pLnJlZHVjZShnZSxbXSkuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBlLmJpZGRlcj09PW59KS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGUucGFyYW1zfHx7fX0pfSx0LmdldE9yaWdpbj1mdW5jdGlvbigpe3JldHVybiB3aW5kb3cubG9jYXRpb24ub3JpZ2luP3dpbmRvdy5sb2NhdGlvbi5vcmlnaW46d2luZG93LmxvY2F0aW9uLnByb3RvY29sKyIvLyIrd2luZG93LmxvY2F0aW9uLmhvc3RuYW1lKyh3aW5kb3cubG9jYXRpb24ucG9ydD8iOiIrd2luZG93LmxvY2F0aW9uLnBvcnQ6IiIpfSx0LmdldEROVD1mdW5jdGlvbigpe3JldHVybiIxIj09PW5hdmlnYXRvci5kb05vdFRyYWNrfHwiMSI9PT13aW5kb3cuZG9Ob3RUcmFja3x8IjEiPT09bmF2aWdhdG9yLm1zRG9Ob3RUcmFja3x8InllcyI9PT1uYXZpZ2F0b3IuZG9Ob3RUcmFja30sdC5pc0FkVW5pdENvZGVNYXRjaGluZ1Nsb3Q9ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBUZSh0LGUpfX0sdC5pc1Nsb3RNYXRjaGluZ0FkVW5pdENvZGU9SWUsdC5nZXRHcHRTbG90SW5mb0ZvckFkVW5pdENvZGU9ZnVuY3Rpb24oZSl7dmFyIHQ7eWUoKSYmKHQ9YygpKHdpbmRvdy5nb29nbGV0YWcucHViYWRzKCkuZ2V0U2xvdHMoKSxJZShlKSkpO2lmKHQpcmV0dXJue2dwdFNsb3Q6dC5nZXRBZFVuaXRQYXRoKCksZGl2SWQ6dC5nZXRTbG90RWxlbWVudElkKCl9O3JldHVybnt9fSx0LnVuc3VwcG9ydGVkQmlkZGVyTWVzc2FnZT1mdW5jdGlvbihlLHQpe3ZhciBuPU9iamVjdC5rZXlzKGUubWVkaWFUeXBlc3x8e2Jhbm5lcjoiYmFubmVyIn0pLmpvaW4oIiwgIik7cmV0dXJuIlxuICAgICIuY29uY2F0KGUuY29kZSwiIGlzIGEgIikuY29uY2F0KG4sIiBhZCB1bml0XG4gICAgY29udGFpbmluZyBiaWRkZXJzIHRoYXQgZG9uJ3Qgc3VwcG9ydCAiKS5jb25jYXQobiwiOiAiKS5jb25jYXQodCwiLlxuICAgIFRoaXMgYmlkZGVyIHdvbid0IGZldGNoIGRlbWFuZC5cbiAgIil9LHQuaXNJbnRlZ2VyPUNlLHQuY29udmVydENhbWVsVG9VbmRlcnNjb3JlPWZ1bmN0aW9uKGUpe3JldHVybiBlLnJlcGxhY2UoLyg/Ol58XC4/KShbQS1aXSkvZyxmdW5jdGlvbihlLHQpe3JldHVybiJfIit0LnRvTG93ZXJDYXNlKCl9KS5yZXBsYWNlKC9eXy8sIiIpfSx0LmNsZWFuT2JqPWZ1bmN0aW9uKG4pe3JldHVybiBPYmplY3Qua2V5cyhuKS5yZWR1Y2UoZnVuY3Rpb24oZSx0KXtyZXR1cm4gdm9pZCAwIT09blt0XSYmKGVbdF09blt0XSksZX0se30pfSx0LnBpY2s9ZnVuY3Rpb24oYSxjKXtyZXR1cm4ib2JqZWN0Ij09PW0oYSk/Yy5yZWR1Y2UoZnVuY3Rpb24oZSx0LG4pe2lmKCJmdW5jdGlvbiI9PXR5cGVvZiB0KXJldHVybiBlO3ZhciByPXQsaT10Lm1hdGNoKC9eKC4rPylcc2FzXHMoLis/KSQvaSk7aSYmKHQ9aVsxXSxyPWlbMl0pO3ZhciBvPWFbdF07cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIGNbbisxXSYmKG89Y1tuKzFdKG8sZSkpLHZvaWQgMCE9PW8mJihlW3JdPW8pLGV9LHt9KTp7fX0sdC50cmFuc2Zvcm1CaWRkZXJQYXJhbUtleXdvcmRzPWZ1bmN0aW9uKGUpe3ZhciByPTE8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXToia2V5d29yZHMiLGk9W107cmV0dXJuIGFlKGUsZnVuY3Rpb24oZSx0KXtpZihuZShlKSl7dmFyIG49W107YWUoZSxmdW5jdGlvbihlKXshKGU9bGUocisiLiIrdCxlKSkmJiIiIT09ZXx8bi5wdXNoKGUpfSksZT1ufWVsc2V7aWYoIXRlKGU9bGUocisiLiIrdCxlKSkpcmV0dXJuO2U9W2VdfWkucHVzaCh7a2V5OnQsdmFsdWU6ZX0pfSksaX0sdC5jb252ZXJ0VHlwZXM9ZnVuY3Rpb24ocixpKXtyZXR1cm4gT2JqZWN0LmtleXMocikuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdCxuO2lbZV0mJihlZShyW2VdKT9pW2VdPXJbZV0oaVtlXSk6aVtlXT0odD1yW2VdLG49aVtlXSwic3RyaW5nIj09PXQ/biYmbi50b1N0cmluZygpOiJudW1iZXIiPT09dD9OdW1iZXIobik6biksaXNOYU4oaVtlXSkmJmRlbGV0ZSBpLmtleSl9KSxpfSx0LmlzQXJyYXlPZk51bXM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbmUoZSkmJighdHx8ZS5sZW5ndGg9PT10KSYmZS5ldmVyeShDZSl9LHQuZmlsbD1mdW5jdGlvbihlLHQpe2Zvcih2YXIgbj1bXSxyPTA7cjx0O3IrKyl7dmFyIGk9aWUoZSk/RWUoZSk6ZTtuLnB1c2goaSl9cmV0dXJuIG59LHQuY2h1bms9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49W10scj0wO3I8TWF0aC5jZWlsKGUubGVuZ3RoL3QpO3IrKyl7dmFyIGk9cip0LG89aSt0O24ucHVzaChlLnNsaWNlKGksbykpfXJldHVybiBufSx0LmdldE1pblZhbHVlRnJvbUFycmF5PWZ1bmN0aW9uKGUpe3JldHVybiBNYXRoLm1pbi5hcHBseShNYXRoLGcoZSkpfSx0LmdldE1heFZhbHVlRnJvbUFycmF5PWZ1bmN0aW9uKGUpe3JldHVybiBNYXRoLm1heC5hcHBseShNYXRoLGcoZSkpfSx0LmNvbXBhcmVPbj1mdW5jdGlvbihuKXtyZXR1cm4gZnVuY3Rpb24oZSx0KXtyZXR1cm4gZVtuXTx0W25dPzE6ZVtuXT50W25dPy0xOjB9fSx0LnBhcnNlUVM9d2UsdC5mb3JtYXRRUz1qZSx0LnBhcnNlVXJsPWZ1bmN0aW9uKGUsdCl7dmFyIG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYSIpO3QmJiJub0RlY29kZVdob2xlVVJMImluIHQmJnQubm9EZWNvZGVXaG9sZVVSTD9uLmhyZWY9ZTpuLmhyZWY9ZGVjb2RlVVJJQ29tcG9uZW50KGUpO3ZhciByPXQmJiJkZWNvZGVTZWFyY2hBc1N0cmluZyJpbiB0JiZ0LmRlY29kZVNlYXJjaEFzU3RyaW5nO3JldHVybntocmVmOm4uaHJlZixwcm90b2NvbDoobi5wcm90b2NvbHx8IiIpLnJlcGxhY2UoLzokLywiIiksaG9zdG5hbWU6bi5ob3N0bmFtZSxwb3J0OituLnBvcnQscGF0aG5hbWU6bi5wYXRobmFtZS5yZXBsYWNlKC9eKD8hXC8pLywiLyIpLHNlYXJjaDpyP24uc2VhcmNoOkQucGFyc2VRUyhuLnNlYXJjaHx8IiIpLGhhc2g6KG4uaGFzaHx8IiIpLnJlcGxhY2UoL14jLywiIiksaG9zdDpuLmhvc3R8fHdpbmRvdy5sb2NhdGlvbi5ob3N0fX0sdC5idWlsZFVybD1mdW5jdGlvbihlKXtyZXR1cm4oZS5wcm90b2NvbHx8Imh0dHAiKSsiOi8vIisoZS5ob3N0fHxlLmhvc3RuYW1lKyhlLnBvcnQ/IjoiLmNvbmNhdChlLnBvcnQpOiIiKSkrKGUucGF0aG5hbWV8fCIiKSsoZS5zZWFyY2g/Ij8iLmNvbmNhdChELmZvcm1hdFFTKGUuc2VhcmNofHwiIikpOiIiKSsoZS5oYXNoPyIjIi5jb25jYXQoZS5oYXNoKToiIil9LHQuZGVlcEVxdWFsPV9lLHQubWVyZ2VEZWVwPUJlLHQuY3lyYjUzSGFzaD1mdW5jdGlvbihlKXtmb3IodmFyIHQsbj0xPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06MCxyPWZ1bmN0aW9uKGUsdCl7aWYoZWUoTWF0aC5pbXVsKSlyZXR1cm4gTWF0aC5pbXVsKGUsdCk7dmFyIG49KDQxOTQzMDMmZSkqKHR8PTApO3JldHVybiA0MjkwNzcyOTkyJmUmJihuKz0oNDI5MDc3Mjk5MiZlKSp0fDApLDB8bn0saT0zNzM1OTI4NTU5Xm4sbz0xMTAzNTQ3OTkxXm4sYT0wO2E8ZS5sZW5ndGg7YSsrKXQ9ZS5jaGFyQ29kZUF0KGEpLGk9cihpXnQsMjY1NDQzNTc2MSksbz1yKG9edCwxNTk3MzM0Njc3KTtyZXR1cm4gaT1yKGleaT4+PjE2LDIyNDY4MjI1MDcpXnIob15vPj4+MTMsMzI2NjQ4OTkwOSksKDQyOTQ5NjcyOTYqKDIwOTcxNTEmKG89cihvXm8+Pj4xNiwyMjQ2ODIyNTA3KV5yKGleaT4+PjEzLDMyNjY0ODk5MDkpKSkrKGk+Pj4wKSkudG9TdHJpbmcoKX07dmFyIHI9bigzKSxpPW4oMTYwKSxvPW4ubihpKSxhPW4oMTApLGM9bi5uKGEpLHU9bigxMikscz1uLm4odSksZD1uKDQzKSxmPW4oMTYxKTtuLmQodCwiZGVlcEFjY2VzcyIsZnVuY3Rpb24oKXtyZXR1cm4gZi5hfSk7dmFyIGw9bigxNjIpO2Z1bmN0aW9uIHAoZSx0KXtyZXR1cm4gZnVuY3Rpb24oZSl7aWYoQXJyYXkuaXNBcnJheShlKSlyZXR1cm4gZX0oZSl8fGZ1bmN0aW9uKGUsdCl7aWYoInVuZGVmaW5lZCI9PXR5cGVvZiBTeW1ib2x8fCEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChlKSkpcmV0dXJuO3ZhciBuPVtdLHI9ITAsaT0hMSxvPXZvaWQgMDt0cnl7Zm9yKHZhciBhLGM9ZVtTeW1ib2wuaXRlcmF0b3JdKCk7IShyPShhPWMubmV4dCgpKS5kb25lKSYmKG4ucHVzaChhLnZhbHVlKSwhdHx8bi5sZW5ndGghPT10KTtyPSEwKTt9Y2F0Y2goZSl7aT0hMCxvPWV9ZmluYWxseXt0cnl7cnx8bnVsbD09Yy5yZXR1cm58fGMucmV0dXJuKCl9ZmluYWxseXtpZihpKXRocm93IG99fXJldHVybiBufShlLHQpfHxiKGUsdCl8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC4iKX0oKX1mdW5jdGlvbiBnKGUpe3JldHVybiBmdW5jdGlvbihlKXtpZihBcnJheS5pc0FycmF5KGUpKXJldHVybiB2KGUpfShlKXx8ZnVuY3Rpb24oZSl7aWYoInVuZGVmaW5lZCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoZSkpcmV0dXJuIEFycmF5LmZyb20oZSl9KGUpfHxiKGUpfHxmdW5jdGlvbigpe3Rocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLiIpfSgpfWZ1bmN0aW9uIGIoZSx0KXtpZihlKXtpZigic3RyaW5nIj09dHlwZW9mIGUpcmV0dXJuIHYoZSx0KTt2YXIgbj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkuc2xpY2UoOCwtMSk7cmV0dXJuIk9iamVjdCI9PT1uJiZlLmNvbnN0cnVjdG9yJiYobj1lLmNvbnN0cnVjdG9yLm5hbWUpLCJNYXAiPT09bnx8IlNldCI9PT1uP0FycmF5LmZyb20oZSk6IkFyZ3VtZW50cyI9PT1ufHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKT92KGUsdCk6dm9pZCAwfX1mdW5jdGlvbiB2KGUsdCl7KG51bGw9PXR8fHQ+ZS5sZW5ndGgpJiYodD1lLmxlbmd0aCk7Zm9yKHZhciBuPTAscj1uZXcgQXJyYXkodCk7bjx0O24rKylyW25dPWVbbl07cmV0dXJuIHJ9ZnVuY3Rpb24geShlLHQsbil7cmV0dXJuIHQgaW4gZT9PYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHt2YWx1ZTpuLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwfSk6ZVt0XT1uLGV9ZnVuY3Rpb24gaCgpe3JldHVybihoPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9KS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZnVuY3Rpb24gbShlKXtyZXR1cm4obT0iZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiYic3ltYm9sIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiYiZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT8ic3ltYm9sIjp0eXBlb2YgZX0pKGUpfW4uZCh0LCJkZWVwU2V0VmFsdWUiLGZ1bmN0aW9uKCl7cmV0dXJuIGwuYX0pO3ZhciBTLEE9big1KSxFPSJBcnJheSIsTz0iU3RyaW5nIixUPSJGdW5jdGlvbiIsST0iTnVtYmVyIixDPSJPYmplY3QiLHc9IkJvb2xlYW4iLGo9W10sXz1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLEI9Qm9vbGVhbih3aW5kb3cuY29uc29sZSksVT1Cb29sZWFuKEImJndpbmRvdy5jb25zb2xlLmxvZykseD1Cb29sZWFuKEImJndpbmRvdy5jb25zb2xlLmluZm8pLFI9Qm9vbGVhbihCJiZ3aW5kb3cuY29uc29sZS53YXJuKSxrPUJvb2xlYW4oQiYmd2luZG93LmNvbnNvbGUuZXJyb3IpLE49big4KSxEPXtjaGVja0Nvb2tpZVN1cHBvcnQ6T2UsY3JlYXRlVHJhY2tQaXhlbElmcmFtZUh0bWw6ZmUsZ2V0V2luZG93U2VsZjpWLGdldFdpbmRvd1RvcDp6LGdldFdpbmRvd0xvY2F0aW9uOkgsaW5zZXJ0VXNlclN5bmNJZnJhbWU6ZGUsaW5zZXJ0RWxlbWVudDp1ZSxpc0ZuOmVlLHRyaWdnZXJQaXhlbDpzZSxsb2dFcnJvcjpRLGxvZ1dhcm46WSxsb2dNZXNzYWdlOkssbG9nSW5mbzpKLHBhcnNlUVM6d2UsZm9ybWF0UVM6amUsZGVlcEVxdWFsOl9lfSxQPXt9LE09ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdH0uYmluZChudWxsLDEsUCkoKT09PVA/RnVuY3Rpb24ucHJvdG90eXBlLmJpbmQ6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxuPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKTtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdC5hcHBseShlLG4uY29uY2F0KEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cykpKX19LHE9KFM9MCxmdW5jdGlvbigpe3JldHVybisrU30pO2Z1bmN0aW9uIEcoKXtyZXR1cm4gcSgpK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMTYpLnN1YnN0cigyKX1mdW5jdGlvbiBXKCl7cmV0dXJuIHdpbmRvdyYmd2luZG93LmNyeXB0byYmd2luZG93LmNyeXB0by5nZXRSYW5kb21WYWx1ZXM/Y3J5cHRvLmdldFJhbmRvbVZhbHVlcyhuZXcgVWludDhBcnJheSgxKSlbMF0lMTY6MTYqTWF0aC5yYW5kb20oKX1mdW5jdGlvbiBMKGUpe2lmKEYoZSkpcmV0dXJuIGVbMF0rIngiK2VbMV19ZnVuY3Rpb24gRihlKXtyZXR1cm4gbmUoZSkmJjI9PT1lLmxlbmd0aCYmIWlzTmFOKGVbMF0pJiYhaXNOYU4oZVsxXSl9ZnVuY3Rpb24geigpe3JldHVybiB3aW5kb3cudG9wfWZ1bmN0aW9uIFYoKXtyZXR1cm4gd2luZG93LnNlbGZ9ZnVuY3Rpb24gSCgpe3JldHVybiB3aW5kb3cubG9jYXRpb259ZnVuY3Rpb24gSygpe1goKSYmVSYmY29uc29sZS5sb2cuYXBwbHkoY29uc29sZSwkKGFyZ3VtZW50cywiTUVTU0FHRToiKSl9ZnVuY3Rpb24gSigpe1goKSYmeCYmY29uc29sZS5pbmZvLmFwcGx5KGNvbnNvbGUsJChhcmd1bWVudHMsIklORk86IikpfWZ1bmN0aW9uIFkoKXtYKCkmJlImJmNvbnNvbGUud2Fybi5hcHBseShjb25zb2xlLCQoYXJndW1lbnRzLCJXQVJOSU5HOiIpKX1mdW5jdGlvbiBRKCl7WCgpJiZrJiZjb25zb2xlLmVycm9yLmFwcGx5KGNvbnNvbGUsJChhcmd1bWVudHMsIkVSUk9SOiIpKSxOLmVtaXQoQS5FVkVOVFMuQVVDVElPTl9ERUJVRyx7dHlwZToiRVJST1IiLGFyZ3VtZW50czphcmd1bWVudHN9KX1mdW5jdGlvbiAkKGUsdCl7cmV0dXJuIGU9W10uc2xpY2UuY2FsbChlKSx0JiZlLnVuc2hpZnQodCksZS51bnNoaWZ0KCJkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IGNvbG9yOiAjZmZmOyBiYWNrZ3JvdW5kOiAjM2I4OGMzOyBwYWRkaW5nOiAxcHggNHB4OyBib3JkZXItcmFkaXVzOiAzcHg7IiksZS51bnNoaWZ0KCIlY1ByZWJpZCIpLGV9ZnVuY3Rpb24gWCgpe3JldHVybiEhci5iLmdldENvbmZpZygiZGVidWciKX1mdW5jdGlvbiBaKGUsdCl7cmV0dXJuIF8uY2FsbChlKT09PSJbb2JqZWN0ICIrdCsiXSJ9ZnVuY3Rpb24gZWUoZSl7cmV0dXJuIFooZSxUKX1mdW5jdGlvbiB0ZShlKXtyZXR1cm4gWihlLE8pfWZ1bmN0aW9uIG5lKGUpe3JldHVybiBaKGUsRSl9ZnVuY3Rpb24gcmUoZSl7cmV0dXJuIFooZSxJKX1mdW5jdGlvbiBpZShlKXtyZXR1cm4gWihlLEMpfWZ1bmN0aW9uIG9lKGUpe2lmKCFlKXJldHVybiEwO2lmKG5lKGUpfHx0ZShlKSlyZXR1cm4hKDA8ZS5sZW5ndGgpO2Zvcih2YXIgdCBpbiBlKWlmKGhhc093blByb3BlcnR5LmNhbGwoZSx0KSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBhZShlLHQpe2lmKCFvZShlKSl7aWYoZWUoZS5mb3JFYWNoKSlyZXR1cm4gZS5mb3JFYWNoKHQsdGhpcyk7dmFyIG49MCxyPWUubGVuZ3RoO2lmKDA8cilmb3IoO248cjtuKyspdChlW25dLG4sZSk7ZWxzZSBmb3IobiBpbiBlKWhhc093blByb3BlcnR5LmNhbGwoZSxuKSYmdC5jYWxsKHRoaXMsZVtuXSxuKX19ZnVuY3Rpb24gY2UoZSx0KXtyZXR1cm4gZS5oYXNPd25Qcm9wZXJ0eT9lLmhhc093blByb3BlcnR5KHQpOnZvaWQgMCE9PWVbdF0mJmUuY29uc3RydWN0b3IucHJvdG90eXBlW3RdIT09ZVt0XX1mdW5jdGlvbiB1ZShlLHQsbixyKXt2YXIgaTt0PXR8fGRvY3VtZW50LGk9bj90LmdldEVsZW1lbnRzQnlUYWdOYW1lKG4pOnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImhlYWQiKTt0cnl7aWYoKGk9aS5sZW5ndGg/aTp0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJib2R5IikpLmxlbmd0aCl7ZS5zcmM9ZC5jKGUuc3JjKSxpPWlbMF07dmFyIG89cj9udWxsOmkuZmlyc3RDaGlsZDtyZXR1cm4gaS5pbnNlcnRCZWZvcmUoZSxvKX19Y2F0Y2goZSl7fX1mdW5jdGlvbiBzZSh0LHIpe3ZhciBlLG4saSxvPWQuYSgpO3Q9ZC5jKHQpO3RyeXtvP28uY29udGVudFdpbmRvdy5kb2N1bWVudCYmKGU9bmV3IG8uY29udGVudFdpbmRvdy5JbWFnZSk6ZT1uZXcgSW1hZ2UsZSYmKHImJkQuaXNGbihyKSYmKGUuYWRkRXZlbnRMaXN0ZW5lcigibG9hZCIsciksZS5hZGRFdmVudExpc3RlbmVyKCJlcnJvciIscikpLGUuc3JjPXQpfWNhdGNoKGUpezA8PW8uc3JjLmluZGV4T2YoIm1yYi51cGFwaS5uZXQvc2FmZUZyYW1lLmh0bWwiKSYmKG49ZnVuY3Rpb24gZSh0KXt2YXIgbjt0cnl7bj1KU09OLnBhcnNlKHQuZGF0YSl9Y2F0Y2goZSl7fW4mJiJkb25lVHJpZ2dlcmluZ1BpeGVsIj09bi50eXBlJiYod2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLGUpLHImJkQuaXNGbihyKSYmcigpKX0sd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLG4pLGk9ImxldCBpbWcgPSBuZXcgSW1hZ2UoKTsgZnVuY3Rpb24gZG9uZSgpIHsgdG9wLnBvc3RNZXNzYWdlKHsgdHlwZTogXCJkb25lVHJpZ2dlcmluZ1BpeGVsXCIgfSwgXCIqXCIpIH07IGltZy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgZG9uZSk7IGltZy5hZGRFdmVudExpc3RlbmVyKCdlcnJvcicsIGRvbmUpOyBpbWcuc3JjID0gJyIrdCsiJzsiLG8uY29udGVudFdpbmRvdy5wb3N0TWVzc2FnZSh7dHlwZToiZXZhbCIsY29kZTppfSwiKiIpKX19ZnVuY3Rpb24gZGUoZSx0KXt0cnl7aWYoLTE8ai5pbmRleE9mKGUpKXJldHVybn1jYXRjaChlKXt9ai5wdXNoKGUpO3ZhciBuPUQuY3JlYXRlVHJhY2tQaXhlbElmcmFtZUh0bWwoZSwhMSwiYWxsb3ctc2NyaXB0cyBhbGxvdy1zYW1lLW9yaWdpbiIpLHI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IiksaT1kLmEoKTtyLmlubmVySFRNTD1uO3ZhciBvLGE9ci5maXJzdENoaWxkO3QmJkQuaXNGbih0KSYmKGEuYWRkRXZlbnRMaXN0ZW5lcigibG9hZCIsdCksYS5hZGRFdmVudExpc3RlbmVyKCJlcnJvciIsdCkpLGkmJmkuY29udGVudFdpbmRvdy5kb2N1bWVudD8obz1pLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IiksaS5jb250ZW50V2luZG93LmRvY3VtZW50LmJvZHk/KGkuY29udGVudFdpbmRvdy5kb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG8pLG8uYXBwZW5kQ2hpbGQoYSkpOmkuYWRkRXZlbnRMaXN0ZW5lcigibG9hZCIsZnVuY3Rpb24oKXtpLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChvKSxvLmFwcGVuZENoaWxkKGEpfSkpOihhLnNyYz1kLmMoYS5zcmMpLEQuaW5zZXJ0RWxlbWVudChhLGRvY3VtZW50LCJodG1sIiwhMCkpfWZ1bmN0aW9uIGZlKGUpe3ZhciB0PTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXToiIjtyZXR1cm4gZT8oKCEoMTxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0pfHxhcmd1bWVudHNbMV0pJiYoZT1lbmNvZGVVUkkoZSkpLHQ9dCYmJ3NhbmRib3g9IicuY29uY2F0KHQsJyInKSwiPGlmcmFtZSAiLmNvbmNhdCh0LCcgaWQ9IicpLmNvbmNhdChHKCksJyJcbiAgICAgIGZyYW1lYm9yZGVyPSIwIlxuICAgICAgYWxsb3d0cmFuc3BhcmVuY3k9InRydWUiXG4gICAgICBtYXJnaW5oZWlnaHQ9IjAiIG1hcmdpbndpZHRoPSIwIlxuICAgICAgd2lkdGg9IjAiIGhzcGFjZT0iMCIgdnNwYWNlPSIwIiBoZWlnaHQ9IjAiXG4gICAgICBzdHlsZT0iaGVpZ2h0OjBweDt3aWR0aDowcHg7ZGlzcGxheTpub25lOyJcbiAgICAgIHNjcm9sbGluZz0ibm8iXG4gICAgICBzcmM9IicpLmNvbmNhdChlLCciPlxuICAgIDwvaWZyYW1lPicpKToiIn1mdW5jdGlvbiBsZShlLHQsbil7cmV0dXJuIG51bGw9PXQ/bjp0ZSh0KT90OnJlKHQpP3QudG9TdHJpbmcoKTp2b2lkIEQubG9nV2FybigiVW5zdXBvcnRlZCB0eXBlIGZvciBwYXJhbTogIitlKyIgcmVxdWlyZWQgdHlwZTogU3RyaW5nIil9ZnVuY3Rpb24gcGUoZSx0LG4pe3JldHVybiBuLmluZGV4T2YoZSk9PT10fWZ1bmN0aW9uIGdlKGUsdCl7cmV0dXJuIGUuY29uY2F0KHQpfWZ1bmN0aW9uIGJlKGUpe3JldHVybiBPYmplY3Qua2V5cyhlKX1mdW5jdGlvbiB2ZShlLHQpe3JldHVybiBlW3RdfWZ1bmN0aW9uIHllKCl7aWYod2luZG93Lmdvb2dsZXRhZyYmZWUod2luZG93Lmdvb2dsZXRhZy5wdWJhZHMpJiZlZSh3aW5kb3cuZ29vZ2xldGFnLnB1YmFkcygpLmdldFNsb3RzKSlyZXR1cm4hMH12YXIgaGU9QWUoInRpbWVUb1Jlc3BvbmQiLGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQ8ZX0pLG1lPUFlKCJyZXNwb25zZVRpbWVzdGFtcCIsZnVuY3Rpb24oZSx0KXtyZXR1cm4gdDxlfSksU2U9QWUoInJlc3BvbnNlVGltZXN0YW1wIixmdW5jdGlvbihlLHQpe3JldHVybiBlPHR9KTtmdW5jdGlvbiBBZShuLHIpe3JldHVybiBmdW5jdGlvbihlLHQpe3JldHVybiBlLmNwbT09PXQuY3BtP3IoZVtuXSx0W25dKT90OmU6ZS5jcG08dC5jcG0/dDplfX1mdW5jdGlvbiBFZShlKXtyZXR1cm4gbygpKGUpfWZ1bmN0aW9uIE9lKCl7aWYod2luZG93Lm5hdmlnYXRvci5jb29raWVFbmFibGVkfHxkb2N1bWVudC5jb29raWUubGVuZ3RoKXJldHVybiEwfXZhciBUZT1mdW5jdGlvbihlLHQpe3JldHVybiBlLmdldEFkVW5pdFBhdGgoKT09PXR8fGUuZ2V0U2xvdEVsZW1lbnRJZCgpPT09dH07ZnVuY3Rpb24gSWUodCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBUZShlLHQpfX1mdW5jdGlvbiBDZShlKXtyZXR1cm4gTnVtYmVyLmlzSW50ZWdlcj9OdW1iZXIuaXNJbnRlZ2VyKGUpOiJudW1iZXIiPT10eXBlb2YgZSYmaXNGaW5pdGUoZSkmJk1hdGguZmxvb3IoZSk9PT1lfWZ1bmN0aW9uIHdlKGUpe3JldHVybiBlP2UucmVwbGFjZSgvXlw/LywiIikuc3BsaXQoIiYiKS5yZWR1Y2UoZnVuY3Rpb24oZSx0KXt2YXIgbj1wKHQuc3BsaXQoIj0iKSwyKSxyPW5bMF0saT1uWzFdO3JldHVybi9cW1xdJC8udGVzdChyKT8oZVtyPXIucmVwbGFjZSgiW10iLCIiKV09ZVtyXXx8W10sZVtyXS5wdXNoKGkpKTplW3JdPWl8fCIiLGV9LHt9KTp7fX1mdW5jdGlvbiBqZShlKXtyZXR1cm4gT2JqZWN0LmtleXMoZSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBBcnJheS5pc0FycmF5KGVbdF0pP2VbdF0ubWFwKGZ1bmN0aW9uKGUpe3JldHVybiIiLmNvbmNhdCh0LCJbXT0iKS5jb25jYXQoZSl9KS5qb2luKCImIik6IiIuY29uY2F0KHQsIj0iKS5jb25jYXQoZVt0XSl9KS5qb2luKCImIil9ZnVuY3Rpb24gX2UoZSx0KXtpZihlPT09dClyZXR1cm4hMDtpZigib2JqZWN0IiE9PW0oZSl8fG51bGw9PT1lfHwib2JqZWN0IiE9PW0odCl8fG51bGw9PT10KXJldHVybiExO2lmKE9iamVjdC5rZXlzKGUpLmxlbmd0aCE9PU9iamVjdC5rZXlzKHQpLmxlbmd0aClyZXR1cm4hMTtmb3IodmFyIG4gaW4gZSl7aWYoIXQuaGFzT3duUHJvcGVydHkobikpcmV0dXJuITE7aWYoIV9lKGVbbl0sdFtuXSkpcmV0dXJuITF9cmV0dXJuITB9ZnVuY3Rpb24gQmUoZSl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsbj1uZXcgQXJyYXkoMTx0P3QtMTowKSxyPTE7cjx0O3IrKyluW3ItMV09YXJndW1lbnRzW3JdO2lmKCFuLmxlbmd0aClyZXR1cm4gZTt2YXIgaT1uLnNoaWZ0KCk7aWYoaWUoZSkmJmllKGkpKWZvcih2YXIgbyBpbiBpKWllKGlbb10pPyhlW29dfHxoKGUseSh7fSxvLHt9KSksQmUoZVtvXSxpW29dKSk6bmUoaVtvXSkmJmVbb10/bmUoZVtvXSkmJihlW29dPWVbb10uY29uY2F0KGlbb10pKTpoKGUseSh7fSxvLGlbb10pKTtyZXR1cm4gQmUuYXBwbHkodm9pZCAwLFtlXS5jb25jYXQobikpfX0sMTpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxuLmQodCwic3RvcmFnZSIsZnVuY3Rpb24oKXtyZXR1cm4gSX0pLHQucmVnaXN0ZXJCaWRkZXI9ZnVuY3Rpb24ocil7dmFyIG49QXJyYXkuaXNBcnJheShyLnN1cHBvcnRlZE1lZGlhVHlwZXMpP3tzdXBwb3J0ZWRNZWRpYVR5cGVzOnIuc3VwcG9ydGVkTWVkaWFUeXBlc306dm9pZCAwO2Z1bmN0aW9uIGkoZSl7dmFyIHQ9aihlKTtjLmRlZmF1bHQucmVnaXN0ZXJCaWRBZGFwdGVyKHQsZS5jb2RlLG4pfWkociksQXJyYXkuaXNBcnJheShyLmFsaWFzZXMpJiZyLmFsaWFzZXMuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdCxuPWU7T2JqZWN0KG0uaXNQbGFpbk9iamVjdCkoZSkmJihuPWUuY29kZSx0PWUuZ3ZsaWQpLGMuZGVmYXVsdC5hbGlhc1JlZ2lzdHJ5W25dPXIuY29kZSxpKFQoe30scix7Y29kZTpuLGd2bGlkOnR9KSl9KX0sdC5uZXdCaWRkZXI9aixuLmQodCwicmVnaXN0ZXJTeW5jSW5uZXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF99KSx0LnByZWxvYWRCaWRkZXJNYXBwaW5nRmlsZT1CLHQuZ2V0SWFiU3ViQ2F0ZWdvcnk9ZnVuY3Rpb24odCxlKXt2YXIgbj1jLmRlZmF1bHQuZ2V0QmlkQWRhcHRlcih0KTtpZihuLmdldFNwZWMoKS5nZXRNYXBwaW5nRmlsZUluZm8pe3ZhciByPW4uZ2V0U3BlYygpLmdldE1hcHBpbmdGaWxlSW5mbygpLGk9ci5sb2NhbFN0b3JhZ2VLZXk/ci5sb2NhbFN0b3JhZ2VLZXk6bi5nZXRCaWRkZXJDb2RlKCksbz1JLmdldERhdGFGcm9tTG9jYWxTdG9yYWdlKGkpO2lmKG8pe3RyeXtvPUpTT04ucGFyc2Uobyl9Y2F0Y2goZSl7T2JqZWN0KG0ubG9nRXJyb3IpKCJGYWlsZWQgdG8gcGFyc2UgIi5jb25jYXQodCwiIG1hcHBpbmcgZGF0YSBzdG9yZWQgaW4gbG9jYWwgc3RvcmFnZSIpKX1yZXR1cm4gby5tYXBwaW5nW2VdP28ubWFwcGluZ1tlXTpudWxsfX19LHQuaXNWYWxpZD1VO3ZhciByPW4oOTIpLGM9big5KSx1PW4oMyksdj1uKDM0KSxzPW4oNDQpLG89bigzNyksYT1uKDI5KSxpPW4oNSkseT1uLm4oaSksZD1uKDgpLGg9bi5uKGQpLGY9bigxMiksbD1uLm4oZikscD1uKDQpLG09bigwKSxnPW4oMiksYj1uKDEzKSxTPW4oNyk7ZnVuY3Rpb24gQShlLHQpe3JldHVybiBmdW5jdGlvbihlKXtpZihBcnJheS5pc0FycmF5KGUpKXJldHVybiBlfShlKXx8ZnVuY3Rpb24oZSx0KXtpZigidW5kZWZpbmVkIj09dHlwZW9mIFN5bWJvbHx8IShTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGUpKSlyZXR1cm47dmFyIG49W10scj0hMCxpPSExLG89dm9pZCAwO3RyeXtmb3IodmFyIGEsYz1lW1N5bWJvbC5pdGVyYXRvcl0oKTshKHI9KGE9Yy5uZXh0KCkpLmRvbmUpJiYobi5wdXNoKGEudmFsdWUpLCF0fHxuLmxlbmd0aCE9PXQpO3I9ITApO31jYXRjaChlKXtpPSEwLG89ZX1maW5hbGx5e3RyeXtyfHxudWxsPT1jLnJldHVybnx8Yy5yZXR1cm4oKX1maW5hbGx5e2lmKGkpdGhyb3cgb319cmV0dXJuIG59KGUsdCl8fGZ1bmN0aW9uKGUsdCl7aWYoIWUpcmV0dXJuO2lmKCJzdHJpbmciPT10eXBlb2YgZSlyZXR1cm4gRShlLHQpO3ZhciBuPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKS5zbGljZSg4LC0xKTsiT2JqZWN0Ij09PW4mJmUuY29uc3RydWN0b3ImJihuPWUuY29uc3RydWN0b3IubmFtZSk7aWYoIk1hcCI9PT1ufHwiU2V0Ij09PW4pcmV0dXJuIEFycmF5LmZyb20oZSk7aWYoIkFyZ3VtZW50cyI9PT1ufHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSlyZXR1cm4gRShlLHQpfShlLHQpfHxmdW5jdGlvbigpe3Rocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuIil9KCl9ZnVuY3Rpb24gRShlLHQpeyhudWxsPT10fHx0PmUubGVuZ3RoKSYmKHQ9ZS5sZW5ndGgpO2Zvcih2YXIgbj0wLHI9bmV3IEFycmF5KHQpO248dDtuKyspcltuXT1lW25dO3JldHVybiByfWZ1bmN0aW9uIE8oZSl7cmV0dXJuKE89ImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmInN5bWJvbCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/InN5bWJvbCI6dHlwZW9mIGV9KShlKX1mdW5jdGlvbiBUKCl7cmV0dXJuKFQ9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0pLmFwcGx5KHRoaXMsYXJndW1lbnRzKX12YXIgST1PYmplY3QoUy5hKSgiYmlkZGVyRmFjdG9yeSIpLEM9WyJyZXF1ZXN0SWQiLCJjcG0iLCJ0dGwiLCJjcmVhdGl2ZUlkIiwibmV0UmV2ZW51ZSIsImN1cnJlbmN5Il0sdz0xO2Z1bmN0aW9uIGoocCl7cmV0dXJuIFQobmV3IHIuYShwLmNvZGUpLHtnZXRTcGVjOmZ1bmN0aW9uKCl7cmV0dXJuIE9iamVjdC5mcmVlemUocCl9LHJlZ2lzdGVyU3luY3M6ZyxjYWxsQmlkczpmdW5jdGlvbihvLGEsZSxuLGMscil7dmFyIHUscyx0LGQsaSxmO2Z1bmN0aW9uIGwoKXtlKCksaC5hLmVtaXQoeS5hLkVWRU5UUy5CSURERVJfRE9ORSxvKSxnKHMsby5nZHByQ29uc2VudCxvLnVzcENvbnNlbnQpfUFycmF5LmlzQXJyYXkoby5iaWRzKSYmKHU9e30scz1bXSwwIT09KHQ9by5iaWRzLmZpbHRlcihiKSkubGVuZ3RoPyhkPXt9LHQuZm9yRWFjaChmdW5jdGlvbihlKXsoZFtlLmJpZElkXT1lKS5hZFVuaXRDb2RlfHwoZS5hZFVuaXRDb2RlPWUucGxhY2VtZW50Q29kZSl9KSwoaT1wLmJ1aWxkUmVxdWVzdHModCxvKSkmJjAhPT1pLmxlbmd0aD8oQXJyYXkuaXNBcnJheShpKXx8KGk9W2ldKSxmPU9iamVjdChtLmRlbGF5RXhlY3V0aW9uKShyKGwpLGkubGVuZ3RoKSxpLmZvckVhY2goZnVuY3Rpb24oaSl7c3dpdGNoKGkubWV0aG9kKXtjYXNlIkdFVCI6bigiIi5jb25jYXQoaS51cmwpLmNvbmNhdChmdW5jdGlvbihlKXtpZihlKXJldHVybiI/Ii5jb25jYXQoIm9iamVjdCI9PT1PKGUpP09iamVjdChtLnBhcnNlUXVlcnlTdHJpbmdQYXJhbWV0ZXJzKShlKTplKTtyZXR1cm4iIn0oaS5kYXRhKSkse3N1Y2Nlc3M6cihlKSxlcnJvcjp0fSx2b2lkIDAsVCh7bWV0aG9kOiJHRVQiLHdpdGhDcmVkZW50aWFsczohMH0saS5vcHRpb25zKSk7YnJlYWs7Y2FzZSJQT1NUIjpuKGkudXJsLHtzdWNjZXNzOnIoZSksZXJyb3I6dH0sInN0cmluZyI9PXR5cGVvZiBpLmRhdGE/aS5kYXRhOkpTT04uc3RyaW5naWZ5KGkuZGF0YSksVCh7bWV0aG9kOiJQT1NUIixjb250ZW50VHlwZToidGV4dC9wbGFpbiIsd2l0aENyZWRlbnRpYWxzOiEwfSxpLm9wdGlvbnMpKTticmVhaztkZWZhdWx0Ok9iamVjdChtLmxvZ1dhcm4pKCJTa2lwcGluZyBpbnZhbGlkIHJlcXVlc3QgZnJvbSAiLmNvbmNhdChwLmNvZGUsIi4gUmVxdWVzdCB0eXBlICIpLmNvbmNhdChpLnR5cGUsIiBtdXN0IGJlIEdFVCBvciBQT1NUIikpLGYoKX1mdW5jdGlvbiBlKGUsdCl7YyhwLmNvZGUpO3RyeXtlPUpTT04ucGFyc2UoZSl9Y2F0Y2goZSl7fXZhciBuO2U9e2JvZHk6ZSxoZWFkZXJzOntnZXQ6dC5nZXRSZXNwb25zZUhlYWRlci5iaW5kKHQpfX0scy5wdXNoKGUpO3RyeXtuPXAuaW50ZXJwcmV0UmVzcG9uc2UoZSxpKX1jYXRjaChlKXtyZXR1cm4gT2JqZWN0KG0ubG9nRXJyb3IpKCJCaWRkZXIgIi5jb25jYXQocC5jb2RlLCIgZmFpbGVkIHRvIGludGVycHJldCB0aGUgc2VydmVyJ3MgcmVzcG9uc2UuIENvbnRpbnVpbmcgd2l0aG91dCBiaWRzIiksbnVsbCxlKSx2b2lkIGYoKX1mdW5jdGlvbiByKGUpe3ZhciB0LG4scixpPWRbZS5yZXF1ZXN0SWRdO2k/KGUub3JpZ2luYWxDcG09ZS5jcG0sZS5vcmlnaW5hbEN1cnJlbmN5PWUuY3VycmVuY3ksZS5tZXRhPWUubWV0YXx8VCh7fSxlW2kuYmlkZGVyXSksdD1UKE9iamVjdCh2LmEpKHkuYS5TVEFUVVMuR09PRCxpKSxlKSxuPWkuYWRVbml0Q29kZSxyPXQsdVtuXT0hMCxVKG4scixbb10pJiZhKG4scikpOk9iamVjdChtLmxvZ1dhcm4pKCJCaWRkZXIgIi5jb25jYXQocC5jb2RlLCIgbWFkZSBiaWQgZm9yIHVua25vd24gcmVxdWVzdCBJRDogIikuY29uY2F0KGUucmVxdWVzdElkLCIuIElnbm9yaW5nLiIpKX1uJiYoT2JqZWN0KG0uaXNBcnJheSkobik/bi5mb3JFYWNoKHIpOnIobikpLGYobil9ZnVuY3Rpb24gdChlKXtjKHAuY29kZSksT2JqZWN0KG0ubG9nRXJyb3IpKCJTZXJ2ZXIgY2FsbCBmb3IgIi5jb25jYXQocC5jb2RlLCIgZmFpbGVkOiAiKS5jb25jYXQoZSwiLiBDb250aW51aW5nIHdpdGhvdXQgYmlkcy4iKSksZigpfX0pKTpsKCkpOmwoKSl9fSk7ZnVuY3Rpb24gZyhlLHQsbil7XyhwLGUsdCxuKX1mdW5jdGlvbiBiKGUpe3JldHVybiEhcC5pc0JpZFJlcXVlc3RWYWxpZChlKXx8KE9iamVjdChtLmxvZ1dhcm4pKCJJbnZhbGlkIGJpZCBzZW50IHRvIGJpZGRlciAiLmNvbmNhdChwLmNvZGUsIjogIikuY29uY2F0KEpTT04uc3RyaW5naWZ5KGUpKSksITEpfX12YXIgXz1PYmplY3QoYi5iKSgiYXN5bmMiLGZ1bmN0aW9uKHQsZSxuLHIpe3ZhciBpLG8sYT11LmIuZ2V0Q29uZmlnKCJ1c2VyU3luYy5hbGlhc1N5bmNFbmFibGVkIik7IXQuZ2V0VXNlclN5bmNzfHwhYSYmYy5kZWZhdWx0LmFsaWFzUmVnaXN0cnlbdC5jb2RlXXx8KGk9dS5iLmdldENvbmZpZygidXNlclN5bmMuZmlsdGVyU2V0dGluZ3MiKSwobz10LmdldFVzZXJTeW5jcyh7aWZyYW1lRW5hYmxlZDohKCFpfHwhaS5pZnJhbWUmJiFpLmFsbCkscGl4ZWxFbmFibGVkOiEoIWl8fCFpLmltYWdlJiYhaS5hbGwpfSxlLG4scikpJiYoQXJyYXkuaXNBcnJheShvKXx8KG89W29dKSxvLmZvckVhY2goZnVuY3Rpb24oZSl7cy5hLnJlZ2lzdGVyU3luYyhlLnR5cGUsdC5jb2RlLGUudXJsKX0pKSl9LCJyZWdpc3RlclN5bmNzIik7ZnVuY3Rpb24gQihlLHQpe2lmKCF1LmIuZ2V0Q29uZmlnKCJhZHBvZC5icmFuZENhdGVnb3J5RXhjbHVzaW9uIikpcmV0dXJuIGUuY2FsbCh0aGlzLHQpO3QuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBPYmplY3QobS5kZWVwQWNjZXNzKShlLCJtZWRpYVR5cGVzLnZpZGVvLmNvbnRleHQiKT09PWcuYX0pLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZS5iaWRzLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZS5iaWRkZXJ9KX0pLnJlZHVjZShtLmZsYXR0ZW4sW10pLmZpbHRlcihtLnVuaXF1ZXMpLmZvckVhY2goZnVuY3Rpb24obil7dmFyIGU9Yy5kZWZhdWx0LmdldEJpZEFkYXB0ZXIobik7aWYoZS5nZXRTcGVjKCkuZ2V0TWFwcGluZ0ZpbGVJbmZvKXt2YXIgdD1lLmdldFNwZWMoKS5nZXRNYXBwaW5nRmlsZUluZm8oKSxyPXQucmVmcmVzaEluRGF5cz90LnJlZnJlc2hJbkRheXM6dyxpPXQubG9jYWxTdG9yYWdlS2V5P3QubG9jYWxTdG9yYWdlS2V5OmUuZ2V0U3BlYygpLmNvZGUsbz1JLmdldERhdGFGcm9tTG9jYWxTdG9yYWdlKGkpO3RyeXsoIShvPW8/SlNPTi5wYXJzZShvKTp2b2lkIDApfHxPYmplY3QobS50aW1lc3RhbXApKCk+by5sYXN0VXBkYXRlZCsyNCpyKjYwKjYwKjFlMykmJk9iamVjdChwLmEpKHQudXJsLHtzdWNjZXNzOmZ1bmN0aW9uKGUpe3RyeXtlPUpTT04ucGFyc2UoZSk7dmFyIHQ9e2xhc3RVcGRhdGVkOk9iamVjdChtLnRpbWVzdGFtcCkoKSxtYXBwaW5nOmUubWFwcGluZ307SS5zZXREYXRhSW5Mb2NhbFN0b3JhZ2UoaSxKU09OLnN0cmluZ2lmeSh0KSl9Y2F0Y2goZSl7T2JqZWN0KG0ubG9nRXJyb3IpKCJGYWlsZWQgdG8gcGFyc2UgIi5jb25jYXQobiwiIGJpZGRlciB0cmFuc2xhdGlvbiBtYXBwaW5nIGZpbGUiKSl9fSxlcnJvcjpmdW5jdGlvbigpe09iamVjdChtLmxvZ0Vycm9yKSgiRmFpbGVkIHRvIGxvYWQgIi5jb25jYXQobiwiIGJpZGRlciB0cmFuc2xhdGlvbiBmaWxlIikpfX0pfWNhdGNoKGUpe09iamVjdChtLmxvZ0Vycm9yKSgiRmFpbGVkIHRvIHBhcnNlICIuY29uY2F0KG4sIiBiaWRkZXIgdHJhbnNsYXRpb24gbWFwcGluZyBmaWxlIikpfX19KSxlLmNhbGwodGhpcyx0KX1mdW5jdGlvbiBVKGUsdCxuKXtmdW5jdGlvbiByKGUpe3JldHVybiJJbnZhbGlkIGJpZCBmcm9tICIuY29uY2F0KHQuYmlkZGVyQ29kZSwiLiBJZ25vcmluZyBiaWQ6ICIpLmNvbmNhdChlKX1yZXR1cm4gZT90PyhpPU9iamVjdC5rZXlzKHQpLEMuZXZlcnkoZnVuY3Rpb24oZSl7cmV0dXJuIGwoKShpLGUpJiYhbCgpKFt2b2lkIDAsbnVsbF0sdFtlXSl9KT8ibmF0aXZlIiE9PXQubWVkaWFUeXBlfHxPYmplY3Qoby5mKSh0LG4pPyJ2aWRlbyIhPT10Lm1lZGlhVHlwZXx8T2JqZWN0KGEuZCkodCxuKT8hKCJiYW5uZXIiPT09dC5tZWRpYVR5cGUmJiFmdW5jdGlvbihlLHQsbil7aWYoKHQud2lkdGh8fDA9PT1wYXJzZUludCh0LndpZHRoLDEwKSkmJih0LmhlaWdodHx8MD09PXBhcnNlSW50KHQuaGVpZ2h0LDEwKSkpcmV0dXJuIHQud2lkdGg9cGFyc2VJbnQodC53aWR0aCwxMCksdC5oZWlnaHQ9cGFyc2VJbnQodC5oZWlnaHQsMTApLDE7dmFyIHI9T2JqZWN0KG0uZ2V0QmlkZGVyUmVxdWVzdCkobix0LmJpZGRlckNvZGUsZSksaT1yJiZyLmJpZHMmJnIuYmlkc1swXSYmci5iaWRzWzBdLnNpemVzLG89T2JqZWN0KG0ucGFyc2VTaXplc0lucHV0KShpKTtpZigxPT09by5sZW5ndGgpe3ZhciBhPUEob1swXS5zcGxpdCgieCIpLDIpLGM9YVswXSx1PWFbMV07cmV0dXJuIHQud2lkdGg9cGFyc2VJbnQoYywxMCksdC5oZWlnaHQ9cGFyc2VJbnQodSwxMCksMX19KGUsdCxuKSl8fChPYmplY3QobS5sb2dFcnJvcikocigiQmFubmVyIGJpZHMgcmVxdWlyZSBhIHdpZHRoIGFuZCBoZWlnaHQiKSksITEpOihPYmplY3QobS5sb2dFcnJvcikocigiVmlkZW8gYmlkIGRvZXMgbm90IGhhdmUgcmVxdWlyZWQgdmFzdFVybCBvciByZW5kZXJlciBwcm9wZXJ0eSIpKSwhMSk6KE9iamVjdChtLmxvZ0Vycm9yKShyKCJOYXRpdmUgYmlkIG1pc3Npbmcgc29tZSByZXF1aXJlZCBwcm9wZXJ0aWVzLiIpKSwhMSk6KE9iamVjdChtLmxvZ0Vycm9yKShyKCJCaWRkZXIgIi5jb25jYXQodC5iaWRkZXJDb2RlLCIgaXMgbWlzc2luZyByZXF1aXJlZCBwYXJhbXMuIENoZWNrIGh0dHA6Ly9wcmViaWQub3JnL2Rldi1kb2NzL2JpZGRlci1hZGFwdGVyLTEuaHRtbCBmb3IgbGlzdCBvZiBwYXJhbXMuIikpKSwhMSkpOihPYmplY3QobS5sb2dXYXJuKSgiU29tZSBhZGFwdGVyIHRyaWVkIHRvIGFkZCBhbiB1bmRlZmluZWQgYmlkIGZvciAiLmNvbmNhdChlLCIuIikpLCExKTooT2JqZWN0KG0ubG9nV2FybikoIk5vIGFkVW5pdENvZGUgd2FzIHN1cHBsaWVkIHRvIGFkZEJpZFJlc3BvbnNlLiIpLCExKTt2YXIgaX1PYmplY3QoYi5hKSgiY2hlY2tBZFVuaXRTZXR1cCIpLmJlZm9yZShCKX0sMTA6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oOTgpO2UuZXhwb3J0cz1yfSwxMDA6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMzApLGk9bigxMDEpLG89big0NyksYT1uKDQ4KSxjPW4oNTYpLHU9bigyNykscz1uKDczKSxkPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7dC5mPXI/ZDpmdW5jdGlvbihlLHQpe2lmKGU9YShlKSx0PWModCwhMCkscyl0cnl7cmV0dXJuIGQoZSx0KX1jYXRjaChlKXt9aWYodShlLHQpKXJldHVybiBvKCFpLmYuY2FsbChlLHQpLGVbdF0pfX0sMTAxOmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIHI9e30ucHJvcGVydHlJc0VudW1lcmFibGUsaT1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yLG89aSYmIXIuY2FsbCh7MToyfSwxKTt0LmY9bz9mdW5jdGlvbihlKXt2YXIgdD1pKHRoaXMsZSk7cmV0dXJuISF0JiZ0LmVudW1lcmFibGV9OnJ9LDEwMjpmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gcihlLHQpe3ZhciBuPWNbYShlKV07cmV0dXJuIG49PXN8fG4hPXUmJigiZnVuY3Rpb24iPT10eXBlb2YgdD9pKHQpOiEhdCl9dmFyIGk9bigzMSksbz0vI3xcLnByb3RvdHlwZVwuLyxhPXIubm9ybWFsaXplPWZ1bmN0aW9uKGUpe3JldHVybiBTdHJpbmcoZSkucmVwbGFjZShvLCIuIikudG9Mb3dlckNhc2UoKX0sYz1yLmRhdGE9e30sdT1yLk5BVElWRT0iTiIscz1yLlBPTFlGSUxMPSJQIjtlLmV4cG9ydHM9cn0sMTAzOmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDI2KSxpPW4oMTA0KSxvPW4oMjApKCJzcGVjaWVzIik7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIG47cmV0dXJuIGkoZSkmJigiZnVuY3Rpb24iPT10eXBlb2Yobj1lLmNvbnN0cnVjdG9yKSYmKG49PT1BcnJheXx8aShuLnByb3RvdHlwZSkpfHxyKG4pJiZudWxsPT09KG49bltvXSkpJiYobj12b2lkIDApLG5ldyh2b2lkIDA9PT1uP0FycmF5Om4pKDA9PT10PzA6dCl9fSwxMDQ6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oNDkpO2UuZXhwb3J0cz1BcnJheS5pc0FycmF5fHxmdW5jdGlvbihlKXtyZXR1cm4iQXJyYXkiPT1yKGUpfX0sMTA1OmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDI1KSxpPW4oMzIpO2UuZXhwb3J0cz1mdW5jdGlvbih0LG4pe3RyeXtpKHIsdCxuKX1jYXRjaChlKXtyW3RdPW59cmV0dXJuIG59fSwxMDY6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oNzcpO2UuZXhwb3J0cz1yJiYhU3ltYm9sLnNoYW0mJiJzeW1ib2wiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yfSwxMDc6ZnVuY3Rpb24oZSx0LG4pe24oMTA4KTt2YXIgcj1uKDUzKTtlLmV4cG9ydHM9cigiQXJyYXkiLCJpbmNsdWRlcyIpfSwxMDg6ZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt2YXIgcj1uKDE0KSxpPW4oNzgpLmluY2x1ZGVzLG89big1Mik7cih7dGFyZ2V0OiJBcnJheSIscHJvdG86ITAsZm9yY2VkOiFuKDYxKSgiaW5kZXhPZiIse0FDQ0VTU09SUzohMCwxOjB9KX0se2luY2x1ZGVzOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIGkodGhpcyxlLDE8YXJndW1lbnRzLmxlbmd0aD90OnZvaWQgMCl9fSksbygiaW5jbHVkZXMiKX0sMTA5OmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDU5KSxpPU1hdGgubWF4LG89TWF0aC5taW47ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIG49cihlKTtyZXR1cm4gbjwwP2kobit0LDApOm8obix0KX19LDExOmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dC5hPWksdC5jPWZ1bmN0aW9uKGUpe3JldHVybiEoIWV8fCFlLnVybCl9LHQuYj1mdW5jdGlvbihlLHQpe2UucmVuZGVyKHQpfTt2YXIgdT1uKDM4KSxzPW4oMCkscj1uKDEwKSxkPW4ubihyKSxmPSJvdXRzdHJlYW0iO2Z1bmN0aW9uIGkoZSl7dmFyIHQ9dGhpcyxyPWUudXJsLG49ZS5jb25maWcsaT1lLmlkLG89ZS5jYWxsYmFjayxhPWUubG9hZGVkLGM9ZS5hZFVuaXRDb2RlO3RoaXMudXJsPXIsdGhpcy5jb25maWc9bix0aGlzLmhhbmRsZXJzPXt9LHRoaXMuaWQ9aSx0aGlzLmxvYWRlZD1hLHRoaXMuY21kPVtdLHRoaXMucHVzaD1mdW5jdGlvbihlKXsiZnVuY3Rpb24iPT10eXBlb2YgZT90LmxvYWRlZD9lLmNhbGwoKTp0LmNtZC5wdXNoKGUpOnMubG9nRXJyb3IoIkNvbW1hbmRzIGdpdmVuIHRvIFJlbmRlcmVyLnB1c2ggbXVzdCBiZSB3cmFwcGVkIGluIGEgZnVuY3Rpb24iKX0sdGhpcy5jYWxsYmFjaz1vfHxmdW5jdGlvbigpe3QubG9hZGVkPSEwLHQucHJvY2VzcygpfSx0aGlzLnJlbmRlcj1mdW5jdGlvbigpe3ZhciB0LGUsbjt0PWMsZT11cGJqcy5hZFVuaXRzLCEoKG49ZCgpKGUsZnVuY3Rpb24oZSl7cmV0dXJuIGUuY29kZT09PXR9KSkmJm4ucmVuZGVyZXImJm4ucmVuZGVyZXIudXJsJiZuLnJlbmRlcmVyLnJlbmRlcil8fHMuaXNCb29sZWFuKG4ucmVuZGVyZXIuYmFja3VwT25seSkmJm4ucmVuZGVyZXIuYmFja3VwT25seT9PYmplY3QodS5hKShyLGYsdGhpcy5jYWxsYmFjayk6cy5sb2dXYXJuKCJFeHRlcm5hbCBKcyBub3QgbG9hZGVkIGJ5IFJlbmRlcmVyIHNpbmNlIHJlbmRlcmVyIHVybCBhbmQgY2FsbGJhY2sgaXMgYWxyZWFkeSBkZWZpbmVkIG9uIGFkVW5pdCAiLmNvbmNhdChjKSksdGhpcy5fcmVuZGVyP3RoaXMuX3JlbmRlci5hcHBseSh0aGlzLGFyZ3VtZW50cyk6cy5sb2dXYXJuKCJObyByZW5kZXIgZnVuY3Rpb24gd2FzIHByb3ZpZGVkLCBwbGVhc2UgdXNlIC5zZXRSZW5kZXIgb24gdGhlIHJlbmRlcmVyIil9LmJpbmQodGhpcyl9aS5pbnN0YWxsPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcgaSh7dXJsOmUudXJsLGNvbmZpZzplLmNvbmZpZyxpZDplLmlkLGNhbGxiYWNrOmUuY2FsbGJhY2ssbG9hZGVkOmUubG9hZGVkLGFkVW5pdENvZGU6ZS5hZFVuaXRDb2RlfSl9LGkucHJvdG90eXBlLmdldENvbmZpZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmNvbmZpZ30saS5wcm90b3R5cGUuc2V0UmVuZGVyPWZ1bmN0aW9uKGUpe3RoaXMuX3JlbmRlcj1lfSxpLnByb3RvdHlwZS5zZXRFdmVudEhhbmRsZXJzPWZ1bmN0aW9uKGUpe3RoaXMuaGFuZGxlcnM9ZX0saS5wcm90b3R5cGUuaGFuZGxlVmlkZW9FdmVudD1mdW5jdGlvbihlKXt2YXIgdD1lLmlkLG49ZS5ldmVudE5hbWU7ImZ1bmN0aW9uIj09dHlwZW9mIHRoaXMuaGFuZGxlcnNbbl0mJnRoaXMuaGFuZGxlcnNbbl0oKSxzLmxvZ01lc3NhZ2UoIlByZWJpZCBSZW5kZXJlciBldmVudCBmb3IgaWQgIi5jb25jYXQodCwiIHR5cGUgIikuY29uY2F0KG4pKX0saS5wcm90b3R5cGUucHJvY2Vzcz1mdW5jdGlvbigpe2Zvcig7MDx0aGlzLmNtZC5sZW5ndGg7KXRyeXt0aGlzLmNtZC5zaGlmdCgpLmNhbGwoKX1jYXRjaChlKXtzLmxvZ0Vycm9yKCJFcnJvciBwcm9jZXNzaW5nIFJlbmRlcmVyIGNvbW1hbmQ6ICIsZSl9fX0sMTEwOmZ1bmN0aW9uKGUsdCxuKXtuKDExMSksbigxMjgpLG4oODkpLG4oMTMwKTt2YXIgcj1uKDQyKTtlLmV4cG9ydHM9ci5TZXR9LDExMTpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO3ZhciByPW4oMTEyKSxpPW4oMTE3KTtlLmV4cG9ydHM9cigiU2V0IixmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIHQodGhpcyxhcmd1bWVudHMubGVuZ3RoP2U6dm9pZCAwKX19LGkpfSwxMTI6ZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt2YXIgZj1uKDE0KSxsPW4oMjUpLHA9big4MCksZz1uKDMxKSxiPW4oMzIpLHY9bigxNykseT1uKDgzKSxoPW4oMjYpLG09big2NSksUz1uKDMzKS5mLEE9big1NykuZm9yRWFjaCxFPW4oMzApLHI9big1NSksTz1yLnNldCxUPXIuZ2V0dGVyRm9yO2UuZXhwb3J0cz1mdW5jdGlvbihuLGUsdCl7dmFyIHIsYSxpPS0xIT09bi5pbmRleE9mKCJNYXAiKSxjPS0xIT09bi5pbmRleE9mKCJXZWFrIiksbz1pPyJzZXQiOiJhZGQiLHU9bFtuXSxzPXUmJnUucHJvdG90eXBlLGQ9e307cmV0dXJuIEUmJiJmdW5jdGlvbiI9PXR5cGVvZiB1JiYoY3x8cy5mb3JFYWNoJiYhZyhmdW5jdGlvbigpeyhuZXcgdSkuZW50cmllcygpLm5leHQoKX0pKT8ocj1lKGZ1bmN0aW9uKGUsdCl7Tyh5KGUscixuKSx7dHlwZTpuLGNvbGxlY3Rpb246bmV3IHV9KSxudWxsIT10JiZ2KHQsZVtvXSxlLGkpfSksYT1UKG4pLEEoWyJhZGQiLCJjbGVhciIsImRlbGV0ZSIsImZvckVhY2giLCJnZXQiLCJoYXMiLCJzZXQiLCJrZXlzIiwidmFsdWVzIiwiZW50cmllcyJdLGZ1bmN0aW9uKGkpe3ZhciBvPSJhZGQiPT1pfHwic2V0Ij09aTtpIGluIHMmJighY3x8ImNsZWFyIiE9aSkmJmIoci5wcm90b3R5cGUsaSxmdW5jdGlvbihlLHQpe3ZhciBuPWEodGhpcykuY29sbGVjdGlvbjtpZighbyYmYyYmIWgoZSkpcmV0dXJuImdldCI9PWkmJnZvaWQgMDt2YXIgcj1uW2ldKDA9PT1lPzA6ZSx0KTtyZXR1cm4gbz90aGlzOnJ9KX0pLGN8fFMoci5wcm90b3R5cGUsInNpemUiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGEodGhpcykuY29sbGVjdGlvbi5zaXplfX0pKToocj10LmdldENvbnN0cnVjdG9yKGUsbixpLG8pLHAuUkVRVUlSRUQ9ITApLG0ocixuLCExLCEwKSxkW25dPXIsZih7Z2xvYmFsOiEwLGZvcmNlZDohMH0sZCksY3x8dC5zZXRTdHJvbmcocixuLGkpLHJ9fSwxMTM6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMzEpO2UuZXhwb3J0cz0hcihmdW5jdGlvbigpe3JldHVybiBPYmplY3QuaXNFeHRlbnNpYmxlKE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucyh7fSkpfSl9LDExNDpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO3ZhciByPW4oNjQpLGk9big2Myk7ZS5leHBvcnRzPXI/e30udG9TdHJpbmc6ZnVuY3Rpb24oKXtyZXR1cm4iW29iamVjdCAiK2kodGhpcykrIl0ifX0sMTE1OmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDI1KSxpPW4oMTE2KSxvPXIuV2Vha01hcDtlLmV4cG9ydHM9ImZ1bmN0aW9uIj09dHlwZW9mIG8mJi9uYXRpdmUgY29kZS8udGVzdChpKG8pKX0sMTE2OmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDc2KSxpPUZ1bmN0aW9uLnRvU3RyaW5nOyJmdW5jdGlvbiIhPXR5cGVvZiByLmluc3BlY3RTb3VyY2UmJihyLmluc3BlY3RTb3VyY2U9ZnVuY3Rpb24oZSl7cmV0dXJuIGkuY2FsbChlKX0pLGUuZXhwb3J0cz1yLmluc3BlY3RTb3VyY2V9LDExNzpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO3ZhciBzPW4oMzMpLmYsZD1uKDg0KSxmPW4oMTIyKSxsPW4oMjMpLHA9big4MyksZz1uKDE3KSxhPW4oNjcpLGM9bigxMjcpLGI9bigzMCksdj1uKDgwKS5mYXN0S2V5LHI9big1NSkseT1yLnNldCxoPXIuZ2V0dGVyRm9yO2UuZXhwb3J0cz17Z2V0Q29uc3RydWN0b3I6ZnVuY3Rpb24oZSxuLHIsaSl7ZnVuY3Rpb24gbyhlLHQsbil7dmFyIHIsaSxvPWMoZSksYT11KGUsdCk7cmV0dXJuIGE/YS52YWx1ZT1uOihvLmxhc3Q9YT17aW5kZXg6aT12KHQsITApLGtleTp0LHZhbHVlOm4scHJldmlvdXM6cj1vLmxhc3QsbmV4dDp2b2lkIDAscmVtb3ZlZDohMX0sby5maXJzdHx8KG8uZmlyc3Q9YSksciYmKHIubmV4dD1hKSxiP28uc2l6ZSsrOmUuc2l6ZSsrLCJGIiE9PWkmJihvLmluZGV4W2ldPWEpKSxlfXZhciBhPWUoZnVuY3Rpb24oZSx0KXtwKGUsYSxuKSx5KGUse3R5cGU6bixpbmRleDpkKG51bGwpLGZpcnN0OnZvaWQgMCxsYXN0OnZvaWQgMCxzaXplOjB9KSxifHwoZS5zaXplPTApLG51bGwhPXQmJmcodCxlW2ldLGUscil9KSxjPWgobiksdT1mdW5jdGlvbihlLHQpe3ZhciBuLHI9YyhlKSxpPXYodCk7aWYoIkYiIT09aSlyZXR1cm4gci5pbmRleFtpXTtmb3Iobj1yLmZpcnN0O247bj1uLm5leHQpaWYobi5rZXk9PXQpcmV0dXJuIG59O3JldHVybiBmKGEucHJvdG90eXBlLHtjbGVhcjpmdW5jdGlvbigpe2Zvcih2YXIgZT1jKHRoaXMpLHQ9ZS5pbmRleCxuPWUuZmlyc3Q7bjspbi5yZW1vdmVkPSEwLG4ucHJldmlvdXMmJihuLnByZXZpb3VzPW4ucHJldmlvdXMubmV4dD12b2lkIDApLGRlbGV0ZSB0W24uaW5kZXhdLG49bi5uZXh0O2UuZmlyc3Q9ZS5sYXN0PXZvaWQgMCxiP2Uuc2l6ZT0wOnRoaXMuc2l6ZT0wfSxkZWxldGU6ZnVuY3Rpb24oZSl7dmFyIHQsbixyPWModGhpcyksaT11KHRoaXMsZSk7cmV0dXJuIGkmJih0PWkubmV4dCxuPWkucHJldmlvdXMsZGVsZXRlIHIuaW5kZXhbaS5pbmRleF0saS5yZW1vdmVkPSEwLG4mJihuLm5leHQ9dCksdCYmKHQucHJldmlvdXM9biksci5maXJzdD09aSYmKHIuZmlyc3Q9dCksci5sYXN0PT1pJiYoci5sYXN0PW4pLGI/ci5zaXplLS06dGhpcy5zaXplLS0pLCEhaX0sZm9yRWFjaDpmdW5jdGlvbihlLHQpe2Zvcih2YXIgbixyPWModGhpcyksaT1sKGUsMTxhcmd1bWVudHMubGVuZ3RoP3Q6dm9pZCAwLDMpO249bj9uLm5leHQ6ci5maXJzdDspZm9yKGkobi52YWx1ZSxuLmtleSx0aGlzKTtuJiZuLnJlbW92ZWQ7KW49bi5wcmV2aW91c30saGFzOmZ1bmN0aW9uKGUpe3JldHVybiEhdSh0aGlzLGUpfX0pLGYoYS5wcm90b3R5cGUscj97Z2V0OmZ1bmN0aW9uKGUpe3ZhciB0PXUodGhpcyxlKTtyZXR1cm4gdCYmdC52YWx1ZX0sc2V0OmZ1bmN0aW9uKGUsdCl7cmV0dXJuIG8odGhpcywwPT09ZT8wOmUsdCl9fTp7YWRkOmZ1bmN0aW9uKGUpe3JldHVybiBvKHRoaXMsZT0wPT09ZT8wOmUsZSl9fSksYiYmcyhhLnByb3RvdHlwZSwic2l6ZSIse2dldDpmdW5jdGlvbigpe3JldHVybiBjKHRoaXMpLnNpemV9fSksYX0sc2V0U3Ryb25nOmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj10KyIgSXRlcmF0b3IiLGk9aCh0KSxvPWgocik7YShlLHQsZnVuY3Rpb24oZSx0KXt5KHRoaXMse3R5cGU6cix0YXJnZXQ6ZSxzdGF0ZTppKGUpLGtpbmQ6dCxsYXN0OnZvaWQgMH0pfSxmdW5jdGlvbigpe2Zvcih2YXIgZT1vKHRoaXMpLHQ9ZS5raW5kLG49ZS5sYXN0O24mJm4ucmVtb3ZlZDspbj1uLnByZXZpb3VzO3JldHVybiBlLnRhcmdldCYmKGUubGFzdD1uPW4/bi5uZXh0OmUuc3RhdGUuZmlyc3QpPyJrZXlzIj09dD97dmFsdWU6bi5rZXksZG9uZTohMX06InZhbHVlcyI9PXQ/e3ZhbHVlOm4udmFsdWUsZG9uZTohMX06e3ZhbHVlOltuLmtleSxuLnZhbHVlXSxkb25lOiExfTp7dmFsdWU6ZS50YXJnZXQ9dm9pZCAwLGRvbmU6ITB9fSxuPyJlbnRyaWVzIjoidmFsdWVzIiwhbiwhMCksYyh0KX19fSwxMTg6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMzApLGE9bigzMyksYz1uKDE1KSx1PW4oMTE5KTtlLmV4cG9ydHM9cj9PYmplY3QuZGVmaW5lUHJvcGVydGllczpmdW5jdGlvbihlLHQpe2MoZSk7Zm9yKHZhciBuLHI9dSh0KSxpPXIubGVuZ3RoLG89MDtvPGk7KWEuZihlLG49cltvKytdLHRbbl0pO3JldHVybiBlfX0sMTE5OmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDEyMCksaT1uKDg1KTtlLmV4cG9ydHM9T2JqZWN0LmtleXN8fGZ1bmN0aW9uKGUpe3JldHVybiByKGUsaSl9fSwxMjpmdW5jdGlvbihlLHQsbil7dmFyIHI9bigxMDcpO2UuZXhwb3J0cz1yfSwxMjA6ZnVuY3Rpb24oZSx0LG4pe3ZhciBhPW4oMjcpLGM9big0OCksdT1uKDc4KS5pbmRleE9mLHM9big1NCk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIG4scj1jKGUpLGk9MCxvPVtdO2ZvcihuIGluIHIpIWEocyxuKSYmYShyLG4pJiZvLnB1c2gobik7Zm9yKDt0Lmxlbmd0aD5pOylhKHIsbj10W2krK10pJiYofnUobyxuKXx8by5wdXNoKG4pKTtyZXR1cm4gb319LDEyMTpmdW5jdGlvbihlLHQsbil7dmFyIHI9bigyOCk7ZS5leHBvcnRzPXIoImRvY3VtZW50IiwiZG9jdW1lbnRFbGVtZW50Iil9LDEyMjpmdW5jdGlvbihlLHQsbil7dmFyIGk9big4Nik7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxuKXtmb3IodmFyIHIgaW4gdCluJiZuLnVuc2FmZSYmZVtyXT9lW3JdPXRbcl06aShlLHIsdFtyXSxuKTtyZXR1cm4gZX19LDEyMzpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGkoKXtyZXR1cm4gdGhpc312YXIgbz1uKDg3KS5JdGVyYXRvclByb3RvdHlwZSxhPW4oODQpLGM9big0NyksdT1uKDY1KSxzPW4oMzkpO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQsbil7dmFyIHI9dCsiIEl0ZXJhdG9yIjtyZXR1cm4gZS5wcm90b3R5cGU9YShvLHtuZXh0OmMoMSxuKX0pLHUoZSxyLCExLCEwKSxzW3JdPWksZX19LDEyNDpmdW5jdGlvbihlLHQsbil7dmFyIHI9bigzMSk7ZS5leHBvcnRzPSFyKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe31yZXR1cm4gZS5wcm90b3R5cGUuY29uc3RydWN0b3I9bnVsbCxPYmplY3QuZ2V0UHJvdG90eXBlT2YobmV3IGUpIT09ZS5wcm90b3R5cGV9KX0sMTI1OmZ1bmN0aW9uKGUsdCxuKXt2YXIgaT1uKDE1KSxvPW4oMTI2KTtlLmV4cG9ydHM9T2JqZWN0LnNldFByb3RvdHlwZU9mfHwoIl9fcHJvdG9fXyJpbnt9P2Z1bmN0aW9uKCl7dmFyIG4scj0hMSxlPXt9O3RyeXsobj1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE9iamVjdC5wcm90b3R5cGUsIl9fcHJvdG9fXyIpLnNldCkuY2FsbChlLFtdKSxyPWUgaW5zdGFuY2VvZiBBcnJheX1jYXRjaChlKXt9cmV0dXJuIGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGkoZSksbyh0KSxyP24uY2FsbChlLHQpOmUuX19wcm90b19fPXQsZX19KCk6dm9pZCAwKX0sMTI2OmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDI2KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYoIXIoZSkmJm51bGwhPT1lKXRocm93IFR5cGVFcnJvcigiQ2FuJ3Qgc2V0ICIrU3RyaW5nKGUpKyIgYXMgYSBwcm90b3R5cGUiKTtyZXR1cm4gZX19LDEyNzpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO3ZhciByPW4oMjgpLGk9bigzMyksbz1uKDIwKSxhPW4oMzApLGM9bygic3BlY2llcyIpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD1yKGUpLG49aS5mO2EmJnQmJiF0W2NdJiZuKHQsYyx7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzfX0pfX0sMTI4OmZ1bmN0aW9uKGUsdCl7fSwxMjk6ZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoYyl7cmV0dXJuIGZ1bmN0aW9uKGUsdCl7dmFyIG4scixpPVN0cmluZyhzKGUpKSxvPXUodCksYT1pLmxlbmd0aDtyZXR1cm4gbzwwfHxhPD1vP2M/IiI6dm9pZCAwOihuPWkuY2hhckNvZGVBdChvKSk8NTUyOTZ8fDU2MzE5PG58fG8rMT09PWF8fChyPWkuY2hhckNvZGVBdChvKzEpKTw1NjMyMHx8NTczNDM8cj9jP2kuY2hhckF0KG8pOm46Yz9pLnNsaWNlKG8sbysyKTpyLTU2MzIwKyhuLTU1Mjk2PDwxMCkrNjU1MzZ9fXZhciB1PW4oNTkpLHM9big1MCk7ZS5leHBvcnRzPXtjb2RlQXQ6cighMSksY2hhckF0OnIoITApfX0sMTM6ZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0IjtuLmQodCwiYiIsZnVuY3Rpb24oKXtyZXR1cm4gYX0pLG4uZCh0LCJhIixmdW5jdGlvbigpe3JldHVybiBjfSksdC5kPWZ1bmN0aW9uKGUsdCl7dmFyIG49Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOjE1OzA9PT1lLmdldEhvb2tzKHtob29rOnR9KS5sZW5ndGgmJmUuYmVmb3JlKHQsbil9LHQuYz1mdW5jdGlvbihlLG4pe2EoImFzeW5jIixmdW5jdGlvbihlKXtlLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIG4uYXBwbHkodm9pZCAwLGZ1bmN0aW9uKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIG8oZSl9KHQ9ZSl8fGZ1bmN0aW9uKGUpe2lmKCJ1bmRlZmluZWQiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGUpKXJldHVybiBBcnJheS5mcm9tKGUpfSh0KXx8ZnVuY3Rpb24oZSx0KXtpZihlKXtpZigic3RyaW5nIj09dHlwZW9mIGUpcmV0dXJuIG8oZSx0KTt2YXIgbj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkuc2xpY2UoOCwtMSk7cmV0dXJuIk9iamVjdCI9PT1uJiZlLmNvbnN0cnVjdG9yJiYobj1lLmNvbnN0cnVjdG9yLm5hbWUpLCJNYXAiPT09bnx8IlNldCI9PT1uP0FycmF5LmZyb20oZSk6IkFyZ3VtZW50cyI9PT1ufHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKT9vKGUsdCk6dm9pZCAwfX0odCl8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuIil9KCkpO3ZhciB0fSl9LGUpKFtdKX0sdC5lPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLG49bmV3IEFycmF5KDE8dD90LTE6MCkscj0xO3I8dDtyKyspbltyLTFdPWFyZ3VtZW50c1tyXTtjKGUpLmJlZm9yZShmdW5jdGlvbihlLHQpe3QucHVzaChuKSxlKHQpfSl9O3ZhciByPW4oMTYzKSxpPW4ubihyKTtmdW5jdGlvbiBvKGUsdCl7KG51bGw9PXR8fHQ+ZS5sZW5ndGgpJiYodD1lLmxlbmd0aCk7Zm9yKHZhciBuPTAscj1uZXcgQXJyYXkodCk7bjx0O24rKylyW25dPWVbbl07cmV0dXJuIHJ9dmFyIGE9aSgpKHtyZWFkeTppLmEuU1lOQ3xpLmEuQVNZTkN8aS5hLlFVRVVFfSksYz1hLmdldH0sMTMwOmZ1bmN0aW9uKGUsdCxuKXtuKDEzMSk7dmFyIHI9bigxMzIpLGk9bigyNSksbz1uKDYzKSxhPW4oMzIpLGM9bigzOSksdT1uKDIwKSgidG9TdHJpbmdUYWciKTtmb3IodmFyIHMgaW4gcil7dmFyIGQ9aVtzXSxmPWQmJmQucHJvdG90eXBlO2YmJm8oZikhPT11JiZhKGYsdSxzKSxjW3NdPWMuQXJyYXl9fSwxMzE6ZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt2YXIgcj1uKDQ4KSxpPW4oNTIpLG89bigzOSksYT1uKDU1KSxjPW4oNjcpLHU9IkFycmF5IEl0ZXJhdG9yIixzPWEuc2V0LGQ9YS5nZXR0ZXJGb3IodSk7ZS5leHBvcnRzPWMoQXJyYXksIkFycmF5IixmdW5jdGlvbihlLHQpe3ModGhpcyx7dHlwZTp1LHRhcmdldDpyKGUpLGluZGV4OjAsa2luZDp0fSl9LGZ1bmN0aW9uKCl7dmFyIGU9ZCh0aGlzKSx0PWUudGFyZ2V0LG49ZS5raW5kLHI9ZS5pbmRleCsrO3JldHVybiF0fHxyPj10Lmxlbmd0aD97dmFsdWU6ZS50YXJnZXQ9dm9pZCAwLGRvbmU6ITB9OiJrZXlzIj09bj97dmFsdWU6cixkb25lOiExfToidmFsdWVzIj09bj97dmFsdWU6dFtyXSxkb25lOiExfTp7dmFsdWU6W3IsdFtyXV0sZG9uZTohMX19LCJ2YWx1ZXMiKSxvLkFyZ3VtZW50cz1vLkFycmF5LGkoImtleXMiKSxpKCJ2YWx1ZXMiKSxpKCJlbnRyaWVzIil9LDEzMjpmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz17Q1NTUnVsZUxpc3Q6MCxDU1NTdHlsZURlY2xhcmF0aW9uOjAsQ1NTVmFsdWVMaXN0OjAsQ2xpZW50UmVjdExpc3Q6MCxET01SZWN0TGlzdDowLERPTVN0cmluZ0xpc3Q6MCxET01Ub2tlbkxpc3Q6MSxEYXRhVHJhbnNmZXJJdGVtTGlzdDowLEZpbGVMaXN0OjAsSFRNTEFsbENvbGxlY3Rpb246MCxIVE1MQ29sbGVjdGlvbjowLEhUTUxGb3JtRWxlbWVudDowLEhUTUxTZWxlY3RFbGVtZW50OjAsTWVkaWFMaXN0OjAsTWltZVR5cGVBcnJheTowLE5hbWVkTm9kZU1hcDowLE5vZGVMaXN0OjEsUGFpbnRSZXF1ZXN0TGlzdDowLFBsdWdpbjowLFBsdWdpbkFycmF5OjAsU1ZHTGVuZ3RoTGlzdDowLFNWR051bWJlckxpc3Q6MCxTVkdQYXRoU2VnTGlzdDowLFNWR1BvaW50TGlzdDowLFNWR1N0cmluZ0xpc3Q6MCxTVkdUcmFuc2Zvcm1MaXN0OjAsU291cmNlQnVmZmVyTGlzdDowLFN0eWxlU2hlZXRMaXN0OjAsVGV4dFRyYWNrQ3VlTGlzdDowLFRleHRUcmFja0xpc3Q6MCxUb3VjaExpc3Q6MH19LDEzMzpmdW5jdGlvbihlLHQsbil7bigxNCkoe3RhcmdldDoiU2V0IixzdGF0OiEwfSx7ZnJvbTpuKDEzNCl9KX0sMTM0OmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIHM9bigxOCksZD1uKDIzKSxmPW4oMTcpO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQsbil7dmFyIHIsaSxvLGEsYz1hcmd1bWVudHMubGVuZ3RoLHU9MTxjP3Q6dm9pZCAwO3JldHVybiBzKHRoaXMpLChyPXZvaWQgMCE9PXUpJiZzKHUpLG51bGw9PWU/bmV3IHRoaXM6KGk9W10scj8obz0wLGE9ZCh1LDI8Yz9uOnZvaWQgMCwyKSxmKGUsZnVuY3Rpb24oZSl7aS5wdXNoKGEoZSxvKyspKX0pKTpmKGUsaS5wdXNoLGkpLG5ldyB0aGlzKGkpKX19LDEzNTpmdW5jdGlvbihlLHQsbil7bigxNCkoe3RhcmdldDoiU2V0IixzdGF0OiEwfSx7b2Y6bigxMzYpfSl9LDEzNjpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO2UuZXhwb3J0cz1mdW5jdGlvbigpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpO2UtLTspdFtlXT1hcmd1bWVudHNbZV07cmV0dXJuIG5ldyB0aGlzKHQpfX0sMTM3OmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIHI9bigxNCksaT1uKDE2KSxvPW4oMTM4KTtyKHt0YXJnZXQ6IlNldCIscHJvdG86ITAscmVhbDohMCxmb3JjZWQ6aX0se2FkZEFsbDpmdW5jdGlvbigpe3JldHVybiBvLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19KX0sMTM4OmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIGk9bigxNSksbz1uKDE4KTtlLmV4cG9ydHM9ZnVuY3Rpb24oKXtmb3IodmFyIGU9aSh0aGlzKSx0PW8oZS5hZGQpLG49MCxyPWFyZ3VtZW50cy5sZW5ndGg7bjxyO24rKyl0LmNhbGwoZSxhcmd1bWVudHNbbl0pO3JldHVybiBlfX0sMTM5OmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIHI9bigxNCksaT1uKDE2KSxvPW4oMTQwKTtyKHt0YXJnZXQ6IlNldCIscHJvdG86ITAscmVhbDohMCxmb3JjZWQ6aX0se2RlbGV0ZUFsbDpmdW5jdGlvbigpe3JldHVybiBvLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19KX0sMTQ6ZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiB5KHIpe2Z1bmN0aW9uIGUoZSx0LG4pe2lmKHRoaXMgaW5zdGFuY2VvZiByKXtzd2l0Y2goYXJndW1lbnRzLmxlbmd0aCl7Y2FzZSAwOnJldHVybiBuZXcgcjtjYXNlIDE6cmV0dXJuIG5ldyByKGUpO2Nhc2UgMjpyZXR1cm4gbmV3IHIoZSx0KX1yZXR1cm4gbmV3IHIoZSx0LG4pfXJldHVybiByLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1yZXR1cm4gZS5wcm90b3R5cGU9ci5wcm90b3R5cGUsZX12YXIgaD1uKDI1KSxtPW4oMTAwKS5mLFM9bigxMDIpLEE9big0MiksRT1uKDIzKSxPPW4oMzIpLFQ9bigyNyk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIG4scixpLG8sYSxjLHUscyxkPWUudGFyZ2V0LGY9ZS5nbG9iYWwsbD1lLnN0YXQscD1lLnByb3RvLGc9Zj9oOmw/aFtkXTooaFtkXXx8e30pLnByb3RvdHlwZSxiPWY/QTpBW2RdfHwoQVtkXT17fSksdj1iLnByb3RvdHlwZTtmb3IoaSBpbiB0KW49IVMoZj9pOmQrKGw/Ii4iOiIjIikraSxlLmZvcmNlZCkmJmcmJlQoZyxpKSxhPWJbaV0sbiYmKGM9ZS5ub1RhcmdldEdldD8ocz1tKGcsaSkpJiZzLnZhbHVlOmdbaV0pLG89biYmYz9jOnRbaV0sbiYmdHlwZW9mIGE9PXR5cGVvZiBvfHwodT1lLmJpbmQmJm4/RShvLGgpOmUud3JhcCYmbj95KG8pOnAmJiJmdW5jdGlvbiI9PXR5cGVvZiBvP0UoRnVuY3Rpb24uY2FsbCxvKTpvLChlLnNoYW18fG8mJm8uc2hhbXx8YSYmYS5zaGFtKSYmTyh1LCJzaGFtIiwhMCksYltpXT11LHAmJihUKEEscj1kKyJQcm90b3R5cGUiKXx8TyhBLHIse30pLEFbcl1baV09byxlLnJlYWwmJnYmJiF2W2ldJiZPKHYsaSxvKSkpfX0sMTQwOmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIGE9bigxNSksYz1uKDE4KTtlLmV4cG9ydHM9ZnVuY3Rpb24oKXtmb3IodmFyIGUsdD1hKHRoaXMpLG49Yyh0LmRlbGV0ZSkscj0hMCxpPTAsbz1hcmd1bWVudHMubGVuZ3RoO2k8bztpKyspZT1uLmNhbGwodCxhcmd1bWVudHNbaV0pLHI9ciYmZTtyZXR1cm4hIXJ9fSwxNDE6ZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt2YXIgcj1uKDE0KSxpPW4oMTYpLG89bigxNSksYT1uKDIzKSxjPW4oMzYpLHU9bigxNyk7cih7dGFyZ2V0OiJTZXQiLHByb3RvOiEwLHJlYWw6ITAsZm9yY2VkOml9LHtldmVyeTpmdW5jdGlvbihlLHQpe3ZhciBuPW8odGhpcykscj1jKG4pLGk9YShlLDE8YXJndW1lbnRzLmxlbmd0aD90OnZvaWQgMCwzKTtyZXR1cm4hdShyLGZ1bmN0aW9uKGUpe2lmKCFpKGUsZSxuKSlyZXR1cm4gdS5zdG9wKCl9LHZvaWQgMCwhMSwhMCkuc3RvcHBlZH19KX0sMTQyOmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIHI9bigxNCksaT1uKDE2KSxvPW4oMjgpLGE9bigxNSksYz1uKDE4KSx1PW4oNDApLHM9bigxNyk7cih7dGFyZ2V0OiJTZXQiLHByb3RvOiEwLHJlYWw6ITAsZm9yY2VkOml9LHtkaWZmZXJlbmNlOmZ1bmN0aW9uKGUpe3ZhciB0PWEodGhpcyksbj1uZXcodSh0LG8oIlNldCIpKSkodCkscj1jKG4uZGVsZXRlKTtyZXR1cm4gcyhlLGZ1bmN0aW9uKGUpe3IuY2FsbChuLGUpfSksbn19KX0sMTQzOmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIHI9bigxNCksaT1uKDE2KSxjPW4oMjgpLHU9bigxNSkscz1uKDE4KSxkPW4oMjMpLGY9big0MCksbD1uKDM2KSxwPW4oMTcpO3Ioe3RhcmdldDoiU2V0Iixwcm90bzohMCxyZWFsOiEwLGZvcmNlZDppfSx7ZmlsdGVyOmZ1bmN0aW9uKGUsdCl7dmFyIG49dSh0aGlzKSxyPWwobiksaT1kKGUsMTxhcmd1bWVudHMubGVuZ3RoP3Q6dm9pZCAwLDMpLG89bmV3KGYobixjKCJTZXQiKSkpLGE9cyhvLmFkZCk7cmV0dXJuIHAocixmdW5jdGlvbihlKXtpKGUsZSxuKSYmYS5jYWxsKG8sZSl9LHZvaWQgMCwhMSwhMCksb319KX0sMTQ0OmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIHI9bigxNCksaT1uKDE2KSxvPW4oMTUpLGE9bigyMyksYz1uKDM2KSx1PW4oMTcpO3Ioe3RhcmdldDoiU2V0Iixwcm90bzohMCxyZWFsOiEwLGZvcmNlZDppfSx7ZmluZDpmdW5jdGlvbihlLHQpe3ZhciBuPW8odGhpcykscj1jKG4pLGk9YShlLDE8YXJndW1lbnRzLmxlbmd0aD90OnZvaWQgMCwzKTtyZXR1cm4gdShyLGZ1bmN0aW9uKGUpe2lmKGkoZSxlLG4pKXJldHVybiB1LnN0b3AoZSl9LHZvaWQgMCwhMSwhMCkucmVzdWx0fX0pfSwxNDU6ZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt2YXIgcj1uKDE0KSxpPW4oMTYpLG89bigyOCksYT1uKDE1KSxjPW4oMTgpLHU9big0MCkscz1uKDE3KTtyKHt0YXJnZXQ6IlNldCIscHJvdG86ITAscmVhbDohMCxmb3JjZWQ6aX0se2ludGVyc2VjdGlvbjpmdW5jdGlvbihlKXt2YXIgdD1hKHRoaXMpLG49bmV3KHUodCxvKCJTZXQiKSkpLHI9Yyh0LmhhcyksaT1jKG4uYWRkKTtyZXR1cm4gcyhlLGZ1bmN0aW9uKGUpe3IuY2FsbCh0LGUpJiZpLmNhbGwobixlKX0pLG59fSl9LDE0NjpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO3ZhciByPW4oMTQpLGk9bigxNiksbz1uKDE1KSxhPW4oMTgpLGM9bigxNyk7cih7dGFyZ2V0OiJTZXQiLHByb3RvOiEwLHJlYWw6ITAsZm9yY2VkOml9LHtpc0Rpc2pvaW50RnJvbTpmdW5jdGlvbihlKXt2YXIgdD1vKHRoaXMpLG49YSh0Lmhhcyk7cmV0dXJuIWMoZSxmdW5jdGlvbihlKXtpZighMD09PW4uY2FsbCh0LGUpKXJldHVybiBjLnN0b3AoKX0pLnN0b3BwZWR9fSl9LDE0NzpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO3ZhciByPW4oMTQpLGk9bigxNiksbz1uKDI4KSxhPW4oMTUpLGM9bigxOCksdT1uKDkwKSxzPW4oMTcpO3Ioe3RhcmdldDoiU2V0Iixwcm90bzohMCxyZWFsOiEwLGZvcmNlZDppfSx7aXNTdWJzZXRPZjpmdW5jdGlvbihlKXt2YXIgdD11KHRoaXMpLG49YShlKSxyPW4uaGFzO3JldHVybiJmdW5jdGlvbiIhPXR5cGVvZiByJiYobj1uZXcobygiU2V0IikpKGUpLHI9YyhuLmhhcykpLCFzKHQsZnVuY3Rpb24oZSl7aWYoITE9PT1yLmNhbGwobixlKSlyZXR1cm4gcy5zdG9wKCl9LHZvaWQgMCwhMSwhMCkuc3RvcHBlZH19KX0sMTQ4OmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIHI9bigxNCksaT1uKDE2KSxvPW4oMTUpLGE9bigxOCksYz1uKDE3KTtyKHt0YXJnZXQ6IlNldCIscHJvdG86ITAscmVhbDohMCxmb3JjZWQ6aX0se2lzU3VwZXJzZXRPZjpmdW5jdGlvbihlKXt2YXIgdD1vKHRoaXMpLG49YSh0Lmhhcyk7cmV0dXJuIWMoZSxmdW5jdGlvbihlKXtpZighMT09PW4uY2FsbCh0LGUpKXJldHVybiBjLnN0b3AoKX0pLnN0b3BwZWR9fSl9LDE0OTpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO3ZhciByPW4oMTQpLGk9bigxNiksbz1uKDE1KSxhPW4oMzYpLGM9bigxNyk7cih7dGFyZ2V0OiJTZXQiLHByb3RvOiEwLHJlYWw6ITAsZm9yY2VkOml9LHtqb2luOmZ1bmN0aW9uKGUpe3ZhciB0PW8odGhpcyksbj1hKHQpLHI9dm9pZCAwPT09ZT8iLCI6U3RyaW5nKGUpLGk9W107cmV0dXJuIGMobixpLnB1c2gsaSwhMSwhMCksaS5qb2luKHIpfX0pfSwxNTpmdW5jdGlvbihlLHQsbil7dmFyIHI9bigyNik7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKCFyKGUpKXRocm93IFR5cGVFcnJvcihTdHJpbmcoZSkrIiBpcyBub3QgYW4gb2JqZWN0Iik7cmV0dXJuIGV9fSwxNTA6ZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt2YXIgcj1uKDE0KSxpPW4oMTYpLGM9bigyOCksdT1uKDE1KSxzPW4oMTgpLGQ9bigyMyksZj1uKDQwKSxsPW4oMzYpLHA9bigxNyk7cih7dGFyZ2V0OiJTZXQiLHByb3RvOiEwLHJlYWw6ITAsZm9yY2VkOml9LHttYXA6ZnVuY3Rpb24oZSx0KXt2YXIgbj11KHRoaXMpLHI9bChuKSxpPWQoZSwxPGFyZ3VtZW50cy5sZW5ndGg/dDp2b2lkIDAsMyksbz1uZXcoZihuLGMoIlNldCIpKSksYT1zKG8uYWRkKTtyZXR1cm4gcChyLGZ1bmN0aW9uKGUpe2EuY2FsbChvLGkoZSxlLG4pKX0sdm9pZCAwLCExLCEwKSxvfX0pfSwxNTE6ZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt2YXIgcj1uKDE0KSxpPW4oMTYpLGE9bigxNSksYz1uKDE4KSx1PW4oMzYpLHM9bigxNyk7cih7dGFyZ2V0OiJTZXQiLHByb3RvOiEwLHJlYWw6ITAsZm9yY2VkOml9LHtyZWR1Y2U6ZnVuY3Rpb24odCxlKXt2YXIgbj1hKHRoaXMpLHI9dShuKSxpPWFyZ3VtZW50cy5sZW5ndGg8MixvPWk/dm9pZCAwOmU7aWYoYyh0KSxzKHIsZnVuY3Rpb24oZSl7bz1pPyhpPSExLGUpOnQobyxlLGUsbil9LHZvaWQgMCwhMSwhMCksaSl0aHJvdyBUeXBlRXJyb3IoIlJlZHVjZSBvZiBlbXB0eSBzZXQgd2l0aCBubyBpbml0aWFsIHZhbHVlIik7cmV0dXJuIG99fSl9LDE1MjpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO3ZhciByPW4oMTQpLGk9bigxNiksbz1uKDE1KSxhPW4oMjMpLGM9bigzNiksdT1uKDE3KTtyKHt0YXJnZXQ6IlNldCIscHJvdG86ITAscmVhbDohMCxmb3JjZWQ6aX0se3NvbWU6ZnVuY3Rpb24oZSx0KXt2YXIgbj1vKHRoaXMpLHI9YyhuKSxpPWEoZSwxPGFyZ3VtZW50cy5sZW5ndGg/dDp2b2lkIDAsMyk7cmV0dXJuIHUocixmdW5jdGlvbihlKXtpZihpKGUsZSxuKSlyZXR1cm4gdS5zdG9wKCl9LHZvaWQgMCwhMSwhMCkuc3RvcHBlZH19KX0sMTUzOmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIHI9bigxNCksaT1uKDE2KSxvPW4oMjgpLGE9bigxNSksYz1uKDE4KSx1PW4oNDApLHM9bigxNyk7cih7dGFyZ2V0OiJTZXQiLHByb3RvOiEwLHJlYWw6ITAsZm9yY2VkOml9LHtzeW1tZXRyaWNEaWZmZXJlbmNlOmZ1bmN0aW9uKGUpe3ZhciB0PWEodGhpcyksbj1uZXcodSh0LG8oIlNldCIpKSkodCkscj1jKG4uZGVsZXRlKSxpPWMobi5hZGQpO3JldHVybiBzKGUsZnVuY3Rpb24oZSl7ci5jYWxsKG4sZSl8fGkuY2FsbChuLGUpfSksbn19KX0sMTU0OmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIHI9bigxNCksaT1uKDE2KSxvPW4oMjgpLGE9bigxNSksYz1uKDE4KSx1PW4oNDApLHM9bigxNyk7cih7dGFyZ2V0OiJTZXQiLHByb3RvOiEwLHJlYWw6ITAsZm9yY2VkOml9LHt1bmlvbjpmdW5jdGlvbihlKXt2YXIgdD1hKHRoaXMpLG49bmV3KHUodCxvKCJTZXQiKSkpKHQpO3JldHVybiBzKGUsYyhuLmFkZCksbiksbn19KX0sMTU1OmZ1bmN0aW9uKGUsdCxuKXtuKDg5KSxuKDE1Nik7dmFyIHI9big0Mik7ZS5leHBvcnRzPXIuQXJyYXkuZnJvbX0sMTU2OmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDE0KSxpPW4oMTU3KTtyKHt0YXJnZXQ6IkFycmF5IixzdGF0OiEwLGZvcmNlZDohbigxNTkpKGZ1bmN0aW9uKGUpe0FycmF5LmZyb20oZSl9KX0se2Zyb206aX0pfSwxNTc6ZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt2YXIgdj1uKDIzKSx5PW4oNTgpLGg9big4MiksbT1uKDgxKSxTPW4oNTEpLEE9bigxNTgpLEU9big2Mik7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxuKXt2YXIgcixpLG8sYSxjLHUscz15KGUpLGQ9ImZ1bmN0aW9uIj09dHlwZW9mIHRoaXM/dGhpczpBcnJheSxmPWFyZ3VtZW50cy5sZW5ndGgsbD0xPGY/dDp2b2lkIDAscD12b2lkIDAhPT1sLGc9RShzKSxiPTA7aWYocCYmKGw9dihsLDI8Zj9uOnZvaWQgMCwyKSksbnVsbD09Z3x8ZD09QXJyYXkmJm0oZykpZm9yKGk9bmV3IGQocj1TKHMubGVuZ3RoKSk7YjxyO2IrKyl1PXA/bChzW2JdLGIpOnNbYl0sQShpLGIsdSk7ZWxzZSBmb3IoYz0oYT1nLmNhbGwocykpLm5leHQsaT1uZXcgZDshKG89Yy5jYWxsKGEpKS5kb25lO2IrKyl1PXA/aChhLGwsW28udmFsdWUsYl0sITApOm8udmFsdWUsQShpLGIsdSk7cmV0dXJuIGkubGVuZ3RoPWIsaX19LDE1ODpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO3ZhciBpPW4oNTYpLG89bigzMyksYT1uKDQ3KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LG4pe3ZhciByPWkodCk7ciBpbiBlP28uZihlLHIsYSgwLG4pKTplW3JdPW59fSwxNTk6ZnVuY3Rpb24oZSx0LG4pe3ZhciBpPW4oMjApKCJpdGVyYXRvciIpLG89ITE7dHJ5e3ZhciByPTAsYT17bmV4dDpmdW5jdGlvbigpe3JldHVybntkb25lOiEhcisrfX0scmV0dXJuOmZ1bmN0aW9uKCl7bz0hMH19O2FbaV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30sQXJyYXkuZnJvbShhLGZ1bmN0aW9uKCl7dGhyb3cgMn0pfWNhdGNoKGUpe31lLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtpZighdCYmIW8pcmV0dXJuITE7dmFyIG49ITE7dHJ5e3ZhciByPXt9O3JbaV09ZnVuY3Rpb24oKXtyZXR1cm57bmV4dDpmdW5jdGlvbigpe3JldHVybntkb25lOm49ITB9fX19LGUocil9Y2F0Y2goZSl7fXJldHVybiBufX0sMTY6ZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ITB9LDE2MDpmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbiBlKHQpe3ZhciBuPUFycmF5LmlzQXJyYXkodCk/W106e307Zm9yKHZhciByIGluIHQpe3ZhciBpPXRbcl07bltyXT1pJiYib2JqZWN0Ij09dHlwZW9mIGk/ZShpKTppfXJldHVybiBufX0sMTYxOmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dC5hPWZ1bmN0aW9uKGUsdCxuLHIsaSl7Zm9yKHQ9dC5zcGxpdD90LnNwbGl0KCIuIik6dCxyPTA7cjx0Lmxlbmd0aDtyKyspZT1lP2VbdFtyXV06aTtyZXR1cm4gZT09PWk/bjplfX0sMTYyOmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dC5hPWZ1bmN0aW9uKGUsdCxuKXt0LnNwbGl0JiYodD10LnNwbGl0KCIuIikpO2Zvcih2YXIgcixpPTAsbz10Lmxlbmd0aCxhPWU7aTxvOysraSlyPWFbdFtpXV0sYT1hW3RbaV1dPWk9PT1vLTE/bjpudWxsIT1yP3I6IX50W2krMV0uaW5kZXhPZigiLiIpJiYtMTwrdFtpKzFdP1tdOnt9fX0sMTYzOmZ1bmN0aW9uKGUsdCl7aC5TWU5DPTEsaC5BU1lOQz0yLGguUVVFVUU9NDt2YXIgZz0iZnVuLWhvb2tzIjt2YXIgbj1PYmplY3QuZnJlZXplKHt1c2VQcm94eTohMCxyZWFkeTowfSksYj1uZXcgV2Vha01hcCxyPSIyLDEsMCI9PT1bMV0ucmVkdWNlKGZ1bmN0aW9uKGUsdCxuKXtyZXR1cm5bZSx0LG5dfSwyKS50b1N0cmluZygpP0FycmF5LnByb3RvdHlwZS5yZWR1Y2U6ZnVuY3Rpb24oZSx0KXt2YXIgbixyPU9iamVjdCh0aGlzKSxpPXIubGVuZ3RoPj4+MCxvPTA7aWYodCluPXQ7ZWxzZXtmb3IoO288aSYmIShvIGluIHIpOylvKys7bj1yW28rK119Zm9yKDtvPGk7KW8gaW4gciYmKG49ZShuLHJbb10sbyxyKSksbysrO3JldHVybiBufTtmdW5jdGlvbiB2KGUsdCl7cmV0dXJuIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGUsdCl9dmFyIHk9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7cmV0dXJuIHIuY2FsbCh2KGFyZ3VtZW50cywxKSxmdW5jdGlvbih0LG4pe3JldHVybiBuJiZPYmplY3Qua2V5cyhuKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3RbZV09bltlXX0pLHR9LGUpfTtmdW5jdGlvbiBoKHUpe3ZhciBzLGU9e30sZD1bXTtmdW5jdGlvbiB0KGUsdCl7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIGU/Zi5jYWxsKG51bGwsInN5bmMiLGUsdCk6InN0cmluZyI9PXR5cGVvZiBlJiYiZnVuY3Rpb24iPT10eXBlb2YgdD9mLmFwcGx5KG51bGwsYXJndW1lbnRzKToib2JqZWN0Ij09dHlwZW9mIGU/ZnVuY3Rpb24obyxlLGEpe3ZhciB0PSEwO3ZvaWQgMD09PWUmJihlPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG8pLHQ9ITEpO3ZhciBjPXt9LG49WyJjb25zdHJ1Y3RvciJdO2Zvcig7KGU9ZS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuISgiZnVuY3Rpb24iIT10eXBlb2Ygb1tlXXx8LTEhPT1uLmluZGV4T2YoZSl8fGUubWF0Y2goL15fLykpfSkpLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHQsbj1lLnNwbGl0KCI6Iikscj1uWzBdLGk9blsxXXx8InN5bmMiO2Nbcl18fCh0PW9bcl0sY1tyXT1vW3JdPWYoaSx0LGE/W2Escl06dm9pZCAwKSl9KSxvPU9iamVjdC5nZXRQcm90b3R5cGVPZihvKSx0JiZvOyk7cmV0dXJuIGN9LmFwcGx5KG51bGwsYXJndW1lbnRzKTp2b2lkIDB9ZnVuY3Rpb24gbChvKXt2YXIgYT1BcnJheS5pc0FycmF5KG8pP286by5zcGxpdCgiLiIpO3JldHVybiByLmNhbGwoYSxmdW5jdGlvbih0LG4sZSl7dmFyIHI9dFtuXSxpPSExO3JldHVybiByfHwoZT09PWEubGVuZ3RoLTE/KHN8fGQucHVzaChmdW5jdGlvbigpe2l8fGNvbnNvbGUud2FybihnKyI6IHJlZmVyZW5jZWQgJyIrbysiJyBidXQgaXQgd2FzIG5ldmVyIGNyZWF0ZWQiKX0pLHRbbl09cChmdW5jdGlvbihlKXt0W25dPWUsaT0hMH0pKTp0W25dPXt9KX0sZSl9ZnVuY3Rpb24gcChyKXt2YXIgbz1bXSxhPVtdLGM9ZnVuY3Rpb24oKXt9LGU9e2JlZm9yZTpmdW5jdGlvbihlLHQpe3JldHVybiBuLmNhbGwodGhpcyxvLCJiZWZvcmUiLGUsdCl9LGFmdGVyOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIG4uY2FsbCh0aGlzLGEsImFmdGVyIixlLHQpfSxnZXRIb29rczpmdW5jdGlvbihuKXt2YXIgZT1vLmNvbmNhdChhKTsib2JqZWN0Ij09dHlwZW9mIG4mJihlPWUuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3Qua2V5cyhuKS5ldmVyeShmdW5jdGlvbihlKXtyZXR1cm4gdFtlXT09PW5bZV19KX0pKTt0cnl7eShlLHtyZW1vdmU6ZnVuY3Rpb24oKXtyZXR1cm4gZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2UucmVtb3ZlKCl9KSx0aGlzfX0pfWNhdGNoKGUpe2NvbnNvbGUuZXJyb3IoImVycm9yIGFkZGluZyBgcmVtb3ZlYCB0byBhcnJheSwgZGlkIHlvdSBtb2RpZnkgQXJyYXkucHJvdG90eXBlPyIpfXJldHVybiBlfSxyZW1vdmVBbGw6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRIb29rcygpLnJlbW92ZSgpfX0sdD17aW5zdGFsbDpmdW5jdGlvbihlLHQsbil7dGhpcy50eXBlPWUsKGM9bikobyxhKSxyJiZyKHQpfX07cmV0dXJuIGIuc2V0KGUuYWZ0ZXIsdCksZTtmdW5jdGlvbiBuKHQsZSxuLHIpe3ZhciBpPXtob29rOm4sdHlwZTplLHByaW9yaXR5OnJ8fDEwLHJlbW92ZTpmdW5jdGlvbigpe3ZhciBlPXQuaW5kZXhPZihpKTstMSE9PWUmJih0LnNwbGljZShlLDEpLGMobyxhKSl9fTtyZXR1cm4gdC5wdXNoKGkpLHQuc29ydChmdW5jdGlvbihlLHQpe3JldHVybiB0LnByaW9yaXR5LWUucHJpb3JpdHl9KSxjKG8sYSksdGhpc319ZnVuY3Rpb24gZihmLGUsdCl7dmFyIG49ZS5hZnRlciYmYi5nZXQoZS5hZnRlcik7aWYobil7aWYobi50eXBlIT09Zil0aHJvdyBnKyI6IHJlY3JlYXRlZCBob29rYWJsZSB3aXRoIGRpZmZlcmVudCB0eXBlIjtyZXR1cm4gZX12YXIgcixpLG89dD9sKHQpOnAoKSxhPXtnZXQ6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gb1t0XXx8UmVmbGVjdC5nZXQuYXBwbHkoUmVmbGVjdCxhcmd1bWVudHMpfX07cmV0dXJuIHN8fGQucHVzaChjKSx1LnVzZVByb3h5JiYiZnVuY3Rpb24iPT10eXBlb2YgUHJveHkmJlByb3h5LnJldm9jYWJsZT9pPW5ldyBQcm94eShlLGEpOnkoaT1mdW5jdGlvbigpe3JldHVybiBhLmFwcGx5P2EuYXBwbHkoZSx0aGlzLHYoYXJndW1lbnRzKSk6ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LG8pLGIuZ2V0KGkuYWZ0ZXIpLmluc3RhbGwoZixpLGZ1bmN0aW9uKGUsdCl7dmFyIHMsZD1bXTtyPWUubGVuZ3RofHx0Lmxlbmd0aD8oZS5mb3JFYWNoKG4pLHM9ZC5wdXNoKHZvaWQgMCktMSx0LmZvckVhY2gobiksZnVuY3Rpb24obixyLGUpe3ZhciBpLG89MCxhPSJhc3luYyI9PT1mJiYiZnVuY3Rpb24iPT10eXBlb2YgZVtlLmxlbmd0aC0xXSYmZS5wb3AoKTtmdW5jdGlvbiBjKGUpeyJzeW5jIj09PWY/aT1lOmEmJmEuYXBwbHkobnVsbCxhcmd1bWVudHMpfWZ1bmN0aW9uIHUoZSl7aWYoZFtvXSl7dmFyIHQ9dihhcmd1bWVudHMpO3JldHVybiB1LmJhaWw9Yyx0LnVuc2hpZnQodSksZFtvKytdLmFwcGx5KHIsdCl9InN5bmMiPT09Zj9pPWU6YSYmYS5hcHBseShudWxsLGFyZ3VtZW50cyl9cmV0dXJuIGRbc109ZnVuY3Rpb24oKXt2YXIgZT12KGFyZ3VtZW50cywxKTsiYXN5bmMiPT09ZiYmYSYmKGRlbGV0ZSB1LmJhaWwsZS5wdXNoKHUpKTt2YXIgdD1uLmFwcGx5KHIsZSk7InN5bmMiPT09ZiYmdSh0KX0sdS5hcHBseShudWxsLGUpLGl9KTp2b2lkIDA7ZnVuY3Rpb24gbihlKXtkLnB1c2goZS5ob29rKX1jKCl9KSxpO2Z1bmN0aW9uIGMoKXshcyYmKCJzeW5jIiE9PWZ8fHUucmVhZHkmaC5TWU5DKSYmKCJhc3luYyIhPT1mfHx1LnJlYWR5JmguQVNZTkMpPyJzeW5jIiE9PWYmJnUucmVhZHkmaC5RVUVVRT9hLmFwcGx5PWZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzO2QucHVzaChmdW5jdGlvbigpe2kuYXBwbHkoZVsxXSxlWzJdKX0pfTphLmFwcGx5PWZ1bmN0aW9uKCl7dGhyb3cgZysiOiBob29rZWQgZnVuY3Rpb24gbm90IHJlYWR5In06YS5hcHBseT1yfX1yZXR1cm4odT15KHt9LG4sdSkpLnJlYWR5P3QucmVhZHk9ZnVuY3Rpb24oKXtzPSEwLGZ1bmN0aW9uKGUpe2Zvcih2YXIgdDt0PWUuc2hpZnQoKTspdCgpfShkKX06cz0hMCx0LmdldD1sLHR9ZS5leHBvcnRzPWh9LDE3OmZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBwKGUsdCl7dGhpcy5zdG9wcGVkPWUsdGhpcy5yZXN1bHQ9dH12YXIgZz1uKDE1KSxiPW4oODEpLHY9big1MSkseT1uKDIzKSxoPW4oNjIpLG09big4Mik7KGUuZXhwb3J0cz1mdW5jdGlvbihlLHQsbixyLGkpe3ZhciBvLGEsYyx1LHMsZCxmLGw9eSh0LG4scj8yOjEpO2lmKGkpbz1lO2Vsc2V7aWYoImZ1bmN0aW9uIiE9dHlwZW9mKGE9aChlKSkpdGhyb3cgVHlwZUVycm9yKCJUYXJnZXQgaXMgbm90IGl0ZXJhYmxlIik7aWYoYihhKSl7Zm9yKGM9MCx1PXYoZS5sZW5ndGgpO2M8dTtjKyspaWYoKHM9cj9sKGcoZj1lW2NdKVswXSxmWzFdKTpsKGVbY10pKSYmcyBpbnN0YW5jZW9mIHApcmV0dXJuIHM7cmV0dXJuIG5ldyBwKCExKX1vPWEuY2FsbChlKX1mb3IoZD1vLm5leHQ7IShmPWQuY2FsbChvKSkuZG9uZTspaWYoIm9iamVjdCI9PXR5cGVvZihzPW0obyxsLGYudmFsdWUscikpJiZzJiZzIGluc3RhbmNlb2YgcClyZXR1cm4gcztyZXR1cm4gbmV3IHAoITEpfSkuc3RvcD1mdW5jdGlvbihlKXtyZXR1cm4gbmV3IHAoITAsZSl9fSwxODpmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlKXtpZigiZnVuY3Rpb24iIT10eXBlb2YgZSl0aHJvdyBUeXBlRXJyb3IoU3RyaW5nKGUpKyIgaXMgbm90IGEgZnVuY3Rpb24iKTtyZXR1cm4gZX19LDE5OmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dC5hPWZ1bmN0aW9uKCl7cmV0dXJuIHdpbmRvdy51cGJqc30sd2luZG93LnVwYmpzPXdpbmRvdy51cGJqc3x8e30sd2luZG93LnVwYmpzLmNtZD13aW5kb3cudXBianMuY21kfHxbXSx3aW5kb3cudXBianMucXVlPXdpbmRvdy51cGJqcy5xdWV8fFtdLHdpbmRvdy5fcGJqc0dsb2JhbHM9d2luZG93Ll9wYmpzR2xvYmFsc3x8W10sd2luZG93Ll9wYmpzR2xvYmFscy5wdXNoKCJ1cGJqcyIpfSwyOmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7bi5kKHQsImMiLGZ1bmN0aW9uKCl7cmV0dXJuIHJ9KSxuLmQodCwiZCIsZnVuY3Rpb24oKXtyZXR1cm4gaX0pLG4uZCh0LCJiIixmdW5jdGlvbigpe3JldHVybiBvfSksbi5kKHQsImEiLGZ1bmN0aW9uKCl7cmV0dXJuIGF9KTt2YXIgcj0ibmF0aXZlIixpPSJ2aWRlbyIsbz0iYmFubmVyIixhPSJhZHBvZCJ9LDIwOmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDI1KSxpPW4oNzUpLG89bigyNyksYT1uKDYwKSxjPW4oNzcpLHU9bigxMDYpLHM9aSgid2tzIiksZD1yLlN5bWJvbCxmPXU/ZDpkJiZkLndpdGhvdXRTZXR0ZXJ8fGE7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBvKHMsZSl8fChjJiZvKGQsZSk/c1tlXT1kW2VdOnNbZV09ZigiU3ltYm9sLiIrZSkpLHNbZV19fSwyMTpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO24uZCh0LCJhIixmdW5jdGlvbigpe3JldHVybiByfSk7dmFyIHk9bigwKTt2YXIgaCxyPShoPXdpbmRvdyxmdW5jdGlvbigpe3ZhciBlLHQ9W10sbj1mdW5jdGlvbihlKXt0cnl7aWYoIWUubG9jYXRpb24uYW5jZXN0b3JPcmlnaW5zKXJldHVybjtyZXR1cm4gZS5sb2NhdGlvbi5hbmNlc3Rvck9yaWdpbnN9Y2F0Y2goZSl7fX0oaCkscj0hMSxpPTAsbz0hMSxhPSExO2Rve3ZhciBjLHUscz1nLGQ9YSxmPXZvaWQgMCxsPSExLHA9bnVsbCxhPSExLGc9Zz9nLnBhcmVudDpoO3RyeXtmPWcubG9jYXRpb24uaHJlZnx8bnVsbH1jYXRjaChlKXtsPSEwfWlmKGwpaWYoZCl7dmFyIGI9cy5jb250ZXh0O3RyeXt1PXA9Yi5zb3VyY2VVcmwsbz0hMCxnPT09aC50b3AmJihyPSEwKSxiLmNhbm9uaWNhbFVybCYmKGU9Yi5jYW5vbmljYWxVcmwpfWNhdGNoKGUpe319ZWxzZXtPYmplY3QoeS5sb2dXYXJuKSgiVHJ5aW5nIHRvIGFjY2VzcyBjcm9zcyBkb21haW4gaWZyYW1lLiBDb250aW51aW5nIHdpdGhvdXQgcmVmZXJyZXIgYW5kIGxvY2F0aW9uIik7dHJ5e3ZhciB2PXMuZG9jdW1lbnQucmVmZXJyZXI7diYmKHA9dixnPT09aC50b3AmJihyPSEwKSl9Y2F0Y2goZSl7fSFwJiZuJiZuW2ktMV0mJihwPW5baS0xXSkscCYmIW8mJih1PXApfWVsc2UgZiYmKHU9cD1mLG89ITEsZz09PWgudG9wJiYocj0hMCwoYz1mdW5jdGlvbihlKXt0cnl7dmFyIHQ9ZS5xdWVyeVNlbGVjdG9yKCJsaW5rW3JlbD0nY2Fub25pY2FsJ10iKTtpZihudWxsIT09dClyZXR1cm4gdC5ocmVmfWNhdGNoKGUpe31yZXR1cm4gbnVsbH0oZy5kb2N1bWVudCkpJiYoZT1jKSkpLGcuY29udGV4dCYmZy5jb250ZXh0LnNvdXJjZVVybCYmKGE9ITApO3QucHVzaChwKSxpKyt9d2hpbGUoZyE9PWgudG9wKTtyZXR1cm4gdC5yZXZlcnNlKCkse3JlZmVyZXI6dXx8bnVsbCxyZWFjaGVkVG9wOnIsaXNBbXA6byxudW1JZnJhbWVzOmktMSxzdGFjazp0LGNhbm9uaWNhbFVybDplfHxudWxsfX0pfSwyMjA6ZnVuY3Rpb24oZSx0LG4pe24oMjIxKTt2YXIgcj1uKDUzKTtlLmV4cG9ydHM9cigiQXJyYXkiLCJmaW5kSW5kZXgiKX0sMjIxOmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIHI9bigxNCksaT1uKDU3KS5maW5kSW5kZXgsbz1uKDUyKSxhPW4oNjEpLGM9ImZpbmRJbmRleCIsdT0hMCxzPWEoYyk7YyBpbltdJiZBcnJheSgxKVtjXShmdW5jdGlvbigpe3U9ITF9KSxyKHt0YXJnZXQ6IkFycmF5Iixwcm90bzohMCxmb3JjZWQ6dXx8IXN9LHtmaW5kSW5kZXg6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gaSh0aGlzLGUsMTxhcmd1bWVudHMubGVuZ3RoP3Q6dm9pZCAwKX19KSxvKGMpfSwyMjg6ZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt0LmE9ZnVuY3Rpb24oKXt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsYywhMSl9O3ZhciByPW4oOCksZz1uLm4ociksYj1uKDM3KSxpPW4oNSksdj0obi5uKGkpLG4oMCkpLHk9bigyNCksbz1uKDEwKSxoPW4ubihvKSxtPW4oMTEpLGE9bigxMiksUz1uLm4oYSksQT1pLkVWRU5UUy5CSURfV09OO2Z1bmN0aW9uIGMoZSl7dmFyIHQsbixyLGksbyxhLGMsdSxzLGQ9ZS5tZXNzYWdlPyJtZXNzYWdlIjoiZGF0YSIsZj17fTt0cnl7Zj1KU09OLnBhcnNlKGVbZF0pfWNhdGNoKGUpe3JldHVybn1pZihmJiZmLmFkSWQpe3ZhciBsPWgoKSh5LmEuZ2V0Qmlkc1JlY2VpdmVkKCksZnVuY3Rpb24oZSl7cmV0dXJuIGUuYWRJZD09PWYuYWRJZH0pO2lmKGwmJiJQcmViaWQgUmVxdWVzdCI9PT1mLm1lc3NhZ2UmJihuPWUscj0odD1sKS5hZElkLGk9dC5hZCxvPXQuYWRVcmwsYT10LndpZHRoLGM9dC5oZWlnaHQsdT10LnJlbmRlcmVyLHM9dC5jcG0sT2JqZWN0KG0uYykodSk/T2JqZWN0KG0uYikodSx0KTpyJiYoZnVuY3Rpb24oZSl7dmFyIG89ZS5hZElkLGE9ZS5hZFVuaXRDb2RlLHI9ZS53aWR0aCxpPWUuaGVpZ2h0O2Z1bmN0aW9uIGMoZSl7dmFyIHQsbixyPSh0PW8sbj1hLHdpbmRvdy5nb29nbGV0YWc/ZnVuY3Rpb24obil7cmV0dXJuIGgoKSh3aW5kb3cuZ29vZ2xldGFnLnB1YmFkcygpLmdldFNsb3RzKCksZnVuY3Rpb24odCl7cmV0dXJuIGgoKSh0LmdldFRhcmdldGluZ0tleXMoKSxmdW5jdGlvbihlKXtyZXR1cm4gUygpKHQuZ2V0VGFyZ2V0aW5nKGUpLG4pfSl9KS5nZXRTbG90RWxlbWVudElkKCl9KHQpOndpbmRvdy5hcG50YWc/ZnVuY3Rpb24oZSl7dmFyIHQ9d2luZG93LmFwbnRhZy5nZXRUYWcoZSk7cmV0dXJuIHQmJnQudGFyZ2V0SWR9KG4pOm4pLGk9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocik7cmV0dXJuIGkmJmkucXVlcnlTZWxlY3RvcihlKX1bImRpdiIsImlmcmFtZSJdLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHQsbj1jKGUrJzpub3QoW3N0eWxlKj0iZGlzcGxheTogbm9uZSJdKScpO24/KCh0PW4uc3R5bGUpLndpZHRoPXIrInB4Iix0LmhlaWdodD1pKyJweCIpOk9iamVjdCh2LmxvZ1dhcm4pKCJVbmFibGUgdG8gbG9jYXRlIG1hdGNoaW5nIHBhZ2UgZWxlbWVudCBmb3IgYWRVbml0Q29kZSAiLmNvbmNhdChhLCIuICBDYW4ndCByZXNpemUgaXQgdG8gYWQncyBkaW1lbnNpb25zLiAgUGxlYXNlIHJldmlldyBzZXR1cC4iKSl9KX0odCksbi5zb3VyY2UucG9zdE1lc3NhZ2UoSlNPTi5zdHJpbmdpZnkoe21lc3NhZ2U6IlByZWJpZCBSZXNwb25zZSIsYWQ6T2JqZWN0KHYucmVwbGFjZUF1Y3Rpb25QcmljZSkoaSxzKSxhZFVybDpPYmplY3Qodi5yZXBsYWNlQXVjdGlvblByaWNlKShvLHMpLGFkSWQ6cix3aWR0aDphLGhlaWdodDpjfSksbi5vcmlnaW4pKSx5LmEuYWRkV2lubmluZ0JpZChsKSxnLmEuZW1pdChBLGwpKSxsJiYiUHJlYmlkIE5hdGl2ZSI9PT1mLm1lc3NhZ2Upe2lmKCJhc3NldFJlcXVlc3QiPT09Zi5hY3Rpb24pe3ZhciBwPU9iamVjdChiLmMpKGYsbCk7cmV0dXJuIHZvaWQgZS5zb3VyY2UucG9zdE1lc3NhZ2UoSlNPTi5zdHJpbmdpZnkocCksZS5vcmlnaW4pfWlmKCJjbGljayI9PT1PYmplY3QoYi5iKShmLGwpKXJldHVybjt5LmEuYWRkV2lubmluZ0JpZChsKSxnLmEuZW1pdChBLGwpfX19fSwyMjk6ZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt0LmE9ZnVuY3Rpb24oZSl7dmFyIHQ7dHJ5e2U9ZXx8d2luZG93LnNlc3Npb25TdG9yYWdlLHQ9SlNPTi5wYXJzZShlLmdldEl0ZW0odSkpfWNhdGNoKGUpe310JiZwKHQsITApfTt2YXIgcixpLG89bigzKSxhPW4oMCksYz1uKDQxKSx1PSJ1cGJqczpkZWJ1Z2dpbmciO2Z1bmN0aW9uIHMoZSl7T2JqZWN0KGEubG9nTWVzc2FnZSkoIkRFQlVHOiAiK2UpfWZ1bmN0aW9uIGQoZSl7T2JqZWN0KGEubG9nV2FybikoIkRFQlVHOiAiK2UpfWZ1bmN0aW9uIGYoZSl7cj1mdW5jdGlvbihlLHQsbil7aWYoYih0aGlzLmJpZGRlcnMsbi5iaWRkZXJDb2RlKSlyZXR1cm4gdm9pZCBkKCJiaWRkZXIgJyIuY29uY2F0KG4uYmlkZGVyQ29kZSwiJyBleGNsdWRlZCBmcm9tIGF1Y3Rpb24gYnkgYmlkZGVyIG92ZXJyaWRlcyIpKTtBcnJheS5pc0FycmF5KHRoaXMuYmlkcykmJnRoaXMuYmlkcy5mb3JFYWNoKGZ1bmN0aW9uKGUpe2coZSxuLmJpZGRlckNvZGUsdCl8fHYoZSxuLCJiaWRkZXIiKX0pO2UodCxuKX0uYmluZChlKSxjLmMuYmVmb3JlKHIsNSksaT1mdW5jdGlvbihlLHQpe3ZhciByPXRoaXMsbj10LmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4hYihyLmJpZGRlcnMsZS5iaWRkZXJDb2RlKXx8KGQoImJpZFJlcXVlc3QgJyIuY29uY2F0KGUuYmlkZGVyQ29kZSwiJyBleGNsdWRlZCBmcm9tIGF1Y3Rpb24gYnkgYmlkZGVyIG92ZXJyaWRlcyIpKSwhMSl9KTtBcnJheS5pc0FycmF5KHIuYmlkUmVxdWVzdHMpJiZuLmZvckVhY2goZnVuY3Rpb24obil7ci5iaWRSZXF1ZXN0cy5mb3JFYWNoKGZ1bmN0aW9uKHQpe24uYmlkcy5mb3JFYWNoKGZ1bmN0aW9uKGUpe2codCxuLmJpZGRlckNvZGUsZS5hZFVuaXRDb2RlKXx8dih0LGUsImJpZFJlcXVlc3QiKX0pfSl9KTtlKG4pfS5iaW5kKGUpLGMuZS5iZWZvcmUoaSw1KX1mdW5jdGlvbiBsKCl7Yy5jLmdldEhvb2tzKHtob29rOnJ9KS5yZW1vdmUoKSxjLmUuZ2V0SG9va3Moe2hvb2s6aX0pLnJlbW92ZSgpfWZ1bmN0aW9uIHAoZSx0KXt2YXIgbj0xPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PXQmJnQ7by5iLnNldENvbmZpZyh7ZGVidWc6ITB9KSxsKCksZihlKSxzKCJiaWRkZXIgb3ZlcnJpZGVzIGVuYWJsZWQiLmNvbmNhdChuPyIgZnJvbSBzZXNzaW9uIjoiIikpfWZ1bmN0aW9uIGcoZSx0LG4pe3JldHVybiBlLmJpZGRlciYmZS5iaWRkZXIhPT10fHwhKCFlLmFkVW5pdENvZGV8fGUuYWRVbml0Q29kZT09PW4pfWZ1bmN0aW9uIGIoZSx0KXtyZXR1cm4gQXJyYXkuaXNBcnJheShlKSYmLTE9PT1lLmluZGV4T2YodCl9ZnVuY3Rpb24gdihuLGUscil7cmV0dXJuIE9iamVjdC5rZXlzKG4pLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4tMT09PVsiYWRVbml0Q29kZSIsImJpZGRlciJdLmluZGV4T2YoZSl9KS5yZWR1Y2UoZnVuY3Rpb24oZSx0KXtyZXR1cm4gcygiYmlkZGVyIG92ZXJyaWRlcyBjaGFuZ2VkICciLmNvbmNhdChlLmFkVW5pdENvZGUsIi8iKS5jb25jYXQoZS5iaWRkZXJDb2RlLCInICIpLmNvbmNhdChyLCIuIikuY29uY2F0KHQsIiBmcm9tICciKS5jb25jYXQoZVt0XSwiLmpzJyB0byAnIikuY29uY2F0KG5bdF0sIiciKSksZVt0XT1uW3RdLGV9LGUpfWZ1bmN0aW9uIHkoZSl7aWYoZS5lbmFibGVkKXt0cnl7d2luZG93LnNlc3Npb25TdG9yYWdlLnNldEl0ZW0odSxKU09OLnN0cmluZ2lmeShlKSl9Y2F0Y2goZSl7fXAoZSl9ZWxzZXtsKCkscygiYmlkZGVyIG92ZXJyaWRlcyBkaXNhYmxlZCIpO3RyeXt3aW5kb3cuc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbSh1KX1jYXRjaChlKXt9fX1vLmIuZ2V0Q29uZmlnKCJkZWJ1Z2dpbmciLGZ1bmN0aW9uKGUpe3JldHVybiB5KGUuZGVidWdnaW5nKX0pfSwyMzpmdW5jdGlvbihlLHQsbil7dmFyIG89bigxOCk7ZS5leHBvcnRzPWZ1bmN0aW9uKHIsaSxlKXtpZihvKHIpLHZvaWQgMD09PWkpcmV0dXJuIHI7c3dpdGNoKGUpe2Nhc2UgMDpyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gci5jYWxsKGkpfTtjYXNlIDE6cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiByLmNhbGwoaSxlKX07Y2FzZSAyOnJldHVybiBmdW5jdGlvbihlLHQpe3JldHVybiByLmNhbGwoaSxlLHQpfTtjYXNlIDM6cmV0dXJuIGZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gci5jYWxsKGksZSx0LG4pfX1yZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gci5hcHBseShpLGFyZ3VtZW50cyl9fX0sMjQ6ZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0IjtuLmQodCwiYSIsZnVuY3Rpb24oKXtyZXR1cm4gdX0pO3ZhciByPW4oMCkscz1uKDQxKSxpPW4oMTApLG89bi5uKGkpLGE9big1KTt2YXIgZCxjLHU9KGQ9W10sKGM9e30pLmFkZFdpbm5pbmdCaWQ9ZnVuY3Rpb24odCl7dmFyIGU9bygpKGQsZnVuY3Rpb24oZSl7cmV0dXJuIGUuZ2V0QXVjdGlvbklkKCk9PT10LmF1Y3Rpb25JZH0pO2U/KHQuc3RhdHVzPWEuQklEX1NUQVRVUy5SRU5ERVJFRCxlLmFkZFdpbm5pbmdCaWQodCkpOk9iamVjdChyLmxvZ1dhcm4pKCJBdWN0aW9uIG5vdCBmb3VuZCB3aGVuIGFkZGluZyB3aW5uaW5nIGJpZCIpfSxjLmdldEFsbFdpbm5pbmdCaWRzPWZ1bmN0aW9uKCl7cmV0dXJuIGQubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLmdldFdpbm5pbmdCaWRzKCl9KS5yZWR1Y2Uoci5mbGF0dGVuLFtdKX0sYy5nZXRCaWRzUmVxdWVzdGVkPWZ1bmN0aW9uKCl7cmV0dXJuIGQubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLmdldEJpZFJlcXVlc3RzKCl9KS5yZWR1Y2Uoci5mbGF0dGVuLFtdKX0sYy5nZXROb0JpZHM9ZnVuY3Rpb24oKXtyZXR1cm4gZC5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGUuZ2V0Tm9CaWRzKCl9KS5yZWR1Y2Uoci5mbGF0dGVuLFtdKX0sYy5nZXRCaWRzUmVjZWl2ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gZC5tYXAoZnVuY3Rpb24oZSl7aWYoZS5nZXRBdWN0aW9uU3RhdHVzKCk9PT1zLmEpcmV0dXJuIGUuZ2V0Qmlkc1JlY2VpdmVkKCl9KS5yZWR1Y2Uoci5mbGF0dGVuLFtdKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGV9KX0sYy5nZXRBZFVuaXRzPWZ1bmN0aW9uKCl7cmV0dXJuIGQubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLmdldEFkVW5pdHMoKX0pLnJlZHVjZShyLmZsYXR0ZW4sW10pfSxjLmdldEFkVW5pdENvZGVzPWZ1bmN0aW9uKCl7cmV0dXJuIGQubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLmdldEFkVW5pdENvZGVzKCl9KS5yZWR1Y2Uoci5mbGF0dGVuLFtdKS5maWx0ZXIoci51bmlxdWVzKX0sYy5jcmVhdGVBdWN0aW9uPWZ1bmN0aW9uKGUpe3ZhciB0LG49ZS5hZFVuaXRzLHI9ZS5hZFVuaXRDb2RlcyxpPWUuY2FsbGJhY2ssbz1lLmNiVGltZW91dCxhPWUubGFiZWxzLGM9ZS5hdWN0aW9uSWQsdT1PYmplY3Qocy5rKSh7YWRVbml0czpuLGFkVW5pdENvZGVzOnIsY2FsbGJhY2s6aSxjYlRpbWVvdXQ6byxsYWJlbHM6YSxhdWN0aW9uSWQ6Y30pO3JldHVybiB0PXUsZC5wdXNoKHQpLHV9LGMuZmluZEJpZEJ5QWRJZD1mdW5jdGlvbih0KXtyZXR1cm4gbygpKGQubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLmdldEJpZHNSZWNlaXZlZCgpfSkucmVkdWNlKHIuZmxhdHRlbixbXSksZnVuY3Rpb24oZSl7cmV0dXJuIGUuYWRJZD09PXR9KX0sYy5nZXRTdGFuZGFyZEJpZGRlckFkU2VydmVyVGFyZ2V0aW5nPWZ1bmN0aW9uKCl7cmV0dXJuIE9iamVjdChzLmopKClbYS5KU09OX01BUFBJTkcuQURTRVJWRVJfVEFSR0VUSU5HXX0sYy5zZXRTdGF0dXNGb3JCaWRzPWZ1bmN0aW9uKGUsdCl7dmFyIG4scj1jLmZpbmRCaWRCeUFkSWQoZSk7ciYmKHIuc3RhdHVzPXQpLCFyfHx0IT09YS5CSURfU1RBVFVTLkJJRF9UQVJHRVRJTkdfU0VUfHwobj1vKCkoZCxmdW5jdGlvbihlKXtyZXR1cm4gZS5nZXRBdWN0aW9uSWQoKT09PXIuYXVjdGlvbklkfSkpJiZuLnNldEJpZFRhcmdldGluZyhyKX0sYy5nZXRMYXN0QXVjdGlvbklkPWZ1bmN0aW9uKCl7cmV0dXJuIGQubGVuZ3RoJiZkW2QubGVuZ3RoLTFdLmdldEF1Y3Rpb25JZCgpfSxjKX0sMjU6ZnVuY3Rpb24obixlLHQpeyhmdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUpe3JldHVybiBlJiZlLk1hdGg9PU1hdGgmJmV9bi5leHBvcnRzPXQoIm9iamVjdCI9PXR5cGVvZiBnbG9iYWxUaGlzJiZnbG9iYWxUaGlzKXx8dCgib2JqZWN0Ij09dHlwZW9mIHdpbmRvdyYmd2luZG93KXx8dCgib2JqZWN0Ij09dHlwZW9mIHNlbGYmJnNlbGYpfHx0KCJvYmplY3QiPT10eXBlb2YgZSYmZSl8fEZ1bmN0aW9uKCJyZXR1cm4gdGhpcyIpKCl9KS5jYWxsKGUsdCgzNSkpfSwyNjpmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4ib2JqZWN0Ij09dHlwZW9mIGU/bnVsbCE9PWU6ImZ1bmN0aW9uIj09dHlwZW9mIGV9fSwyNzpmdW5jdGlvbihlLHQpe3ZhciBuPXt9Lmhhc093blByb3BlcnR5O2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybiBuLmNhbGwoZSx0KX19LDI4OmZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKGUpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiBlP2U6dm9pZCAwfXZhciBpPW4oNDIpLG89bigyNSk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg8Mj9yKGlbZV0pfHxyKG9bZV0pOmlbZV0mJmlbZV1bdF18fG9bZV0mJm9bZV1bdF19fSwyOTpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO24uZCh0LCJiIixmdW5jdGlvbigpe3JldHVybiBjfSksbi5kKHQsImEiLGZ1bmN0aW9uKCl7cmV0dXJuIHV9KSx0LmQ9ZnVuY3Rpb24oZSx0KXt2YXIgbj1PYmplY3Qoby5nZXRCaWRSZXF1ZXN0KShlLnJlcXVlc3RJZCx0KSxyPW4mJk9iamVjdChvLmRlZXBBY2Nlc3MpKG4sIm1lZGlhVHlwZXMudmlkZW8iKSxpPXImJk9iamVjdChvLmRlZXBBY2Nlc3MpKHIsImNvbnRleHQiKTtyZXR1cm4gcyhlLG4scixpKX0sbi5kKHQsImMiLGZ1bmN0aW9uKCl7cmV0dXJuIHN9KTtuKDkpO3ZhciBvPW4oMCksaT1uKDMpLHI9bigxMiksYT0obi5uKHIpLG4oMTMpKSxjPSJvdXRzdHJlYW0iLHU9Imluc3RyZWFtIjt2YXIgcz1PYmplY3QoYS5iKSgic3luYyIsZnVuY3Rpb24oZSx0LG4scil7cmV0dXJuIXR8fG4mJnIhPT1jP2kuYi5nZXRDb25maWcoImNhY2hlLnVybCIpfHwhZS52YXN0WG1sfHxlLnZhc3RVcmw/ISghZS52YXN0VXJsJiYhZS52YXN0WG1sKTooT2JqZWN0KG8ubG9nRXJyb3IpKCdcbiAgICAgICAgVGhpcyBiaWQgY29udGFpbnMgb25seSB2YXN0WG1sIGFuZCB3aWxsIG5vdCB3b3JrIHdoZW4gYSBwcmViaWQgY2FjaGUgdXJsIGlzIG5vdCBzcGVjaWZpZWQuXG4gICAgICAgIFRyeSBlbmFibGluZyBwcmViaWQgY2FjaGUgd2l0aCB1cGJqcy5zZXRDb25maWcoeyBjYWNoZToge3VybDogIi4uLiJ9IH0pO1xuICAgICAgJyksITEpOnIhPT1jfHwhIShlLnJlbmRlcmVyfHx0LnJlbmRlcmVyfHxuLnJlbmRlcmVyKX0sImNoZWNrVmlkZW9CaWRTZXR1cCIpfSwzOmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7bi5kKHQsImEiLGZ1bmN0aW9uKCl7cmV0dXJuIHl9KSxuLmQodCwiYiIsZnVuY3Rpb24oKXtyZXR1cm4gQ30pO3ZhciByPW4oNDYpLGk9bigxMCksYT1uLm4oaSksbz1uKDEyKSxjPW4ubihvKSx1PW4oNzkpLHM9bi5uKHUpLGQ9bigwKTtmdW5jdGlvbiBmKCl7cmV0dXJuKGY9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0pLmFwcGx5KHRoaXMsYXJndW1lbnRzKX12YXIgbD1uKDkxKSxwPW4oMCksZz1uKDUpLGI9IlRSVUUiPT09cC5nZXRQYXJhbWV0ZXJCeU5hbWUoZy5ERUJVR19NT0RFKS50b1VwcGVyQ2FzZSgpLHY9d2luZG93LmxvY2F0aW9uLm9yaWdpbix5PSJyYW5kb20iLGg9e307aFt5XT0hMCxoLmZpeGVkPSEwO3ZhciBtPXksUz17TE9XOiJsb3ciLE1FRElVTToibWVkaXVtIixISUdIOiJoaWdoIixBVVRPOiJhdXRvIixERU5TRToiZGVuc2UiLENVU1RPTToiY3VzdG9tIn07dmFyIEEsRSxPLFQsSSxDPShUPVtdLEk9bnVsbCx3KCkse2dldEN1cnJlbnRCaWRkZXI6ZnVuY3Rpb24oKXtyZXR1cm4gSX0sZ2V0Q29uZmlnOmZ1bmN0aW9uKCl7aWYoYXJndW1lbnRzLmxlbmd0aDw9MSYmImZ1bmN0aW9uIiE9dHlwZW9mKGFyZ3VtZW50cy5sZW5ndGg8PTA/dm9pZCAwOmFyZ3VtZW50c1swXSkpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg8PTA/dm9pZCAwOmFyZ3VtZW50c1swXTtyZXR1cm4gZT9wLmRlZXBBY2Nlc3MoaigpLGUpOmooKX1yZXR1cm4gZnVuY3Rpb24oZSx0KXt2YXIgbj10O2lmKCJzdHJpbmciIT10eXBlb2YgZSYmKG49ZSxlPSIqIiksImZ1bmN0aW9uIj09dHlwZW9mIG4pe3ZhciByPXt0b3BpYzplLGNhbGxiYWNrOm59O3JldHVybiBULnB1c2gociksZnVuY3Rpb24oKXtULnNwbGljZShULmluZGV4T2YociksMSl9fXAubG9nRXJyb3IoImxpc3RlbmVyIG11c3QgYmUgYSBmdW5jdGlvbiIpfS5hcHBseSh2b2lkIDAsYXJndW1lbnRzKX0sc2V0Q29uZmlnOmZ1bmN0aW9uKG4pe3ZhciBlLHI7cC5pc1BsYWluT2JqZWN0KG4pPyhlPU9iamVjdC5rZXlzKG4pLHI9e30sZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciB0PW5bZV07cC5pc1BsYWluT2JqZWN0KEFbZV0pJiZwLmlzUGxhaW5PYmplY3QodCkmJih0PWYoe30sQVtlXSx0KSkscltlXT1FW2VdPXR9KSxfKHIpKTpwLmxvZ0Vycm9yKCJzZXRDb25maWcgb3B0aW9ucyBtdXN0IGJlIGFuIG9iamVjdCIpfSxzZXREZWZhdWx0czpmdW5jdGlvbihlKXtwLmlzUGxhaW5PYmplY3QoQSk/KGYoQSxlKSxmKEUsZSkpOnAubG9nRXJyb3IoImRlZmF1bHRzIG11c3QgYmUgYW4gb2JqZWN0Iil9LHJlc2V0Q29uZmlnOncscnVuV2l0aEJpZGRlcjpCLGNhbGxiYWNrV2l0aEJpZGRlcjpmdW5jdGlvbihvKXtyZXR1cm4gZnVuY3Rpb24oaSl7cmV0dXJuIGZ1bmN0aW9uKCl7aWYoImZ1bmN0aW9uIj09dHlwZW9mIGkpe2Zvcih2YXIgZSx0PWFyZ3VtZW50cy5sZW5ndGgsbj1uZXcgQXJyYXkodCkscj0wO3I8dDtyKyspbltyXT1hcmd1bWVudHNbcl07cmV0dXJuIEIobywoZT1wLmJpbmQpLmNhbGwuYXBwbHkoZSxbaSx0aGlzXS5jb25jYXQobikpKX1wLmxvZ1dhcm4oImNvbmZpZy5jYWxsYmFja1dpdGhCaWRkZXIgY2FsbGJhY2sgaXMgbm90IGEgZnVuY3Rpb24iKX19fSxzZXRCaWRkZXJDb25maWc6ZnVuY3Rpb24ocil7dHJ5eyFmdW5jdGlvbihlKXtpZighcC5pc1BsYWluT2JqZWN0KGUpKXRocm93InNldEJpZGRlckNvbmZpZyBiaWRkZXIgb3B0aW9ucyBtdXN0IGJlIGFuIG9iamVjdCI7aWYoIUFycmF5LmlzQXJyYXkoZS5iaWRkZXJzKXx8IWUuYmlkZGVycy5sZW5ndGgpdGhyb3cic2V0QmlkZGVyQ29uZmlnIGJpZGRlciBvcHRpb25zIG11c3QgY29udGFpbiBhIGJpZGRlcnMgbGlzdCB3aXRoIGF0IGxlYXN0IDEgYmlkZGVyIjtpZighcC5pc1BsYWluT2JqZWN0KGUuY29uZmlnKSl0aHJvdyJzZXRCaWRkZXJDb25maWcgYmlkZGVyIG9wdGlvbnMgbXVzdCBjb250YWluIGEgY29uZmlnIG9iamVjdCJ9KHIpLHIuYmlkZGVycy5mb3JFYWNoKGZ1bmN0aW9uKG4pe09bbl18fChPW25dPXt9KSxPYmplY3Qua2V5cyhyLmNvbmZpZykuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdD1yLmNvbmZpZ1tlXTtwLmlzUGxhaW5PYmplY3QodCk/T1tuXVtlXT1mKHt9LE9bbl1bZV18fHt9LHQpOk9bbl1bZV09dH0pfSl9Y2F0Y2goZSl7cC5sb2dFcnJvcihlKX19LGdldEJpZGRlckNvbmZpZzpmdW5jdGlvbigpe3JldHVybiBPfX0pO2Z1bmN0aW9uIHcoKXtBPXt9O3ZhciBuPXtfZGVidWc6YixnZXQgZGVidWcoKXtyZXR1cm4gdGhpcy5fZGVidWd9LHNldCBkZWJ1ZyhlKXt0aGlzLl9kZWJ1Zz1lfSxfYmlkZGVyVGltZW91dDozZTMsZ2V0IGJpZGRlclRpbWVvdXQoKXtyZXR1cm4gdGhpcy5fYmlkZGVyVGltZW91dH0sc2V0IGJpZGRlclRpbWVvdXQoZSl7dGhpcy5fYmlkZGVyVGltZW91dD1lfSxfcHVibGlzaGVyRG9tYWluOnYsZ2V0IHB1Ymxpc2hlckRvbWFpbigpe3JldHVybiB0aGlzLl9wdWJsaXNoZXJEb21haW59LHNldCBwdWJsaXNoZXJEb21haW4oZSl7dGhpcy5fcHVibGlzaGVyRG9tYWluPWV9LF9wcmljZUdyYW51bGFyaXR5OlMuTUVESVVNLHNldCBwcmljZUdyYW51bGFyaXR5KGUpe28oZSkmJigic3RyaW5nIj09dHlwZW9mIGU/dGhpcy5fcHJpY2VHcmFudWxhcml0eT1pKGUpP2U6Uy5NRURJVU06cC5pc1BsYWluT2JqZWN0KGUpJiYodGhpcy5fY3VzdG9tUHJpY2VCdWNrZXQ9ZSx0aGlzLl9wcmljZUdyYW51bGFyaXR5PVMuQ1VTVE9NLHAubG9nTWVzc2FnZSgiVXNpbmcgY3VzdG9tIHByaWNlIGdyYW51bGFyaXR5IikpKX0sZ2V0IHByaWNlR3JhbnVsYXJpdHkoKXtyZXR1cm4gdGhpcy5fcHJpY2VHcmFudWxhcml0eX0sX2N1c3RvbVByaWNlQnVja2V0Ont9LGdldCBjdXN0b21QcmljZUJ1Y2tldCgpe3JldHVybiB0aGlzLl9jdXN0b21QcmljZUJ1Y2tldH0sX21lZGlhVHlwZVByaWNlR3JhbnVsYXJpdHk6e30sZ2V0IG1lZGlhVHlwZVByaWNlR3JhbnVsYXJpdHkoKXtyZXR1cm4gdGhpcy5fbWVkaWFUeXBlUHJpY2VHcmFudWxhcml0eX0sc2V0IG1lZGlhVHlwZVByaWNlR3JhbnVsYXJpdHkobil7dmFyIHI9dGhpczt0aGlzLl9tZWRpYVR5cGVQcmljZUdyYW51bGFyaXR5PU9iamVjdC5rZXlzKG4pLnJlZHVjZShmdW5jdGlvbihlLHQpe3JldHVybiBvKG5bdF0pPyJzdHJpbmciPT10eXBlb2Ygbj9lW3RdPWkoblt0XSk/blt0XTpyLl9wcmljZUdyYW51bGFyaXR5OnAuaXNQbGFpbk9iamVjdChuKSYmKGVbdF09blt0XSxwLmxvZ01lc3NhZ2UoIlVzaW5nIGN1c3RvbSBwcmljZSBncmFudWxhcml0eSBmb3IgIi5jb25jYXQodCkpKTpwLmxvZ1dhcm4oIkludmFsaWQgcHJpY2UgZ3JhbnVsYXJpdHkgZm9yIG1lZGlhIHR5cGU6ICIuY29uY2F0KHQpKSxlfSx7fSl9LF9zZW5kQWxsQmlkczohMCxnZXQgZW5hYmxlU2VuZEFsbEJpZHMoKXtyZXR1cm4gdGhpcy5fc2VuZEFsbEJpZHN9LHNldCBlbmFibGVTZW5kQWxsQmlkcyhlKXt0aGlzLl9zZW5kQWxsQmlkcz1lfSxfdXNlQmlkQ2FjaGU6ITEsZ2V0IHVzZUJpZENhY2hlKCl7cmV0dXJuIHRoaXMuX3VzZUJpZENhY2hlfSxzZXQgdXNlQmlkQ2FjaGUoZSl7dGhpcy5fdXNlQmlkQ2FjaGU9ZX0sX2RldmljZUFjY2VzczohMCxnZXQgZGV2aWNlQWNjZXNzKCl7cmV0dXJuIHRoaXMuX2RldmljZUFjY2Vzc30sc2V0IGRldmljZUFjY2VzcyhlKXt0aGlzLl9kZXZpY2VBY2Nlc3M9ZX0sX2JpZGRlclNlcXVlbmNlOm0sZ2V0IGJpZGRlclNlcXVlbmNlKCl7cmV0dXJuIHRoaXMuX2JpZGRlclNlcXVlbmNlfSxzZXQgYmlkZGVyU2VxdWVuY2UoZSl7aFtlXT90aGlzLl9iaWRkZXJTZXF1ZW5jZT1lOnAubG9nV2FybigiSW52YWxpZCBvcmRlcjogIi5jb25jYXQoZSwiLiBCaWRkZXIgU2VxdWVuY2Ugd2FzIG5vdCBzZXQuIikpfSxfdGltZW91dEJ1ZmZlcjo0MDAsZ2V0IHRpbWVvdXRCdWZmZXIoKXtyZXR1cm4gdGhpcy5fdGltZW91dEJ1ZmZlcn0sc2V0IHRpbWVvdXRCdWZmZXIoZSl7dGhpcy5fdGltZW91dEJ1ZmZlcj1lfSxfZGlzYWJsZUFqYXhUaW1lb3V0OiExLGdldCBkaXNhYmxlQWpheFRpbWVvdXQoKXtyZXR1cm4gdGhpcy5fZGlzYWJsZUFqYXhUaW1lb3V0fSxzZXQgZGlzYWJsZUFqYXhUaW1lb3V0KGUpe3RoaXMuX2Rpc2FibGVBamF4VGltZW91dD1lfSxfYXVjdGlvbk9wdGlvbnM6e30sZ2V0IGF1Y3Rpb25PcHRpb25zKCl7cmV0dXJuIHRoaXMuX2F1Y3Rpb25PcHRpb25zfSxzZXQgYXVjdGlvbk9wdGlvbnMoZSl7IWZ1bmN0aW9uKGUpe2lmKCFwLmlzUGxhaW5PYmplY3QoZSkpcmV0dXJuIHAubG9nV2FybigiQXVjdGlvbiBPcHRpb25zIG11c3QgYmUgYW4gb2JqZWN0IiksITE7Zm9yKHZhciB0PTAsbj1PYmplY3Qua2V5cyhlKTt0PG4ubGVuZ3RoO3QrKyl7dmFyIHI9blt0XTtpZigic2Vjb25kYXJ5QmlkZGVycyIhPT1yKXJldHVybiBwLmxvZ1dhcm4oIkF1Y3Rpb24gT3B0aW9ucyBnaXZlbiBhbiBpbmNvcnJlY3QgcGFyYW06ICIuY29uY2F0KHIpKSwhMTtpZigic2Vjb25kYXJ5QmlkZGVycyI9PT1yKXtpZighcC5pc0FycmF5KGVbcl0pKXJldHVybiBwLmxvZ1dhcm4oIkF1Y3Rpb24gT3B0aW9ucyAiLmNvbmNhdChyLCIgbXVzdCBiZSBvZiB0eXBlIEFycmF5IikpLCExO2lmKCFlW3JdLmV2ZXJ5KHAuaXNTdHIpKXJldHVybiBwLmxvZ1dhcm4oIkF1Y3Rpb24gT3B0aW9ucyAiLmNvbmNhdChyLCIgbXVzdCBiZSBvbmx5IHN0cmluZyIpKSwhMX19cmV0dXJuITB9KGUpfHwodGhpcy5fYXVjdGlvbk9wdGlvbnM9ZSl9fTtmdW5jdGlvbiBpKHQpe3JldHVybiBhKCkoT2JqZWN0LmtleXMoUyksZnVuY3Rpb24oZSl7cmV0dXJuIHQ9PT1TW2VdfSl9ZnVuY3Rpb24gbyhlKXtpZihlKXtpZigic3RyaW5nIj09dHlwZW9mIGUpaShlKXx8cC5sb2dXYXJuKCJQcmViaWQgV2FybmluZzogc2V0UHJpY2VHcmFudWxhcml0eSB3YXMgY2FsbGVkIHdpdGggaW52YWxpZCBzZXR0aW5nLCB1c2luZyBgbWVkaXVtYCBhcyBkZWZhdWx0LiIpO2Vsc2UgaWYocC5pc1BsYWluT2JqZWN0KGUpJiYhT2JqZWN0KHIuYikoZSkpcmV0dXJuIHZvaWQgcC5sb2dFcnJvcigiSW52YWxpZCBjdXN0b20gcHJpY2UgdmFsdWUgcGFzc2VkIHRvIGBzZXRQcmljZUdyYW51bGFyaXR5KClgIik7cmV0dXJuIDF9cC5sb2dFcnJvcigiUHJlYmlkIEVycm9yOiBubyB2YWx1ZSBwYXNzZWQgdG8gYHNldFByaWNlR3JhbnVsYXJpdHkoKWAiKX1FJiZfKE9iamVjdC5rZXlzKEUpLnJlZHVjZShmdW5jdGlvbihlLHQpe3JldHVybiBFW3RdIT09blt0XSYmKGVbdF09blt0XXx8e30pLGV9LHt9KSksRT1uLE89e319ZnVuY3Rpb24gaigpe2lmKEkmJk8mJnAuaXNQbGFpbk9iamVjdChPW0ldKSl7dmFyIG49T1tJXSxlPW5ldyBzLmEoT2JqZWN0LmtleXMoRSkuY29uY2F0KE9iamVjdC5rZXlzKG4pKSk7cmV0dXJuIGwoZSkucmVkdWNlKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHZvaWQgMD09PW5bdF0/ZVt0XT1FW3RdOnZvaWQgMCE9PUVbdF0mJnAuaXNQbGFpbk9iamVjdChuW3RdKT9lW3RdPU9iamVjdChkLm1lcmdlRGVlcCkoe30sRVt0XSxuW3RdKTplW3RdPW5bdF0sZX0se30pfXJldHVybiBmKHt9LEUpfWZ1bmN0aW9uIF8oaSl7dmFyIHQ9T2JqZWN0LmtleXMoaSk7VC5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGMoKSh0LGUudG9waWMpfSkuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdCxuLHI7ZS5jYWxsYmFjaygodD17fSxuPWUudG9waWMscj1pW2UudG9waWNdLG4gaW4gdD9PYmplY3QuZGVmaW5lUHJvcGVydHkodCxuLHt2YWx1ZTpyLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwfSk6dFtuXT1yLHQpKX0pLFQuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiIqIj09PWUudG9waWN9KS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiBlLmNhbGxiYWNrKGkpfSl9ZnVuY3Rpb24gQihlLHQpe0k9ZTt0cnl7cmV0dXJuIHQoKX1maW5hbGx5e0k9bnVsbH19fSwzMDpmdW5jdGlvbihlLHQsbil7dmFyIHI9bigzMSk7ZS5leHBvcnRzPSFyKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwxLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gN319KVsxXX0pfSwzMTpmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlKXt0cnl7cmV0dXJuISFlKCl9Y2F0Y2goZSl7cmV0dXJuITB9fX0sMzI6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMzApLGk9bigzMyksbz1uKDQ3KTtlLmV4cG9ydHM9cj9mdW5jdGlvbihlLHQsbil7cmV0dXJuIGkuZihlLHQsbygxLG4pKX06ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBlW3RdPW4sZX19LDMzOmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDMwKSxpPW4oNzMpLG89bigxNSksYT1uKDU2KSxjPU9iamVjdC5kZWZpbmVQcm9wZXJ0eTt0LmY9cj9jOmZ1bmN0aW9uKGUsdCxuKXtpZihvKGUpLHQ9YSh0LCEwKSxvKG4pLGkpdHJ5e3JldHVybiBjKGUsdCxuKX1jYXRjaChlKXt9aWYoImdldCJpbiBufHwic2V0ImluIG4pdGhyb3cgVHlwZUVycm9yKCJBY2Nlc3NvcnMgbm90IHN1cHBvcnRlZCIpO3JldHVybiJ2YWx1ZSJpbiBuJiYoZVt0XT1uLnZhbHVlKSxlfX0sMzQ6ZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt0LmE9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbmV3IHIoZSx0KX07dmFyIGk9bigwKTtmdW5jdGlvbiByKGUsdCl7dmFyIG49dCYmdC5zcmN8fCJjbGllbnQiLHI9ZXx8MDt0aGlzLmJpZGRlckNvZGU9dCYmdC5iaWRkZXJ8fCIiLHRoaXMud2lkdGg9MCx0aGlzLmhlaWdodD0wLHRoaXMuc3RhdHVzTWVzc2FnZT1mdW5jdGlvbigpe3N3aXRjaChyKXtjYXNlIDA6cmV0dXJuIlBlbmRpbmciO2Nhc2UgMTpyZXR1cm4iQmlkIGF2YWlsYWJsZSI7Y2FzZSAyOnJldHVybiJCaWQgcmV0dXJuZWQgZW1wdHkgb3IgZXJyb3IgcmVzcG9uc2UiO2Nhc2UgMzpyZXR1cm4iQmlkIHRpbWVkIG91dCJ9fSgpLHRoaXMuYWRJZD1pLmdldFVuaXF1ZUlkZW50aWZpZXJTdHIoKSx0aGlzLnJlcXVlc3RJZD10JiZ0LmJpZElkLHRoaXMubWVkaWFUeXBlPSJiYW5uZXIiLHRoaXMuc291cmNlPW4sdGhpcy5nZXRTdGF0dXNDb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIHJ9LHRoaXMuZ2V0U2l6ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLndpZHRoKyJ4Iit0aGlzLmhlaWdodH19fSwzNTpmdW5jdGlvbihlLHQpe3ZhciBuPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KCk7dHJ5e249bnx8RnVuY3Rpb24oInJldHVybiB0aGlzIikoKXx8KDAsZXZhbCkoInRoaXMiKX1jYXRjaChlKXsib2JqZWN0Ij09dHlwZW9mIHdpbmRvdyYmKG49d2luZG93KX1lLmV4cG9ydHM9bn0sMzU2OmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDM1Nyk7ZS5leHBvcnRzPXJ9LDM1NzpmdW5jdGlvbihlLHQsbil7bigzNTgpO3ZhciByPW4oNTMpO2UuZXhwb3J0cz1yKCJTdHJpbmciLCJpbmNsdWRlcyIpfSwzNTg6ZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt2YXIgcj1uKDE0KSxpPW4oMzU5KSxvPW4oNTApO3Ioe3RhcmdldDoiU3RyaW5nIixwcm90bzohMCxmb3JjZWQ6IW4oMzYxKSgiaW5jbHVkZXMiKX0se2luY2x1ZGVzOmZ1bmN0aW9uKGUsdCl7cmV0dXJuISF+U3RyaW5nKG8odGhpcykpLmluZGV4T2YoaShlKSwxPGFyZ3VtZW50cy5sZW5ndGg/dDp2b2lkIDApfX0pfSwzNTk6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMzYwKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYocihlKSl0aHJvdyBUeXBlRXJyb3IoIlRoZSBtZXRob2QgZG9lc24ndCBhY2NlcHQgcmVndWxhciBleHByZXNzaW9ucyIpO3JldHVybiBlfX0sMzY6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMTYpLGk9big5MCk7ZS5leHBvcnRzPXI/aTpmdW5jdGlvbihlKXtyZXR1cm4gU2V0LnByb3RvdHlwZS52YWx1ZXMuY2FsbChlKX19LDM2MDpmdW5jdGlvbihlLHQsbil7dmFyIHI9bigyNiksaT1uKDQ5KSxvPW4oMjApKCJtYXRjaCIpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdDtyZXR1cm4gcihlKSYmKHZvaWQgMCE9PSh0PWVbb10pPyEhdDoiUmVnRXhwIj09aShlKSl9fSwzNjE6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMjApKCJtYXRjaCIpO2UuZXhwb3J0cz1mdW5jdGlvbih0KXt2YXIgbj0vLi87dHJ5eyIvLi8iW3RdKG4pfWNhdGNoKGUpe3RyeXtyZXR1cm4gbltyXT0hMSwiLy4vIlt0XShuKX1jYXRjaChlKXt9fXJldHVybiExfX0sMzc6ZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0IjtuLmQodCwiZSIsZnVuY3Rpb24oKXtyZXR1cm4gb30pLG4uZCh0LCJhIixmdW5jdGlvbigpe3JldHVybiBzfSksdC5nPWZ1bmN0aW9uKGUpe2lmKGUmJmUudHlwZSYmZnVuY3Rpb24oZSl7cmV0dXJuISghZXx8IWMoKShPYmplY3Qua2V5cyhkKSxlKSl8fChPYmplY3QoYS5sb2dFcnJvcikoIiIuY29uY2F0KGUsIiBuYXRpdmVQYXJhbSBpcyBub3Qgc3VwcG9ydGVkIikpLCExKX0oZS50eXBlKSlyZXR1cm4gZFtlLnR5cGVdO3JldHVybiBlfSx0LmY9ZnVuY3Rpb24odCxlKXt2YXIgbj1PYmplY3QoYS5nZXRCaWRSZXF1ZXN0KSh0LnJlcXVlc3RJZCxlKTtpZighbilyZXR1cm4hMTtpZighT2JqZWN0KGEuZGVlcEFjY2VzcykodCwibmF0aXZlLmNsaWNrVXJsIikpcmV0dXJuITE7aWYoT2JqZWN0KGEuZGVlcEFjY2VzcykodCwibmF0aXZlLmltYWdlIikmJighT2JqZWN0KGEuZGVlcEFjY2VzcykodCwibmF0aXZlLmltYWdlLmhlaWdodCIpfHwhT2JqZWN0KGEuZGVlcEFjY2VzcykodCwibmF0aXZlLmltYWdlLndpZHRoIikpKXJldHVybiExO2lmKE9iamVjdChhLmRlZXBBY2Nlc3MpKHQsIm5hdGl2ZS5pY29uIikmJighT2JqZWN0KGEuZGVlcEFjY2VzcykodCwibmF0aXZlLmljb24uaGVpZ2h0Iil8fCFPYmplY3QoYS5kZWVwQWNjZXNzKSh0LCJuYXRpdmUuaWNvbi53aWR0aCIpKSlyZXR1cm4hMTt2YXIgcj1uLm5hdGl2ZVBhcmFtcztpZighcilyZXR1cm4hMDt2YXIgaT1PYmplY3Qua2V5cyhyKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIHJbZV0ucmVxdWlyZWR9KSxvPU9iamVjdC5rZXlzKHQubmF0aXZlKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIHQubmF0aXZlW2VdfSk7cmV0dXJuIGkuZXZlcnkoZnVuY3Rpb24oZSl7cmV0dXJuIGMoKShvLGUpfSl9LHQuYj1mdW5jdGlvbihlLHQpe3ZhciBuOyJjbGljayI9PT1lLmFjdGlvbj9uPXQubmF0aXZlJiZ0Lm5hdGl2ZS5jbGlja1RyYWNrZXJzOihuPXQubmF0aXZlJiZ0Lm5hdGl2ZS5pbXByZXNzaW9uVHJhY2tlcnMsdC5uYXRpdmUmJnQubmF0aXZlLmphdmFzY3JpcHRUcmFja2VycyYmT2JqZWN0KGEuaW5zZXJ0SHRtbEludG9JZnJhbWUpKHQubmF0aXZlLmphdmFzY3JpcHRUcmFja2VycykpO3JldHVybihufHxbXSkuZm9yRWFjaChhLnRyaWdnZXJQaXhlbCksZS5hY3Rpb259LHQuZD1mdW5jdGlvbihyLGkpe3ZhciBvPXt9O3JldHVybiBPYmplY3Qua2V5cyhyLm5hdGl2ZSkuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdD11Lk5BVElWRV9LRVlTW2VdLG49ZihyLm5hdGl2ZVtlXSk7T2JqZWN0KGEuZGVlcEFjY2VzcykoaSwibWVkaWFUeXBlcy5uYXRpdmUuIi5jb25jYXQoZSwiLnNlbmRJZCIpKSYmKG49IiIuY29uY2F0KHQsIjoiKS5jb25jYXQoci5hZElkKSksdCYmbiYmKG9bdF09bil9KSxvfSx0LmM9ZnVuY3Rpb24oZSxyKXt2YXIgaT17bWVzc2FnZToiYXNzZXRSZXNwb25zZSIsYWRJZDplLmFkSWQsYXNzZXRzOltdfTtyZXR1cm4gZS5hc3NldHMuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdD1PYmplY3QoYS5nZXRLZXlCeVZhbHVlKSh1Lk5BVElWRV9LRVlTLGUpLG49ZihyLm5hdGl2ZVt0XSk7aS5hc3NldHMucHVzaCh7a2V5OnQsdmFsdWU6bn0pfSksaX07dmFyIGE9bigwKSxyPW4oMTIpLGM9bi5uKHIpO2Z1bmN0aW9uIGkoZSl7cmV0dXJuKGk9ImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmInN5bWJvbCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/InN5bWJvbCI6dHlwZW9mIGV9KShlKX12YXIgdT1uKDUpLG89W10scz1PYmplY3Qua2V5cyh1Lk5BVElWRV9LRVlTKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIHUuTkFUSVZFX0tFWVNbZV19KSxkPXtpbWFnZTp7aW1hZ2U6e3JlcXVpcmVkOiEwfSx0aXRsZTp7cmVxdWlyZWQ6ITB9LHNwb25zb3JlZEJ5OntyZXF1aXJlZDohMH0sY2xpY2tVcmw6e3JlcXVpcmVkOiEwfSxib2R5OntyZXF1aXJlZDohMX0saWNvbjp7cmVxdWlyZWQ6ITF9fX07ZnVuY3Rpb24gZihlKXtyZXR1cm4ib2JqZWN0Ij09PWkoZSkmJmUudXJsP2UudXJsOmV9fSwzODpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO3QuYT1mdW5jdGlvbihyLGUsdCl7aWYoIWV8fCFyKXJldHVybiB2b2lkIG8ubG9nRXJyb3IoImNhbm5vdCBsb2FkIGV4dGVybmFsIHNjcmlwdCB3aXRob3V0IHVybCBhbmQgbW9kdWxlQ29kZSIpO2lmKCFpKCkodSxlKSlyZXR1cm4gdm9pZCBvLmxvZ0Vycm9yKCIiLmNvbmNhdChlLCIgbm90IHdoaXRlbGlzdGVkIGZvciBsb2FkaW5nIGV4dGVybmFsIEphdmFTY3JpcHQiKSk7aWYocj1hLmMociksY1tyXSlyZXR1cm4gdCYmImZ1bmN0aW9uIj09dHlwZW9mIHQmJihjW3JdLmxvYWRlZD90KCk6Y1tyXS5jYWxsYmFja3MucHVzaCh0KSksY1tyXS50YWc7Y1tyXT17bG9hZGVkOiExLHRhZzpudWxsLGNhbGxiYWNrczpbXX0sdCYmImZ1bmN0aW9uIj09dHlwZW9mIHQmJmNbcl0uY2FsbGJhY2tzLnB1c2godCk7cmV0dXJuIG8ubG9nV2FybigibW9kdWxlICIuY29uY2F0KGUsIiBpcyBsb2FkaW5nIGV4dGVybmFsIEphdmFTY3JpcHQiKSksZnVuY3Rpb24oZSx0KXt2YXIgbj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTtuLnR5cGU9InRleHQvamF2YXNjcmlwdCIsbi5hc3luYz0hMCwoY1tyXS50YWc9bikucmVhZHlTdGF0ZT9uLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpeyJsb2FkZWQiIT09bi5yZWFkeVN0YXRlJiYiY29tcGxldGUiIT09bi5yZWFkeVN0YXRlfHwobi5vbnJlYWR5c3RhdGVjaGFuZ2U9bnVsbCx0KCkpfTpuLm9ubG9hZD1mdW5jdGlvbigpe3QoKX07cmV0dXJuIG4uc3JjPWUsby5pbnNlcnRFbGVtZW50KG4pLG59KHIsZnVuY3Rpb24oKXtjW3JdLmxvYWRlZD0hMDt0cnl7Zm9yKHZhciBlPTA7ZTxjW3JdLmNhbGxiYWNrcy5sZW5ndGg7ZSsrKWNbcl0uY2FsbGJhY2tzW2VdKCl9Y2F0Y2goZSl7by5sb2dFcnJvcigiRXJyb3IgZXhlY3V0aW5nIGNhbGxiYWNrIiwiYWRsb2FkZXIuanM6bG9hZEV4dGVybmFsU2NyaXB0IixlKX19KX07dmFyIHI9bigxMiksaT1uLm4ociksbz1uKDApLGE9big0MyksYz17fSx1PVsiY3JpdGVvIiwib3V0c3RyZWFtIiwiYWRhZ2lvIiwiYnJvd3NpIiwibnR2Il19LDM5OmZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPXt9fSw0OmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7bi5kKHQsImEiLGZ1bmN0aW9uKCl7cmV0dXJuIHJ9KSx0LmI9aTt2YXIgbD1uKDMpLHA9big0Myk7ZnVuY3Rpb24gZygpe3JldHVybihnPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9KS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZnVuY3Rpb24gYihlKXtyZXR1cm4oYj0iZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiYic3ltYm9sIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiYiZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT8ic3ltYm9sIjp0eXBlb2YgZX0pKGUpfXZhciB2PW4oMCkseT00LHI9aSgpO2Z1bmN0aW9uIGkoKXt2YXIgcz0wPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06M2UzLGU9MTxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9LGQ9ZS5yZXF1ZXN0LGY9ZS5kb25lO3JldHVybiBmdW5jdGlvbihlLHQsbil7dmFyIHI9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOnt9O3RyeXswPT1lLmluZGV4T2YoImh0dHA6Ly8iKT9lPWUucmVwbGFjZSgiaHR0cDoiLCJodHRwczoiKTowPD13aW5kb3cubG9jYXRpb24ucHJvdG9jb2wuaW5kZXhPZigiaHR0cCIpJiYwPT1lLmluZGV4T2YoIi8vIikmJihlPWUucmVwbGFjZSgiLy8iLCJodHRwczovLyIpKX1jYXRjaChlKXt9ZT1wLmMoZSk7dHJ5e3ZhciBpLG89ci5tZXRob2R8fChuPyJQT1NUIjoiR0VUIiksYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIik7YS5ocmVmPWU7dmFyIGMsdT0ib2JqZWN0Ij09PWIodCkmJm51bGwhPT10P3Q6e3N1Y2Nlc3M6ZnVuY3Rpb24oKXt2LmxvZ01lc3NhZ2UoInhociBzdWNjZXNzIil9LGVycm9yOmZ1bmN0aW9uKGUpe3YubG9nRXJyb3IoInhociBlcnJvciIsbnVsbCxlKX19OyJmdW5jdGlvbiI9PXR5cGVvZiB0JiYodS5zdWNjZXNzPXQpLChpPW5ldyB3aW5kb3cuWE1MSHR0cFJlcXVlc3QpLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe3ZhciBlO2kucmVhZHlTdGF0ZT09PXkmJigiZnVuY3Rpb24iPT10eXBlb2YgZiYmZihhLm9yaWdpbiksMjAwPD0oZT1pLnN0YXR1cykmJmU8MzAwfHwzMDQ9PT1lP3Uuc3VjY2VzcyhpLnJlc3BvbnNlVGV4dCxpKTp1LmVycm9yKGkuc3RhdHVzVGV4dCxpKSl9LGwuYi5nZXRDb25maWcoImRpc2FibGVBamF4VGltZW91dCIpfHwoaS5vbnRpbWVvdXQ9ZnVuY3Rpb24oKXt2LmxvZ0Vycm9yKCIgIHhociB0aW1lb3V0IGFmdGVyICIsaS50aW1lb3V0LCJtcyIpfSksIkdFVCI9PT1vJiZuJiYoZygoYz12LnBhcnNlVXJsKGUscikpLnNlYXJjaCxuKSxlPXYuYnVpbGRVcmwoYykpLGkub3BlbihvLGUsITApLGwuYi5nZXRDb25maWcoImRpc2FibGVBamF4VGltZW91dCIpfHwoaS50aW1lb3V0PXMpLHIud2l0aENyZWRlbnRpYWxzJiYoaS53aXRoQ3JlZGVudGlhbHM9ITApLHYuX2VhY2goci5jdXN0b21IZWFkZXJzLGZ1bmN0aW9uKGUsdCl7aS5zZXRSZXF1ZXN0SGVhZGVyKHQsZSl9KSxyLnByZWZsaWdodCYmaS5zZXRSZXF1ZXN0SGVhZGVyKCJYLVJlcXVlc3RlZC1XaXRoIiwiWE1MSHR0cFJlcXVlc3QiKSxpLnNldFJlcXVlc3RIZWFkZXIoIkNvbnRlbnQtVHlwZSIsci5jb250ZW50VHlwZXx8InRleHQvcGxhaW4iKSwiZnVuY3Rpb24iPT10eXBlb2YgZCYmZChhLm9yaWdpbiksIlBPU1QiPT09byYmbj9pLnNlbmQobik6aS5zZW5kKCl9Y2F0Y2goZSl7di5sb2dFcnJvcigieGhyIGNvbnN0cnVjdGlvbiIsZSl9fX19LDQwOmZ1bmN0aW9uKGUsdCxuKXt2YXIgaT1uKDE1KSxvPW4oMTgpLGE9bigyMCkoInNwZWNpZXMiKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgbixyPWkoZSkuY29uc3RydWN0b3I7cmV0dXJuIHZvaWQgMD09PXJ8fG51bGw9PShuPWkocilbYV0pP3Q6byhuKX19LDQxOmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7bi5kKHQsImIiLGZ1bmN0aW9uKCl7cmV0dXJuIEx9KSxuLmQodCwiYSIsZnVuY3Rpb24oKXtyZXR1cm4gRn0pLHQuaz1mdW5jdGlvbihlKXt2YXIgdCxpLGIsdixvPWUuYWRVbml0cyxuPWUuYWRVbml0Q29kZXMscj1lLmNhbGxiYWNrLGE9ZS5jYlRpbWVvdXQsYz1lLmxhYmVscyx1PWUuYXVjdGlvbklkLHk9byxzPWMsZD1uLGg9W10sZj1bXSxsPVtdLHA9dXx8UC5nZW5lcmF0ZVVVSUQoKSxnPXIsbT1hLFM9W10sQT1uZXcgU2V0O2Z1bmN0aW9uIEUoKXtyZXR1cm57YXVjdGlvbklkOnAsdGltZXN0YW1wOnQsYXVjdGlvbkVuZDppLGF1Y3Rpb25TdGF0dXM6YixhZFVuaXRzOnksYWRVbml0Q29kZXM6ZCxsYWJlbHM6cyxiaWRkZXJSZXF1ZXN0czpoLG5vQmlkczpsLGJpZHNSZWNlaXZlZDpmLHdpbm5pbmdCaWRzOlMsdGltZW91dDptfX1mdW5jdGlvbiBPKG4sZSl7dmFyIHIsdDtlJiZjbGVhclRpbWVvdXQodiksdm9pZCAwPT09aSYmKHI9W10sbiYmKFAubG9nTWVzc2FnZSgiQXVjdGlvbiAiLmNvbmNhdChwLCIgdGltZWRPdXQiKSksdD1BLChyPWgubWFwKGZ1bmN0aW9uKGUpe3JldHVybihlLmJpZHN8fFtdKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIXQuaGFzKGUuYmlkZGVyKX0pfSkucmVkdWNlKHcuZmxhdHRlbixbXSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybntiaWRJZDplLmJpZElkLGJpZGRlcjplLmJpZGRlcixhZFVuaXRDb2RlOmUuYWRVbml0Q29kZSxhdWN0aW9uSWQ6ZS5hdWN0aW9uSWR9fSkpLmxlbmd0aCYmcS5lbWl0KEcuRVZFTlRTLkJJRF9USU1FT1VULHIpKSxiPUYsaT1EYXRlLm5vdygpLHEuZW1pdChHLkVWRU5UUy5BVUNUSU9OX0VORCxFKCkpLFEoeSxmdW5jdGlvbigpe3RyeXt2YXIgZTtudWxsIT1nJiYoZT1mLmZpbHRlcihQLmJpbmQuY2FsbCh3LmFkVW5pdHNGaWx0ZXIsdGhpcyxkKSkucmVkdWNlKGVlLHt9KSxnLmFwcGx5KHVwYmpzLFtlLG4scF0pLGc9bnVsbCl9Y2F0Y2goZSl7UC5sb2dFcnJvcigiRXJyb3IgZXhlY3V0aW5nIGJpZHNCYWNrSGFuZGxlciIsbnVsbCxlKX1maW5hbGx5e3IubGVuZ3RoJiZNLmNhbGxUaW1lZE91dEJpZGRlcnMobyxyLG0pO3ZhciB0PUIuYi5nZXRDb25maWcoInVzZXJTeW5jIil8fHt9O3QuZW5hYmxlT3ZlcnJpZGV8fEQodC5zeW5jRGVsYXkpfX0pKX1mdW5jdGlvbiBUKCl7UC5sb2dJbmZvKCJCaWRzIFJlY2VpdmVkIGZvciBBdWN0aW9uIHdpdGggaWQ6ICIuY29uY2F0KHApLGYpLGI9RixPKCExLCEwKX1mdW5jdGlvbiBJKGUpe0EuYWRkKGUpfWZ1bmN0aW9uIEMobil7dmFyIGY9dGhpcztuLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHQ7dD1lLGg9aC5jb25jYXQodCl9KTt2YXIgbD17fSxlPXtiaWRSZXF1ZXN0czpuLHJ1bjpmdW5jdGlvbigpe3ZhciBlLHQ7ZT1PLmJpbmQobnVsbCwhMCksdD1zZXRUaW1lb3V0KGUsbSksdj10LGI9TCxxLmVtaXQoRy5FVkVOVFMuQVVDVElPTl9JTklULEUoKSk7dmFyIHIsaSxvLGEsYyx1LHM9KHI9VCxpPWYsbz0wLGE9ITEsYz1uZXcgU2V0LHU9e30se2FkZEJpZFJlc3BvbnNlOmZ1bmN0aW9uKGUsdCl7dVt0LnJlcXVlc3RJZF09ITAsbysrO3ZhciBuPWZ1bmN0aW9uKGUpe3ZhciB0PWUuYWRVbml0Q29kZSxuPWUuYmlkLHI9ZS5iaWRkZXJSZXF1ZXN0LGk9ZS5hdWN0aW9uSWQsbz1yLnN0YXJ0LGE9Tih7fSxuLHthdWN0aW9uSWQ6aSxyZXNwb25zZVRpbWVzdGFtcDpPYmplY3Qody50aW1lc3RhbXApKCkscmVxdWVzdFRpbWVzdGFtcDpvLGNwbTpwYXJzZUZsb2F0KG4uY3BtKXx8MCxiaWRkZXI6bi5iaWRkZXJDb2RlLGFkVW5pdENvZGU6dH0pO2EudGltZVRvUmVzcG9uZD1hLnJlc3BvbnNlVGltZXN0YW1wLWEucmVxdWVzdFRpbWVzdGFtcCxxLmVtaXQoRy5FVkVOVFMuQklEX0FESlVTVE1FTlQsYSk7dmFyIGM9ci5iaWRzJiZVKCkoci5iaWRzLGZ1bmN0aW9uKGUpe3JldHVybiBlLmFkVW5pdENvZGU9PXR9KSx1PWMmJmMucmVuZGVyZXIscz1hLm1lZGlhVHlwZSxkPWMmJmMubWVkaWFUeXBlcyYmYy5tZWRpYVR5cGVzW3NdLGY9ZCYmZC5yZW5kZXJlcixsPW51bGw7ZiYmZi51cmwmJmYucmVuZGVyP2w9ZjohdXx8IXUudXJsfHx1LmJhY2t1cE9ubHkmJk9iamVjdCh3LmlzQm9vbGVhbikodS5iYWNrdXBPbmx5KSYmbi5yZW5kZXJlcnx8KGw9dSksbCYmKGEucmVuZGVyZXI9Xy5hLmluc3RhbGwoe3VybDpsLnVybH0pLGEucmVuZGVyZXIuc2V0UmVuZGVyKGwucmVuZGVyKSk7dmFyIHA9WihuLm1lZGlhVHlwZSxjLEIuYi5nZXRDb25maWcoIm1lZGlhVHlwZVByaWNlR3JhbnVsYXJpdHkiKSksZz1PYmplY3Qoai5hKShhLmNwbSwib2JqZWN0Ij09PWsocCk/cDpCLmIuZ2V0Q29uZmlnKCJjdXN0b21QcmljZUJ1Y2tldCIpLEIuYi5nZXRDb25maWcoImN1cnJlbmN5LmdyYW51bGFyaXR5TXVsdGlwbGllciIpKTtyZXR1cm4gYS5wYkxnPWcubG93LGEucGJNZz1nLm1lZCxhLnBiSGc9Zy5oaWdoLGEucGJBZz1nLmF1dG8sYS5wYkRnPWcuZGVuc2UsYS5wYkNnPWcuY3VzdG9tLGF9KHthZFVuaXRDb2RlOmUsYmlkOnQsYmlkZGVyUmVxdWVzdDp0aGlzLGF1Y3Rpb25JZDppLmdldEF1Y3Rpb25JZCgpfSk7InZpZGVvIj09PW4ubWVkaWFUeXBlP2Z1bmN0aW9uKGUsdCxuLHIpe3ZhciBpPSEwLG89T2JqZWN0KHcuZ2V0QmlkUmVxdWVzdCkodC5yZXF1ZXN0SWQsW25dKSxhPW8mJk9iamVjdCh3LmRlZXBBY2Nlc3MpKG8sIm1lZGlhVHlwZXMudmlkZW8iKSxjPWEmJk9iamVjdCh3LmRlZXBBY2Nlc3MpKGEsImNvbnRleHQiKTtCLmIuZ2V0Q29uZmlnKCJjYWNoZS51cmwiKSYmYyE9PVIuYiYmKHQudmlkZW9DYWNoZUtleT90LnZhc3RVcmx8fChQLmxvZ0Vycm9yKCJ2aWRlb0NhY2hlS2V5IHNwZWNpZmllZCBidXQgbm90IHJlcXVpcmVkIHZhc3RVcmwgZm9yIHZpZGVvIGJpZCIpLGk9ITEpOihpPSExLFgoZSx0LHIsbykpKSxpJiYoJChlLHQpLHIoKSl9KGksbix0aGlzLGQpOigkKGksbiksZCgpKX0sYWRhcHRlckRvbmU6ZnVuY3Rpb24oKXt2YXIgdCxlPWkuZ2V0QmlkUmVxdWVzdHMoKSxuPUIuYi5nZXRDb25maWcoImF1Y3Rpb25PcHRpb25zIik7Yy5hZGQodGhpcyksIW58fFAuaXNFbXB0eShuKXx8KHQ9bi5zZWNvbmRhcnlCaWRkZXJzKSYmIWUuZXZlcnkoZnVuY3Rpb24oZSl7cmV0dXJuIHgoKSh0LGUuYmlkZGVyQ29kZSl9KSYmKGU9ZS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIXgoKSh0LGUuYmlkZGVyQ29kZSl9KSksYT1lLmV2ZXJ5KGZ1bmN0aW9uKGUpe3JldHVybiBjLmhhcyhlKX0pLHRoaXMuYmlkcy5mb3JFYWNoKGZ1bmN0aW9uKGUpe3VbZS5iaWRJZF18fChpLmFkZE5vQmlkKGUpLHEuZW1pdChHLkVWRU5UUy5OT19CSUQsZSkpfSksYSYmMD09PW8mJnIoKX19KTtmdW5jdGlvbiBkKCl7by0tLGEmJjA9PT1vJiZyKCl9TS5jYWxsQmlkcyh5LG4sZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxuPTA7bjxlO24rKyl0W25dPWFyZ3VtZW50c1tuXTtKLmFwcGx5KHtkaXNwYXRjaDpzLmFkZEJpZFJlc3BvbnNlLGJpZGRlclJlcXVlc3Q6dGhpc30sdCl9LHMuYWRhcHRlckRvbmUse3JlcXVlc3Q6ZnVuY3Rpb24oZSx0KXtnKFYsdCksZyhsLGUpLEhbZV18fChIW2VdPXtTUkE6ITAsb3JpZ2luOnR9KSwxPGxbZV0mJihIW2VdLlNSQT0hMSl9LGRvbmU6ZnVuY3Rpb24oZSl7VltlXS0tLEtbMF0mJnAoS1swXSkmJksuc2hpZnQoKX19LG0sSSl9fTtmdW5jdGlvbiBwKGUpe3ZhciByPSEwLGk9Qi5iLmdldENvbmZpZygibWF4UmVxdWVzdHNQZXJPcmlnaW4iKXx8ejtyZXR1cm4gZS5iaWRSZXF1ZXN0cy5zb21lKGZ1bmN0aW9uKGUpe3ZhciB0PTEsbj12b2lkIDAhPT1lLnNyYyYmZS5zcmM9PT1HLlMyUy5TUkM/InMycyI6ZS5iaWRkZXJDb2RlO3JldHVybiBIW25dJiYoITE9PT1IW25dLlNSQSYmKHQ9TWF0aC5taW4oZS5iaWRzLmxlbmd0aCxpKSksVltIW25dLm9yaWdpbl0rdD5pJiYocj0hMSkpLCFyfSksciYmZS5ydW4oKSxyfWZ1bmN0aW9uIGcoZSx0KXt2b2lkIDA9PT1lW3RdP2VbdF09MTplW3RdKyt9cChlKXx8KFAubG9nV2FybigicXVldWVpbmcgYXVjdGlvbiBkdWUgdG8gbGltaXRlZCBlbmRwb2ludCBjYXBhY2l0eSIpLEsucHVzaChlKSl9cmV0dXJue2FkZEJpZFJlY2VpdmVkOmZ1bmN0aW9uKGUpe2Y9Zi5jb25jYXQoZSl9LGFkZE5vQmlkOmZ1bmN0aW9uKGUpe2w9bC5jb25jYXQoZSl9LGV4ZWN1dGVDYWxsYmFjazpPLGNhbGxCaWRzOmZ1bmN0aW9uKCl7Yj1XLHQ9RGF0ZS5ub3coKTt2YXIgZT1NLm1ha2VCaWRSZXF1ZXN0cyh5LHQscCxtLHMpO1AubG9nSW5mbygiQmlkcyBSZXF1ZXN0ZWQgZm9yIEF1Y3Rpb24gd2l0aCBpZDogIi5jb25jYXQocCksZSksZS5sZW5ndGg8MT8oUC5sb2dXYXJuKCJObyB2YWxpZCBiaWQgcmVxdWVzdHMgcmV0dXJuZWQgZm9yIGF1Y3Rpb24iKSxUKCkpOlkuY2FsbCh7ZGlzcGF0Y2g6Qyxjb250ZXh0OnRoaXN9LGUpfSxhZGRXaW5uaW5nQmlkOmZ1bmN0aW9uKGUpe1M9Uy5jb25jYXQoZSksTS5jYWxsQmlkV29uQmlkZGVyKGUuYmlkZGVyLGUsbyl9LHNldEJpZFRhcmdldGluZzpmdW5jdGlvbihlKXtNLmNhbGxTZXRUYXJnZXRpbmdCaWRkZXIoZS5iaWRkZXIsZSl9LGdldFdpbm5pbmdCaWRzOmZ1bmN0aW9uKCl7cmV0dXJuIFN9LGdldFRpbWVvdXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbX0sZ2V0QXVjdGlvbklkOmZ1bmN0aW9uKCl7cmV0dXJuIHB9LGdldEF1Y3Rpb25TdGF0dXM6ZnVuY3Rpb24oKXtyZXR1cm4gYn0sZ2V0QWRVbml0czpmdW5jdGlvbigpe3JldHVybiB5fSxnZXRBZFVuaXRDb2RlczpmdW5jdGlvbigpe3JldHVybiBkfSxnZXRCaWRSZXF1ZXN0czpmdW5jdGlvbigpe3JldHVybiBofSxnZXRCaWRzUmVjZWl2ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gZn0sZ2V0Tm9CaWRzOmZ1bmN0aW9uKCl7cmV0dXJuIGx9fX0sbi5kKHQsImMiLGZ1bmN0aW9uKCl7cmV0dXJuIEp9KSxuLmQodCwiZSIsZnVuY3Rpb24oKXtyZXR1cm4gWX0pLHQuZz1kLHQuZD0kLG4uZCh0LCJmIixmdW5jdGlvbigpe3JldHVybiBYfSksbi5kKHQsImkiLGZ1bmN0aW9uKCl7cmV0dXJuIGZ9KSxuLmQodCwiaCIsZnVuY3Rpb24oKXtyZXR1cm4gbH0pLHQuaj1wO3ZhciB3PW4oMCksaj1uKDQ2KSxhPW4oMzcpLG89big5NSksXz1uKDExKSxCPW4oMykscj1uKDQ0KSxpPW4oMTMpLGM9bigxMCksVT1uLm4oYyksdT1uKDEyKSx4PW4ubih1KSxSPW4oMjkpLHM9bigyKTtmdW5jdGlvbiBrKGUpe3JldHVybihrPSJmdW5jdGlvbiI9PXR5cGVvZiBTeW1ib2wmJiJzeW1ib2wiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJiJmdW5jdGlvbiI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlPyJzeW1ib2wiOnR5cGVvZiBlfSkoZSl9ZnVuY3Rpb24gTigpe3JldHVybihOPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9KS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIEQ9ci5hLnN5bmNVc2VycyxQPW4oMCksTT1uKDkpLmRlZmF1bHQscT1uKDgpLEc9big1KSxXPSJzdGFydGVkIixMPSJpblByb2dyZXNzIixGPSJjb21wbGV0ZWQiO3Eub24oRy5FVkVOVFMuQklEX0FESlVTVE1FTlQsZnVuY3Rpb24oZSl7IWZ1bmN0aW9uKGUpe3ZhciB0LG49ZS5iaWRkZXJDb2RlLHI9ZS5jcG07aWYodXBianMuYmlkZGVyU2V0dGluZ3MmJihuJiZ1cGJqcy5iaWRkZXJTZXR0aW5nc1tuXSYmImZ1bmN0aW9uIj09dHlwZW9mIHVwYmpzLmJpZGRlclNldHRpbmdzW25dLmJpZENwbUFkanVzdG1lbnQ/dD11cGJqcy5iaWRkZXJTZXR0aW5nc1tuXS5iaWRDcG1BZGp1c3RtZW50OnVwYmpzLmJpZGRlclNldHRpbmdzW0cuSlNPTl9NQVBQSU5HLkJEX1NFVFRJTkdfU1RBTkRBUkRdJiYiZnVuY3Rpb24iPT10eXBlb2YgdXBianMuYmlkZGVyU2V0dGluZ3NbRy5KU09OX01BUFBJTkcuQkRfU0VUVElOR19TVEFOREFSRF0uYmlkQ3BtQWRqdXN0bWVudCYmKHQ9dXBianMuYmlkZGVyU2V0dGluZ3NbRy5KU09OX01BUFBJTkcuQkRfU0VUVElOR19TVEFOREFSRF0uYmlkQ3BtQWRqdXN0bWVudCksdCkpdHJ5e3I9dChlLmNwbSxOKHt9LGUpKX1jYXRjaChlKXtQLmxvZ0Vycm9yKCJFcnJvciBkdXJpbmcgYmlkIGFkanVzdG1lbnQiLCJiaWRtYW5hZ2VyLmpzIixlKX0wPD1yJiYoZS5jcG09cil9KGUpfSk7dmFyIHo9NCxWPXt9LEg9e30sSz1bXTt2YXIgSj1PYmplY3QoaS5iKSgiYXN5bmMiLGZ1bmN0aW9uKGUsdCl7dGhpcy5kaXNwYXRjaC5jYWxsKHRoaXMuYmlkZGVyUmVxdWVzdCxlLHQpfSwiYWRkQmlkUmVzcG9uc2UiKSxZPU9iamVjdChpLmIpKCJzeW5jIixmdW5jdGlvbihlKXt0aGlzLmRpc3BhdGNoLmNhbGwodGhpcy5jb250ZXh0LGUpfSwiYWRkQmlkZGVyUmVxdWVzdHMiKSxRPU9iamVjdChpLmIpKCJhc3luYyIsZnVuY3Rpb24oZSx0KXt0JiZ0KCl9LCJiaWRzQmFja0NhbGxiYWNrIik7ZnVuY3Rpb24gZChlLHQpe3QudGltZVRvUmVzcG9uZD5lLmdldFRpbWVvdXQoKStCLmIuZ2V0Q29uZmlnKCJ0aW1lb3V0QnVmZmVyIikmJmUuZXhlY3V0ZUNhbGxiYWNrKCEwKX1mdW5jdGlvbiAkKGUsdCl7dmFyIG49ZS5nZXRCaWRSZXF1ZXN0cygpLHI9VSgpKG4sZnVuY3Rpb24oZSl7cmV0dXJuIGUuYmlkZGVyQ29kZT09PXQuYmlkZGVyQ29kZX0pOyFmdW5jdGlvbih0LGUpe3ZhciBuO3t2YXIgcjt0LmJpZGRlckNvZGUmJigwPHQuY3BtfHx0LmRlYWxJZCkmJihyPVUoKShlLmJpZHMsZnVuY3Rpb24oZSl7cmV0dXJuIGUuYWRVbml0Q29kZT09PXQuYWRVbml0Q29kZX0pLG49ZnVuY3Rpb24oZSx0LG4pe2lmKCF0KXJldHVybnt9O3ZhciByPXt9LGk9dXBianMuYmlkZGVyU2V0dGluZ3M7e3ZhciBvO2kmJihvPXAodC5tZWRpYVR5cGUsZSxuKSxnKHIsbyx0KSxlJiZpW2VdJiZpW2VdW0cuSlNPTl9NQVBQSU5HLkFEU0VSVkVSX1RBUkdFVElOR10mJihnKHIsaVtlXSx0KSx0LnNlbmRTdGFuZGFyZFRhcmdldGluZz1pW2VdLnNlbmRTdGFuZGFyZFRhcmdldGluZykpfXQubmF0aXZlJiYocj1OKHt9LHIsT2JqZWN0KGEuZCkodCxuKSkpO3JldHVybiByfSh0LmJpZGRlckNvZGUsdCxyKSl9dC5hZHNlcnZlclRhcmdldGluZz1OKHQuYWRzZXJ2ZXJUYXJnZXRpbmd8fHt9LG4pfSh0LHIpLHEuZW1pdChHLkVWRU5UUy5CSURfUkVTUE9OU0UsdCksZS5hZGRCaWRSZWNlaXZlZCh0KSxkKGUsdCl9dmFyIFg9T2JqZWN0KGkuYikoImFzeW5jIixmdW5jdGlvbihuLHIsaSxlKXtPYmplY3Qoby5iKShbcl0sZnVuY3Rpb24oZSx0KXtlPyhQLmxvZ1dhcm4oIkZhaWxlZCB0byBzYXZlIHRvIHRoZSB2aWRlbyBjYWNoZTogIi5jb25jYXQoZSwiLiBWaWRlbyBiaWQgbXVzdCBiZSBkaXNjYXJkZWQuIikpLGQobixyKSk6IiI9PT10WzBdLnV1aWQ/KFAubG9nV2FybigiU3VwcGxpZWQgdmlkZW8gY2FjaGUga2V5IHdhcyBhbHJlYWR5IGluIHVzZSBieSBQcmViaWQgQ2FjaGU7IGNhY2hpbmcgYXR0ZW1wdCB3YXMgcmVqZWN0ZWQuIFZpZGVvIGJpZCBtdXN0IGJlIGRpc2NhcmRlZC4iKSxkKG4scikpOihyLnZpZGVvQ2FjaGVLZXk9dFswXS51dWlkLHIudmFzdFVybHx8KHIudmFzdFVybD1PYmplY3Qoby5hKShyLnZpZGVvQ2FjaGVLZXkpKSwkKG4sciksaSgpKX0sZSl9LCJjYWxsUHJlYmlkQ2FjaGUiKTtmdW5jdGlvbiBaKGUsdCxuKXtpZihlJiZuKXtpZihlPT09cy5kKXt2YXIgcj1PYmplY3Qody5kZWVwQWNjZXNzKSh0LCJtZWRpYVR5cGVzLiIuY29uY2F0KHMuZCwiLmNvbnRleHQiKSwiaW5zdHJlYW0iKTtpZihuWyIiLmNvbmNhdChzLmQsIi0iKS5jb25jYXQocildKXJldHVybiBuWyIiLmNvbmNhdChzLmQsIi0iKS5jb25jYXQocildfXJldHVybiBuW2VdfX12YXIgZj1mdW5jdGlvbihlLHQpe3ZhciBuPVooZSx0LEIuYi5nZXRDb25maWcoIm1lZGlhVHlwZVByaWNlR3JhbnVsYXJpdHkiKSk7cmV0dXJuInN0cmluZyI9PXR5cGVvZiBlJiZuPyJzdHJpbmciPT10eXBlb2Ygbj9uOiJjdXN0b20iOkIuYi5nZXRDb25maWcoInByaWNlR3JhbnVsYXJpdHkiKX0sbD1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIHQ9PT1HLkdSQU5VTEFSSVRZX09QVElPTlMuQVVUTz9lLnBiQWc6dD09PUcuR1JBTlVMQVJJVFlfT1BUSU9OUy5ERU5TRT9lLnBiRGc6dD09PUcuR1JBTlVMQVJJVFlfT1BUSU9OUy5MT1c/ZS5wYkxnOnQ9PT1HLkdSQU5VTEFSSVRZX09QVElPTlMuTUVESVVNP2UucGJNZzp0PT09Ry5HUkFOVUxBUklUWV9PUFRJT05TLkhJR0g/ZS5wYkhnOnQ9PT1HLkdSQU5VTEFSSVRZX09QVElPTlMuQ1VTVE9NP2UucGJDZzp2b2lkIDB9fTtmdW5jdGlvbiBwKGUsdCxuKXtmdW5jdGlvbiByKGUsdCl7cmV0dXJue2tleTplLHZhbDoiZnVuY3Rpb24iPT10eXBlb2YgdD9mdW5jdGlvbihlKXtyZXR1cm4gdChlKX06ZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdCh3LmdldFZhbHVlKShlLHQpfX19dmFyIGksbyxhPUcuVEFSR0VUSU5HX0tFWVMsYz1mKGUsbiksdT11cGJqcy5iaWRkZXJTZXR0aW5ncztyZXR1cm4gdVtHLkpTT05fTUFQUElORy5CRF9TRVRUSU5HX1NUQU5EQVJEXXx8KHVbRy5KU09OX01BUFBJTkcuQkRfU0VUVElOR19TVEFOREFSRF09e30pLHVbRy5KU09OX01BUFBJTkcuQkRfU0VUVElOR19TVEFOREFSRF1bRy5KU09OX01BUFBJTkcuQURTRVJWRVJfVEFSR0VUSU5HXXx8KHVbRy5KU09OX01BUFBJTkcuQkRfU0VUVElOR19TVEFOREFSRF1bRy5KU09OX01BUFBJTkcuQURTRVJWRVJfVEFSR0VUSU5HXT1bcihhLkJJRERFUiwiYmlkZGVyQ29kZSIpLHIoYS5BRF9JRCwiYWRJZCIpLHIoYS5QUklDRV9CVUNLRVQsbChjKSkscihhLlNJWkUsInNpemUiKSxyKGEuREVBTCwiZGVhbElkIikscihhLlNPVVJDRSwic291cmNlIikscihhLkZPUk1BVCwibWVkaWFUeXBlIildKSwidmlkZW8iPT09ZSYmKGk9dVtHLkpTT05fTUFQUElORy5CRF9TRVRUSU5HX1NUQU5EQVJEXVtHLkpTT05fTUFQUElORy5BRFNFUlZFUl9UQVJHRVRJTkddLFthLlVVSUQsYS5DQUNIRV9JRF0uZm9yRWFjaChmdW5jdGlvbih0KXt2b2lkIDA9PT1VKCkoaSxmdW5jdGlvbihlKXtyZXR1cm4gZS5rZXk9PT10fSkmJmkucHVzaChyKHQsInZpZGVvQ2FjaGVLZXkiKSl9KSwhQi5iLmdldENvbmZpZygiY2FjaGUudXJsIil8fHQmJiExPT09UC5kZWVwQWNjZXNzKHUsIiIuY29uY2F0KHQsIi5zZW5kU3RhbmRhcmRUYXJnZXRpbmciKSl8fChvPU9iamVjdCh3LnBhcnNlVXJsKShCLmIuZ2V0Q29uZmlnKCJjYWNoZS51cmwiKSksdm9pZCAwPT09VSgpKGksZnVuY3Rpb24oZSl7cmV0dXJuIGUua2V5PT09YS5DQUNIRV9IT1NUfSkmJmkucHVzaChyKGEuQ0FDSEVfSE9TVCxmdW5jdGlvbihlKXtyZXR1cm4gUC5kZWVwQWNjZXNzKGUsImFkc2VydmVyVGFyZ2V0aW5nLiIuY29uY2F0KGEuQ0FDSEVfSE9TVCkpP2UuYWRzZXJ2ZXJUYXJnZXRpbmdbYS5DQUNIRV9IT1NUXTpvLmhvc3RuYW1lfSkpKSksdVtHLkpTT05fTUFQUElORy5CRF9TRVRUSU5HX1NUQU5EQVJEXX1mdW5jdGlvbiBnKHIsaSxvKXt2YXIgZT1pW0cuSlNPTl9NQVBQSU5HLkFEU0VSVkVSX1RBUkdFVElOR107cmV0dXJuIG8uc2l6ZT1vLmdldFNpemUoKSxQLl9lYWNoKGUsZnVuY3Rpb24oZSl7dmFyIHQ9ZS5rZXksbj1lLnZhbDtpZihyW3RdJiZQLmxvZ1dhcm4oIlRoZSBrZXk6ICIrdCsiIGlzIGdldHRpbmcgb3Zld3JpdHRlbiIpLFAuaXNGbihuKSl0cnl7bj1uKG8pfWNhdGNoKGUpe1AubG9nRXJyb3IoImJpZG1hbmFnZXIiLCJFUlJPUiIsZSl9KHZvaWQgMD09PWkuc3VwcHJlc3NFbXB0eUtleXN8fCEwIT09aS5zdXBwcmVzc0VtcHR5S2V5cykmJnQhPT1HLlRBUkdFVElOR19LRVlTLkRFQUx8fCFQLmlzRW1wdHlTdHIobikmJm51bGwhPW4/clt0XT1uOlAubG9nSW5mbygic3VwcHJlc3NpbmcgZW1wdHkga2V5ICciK3QrIicgZnJvbSBhZHNlcnZlciB0YXJnZXRpbmciKX0pLHJ9ZnVuY3Rpb24gZWUoZSx0KXtyZXR1cm4gZVt0LmFkVW5pdENvZGVdfHwoZVt0LmFkVW5pdENvZGVdPXtiaWRzOltdfSksZVt0LmFkVW5pdENvZGVdLmJpZHMucHVzaCh0KSxlfX0sNDI6ZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9e319LDQzOmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dC5iPWZ1bmN0aW9uKGUpe2kucHVzaChlKX0sdC5jPWZ1bmN0aW9uKHQpe3RyeXt2YXIgbj10O3JldHVybiBpLmZvckVhY2goZnVuY3Rpb24oZSl7bj1lKG4pfSksbn1jYXRjaChlKXtyZXR1cm4gdH19LHQuYT1mdW5jdGlvbigpe3JldHVybiByfSx0LmQ9ZnVuY3Rpb24oZSl7ZSYmIklGUkFNRSI9PT1lLnRhZ05hbWUmJihyPWUpfTt2YXIgcixpPVtdfSw0NDpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO24uZCh0LCJhIixmdW5jdGlvbigpe3JldHVybiBTfSk7dmFyIGE9bigwKSxyPW4oMyksaT1uKDEyKSxvPW4ubihpKSxjPW4oNyk7ZnVuY3Rpb24gdShlLHQpe3JldHVybiBmdW5jdGlvbihlKXtpZihBcnJheS5pc0FycmF5KGUpKXJldHVybiBlfShlKXx8ZnVuY3Rpb24oZSx0KXtpZigidW5kZWZpbmVkIj09dHlwZW9mIFN5bWJvbHx8IShTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGUpKSlyZXR1cm47dmFyIG49W10scj0hMCxpPSExLG89dm9pZCAwO3RyeXtmb3IodmFyIGEsYz1lW1N5bWJvbC5pdGVyYXRvcl0oKTshKHI9KGE9Yy5uZXh0KCkpLmRvbmUpJiYobi5wdXNoKGEudmFsdWUpLCF0fHxuLmxlbmd0aCE9PXQpO3I9ITApO31jYXRjaChlKXtpPSEwLG89ZX1maW5hbGx5e3RyeXtyfHxudWxsPT1jLnJldHVybnx8Yy5yZXR1cm4oKX1maW5hbGx5e2lmKGkpdGhyb3cgb319cmV0dXJuIG59KGUsdCl8fGZ1bmN0aW9uKGUsdCl7aWYoIWUpcmV0dXJuO2lmKCJzdHJpbmciPT10eXBlb2YgZSlyZXR1cm4gcyhlLHQpO3ZhciBuPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKS5zbGljZSg4LC0xKTsiT2JqZWN0Ij09PW4mJmUuY29uc3RydWN0b3ImJihuPWUuY29uc3RydWN0b3IubmFtZSk7aWYoIk1hcCI9PT1ufHwiU2V0Ij09PW4pcmV0dXJuIEFycmF5LmZyb20oZSk7aWYoIkFyZ3VtZW50cyI9PT1ufHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSlyZXR1cm4gcyhlLHQpfShlLHQpfHxmdW5jdGlvbigpe3Rocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuIil9KCl9ZnVuY3Rpb24gcyhlLHQpeyhudWxsPT10fHx0PmUubGVuZ3RoKSYmKHQ9ZS5sZW5ndGgpO2Zvcih2YXIgbj0wLHI9bmV3IEFycmF5KHQpO248dDtuKyspcltuXT1lW25dO3JldHVybiByfWZ1bmN0aW9uIGQoKXtyZXR1cm4oZD1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSkuYXBwbHkodGhpcyxhcmd1bWVudHMpfXIuYi5zZXREZWZhdWx0cyh7dXNlclN5bmM6YS5kZWVwQ2xvbmUoe3N5bmNFbmFibGVkOiEwLGZpbHRlclNldHRpbmdzOntpbWFnZTp7YmlkZGVyczoiKiIsZmlsdGVyOiJpbmNsdWRlIn19LHN5bmNzUGVyQmlkZGVyOjUsc3luY0RlbGF5OjNlMyxhdWN0aW9uRGVsYXk6MH0pfSk7dmFyIGY9T2JqZWN0KGMuYSkoInVzZXJzeW5jIik7dmFyIGwscCxnLGIsdix5LGgsbT0hYS5pc1NhZmFyaUJyb3dzZXIoKSYmZi5jb29raWVzQXJlRW5hYmxlZCgpLFM9KGw9e2NvbmZpZzpyLmIuZ2V0Q29uZmlnKCJ1c2VyU3luYyIpLGJyb3dzZXJTdXBwb3J0c0Nvb2tpZXM6bX0scD17fSxnPUEoKSxiPW5ldyBTZXQseT17aW1hZ2U6ITAsaWZyYW1lOiEodj17fSl9LGg9bC5jb25maWcsci5iLmdldENvbmZpZygidXNlclN5bmMiLGZ1bmN0aW9uKGUpe3ZhciB0O2UudXNlclN5bmMmJih0PWUudXNlclN5bmMuZmlsdGVyU2V0dGluZ3MsYS5pc1BsYWluT2JqZWN0KHQpJiYodC5pbWFnZXx8dC5hbGx8fChlLnVzZXJTeW5jLmZpbHRlclNldHRpbmdzLmltYWdlPXtiaWRkZXJzOiIqIixmaWx0ZXI6ImluY2x1ZGUifSkpKSxoPWQoaCxlLnVzZXJTeW5jKX0pLHAucmVnaXN0ZXJTeW5jPWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gYi5oYXModCk/YS5sb2dNZXNzYWdlKCdhbHJlYWR5IGZpcmVkIHN5bmNzIGZvciAiJy5jb25jYXQodCwnIiwgaWdub3JpbmcgcmVnaXN0ZXJTeW5jIGNhbGwnKSk6aC5zeW5jRW5hYmxlZCYmYS5pc0FycmF5KGdbZV0pP3Q/MCE9PWguc3luY3NQZXJCaWRkZXImJk51bWJlcih2W3RdKT49aC5zeW5jc1BlckJpZGRlcj9hLmxvZ1dhcm4oJ051bWJlciBvZiB1c2VyIHN5bmNzIGV4Y2VlZGVkIGZvciAiJy5jb25jYXQodCwnIicpKTpwLmNhbkJpZGRlclJlZ2lzdGVyU3luYyhlLHQpPyhnW2VdLnB1c2goW3Qsbl0pLChyPXYpW2k9dF0/cltpXSs9MTpyW2ldPTEsdm9pZCh2PXIpKTphLmxvZ1dhcm4oJ0JpZGRlciAiJy5jb25jYXQodCwnIiBub3QgcGVybWl0dGVkIHRvIHJlZ2lzdGVyIHRoZWlyICInKS5jb25jYXQoZSwnIiB1c2VyU3luYyBwaXhlbHMuJykpOmEubG9nV2FybigiQmlkZGVyIGlzIHJlcXVpcmVkIGZvciByZWdpc3RlcmluZyBzeW5jIik6YS5sb2dXYXJuKCdVc2VyIHN5bmMgdHlwZSAiJy5jb25jYXQoZSwnIiBub3Qgc3VwcG9ydGVkJykpO3ZhciByLGl9LHAuc3luY1VzZXJzPWZ1bmN0aW9uKCl7dmFyIGU9MDxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOjA7aWYoZSlyZXR1cm4gc2V0VGltZW91dChFLE51bWJlcihlKSk7RSgpfSxwLnRyaWdnZXJVc2VyU3luY3M9ZnVuY3Rpb24oKXtoLmVuYWJsZU92ZXJyaWRlJiZwLnN5bmNVc2VycygpfSxwLmNhbkJpZGRlclJlZ2lzdGVyU3luYz1mdW5jdGlvbihlLHQpe3JldHVybiFoLmZpbHRlclNldHRpbmdzfHwhVChlLHQpfSxwKTtmdW5jdGlvbiBBKCl7cmV0dXJue2ltYWdlOltdLGlmcmFtZTpbXX19ZnVuY3Rpb24gRSgpe2lmKGguc3luY0VuYWJsZWQmJmwuYnJvd3NlclN1cHBvcnRzQ29va2llcyl7dHJ5eyFmdW5jdGlvbigpe2lmKCF5LmltYWdlKXJldHVybjtPKGcuaW1hZ2UsZnVuY3Rpb24oZSl7dmFyIHQ9dShlLDIpLG49dFswXSxyPXRbMV07YS5sb2dNZXNzYWdlKCJJbnZva2luZyBpbWFnZSBwaXhlbCB1c2VyIHN5bmMgZm9yIGJpZGRlcjogIi5jb25jYXQobikpLGEudHJpZ2dlclBpeGVsKHIpfSl9KCksZnVuY3Rpb24oKXtpZigheS5pZnJhbWUpcmV0dXJuO08oZy5pZnJhbWUsZnVuY3Rpb24oZSl7dmFyIHQ9dShlLDIpLG49dFswXSxyPXRbMV07YS5sb2dNZXNzYWdlKCJJbnZva2luZyBpZnJhbWUgdXNlciBzeW5jIGZvciBiaWRkZXI6ICIuY29uY2F0KG4pKSxhLmluc2VydFVzZXJTeW5jSWZyYW1lKHIpfSl9KCl9Y2F0Y2goZSl7cmV0dXJuIGEubG9nRXJyb3IoIkVycm9yIGZpcmluZyB1c2VyIHN5bmNzIixlKX1nPUEoKX19ZnVuY3Rpb24gTyhlLHQpe2Euc2h1ZmZsZShlKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3QoZSksYi5hZGQoZVswXSl9KX1mdW5jdGlvbiBUKGUsdCl7dmFyIG49aC5maWx0ZXJTZXR0aW5ncztpZihmdW5jdGlvbihlLHQpe2lmKGUuYWxsJiZlW3RdKXJldHVybiBhLmxvZ1dhcm4oJ0RldGVjdGVkIHByZXNlbmNlIG9mIHRoZSAiZmlsdGVyU2V0dGluZ3MuYWxsIiBhbmQgImZpbHRlclNldHRpbmdzLicuY29uY2F0KHQsJyIgaW4gdXNlclN5bmMgY29uZmlnLiAgWW91IGNhbm5vdCBtaXggImFsbCIgd2l0aCAiaWZyYW1lL2ltYWdlIiBjb25maWdzOyB0aGV5IGFyZSBtdXR1YWxseSBleGNsdXNpdmUuJykpLCExO3ZhciBuPWUuYWxsP2UuYWxsOmVbdF0scj1lLmFsbD8iYWxsIjp0O2lmKCFuKXJldHVybiExO3ZhciBpPW4uZmlsdGVyLG89bi5iaWRkZXJzO2lmKGkmJiJpbmNsdWRlIiE9PWkmJiJleGNsdWRlIiE9PWkpcmV0dXJuIGEubG9nV2FybignVXNlclN5bmMgImZpbHRlclNldHRpbmdzLicuY29uY2F0KHIsIi5maWx0ZXJcIiBzZXR0aW5nICciKS5jb25jYXQoaSwiJyBpcyBub3QgYSB2YWxpZCBvcHRpb247IHVzZSBlaXRoZXIgJ2luY2x1ZGUnIG9yICdleGNsdWRlJy4iKSksITE7cmV0dXJuISEoIioiPT09b3x8QXJyYXkuaXNBcnJheShvKSYmMDxvLmxlbmd0aCYmby5ldmVyeShmdW5jdGlvbihlKXtyZXR1cm4gYS5pc1N0cihlKSYmIioiIT09ZX0pKXx8KGEubG9nV2FybignRGV0ZWN0ZWQgYW4gaW52YWxpZCBzZXR1cCBpbiB1c2VyU3luYyAiZmlsdGVyU2V0dGluZ3MuJy5jb25jYXQociwiLmJpZGRlcnNcIjsgdXNlIGVpdGhlciAnKicgKHRvIHJlcHJlc2VudCBhbGwgYmlkZGVycykgb3IgYW4gYXJyYXkgb2YgYmlkZGVycy4iKSksITEpfShuLGUpKXt5W2VdPSEwO3ZhciByPW4uYWxsP24uYWxsOm5bZV0saT0iKiI9PT1yLmJpZGRlcnM/W3RdOnIuYmlkZGVycztyZXR1cm57aW5jbHVkZTpmdW5jdGlvbihlLHQpe3JldHVybiFvKCkoZSx0KX0sZXhjbHVkZTpmdW5jdGlvbihlLHQpe3JldHVybiBvKCkoZSx0KX19W3IuZmlsdGVyfHwiaW5jbHVkZSJdKGksdCl9fX0sNDU6ZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0IjtuLmQodCwiYSIsZnVuY3Rpb24oKXtyZXR1cm4gZn0pO3ZhciBTPW4oMCksQT1uKDMpLEU9bigzNykscj1uKDI0KSxpPW4oOTMpLG89bigyKSxhPW4oMTIpLE89bi5uKGEpO2Z1bmN0aW9uIFQoKXtyZXR1cm4oVD1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSkuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZ1bmN0aW9uIEkoZSx0LG4pe3JldHVybiB0IGluIGU/T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7dmFsdWU6bixlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOmVbdF09bixlfWZ1bmN0aW9uIEMoZSl7cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIGMoZSl9KGUpfHxmdW5jdGlvbihlKXtpZigidW5kZWZpbmVkIiE9dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChlKSlyZXR1cm4gQXJyYXkuZnJvbShlKX0oZSl8fGZ1bmN0aW9uKGUsdCl7aWYoIWUpcmV0dXJuO2lmKCJzdHJpbmciPT10eXBlb2YgZSlyZXR1cm4gYyhlLHQpO3ZhciBuPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKS5zbGljZSg4LC0xKTsiT2JqZWN0Ij09PW4mJmUuY29uc3RydWN0b3ImJihuPWUuY29uc3RydWN0b3IubmFtZSk7aWYoIk1hcCI9PT1ufHwiU2V0Ij09PW4pcmV0dXJuIEFycmF5LmZyb20oZSk7aWYoIkFyZ3VtZW50cyI9PT1ufHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSlyZXR1cm4gYyhlLHQpfShlKXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC4iKX0oKX1mdW5jdGlvbiBjKGUsdCl7KG51bGw9PXR8fHQ+ZS5sZW5ndGgpJiYodD1lLmxlbmd0aCk7Zm9yKHZhciBuPTAscj1uZXcgQXJyYXkodCk7bjx0O24rKylyW25dPWVbbl07cmV0dXJuIHJ9dmFyIHc9bigwKSxqPW4oNSksXz1bXSxCPU9iamVjdC5rZXlzKGouVEFSR0VUSU5HX0tFWVMpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gai5UQVJHRVRJTkdfS0VZU1tlXX0pLHU9ZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVzcG9uc2VUaW1lc3RhbXArMWUzKmUudHRsKzFlMz5PYmplY3QoUy50aW1lc3RhbXApKCl9LHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJihlLnN0YXR1cyYmIU8oKShbai5CSURfU1RBVFVTLlJFTkRFUkVEXSxlLnN0YXR1cyl8fCFlLnN0YXR1cyl9O2Z1bmN0aW9uIFUoZSxyLHQpe3ZhciBpPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09dD90OjAsbz1bXSxhPUEuYi5nZXRDb25maWcoInNlbmRCaWRzQ29udHJvbC5kZWFsUHJpb3JpdGl6YXRpb24iKSxjPU9iamVjdChTLmdyb3VwQnkpKGUsImFkVW5pdENvZGUiKTtyZXR1cm4gT2JqZWN0LmtleXMoYykuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdD1bXSxuPU9iamVjdChTLmdyb3VwQnkpKGNbZV0sImJpZGRlckNvZGUiKTtPYmplY3Qua2V5cyhuKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiB0LnB1c2gobltlXS5yZWR1Y2UocikpfSksMDxpPyh0PWE/dC5zb3J0KHgoITApKTp0LnNvcnQoZnVuY3Rpb24oZSx0KXtyZXR1cm4gdC5jcG0tZS5jcG19KSxvLnB1c2guYXBwbHkobyxDKHQuc2xpY2UoMCxpKSkpKTpvLnB1c2guYXBwbHkobyxDKHQpKX0pLG99ZnVuY3Rpb24geChlKXt2YXIgbj0wPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWUmJmU7cmV0dXJuIGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHZvaWQgMCE9PWUuYWRzZXJ2ZXJUYXJnZXRpbmcuaGJfZGVhbCYmdm9pZCAwPT09dC5hZHNlcnZlclRhcmdldGluZy5oYl9kZWFsPy0xOnZvaWQgMD09PWUuYWRzZXJ2ZXJUYXJnZXRpbmcuaGJfZGVhbCYmdm9pZCAwIT09dC5hZHNlcnZlclRhcmdldGluZy5oYl9kZWFsPzE6bj90LmNwbS1lLmNwbTp0LmFkc2VydmVyVGFyZ2V0aW5nLmhiX3BiLWUuYWRzZXJ2ZXJUYXJnZXRpbmcuaGJfcGJ9fXZhciBSLGssZCxmPShSPXIuYSxkPXt9LChrPXt9KS5zZXRMYXRlc3RBdWN0aW9uRm9yQWRVbml0PWZ1bmN0aW9uKGUsdCl7ZFtlXT10fSxrLnJlc2V0UHJlc2V0VGFyZ2V0aW5nPWZ1bmN0aW9uKGUsdCl7dmFyIG4saTtPYmplY3QoUy5pc0dwdFB1YmFkc0RlZmluZWQpKCkmJihuPUQoZSksaT1SLmdldEFkVW5pdHMoKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIE8oKShuLGUuY29kZSl9KSx3aW5kb3cuZ29vZ2xldGFnLnB1YmFkcygpLmdldFNsb3RzKCkuZm9yRWFjaChmdW5jdGlvbihuKXt2YXIgcj13LmlzRm4odCkmJnQobik7Xy5mb3JFYWNoKGZ1bmN0aW9uKHQpe2kuZm9yRWFjaChmdW5jdGlvbihlKXsoZS5jb2RlPT09bi5nZXRBZFVuaXRQYXRoKCl8fGUuY29kZT09PW4uZ2V0U2xvdEVsZW1lbnRJZCgpfHx3LmlzRm4ocikmJnIoZS5jb2RlKSkmJm4uc2V0VGFyZ2V0aW5nKHQsbnVsbCl9KX0pfSkpfSxrLnJlc2V0UHJlc2V0VGFyZ2V0aW5nQVNUPWZ1bmN0aW9uKGUpe0QoZSkuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdCxuLHI9d2luZG93LmFwbnRhZy5nZXRUYWcoZSk7ciYmci5rZXl3b3JkcyYmKHQ9T2JqZWN0LmtleXMoci5rZXl3b3Jkcyksbj17fSx0LmZvckVhY2goZnVuY3Rpb24oZSl7TygpKF8sZS50b0xvd2VyQ2FzZSgpKXx8KG5bZV09ci5rZXl3b3Jkc1tlXSl9KSx3aW5kb3cuYXBudGFnLm1vZGlmeVRhZyhlLHtrZXl3b3JkczpufSkpfSl9LGsuZ2V0QWxsVGFyZ2V0aW5nPWZ1bmN0aW9uKGUsdCl7dD10fHxQKCk7dmFyIG4scixpLG8sYSxjLHUscyxkLGYsbD1EKGUpLHA9KHU9bCxzPXQsZD1rLmdldFdpbm5pbmdCaWRzKHUscyksZj1NKCksKGQ9ZC5tYXAoZnVuY3Rpb24obyl7cmV0dXJuIEkoe30sby5hZFVuaXRDb2RlLE9iamVjdC5rZXlzKG8uYWRzZXJ2ZXJUYXJnZXRpbmcpLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwPT09by5zZW5kU3RhbmRhcmRUYXJnZXRpbmd8fG8uc2VuZFN0YW5kYXJkVGFyZ2V0aW5nfHwtMT09PWYuaW5kZXhPZihlKX0pLnJlZHVjZShmdW5jdGlvbihlLHQpe3ZhciBuPVtvLmFkc2VydmVyVGFyZ2V0aW5nW3RdXSxyPUkoe30sdC5zdWJzdHJpbmcoMCwyMCksbik7aWYodCE9PWouVEFSR0VUSU5HX0tFWVMuREVBTClyZXR1cm5bXS5jb25jYXQoQyhlKSxbcl0pO3ZhciBpPUkoe30sIiIuY29uY2F0KHQsIl8iKS5jb25jYXQoby5iaWRkZXJDb2RlKS5zdWJzdHJpbmcoMCwyMCksbik7cmV0dXJuW10uY29uY2F0KEMoZSksW3IsaV0pfSxbXSkpfSkpLmNvbmNhdCgoYz1sLHQuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBPKCkoYyxlLmFkVW5pdENvZGUpfSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBUKHt9LGUpfSkucmVkdWNlKHEsW10pLm1hcChHKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGV9KSkpLmNvbmNhdChBLmIuZ2V0Q29uZmlnKCJlbmFibGVTZW5kQWxsQmlkcyIpPyhyPWwsaT10LG89Qi5jb25jYXQoRS5hKSxhPUEuYi5nZXRDb25maWcoInNlbmRCaWRzQ29udHJvbC5iaWRMaW1pdCIpLFUoaSxTLmdldEhpZ2hlc3RDcG0sYSkubWFwKGZ1bmN0aW9uKHQpe2lmKE4odCxyKSlyZXR1cm4gSSh7fSx0LmFkVW5pdENvZGUsVyh0LG8uZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDAhPT10LmFkc2VydmVyVGFyZ2V0aW5nW2VdfSkpKX0pLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gZX0pKTpmdW5jdGlvbihlLHQpe2lmKCEwIT09QS5iLmdldENvbmZpZygidGFyZ2V0aW5nQ29udHJvbHMuYWx3YXlzSW5jbHVkZURlYWxzIikpcmV0dXJuW107dmFyIG49Qi5jb25jYXQoRS5hKTtyZXR1cm4gVSh0LFMuZ2V0SGlnaGVzdENwbSkubWFwKGZ1bmN0aW9uKHQpe2lmKHQuZGVhbElkJiZOKHQsZSkpcmV0dXJuIEkoe30sdC5hZFVuaXRDb2RlLFcodCxuLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwIT09dC5hZHNlcnZlclRhcmdldGluZ1tlXX0pKSl9KS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGV9KX0obCx0KSkuY29uY2F0KChuPWwsUi5nZXRBZFVuaXRzKCkuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBPKCkobixlLmNvZGUpJiZnKGUpfSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBJKHt9LGUuY29kZSwodD1nKGUpLE9iamVjdC5rZXlzKHQpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gSSh7fSxlLHcuaXNBcnJheSh0W2VdKT90W2VdOnRbZV0uc3BsaXQoIiwiKSl9KSkpO3ZhciB0fSkpKSk7ZnVuY3Rpb24gZyhlKXtyZXR1cm4gT2JqZWN0KFMuZGVlcEFjY2VzcykoZSxqLkpTT05fTUFQUElORy5BRFNFUlZFUl9UQVJHRVRJTkcpfXAubWFwKGZ1bmN0aW9uKHQpe09iamVjdC5rZXlzKHQpLm1hcChmdW5jdGlvbihlKXt0W2VdLm1hcChmdW5jdGlvbihlKXstMT09PV8uaW5kZXhPZihPYmplY3Qua2V5cyhlKVswXSkmJihfPU9iamVjdC5rZXlzKGUpLmNvbmNhdChfKSl9KX0pfSk7dmFyIGI9QS5iLmdldENvbmZpZygidGFyZ2V0aW5nQ29udHJvbHMuYWxsb3dUYXJnZXRpbmdLZXlzIik7QXJyYXkuaXNBcnJheShiKSYmMDxiLmxlbmd0aCYmKHA9ZnVuY3Rpb24oZSxyKXt2YXIgaT1UKHt9LGouVEFSR0VUSU5HX0tFWVMsai5OQVRJVkVfS0VZUyksbz1PYmplY3Qua2V5cyhpKSxhPXt9O09iamVjdChTLmxvZ0luZm8pKCJhbGxvd1RhcmdldGluZ0tleXMgLSBhbGxvd2VkIGtleXMgWyAiLmNvbmNhdChyLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gaVtlXX0pLmpvaW4oIiwgIiksIiBdIikpLGUubWFwKGZ1bmN0aW9uKGUpe3ZhciB0PU9iamVjdC5rZXlzKGUpWzBdLG49ZVt0XS5maWx0ZXIoZnVuY3Rpb24oZSl7dmFyIG49T2JqZWN0LmtleXMoZSlbMF0sdD0wPT09by5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIDA9PT1uLmluZGV4T2YoaVtlXSl9KS5sZW5ndGh8fHIuZmluZChmdW5jdGlvbihlKXt2YXIgdD1pW2VdO3JldHVybiAwPT09bi5pbmRleE9mKHQpfSk7cmV0dXJuIGFbbl09IXQsdH0pO2VbdF09bn0pO3ZhciB0PU9iamVjdC5rZXlzKGEpLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gYVtlXX0pO3JldHVybiBPYmplY3QoUy5sb2dJbmZvKSgiYWxsb3dUYXJnZXRpbmdLZXlzIC0gcmVtb3ZlZCBrZXlzIFsgIi5jb25jYXQodC5qb2luKCIsICIpLCIgXSIpKSxlLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gMDxlW09iamVjdC5rZXlzKGUpWzBdXS5sZW5ndGh9KX0ocCxiKSkscD1wLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gSSh7fSxPYmplY3Qua2V5cyhlKVswXSxlW09iamVjdC5rZXlzKGUpWzBdXS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIEkoe30sT2JqZWN0LmtleXMoZSlbMF0sZVtPYmplY3Qua2V5cyhlKVswXV0uam9pbigiLCAiKSl9KS5yZWR1Y2UoZnVuY3Rpb24oZSx0KXtyZXR1cm4gVCh0LGUpfSx7fSkpfSkucmVkdWNlKGZ1bmN0aW9uKGUsdCl7dmFyIG49T2JqZWN0LmtleXModClbMF07cmV0dXJuIGVbbl09VCh7fSxlW25dLHRbbl0pLGV9LHt9KTt2YXIgdix5LGgsbT1BLmIuZ2V0Q29uZmlnKCJ0YXJnZXRpbmdDb250cm9scy5hdWN0aW9uS2V5TWF4Q2hhcnMiKTtyZXR1cm4gbSYmKE9iamVjdChTLmxvZ0luZm8pKCJEZXRlY3RlZCAndGFyZ2V0aW5nQ29udHJvbHMuYXVjdGlvbktleU1heENoYXJzJyB3YXMgYWN0aXZlIGZvciB0aGlzIGF1Y3Rpb247IHNldCB3aXRoIGEgbGltaXQgb2YgIi5jb25jYXQobSwiIGNoYXJhY3RlcnMuICBSdW5uaW5nIGNoZWNrcyBvbiBhdWN0aW9uIGtleXMuLi4iKSksdj1wLHk9bSxoPU9iamVjdChTLmRlZXBDbG9uZSkodikscD1PYmplY3Qua2V5cyhoKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJue2FkVW5pdENvZGU6ZSxhZHNlcnZlclRhcmdldGluZzpoW2VdfX0pLnNvcnQoeCgpKS5yZWR1Y2UoZnVuY3Rpb24oZSx0LG4scil7dmFyIGksbz0oaT10LmFkc2VydmVyVGFyZ2V0aW5nLE9iamVjdC5rZXlzKGkpLnJlZHVjZShmdW5jdGlvbihlLHQpe3JldHVybiBlKyIiLmNvbmNhdCh0LCIlM2QiKS5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KGlbdF0pLCIlMjYiKX0sIiIpKTtuKzE9PT1yLmxlbmd0aCYmKG89by5zbGljZSgwLC0zKSk7dmFyIGE9dC5hZFVuaXRDb2RlLGM9by5sZW5ndGg7cmV0dXJuIGM8PXk/KHktPWMsT2JqZWN0KFMubG9nSW5mbykoIkFkVW5pdCAnIi5jb25jYXQoYSwiJyBhdWN0aW9uIGtleXMgY29tcHJpc2VkIG9mICIpLmNvbmNhdChjLCIgY2hhcmFjdGVycy4gIERlZHVjdGVkIGZyb20gcnVubmluZyB0aHJlc2hvbGQ7IG5ldyBsaW1pdCBpcyAiKS5jb25jYXQoeSksaFthXSksZVthXT1oW2FdKTpPYmplY3QoUy5sb2dXYXJuKSgiVGhlIGZvbGxvd2luZyBrZXlzIGZvciBhZFVuaXRDb2RlICciLmNvbmNhdChhLCInIGV4Y2VlZGVkIHRoZSBjdXJyZW50IGxpbWl0IG9mIHRoZSAnYXVjdGlvbktleU1heENoYXJzJyBzZXR0aW5nLlxuVGhlIGtleS1zZXQgc2l6ZSB3YXMgIikuY29uY2F0KGMsIiwgdGhlIGN1cnJlbnQgYWxsb3R0ZWQgYW1vdW50IHdhcyAiKS5jb25jYXQoeSwiLlxuIiksaFthXSksbisxPT09ci5sZW5ndGgmJjA9PT1PYmplY3Qua2V5cyhlKS5sZW5ndGgmJk9iamVjdChTLmxvZ0Vycm9yKSgiTm8gYXVjdGlvbiB0YXJnZXRpbmcga2V5cyB3ZXJlIHBlcm1pdHRlZCBkdWUgdG8gdGhlIHNldHRpbmcgaW4gc2V0Q29uZmlnKHRhcmdldGluZ0NvbnRyb2xzLmF1Y3Rpb25LZXlNYXhDaGFycykuICBQbGVhc2UgcmV2aWV3IHNldHVwIGFuZCBjb25zaWRlciBhZGp1c3RpbmcuIiksZX0se30pKSxsLmZvckVhY2goZnVuY3Rpb24oZSl7cFtlXXx8KHBbZV09e30pfSkscH0say5zZXRUYXJnZXRpbmdGb3JHUFQ9ZnVuY3Rpb24oaSxlKXt3aW5kb3cuZ29vZ2xldGFnLnB1YmFkcygpLmdldFNsb3RzKCkuZm9yRWFjaChmdW5jdGlvbihyKXtPYmplY3Qua2V5cyhpKS5maWx0ZXIoKGV8fE9iamVjdChTLmlzQWRVbml0Q29kZU1hdGNoaW5nU2xvdCkpKHIpKS5mb3JFYWNoKGZ1bmN0aW9uKG4pe3JldHVybiBPYmplY3Qua2V5cyhpW25dKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3ZhciBlPWlbbl1bdF07InN0cmluZyI9PXR5cGVvZiBlJiYoZT1lLnNwbGl0KCIsIikpLChlPTE8ZS5sZW5ndGg/W2VdOmUpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gdy5sb2dNZXNzYWdlKCJBdHRlbXB0aW5nIHRvIHNldCBrZXkgdmFsdWUgZm9yIHNsb3Q6ICIuY29uY2F0KHIuZ2V0U2xvdEVsZW1lbnRJZCgpLCIga2V5OiAiKS5jb25jYXQodCwiIHZhbHVlOiAiKS5jb25jYXQoZSkpLGV9KS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3Iuc2V0VGFyZ2V0aW5nKHQsZSl9KX0pfSl9KX0say5nZXRXaW5uaW5nQmlkcz1mdW5jdGlvbihlKXt2YXIgbj0xPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06UCgpLHQ9RChlKTtyZXR1cm4gbi5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIE8oKSh0LGUuYWRVbml0Q29kZSl9KS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIDA8ZS5jcG19KS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGUuYWRVbml0Q29kZX0pLmZpbHRlcihTLnVuaXF1ZXMpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gbi5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGUuYWRVbml0Q29kZT09PXQ/ZTpudWxsfSkucmVkdWNlKFMuZ2V0SGlnaGVzdENwbSl9KX0say5zZXRUYXJnZXRpbmdGb3JBc3Q9ZnVuY3Rpb24oZSl7dmFyIHI9ay5nZXRBbGxUYXJnZXRpbmcoZSk7dHJ5e2sucmVzZXRQcmVzZXRUYXJnZXRpbmdBU1QoZSl9Y2F0Y2goZSl7dy5sb2dFcnJvcigidW5hYmxlIHRvIHJlc2V0IHRhcmdldGluZyBmb3IgQVNUIitlKX1PYmplY3Qua2V5cyhyKS5mb3JFYWNoKGZ1bmN0aW9uKG4pe3JldHVybiBPYmplY3Qua2V5cyhyW25dKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciB0O3cubG9nTWVzc2FnZSgiQXR0ZW1wdGluZyB0byBzZXQgdGFyZ2V0aW5nIGZvciB0YXJnZXRJZDogIi5jb25jYXQobiwiIGtleTogIikuY29uY2F0KGUsIiB2YWx1ZTogIikuY29uY2F0KHJbbl1bZV0pKSwody5pc1N0cihyW25dW2VdKXx8dy5pc0FycmF5KHJbbl1bZV0pKSYmKHQ9e30sZS5zZWFyY2goL3B0WzAtOV0vKTwwP3RbZS50b1VwcGVyQ2FzZSgpXT1yW25dW2VdOnRbZV09cltuXVtlXSx3aW5kb3cuYXBudGFnLnNldEtleXdvcmRzKG4sdCx7b3ZlcnJpZGVLZXlWYWx1ZTohMH0pKX0pfSl9LGsuaXNBcG50YWdEZWZpbmVkPWZ1bmN0aW9uKCl7aWYod2luZG93LmFwbnRhZyYmdy5pc0ZuKHdpbmRvdy5hcG50YWcuc2V0S2V5d29yZHMpKXJldHVybiEwfSxrKTtmdW5jdGlvbiBOKGUsdCl7cmV0dXJuIGUuYWRzZXJ2ZXJUYXJnZXRpbmcmJnQmJih3LmlzQXJyYXkodCkmJk8oKSh0LGUuYWRVbml0Q29kZSl8fCJzdHJpbmciPT10eXBlb2YgdCYmZS5hZFVuaXRDb2RlPT09dCl9ZnVuY3Rpb24gRChlKXtyZXR1cm4ic3RyaW5nIj09dHlwZW9mIGU/W2VdOncuaXNBcnJheShlKT9lOlIuZ2V0QWRVbml0Q29kZXMoKXx8W119ZnVuY3Rpb24gUCgpe3ZhciBlPVIuZ2V0Qmlkc1JlY2VpdmVkKCk7cmV0dXJuIEEuYi5nZXRDb25maWcoInVzZUJpZENhY2hlIil8fChlPWUuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBkW2UuYWRVbml0Q29kZV09PT1lLmF1Y3Rpb25JZH0pKSxVKGU9ZS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdChTLmRlZXBBY2Nlc3MpKGUsInZpZGVvLmNvbnRleHQiKSE9PW8uYX0pLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4iYmFubmVyIiE9PWUubWVkaWFUeXBlfHxPYmplY3QoaS5jKShbZS53aWR0aCxlLmhlaWdodF0pfSkuZmlsdGVyKHMpLmZpbHRlcih1KSxTLmdldE9sZGVzdEhpZ2hlc3RDcG1CaWQpfWZ1bmN0aW9uIE0oKXtyZXR1cm4gUi5nZXRTdGFuZGFyZEJpZGRlckFkU2VydmVyVGFyZ2V0aW5nKCkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLmtleX0pLmNvbmNhdChCKS5maWx0ZXIoUy51bmlxdWVzKX1mdW5jdGlvbiBxKHIsaSxlLHQpe3JldHVybiBPYmplY3Qua2V5cyhpLmFkc2VydmVyVGFyZ2V0aW5nKS5maWx0ZXIobCgpKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciB0LG47ci5sZW5ndGgmJnIuZmlsdGVyKChuPWUsZnVuY3Rpb24oZSl7cmV0dXJuIGUuYWRVbml0Q29kZT09PWkuYWRVbml0Q29kZSYmZS5hZHNlcnZlclRhcmdldGluZ1tuXX0pKS5mb3JFYWNoKCh0PWUsZnVuY3Rpb24oZSl7dy5pc0FycmF5KGUuYWRzZXJ2ZXJUYXJnZXRpbmdbdF0pfHwoZS5hZHNlcnZlclRhcmdldGluZ1t0XT1bZS5hZHNlcnZlclRhcmdldGluZ1t0XV0pLGUuYWRzZXJ2ZXJUYXJnZXRpbmdbdF09ZS5hZHNlcnZlclRhcmdldGluZ1t0XS5jb25jYXQoaS5hZHNlcnZlclRhcmdldGluZ1t0XSkuZmlsdGVyKFMudW5pcXVlcyksZGVsZXRlIGkuYWRzZXJ2ZXJUYXJnZXRpbmdbdF19KSl9KSxyLnB1c2goaSkscn1mdW5jdGlvbiBsKCl7dmFyIHQ9TSgpLmNvbmNhdChFLmEpO3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4tMT09PXQuaW5kZXhPZihlKX19ZnVuY3Rpb24gRyh0KXtyZXR1cm4gSSh7fSx0LmFkVW5pdENvZGUsT2JqZWN0LmtleXModC5hZHNlcnZlclRhcmdldGluZykuZmlsdGVyKGwoKSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBJKHt9LGUuc3Vic3RyaW5nKDAsMjApLFt0LmFkc2VydmVyVGFyZ2V0aW5nW2VdXSl9KSl9ZnVuY3Rpb24gVyh0LGUpe3JldHVybiBlLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gSSh7fSwiIi5jb25jYXQoZSwiXyIpLmNvbmNhdCh0LmJpZGRlckNvZGUpLnN1YnN0cmluZygwLDIwKSxbdC5hZHNlcnZlclRhcmdldGluZ1tlXV0pfSl9fSw0NjpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO24uZCh0LCJhIixmdW5jdGlvbigpe3JldHVybiBkfSksbi5kKHQsImIiLGZ1bmN0aW9uKCl7cmV0dXJuIGh9KTt2YXIgcj1uKDEwKSx2PW4ubihyKSxpPW4oMCkseT0yLG89e2J1Y2tldHM6W3ttYXg6NSxpbmNyZW1lbnQ6LjV9XX0sYT17YnVja2V0czpbe21heDoyMCxpbmNyZW1lbnQ6LjF9XX0sYz17YnVja2V0czpbe21heDoyMCxpbmNyZW1lbnQ6LjAxfV19LHU9e2J1Y2tldHM6W3ttYXg6MyxpbmNyZW1lbnQ6LjAxfSx7bWF4OjgsaW5jcmVtZW50Oi4wNX0se21heDoyMCxpbmNyZW1lbnQ6LjV9XX0scz17YnVja2V0czpbe21heDo1LGluY3JlbWVudDouMDV9LHttYXg6MTAsaW5jcmVtZW50Oi4xfSx7bWF4OjIwLGluY3JlbWVudDouNX1dfTtmdW5jdGlvbiBkKGUsdCl7dmFyIG49Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOjEscj1wYXJzZUZsb2F0KGUpO3JldHVybiBpc05hTihyKSYmKHI9IiIpLHtsb3c6IiI9PT1yPyIiOmYoZSxvLG4pLG1lZDoiIj09PXI/IiI6ZihlLGEsbiksaGlnaDoiIj09PXI/IiI6ZihlLGMsbiksYXV0bzoiIj09PXI/IiI6ZihlLHMsbiksZGVuc2U6IiI9PT1yPyIiOmYoZSx1LG4pLGN1c3RvbToiIj09PXI/IiI6ZihlLHQsbil9fWZ1bmN0aW9uIGYobixlLHIpe3ZhciBpPSIiO2lmKCFoKGUpKXJldHVybiBpO3ZhciB0LG8sYSxjLHUscyxkLGYsbCxwPWUuYnVja2V0cy5yZWR1Y2UoZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS5tYXg+dC5tYXg/ZTp0fSx7bWF4OjB9KSxnPTAsYj12KCkoZS5idWNrZXRzLGZ1bmN0aW9uKGUpe2lmKG4+cC5tYXgqcil7dmFyIHQ9ZS5wcmVjaXNpb247dm9pZCAwPT09dCYmKHQ9eSksaT0oZS5tYXgqcikudG9GaXhlZCh0KX1lbHNle2lmKG48PWUubWF4KnImJmcqcjw9bilyZXR1cm4gZS5taW49ZyxlO2c9ZS5tYXh9fSk7cmV0dXJuIGImJih0PW4sYT1yLGM9dm9pZCAwIT09KG89YikucHJlY2lzaW9uP28ucHJlY2lzaW9uOnksdT1vLmluY3JlbWVudCphLHM9by5taW4qYSxkPU1hdGgucG93KDEwLGMrMiksZj0odCpkLXMqZCkvKHUqZCksbD1NYXRoLmZsb29yKGYpKnUrcyxpPShsPU51bWJlcihsLnRvRml4ZWQoMTApKSkudG9GaXhlZChjKSksaX1mdW5jdGlvbiBoKGUpe2lmKGkuaXNFbXB0eShlKXx8IWUuYnVja2V0c3x8IUFycmF5LmlzQXJyYXkoZS5idWNrZXRzKSlyZXR1cm4hMTt2YXIgdD0hMDtyZXR1cm4gZS5idWNrZXRzLmZvckVhY2goZnVuY3Rpb24oZSl7ZS5tYXgmJmUuaW5jcmVtZW50fHwodD0hMSl9KSx0fX0sNDc6ZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm57ZW51bWVyYWJsZTohKDEmZSksY29uZmlndXJhYmxlOiEoMiZlKSx3cml0YWJsZTohKDQmZSksdmFsdWU6dH19fSw0ODpmdW5jdGlvbihlLHQsbil7dmFyIHI9big3MiksaT1uKDUwKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIHIoaShlKSl9fSw0OTpmdW5jdGlvbihlLHQpe3ZhciBuPXt9LnRvU3RyaW5nO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gbi5jYWxsKGUpLnNsaWNlKDgsLTEpfX0sNTpmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz17SlNPTl9NQVBQSU5HOntQTF9DT0RFOiJjb2RlIixQTF9TSVpFOiJzaXplcyIsUExfQklEUzoiYmlkcyIsQkRfQklEREVSOiJiaWRkZXIiLEJEX0lEOiJwYXJhbXNkIixCRF9QTF9JRDoicGxhY2VtZW50SWQiLEFEU0VSVkVSX1RBUkdFVElORzoiYWRzZXJ2ZXJUYXJnZXRpbmciLEJEX1NFVFRJTkdfU1RBTkRBUkQ6InN0YW5kYXJkIn0sREVCVUdfTU9ERToicGJqc19kZWJ1ZyIsU1RBVFVTOntHT09EOjEsTk9fQklEOjJ9LENCOntUWVBFOntBTExfQklEU19CQUNLOiJhbGxSZXF1ZXN0ZWRCaWRzQmFjayIsQURfVU5JVF9CSURTX0JBQ0s6ImFkVW5pdEJpZHNCYWNrIixCSURfV09OOiJiaWRXb24iLFJFUVVFU1RfQklEUzoicmVxdWVzdEJpZHMifX0sRVZFTlRTOntBVUNUSU9OX0lOSVQ6ImF1Y3Rpb25Jbml0IixBVUNUSU9OX0VORDoiYXVjdGlvbkVuZCIsQklEX0FESlVTVE1FTlQ6ImJpZEFkanVzdG1lbnQiLEJJRF9USU1FT1VUOiJiaWRUaW1lb3V0IixCSURfUkVRVUVTVEVEOiJiaWRSZXF1ZXN0ZWQiLEJJRF9SRVNQT05TRToiYmlkUmVzcG9uc2UiLE5PX0JJRDoibm9CaWQiLEJJRF9XT046ImJpZFdvbiIsQklEREVSX0RPTkU6ImJpZGRlckRvbmUiLFNFVF9UQVJHRVRJTkc6InNldFRhcmdldGluZyIsQkVGT1JFX1JFUVVFU1RfQklEUzoiYmVmb3JlUmVxdWVzdEJpZHMiLFJFUVVFU1RfQklEUzoicmVxdWVzdEJpZHMiLEFERF9BRF9VTklUUzoiYWRkQWRVbml0cyIsQURfUkVOREVSX0ZBSUxFRDoiYWRSZW5kZXJGYWlsZWQiLFRDRjJfRU5GT1JDRU1FTlQ6InRjZjJFbmZvcmNlbWVudCIsQVVDVElPTl9ERUJVRzoiYXVjdGlvbkRlYnVnIn0sQURfUkVOREVSX0ZBSUxFRF9SRUFTT046e1BSRVZFTlRfV1JJVElOR19PTl9NQUlOX0RPQ1VNRU5UOiJwcmV2ZW50V3JpdGluZ09uTWFpbkRvY3VlbW50IixOT19BRDoibm9BZCIsRVhDRVBUSU9OOiJleGNlcHRpb24iLENBTk5PVF9GSU5EX0FEOiJjYW5ub3RGaW5kQWQiLE1JU1NJTkdfRE9DX09SX0FESUQ6Im1pc3NpbmdEb2NPckFkaWQifSxFVkVOVF9JRF9QQVRIUzp7YmlkV29uOiJhZFVuaXRDb2RlIn0sR1JBTlVMQVJJVFlfT1BUSU9OUzp7TE9XOiJsb3ciLE1FRElVTToibWVkaXVtIixISUdIOiJoaWdoIixBVVRPOiJhdXRvIixERU5TRToiZGVuc2UiLENVU1RPTToiY3VzdG9tIn0sVEFSR0VUSU5HX0tFWVM6e0JJRERFUjoiaGJfYmlkZGVyIixBRF9JRDoiaGJfYWRpZCIsUFJJQ0VfQlVDS0VUOiJoYl9wYiIsU0laRToiaGJfc2l6ZSIsREVBTDoiaGJfZGVhbCIsU09VUkNFOiJoYl9zb3VyY2UiLEZPUk1BVDoiaGJfZm9ybWF0IixVVUlEOiJoYl91dWlkIixDQUNIRV9JRDoiaGJfY2FjaGVfaWQiLENBQ0hFX0hPU1Q6ImhiX2NhY2hlX2hvc3QifSxOQVRJVkVfS0VZUzp7dGl0bGU6ImhiX25hdGl2ZV90aXRsZSIsYm9keToiaGJfbmF0aXZlX2JvZHkiLGJvZHkyOiJoYl9uYXRpdmVfYm9keTIiLHByaXZhY3lMaW5rOiJoYl9uYXRpdmVfcHJpdmFjeSIscHJpdmFjeUljb246ImhiX25hdGl2ZV9wcml2aWNvbiIsc3BvbnNvcmVkQnk6ImhiX25hdGl2ZV9icmFuZCIsaW1hZ2U6ImhiX25hdGl2ZV9pbWFnZSIsaWNvbjoiaGJfbmF0aXZlX2ljb24iLGNsaWNrVXJsOiJoYl9uYXRpdmVfbGlua3VybCIsZGlzcGxheVVybDoiaGJfbmF0aXZlX2Rpc3BsYXl1cmwiLGN0YToiaGJfbmF0aXZlX2N0YSIscmF0aW5nOiJoYl9uYXRpdmVfcmF0aW5nIixhZGRyZXNzOiJoYl9uYXRpdmVfYWRkcmVzcyIsZG93bmxvYWRzOiJoYl9uYXRpdmVfZG93bmxvYWRzIixsaWtlczoiaGJfbmF0aXZlX2xpa2VzIixwaG9uZToiaGJfbmF0aXZlX3Bob25lIixwcmljZToiaGJfbmF0aXZlX3ByaWNlIixzYWxlUHJpY2U6ImhiX25hdGl2ZV9zYWxlcHJpY2UifSxTMlM6e1NSQzoiczJzIixERUZBVUxUX0VORFBPSU5UOiJodHRwczovL3ByZWJpZC5hZG54cy5jb20vcGJzL3YxL29wZW5ydGIyL2F1Y3Rpb24iLFNZTkNFRF9CSURERVJTX0tFWToicGJqc1N5bmNzIn0sQklEX1NUQVRVUzp7QklEX1RBUkdFVElOR19TRVQ6InRhcmdldGluZ1NldCIsUkVOREVSRUQ6InJlbmRlcmVkIixCSURfUkVKRUNURUQ6ImJpZFJlamVjdGVkIn19fSw1MDpmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlKXtpZihudWxsPT1lKXRocm93IFR5cGVFcnJvcigiQ2FuJ3QgY2FsbCBtZXRob2Qgb24gIitlKTtyZXR1cm4gZX19LDUwNjpmdW5jdGlvbihlLHQsbil7dmFyIHI9big1MDcpO2UuZXhwb3J0cz1yfSw1MDc6ZnVuY3Rpb24oZSx0LG4pe24oNTA4KTt2YXIgcj1uKDQyKTtlLmV4cG9ydHM9ci5OdW1iZXIuaXNJbnRlZ2VyfSw1MDg6ZnVuY3Rpb24oZSx0LG4pe24oMTQpKHt0YXJnZXQ6Ik51bWJlciIsc3RhdDohMH0se2lzSW50ZWdlcjpuKDUwOSl9KX0sNTA5OmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDI2KSxpPU1hdGguZmxvb3I7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiFyKGUpJiZpc0Zpbml0ZShlKSYmaShlKT09PWV9fSw1MTpmdW5jdGlvbihlLHQsbil7dmFyIHI9big1OSksaT1NYXRoLm1pbjtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIDA8ZT9pKHIoZSksOTAwNzE5OTI1NDc0MDk5MSk6MH19LDUyOmZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKCl7fX0sNTM6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMjgpO2UuZXhwb3J0cz1yfSw1NDpmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz17fX0sNTU6ZnVuY3Rpb24oZSx0LG4pe3ZhciByLGksbyxhLGMsdSxzLGQsZj1uKDExNSksbD1uKDI1KSxwPW4oMjYpLGc9bigzMiksYj1uKDI3KSx2PW4oNjYpLHk9big1NCksaD1sLldlYWtNYXA7cz1mPyhyPW5ldyBoLGk9ci5nZXQsbz1yLmhhcyxhPXIuc2V0LGM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gYS5jYWxsKHIsZSx0KSx0fSx1PWZ1bmN0aW9uKGUpe3JldHVybiBpLmNhbGwocixlKXx8e319LGZ1bmN0aW9uKGUpe3JldHVybiBvLmNhbGwocixlKX0pOih5W2Q9digic3RhdGUiKV09ITAsYz1mdW5jdGlvbihlLHQpe3JldHVybiBnKGUsZCx0KSx0fSx1PWZ1bmN0aW9uKGUpe3JldHVybiBiKGUsZCk/ZVtkXTp7fX0sZnVuY3Rpb24oZSl7cmV0dXJuIGIoZSxkKX0pLGUuZXhwb3J0cz17c2V0OmMsZ2V0OnUsaGFzOnMsZW5mb3JjZTpmdW5jdGlvbihlKXtyZXR1cm4gcyhlKT91KGUpOmMoZSx7fSl9LGdldHRlckZvcjpmdW5jdGlvbihuKXtyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIHQ7aWYoIXAoZSl8fCh0PXUoZSkpLnR5cGUhPT1uKXRocm93IFR5cGVFcnJvcigiSW5jb21wYXRpYmxlIHJlY2VpdmVyLCAiK24rIiByZXF1aXJlZCIpO3JldHVybiB0fX19fSw1NjpmdW5jdGlvbihlLHQsbil7dmFyIGk9bigyNik7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYoIWkoZSkpcmV0dXJuIGU7dmFyIG4scjtpZih0JiYiZnVuY3Rpb24iPT10eXBlb2Yobj1lLnRvU3RyaW5nKSYmIWkocj1uLmNhbGwoZSkpKXJldHVybiByO2lmKCJmdW5jdGlvbiI9PXR5cGVvZihuPWUudmFsdWVPZikmJiFpKHI9bi5jYWxsKGUpKSlyZXR1cm4gcjtpZighdCYmImZ1bmN0aW9uIj09dHlwZW9mKG49ZS50b1N0cmluZykmJiFpKHI9bi5jYWxsKGUpKSlyZXR1cm4gcjt0aHJvdyBUeXBlRXJyb3IoIkNhbid0IGNvbnZlcnQgb2JqZWN0IHRvIHByaW1pdGl2ZSB2YWx1ZSIpfX0sNTc6ZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIocCl7dmFyIGc9MT09cCxiPTI9PXAsdj0zPT1wLHk9ND09cCxoPTY9PXAsbT01PT1wfHxoO3JldHVybiBmdW5jdGlvbihlLHQsbixyKXtmb3IodmFyIGksbyxhPUUoZSksYz1BKGEpLHU9Uyh0LG4sMykscz1PKGMubGVuZ3RoKSxkPTAsZj1yfHxULGw9Zz9mKGUscyk6Yj9mKGUsMCk6dm9pZCAwO2Q8cztkKyspaWYoKG18fGQgaW4gYykmJihvPXUoaT1jW2RdLGQsYSkscCkpaWYoZylsW2RdPW87ZWxzZSBpZihvKXN3aXRjaChwKXtjYXNlIDM6cmV0dXJuITA7Y2FzZSA1OnJldHVybiBpO2Nhc2UgNjpyZXR1cm4gZDtjYXNlIDI6SS5jYWxsKGwsaSl9ZWxzZSBpZih5KXJldHVybiExO3JldHVybiBoPy0xOnZ8fHk/eTpsfX12YXIgUz1uKDIzKSxBPW4oNzIpLEU9big1OCksTz1uKDUxKSxUPW4oMTAzKSxJPVtdLnB1c2g7ZS5leHBvcnRzPXtmb3JFYWNoOnIoMCksbWFwOnIoMSksZmlsdGVyOnIoMiksc29tZTpyKDMpLGV2ZXJ5OnIoNCksZmluZDpyKDUpLGZpbmRJbmRleDpyKDYpfX0sNTg6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oNTApO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gT2JqZWN0KHIoZSkpfX0sNTk6ZnVuY3Rpb24oZSx0KXt2YXIgbj1NYXRoLmNlaWwscj1NYXRoLmZsb29yO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gaXNOYU4oZT0rZSk/MDooMDxlP3I6bikoZSl9fSw2MDpmdW5jdGlvbihlLHQpe3ZhciBuPTAscj1NYXRoLnJhbmRvbSgpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4iU3ltYm9sKCIrU3RyaW5nKHZvaWQgMD09PWU/IiI6ZSkrIilfIisoKytuK3IpLnRvU3RyaW5nKDM2KX19LDYxOmZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBhKGUpe3Rocm93IGV9dmFyIGM9bigzMCksdT1uKDMxKSxzPW4oMjcpLGQ9T2JqZWN0LmRlZmluZVByb3BlcnR5LGY9e307ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYocyhmLGUpKXJldHVybiBmW2VdO3ZhciBuPVtdW2VdLHI9ISFzKHQ9dHx8e30sIkFDQ0VTU09SUyIpJiZ0LkFDQ0VTU09SUyxpPXModCwwKT90WzBdOmEsbz1zKHQsMSk/dFsxXTp2b2lkIDA7cmV0dXJuIGZbZV09ISFuJiYhdShmdW5jdGlvbigpe2lmKHImJiFjKXJldHVybiEwO3ZhciBlPXtsZW5ndGg6LTF9O3I/ZChlLDEse2VudW1lcmFibGU6ITAsZ2V0OmF9KTplWzFdPTEsbi5jYWxsKGUsaSxvKX0pfX0sNjI6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oNjMpLGk9bigzOSksbz1uKDIwKSgiaXRlcmF0b3IiKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYobnVsbCE9ZSlyZXR1cm4gZVtvXXx8ZVsiQEBpdGVyYXRvciJdfHxpW3IoZSldfX0sNjM6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oNjQpLGk9big0OSksbz1uKDIwKSgidG9TdHJpbmdUYWciKSxhPSJBcmd1bWVudHMiPT1pKGZ1bmN0aW9uKCl7cmV0dXJuIGFyZ3VtZW50c30oKSk7ZS5leHBvcnRzPXI/aTpmdW5jdGlvbihlKXt2YXIgdCxuLHI7cmV0dXJuIHZvaWQgMD09PWU/IlVuZGVmaW5lZCI6bnVsbD09PWU/Ik51bGwiOiJzdHJpbmciPT10eXBlb2Yobj1mdW5jdGlvbihlLHQpe3RyeXtyZXR1cm4gZVt0XX1jYXRjaChlKXt9fSh0PU9iamVjdChlKSxvKSk/bjphP2kodCk6Ik9iamVjdCI9PShyPWkodCkpJiYiZnVuY3Rpb24iPT10eXBlb2YgdC5jYWxsZWU/IkFyZ3VtZW50cyI6cn19LDY0OmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj17fTtyW24oMjApKCJ0b1N0cmluZ1RhZyIpXT0ieiIsZS5leHBvcnRzPSJbb2JqZWN0IHpdIj09PVN0cmluZyhyKX0sNjU6ZnVuY3Rpb24oZSx0LG4pe3ZhciBvPW4oNjQpLGE9bigzMykuZixjPW4oMzIpLHU9bigyNykscz1uKDExNCksZD1uKDIwKSgidG9TdHJpbmdUYWciKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LG4scil7dmFyIGk7ZSYmKGk9bj9lOmUucHJvdG90eXBlLHUoaSxkKXx8YShpLGQse2NvbmZpZ3VyYWJsZTohMCx2YWx1ZTp0fSksciYmIW8mJmMoaSwidG9TdHJpbmciLHMpKX19LDY2OmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDc1KSxpPW4oNjApLG89cigia2V5cyIpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gb1tlXXx8KG9bZV09aShlKSl9fSw2NzpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIHkoKXtyZXR1cm4gdGhpc312YXIgaD1uKDE0KSxtPW4oMTIzKSxTPW4oODgpLEE9bigxMjUpLEU9big2NSksTz1uKDMyKSxUPW4oODYpLHI9bigyMCksST1uKDE2KSxDPW4oMzkpLGk9big4Nyksdz1pLkl0ZXJhdG9yUHJvdG90eXBlLGo9aS5CVUdHWV9TQUZBUklfSVRFUkFUT1JTLF89cigiaXRlcmF0b3IiKSxCPSJ2YWx1ZXMiLFU9ImVudHJpZXMiO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQsbixyLGksbyxhKXttKG4sdCxyKTtmdW5jdGlvbiBjKGUpe2lmKGU9PT1pJiZiKXJldHVybiBiO2lmKCFqJiZlIGluIHApcmV0dXJuIHBbZV07c3dpdGNoKGUpe2Nhc2Uia2V5cyI6Y2FzZSBCOmNhc2UgVTpyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IG4odGhpcyxlKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBuKHRoaXMpfX12YXIgdSxzLGQsZj10KyIgSXRlcmF0b3IiLGw9ITEscD1lLnByb3RvdHlwZSxnPXBbX118fHBbIkBAaXRlcmF0b3IiXXx8aSYmcFtpXSxiPSFqJiZnfHxjKGkpLHY9IkFycmF5Ij09dCYmcC5lbnRyaWVzfHxnO2lmKHYmJih1PVModi5jYWxsKG5ldyBlKSksdyE9PU9iamVjdC5wcm90b3R5cGUmJnUubmV4dCYmKEl8fFModSk9PT13fHwoQT9BKHUsdyk6ImZ1bmN0aW9uIiE9dHlwZW9mIHVbX10mJk8odSxfLHkpKSxFKHUsZiwhMCwhMCksSSYmKENbZl09eSkpKSxpPT1CJiZnJiZnLm5hbWUhPT1CJiYobD0hMCxiPWZ1bmN0aW9uKCl7cmV0dXJuIGcuY2FsbCh0aGlzKX0pLEkmJiFhfHxwW19dPT09Ynx8TyhwLF8sYiksQ1t0XT1iLGkpaWYocz17dmFsdWVzOmMoQiksa2V5czpvP2I6Yygia2V5cyIpLGVudHJpZXM6YyhVKX0sYSlmb3IoZCBpbiBzKSFqJiYhbCYmZCBpbiBwfHxUKHAsZCxzW2RdKTtlbHNlIGgoe3RhcmdldDp0LHByb3RvOiEwLGZvcmNlZDpqfHxsfSxzKTtyZXR1cm4gc319LDY4OmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7bi5kKHQsImEiLGZ1bmN0aW9uKCl7cmV0dXJuIG99KTt2YXIgcj1uKDApLGM9e307ZnVuY3Rpb24gaShlLHQsbil7dmFyIHIsaSxvLGE9KGk9bixvPWNbcj1lXT1jW3JdfHx7YmlkZGVyczp7fX0saT9vLmJpZGRlcnNbaV09by5iaWRkZXJzW2ldfHx7fTpvKTtyZXR1cm4gYVt0XT0oYVt0XXx8MCkrMSxhW3RdfXZhciBvPXtpbmNyZW1lbnRSZXF1ZXN0c0NvdW50ZXI6ZnVuY3Rpb24oZSl7cmV0dXJuIGkoZSwicmVxdWVzdHNDb3VudGVyIil9LGluY3JlbWVudEJpZGRlclJlcXVlc3RzQ291bnRlcjpmdW5jdGlvbihlLHQpe3JldHVybiBpKGUsInJlcXVlc3RzQ291bnRlciIsdCl9LGluY3JlbWVudEJpZGRlcldpbnNDb3VudGVyOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIGkoZSwid2luc0NvdW50ZXIiLHQpfSxnZXRSZXF1ZXN0c0NvdW50ZXI6ZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdChyLmRlZXBBY2Nlc3MpKGMsIiIuY29uY2F0KGUsIi5yZXF1ZXN0c0NvdW50ZXIiKSl8fDB9LGdldEJpZGRlclJlcXVlc3RzQ291bnRlcjpmdW5jdGlvbihlLHQpe3JldHVybiBPYmplY3Qoci5kZWVwQWNjZXNzKShjLCIiLmNvbmNhdChlLCIuYmlkZGVycy4iKS5jb25jYXQodCwiLnJlcXVlc3RzQ291bnRlciIpKXx8MH0sZ2V0QmlkZGVyV2luc0NvdW50ZXI6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gT2JqZWN0KHIuZGVlcEFjY2VzcykoYywiIi5jb25jYXQoZSwiLmJpZGRlcnMuIikuY29uY2F0KHQsIi53aW5zQ291bnRlciIpKXx8MH19fSw3OmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7bi5kKHQsImMiLGZ1bmN0aW9uKCl7cmV0dXJuIGx9KSxuLmQodCwiZCIsZnVuY3Rpb24oKXtyZXR1cm4gcH0pLHQuYT1mdW5jdGlvbihlKXtyZXR1cm4gbyh7bW9kdWxlTmFtZTplLG1vZHVsZVR5cGU6ImNvcmUifSl9LHQuYj1mdW5jdGlvbihlLHQpe3JldHVybiBvKHtndmxpZDplLG1vZHVsZU5hbWU6dH0pfTt2YXIgcj1uKDEzKSx1PW4oMCksaT1uKDEyKSxkPW4ubihpKSxmPVsiY29yZSIsInByZWJpZC1tb2R1bGUiXSxsPVtdO2Z1bmN0aW9uIG8oZSl7dmFyIHQ9MDxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1lP2U6e30saT10Lmd2bGlkLG89dC5tb2R1bGVOYW1lLGE9dC5tb2R1bGVUeXBlO2Z1bmN0aW9uIHMobil7aWYoZCgpKGYsYSkpe3JldHVybiBuKHt2YWxpZDohMH0pfXZhciByO3JldHVybiBwKGksbyx7aGFzRW5mb3JjZW1lbnRIb29rOiExfSxmdW5jdGlvbihlKXt2YXIgdDtyPWUmJmUuaGFzRW5mb3JjZW1lbnRIb29rP24oZSk6KHQ9e2hhc0VuZm9yY2VtZW50SG9vazohMSx2YWxpZDp1Lmhhc0RldmljZUFjY2VzcygpfSxuKHQpKX0pLHJ9dmFyIGM9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gbihlKXtpZihlJiZlLnZhbGlkKXRyeXtyZXR1cm4hIXdpbmRvdy5sb2NhbFN0b3JhZ2V9Y2F0Y2goZSl7dS5sb2dFcnJvcigiTG9jYWwgc3RvcmFnZSBhcGkgZGlzYWJsZWQiKX1yZXR1cm4hMX1pZighdHx8ImZ1bmN0aW9uIiE9dHlwZW9mIHQpcmV0dXJuIHMobik7bC5wdXNoKGZ1bmN0aW9uKCl7dmFyIGU9cyhuKTt0KGUpfSl9O3JldHVybntzZXRDb29raWU6ZnVuY3Rpb24oaSxvLGEsYyx1LHQpe2Z1bmN0aW9uIG4oZSl7dmFyIHQsbixyO2UmJmUudmFsaWQmJih0PXUmJiIiIT09dT8iIDtkb21haW49Ii5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KHUpKToiIixuPWEmJiIiIT09YT8iIDtleHBpcmVzPSIuY29uY2F0KGEpOiIiLHI9bnVsbCE9YyYmIm5vbmUiPT1jLnRvTG93ZXJDYXNlKCk/IjsgU2VjdXJlIjoiIixkb2N1bWVudC5jb29raWU9IiIuY29uY2F0KGksIj0iKS5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KG8pKS5jb25jYXQobiwiOyBwYXRoPS8iKS5jb25jYXQodCkuY29uY2F0KGM/IjsgU2FtZVNpdGU9Ii5jb25jYXQoYyk6IiIpLmNvbmNhdChyKSl9aWYoIXR8fCJmdW5jdGlvbiIhPXR5cGVvZiB0KXJldHVybiBzKG4pO2wucHVzaChmdW5jdGlvbigpe3ZhciBlPXMobik7dChlKX0pfSxnZXRDb29raWU6ZnVuY3Rpb24obix0KXtmdW5jdGlvbiByKGUpe2lmKGUmJmUudmFsaWQpe3ZhciB0PXdpbmRvdy5kb2N1bWVudC5jb29raWUubWF0Y2goIihefDspXFxzKiIrbisiXFxzKj1cXHMqKFteO10qKVxccyooO3wkKSIpO3JldHVybiB0P2RlY29kZVVSSUNvbXBvbmVudCh0WzJdKTpudWxsfXJldHVybiBudWxsfWlmKCF0fHwiZnVuY3Rpb24iIT10eXBlb2YgdClyZXR1cm4gcyhyKTtsLnB1c2goZnVuY3Rpb24oKXt2YXIgZT1zKHIpO3QoZSl9KX0sbG9jYWxTdG9yYWdlSXNFbmFibGVkOmZ1bmN0aW9uKHQpe2Z1bmN0aW9uIG4oZSl7aWYoZSYmZS52YWxpZCl0cnl7cmV0dXJuIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJwcmViaWQuY29va2llVGVzdCIsIjEiKSwiMSI9PT1sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgicHJlYmlkLmNvb2tpZVRlc3QiKX1jYXRjaChlKXt9cmV0dXJuITF9aWYoIXR8fCJmdW5jdGlvbiIhPXR5cGVvZiB0KXJldHVybiBzKG4pO2wucHVzaChmdW5jdGlvbigpe3ZhciBlPXMobik7dChlKX0pfSxjb29raWVzQXJlRW5hYmxlZDpmdW5jdGlvbih0KXtmdW5jdGlvbiBuKGUpe3JldHVybiEoIWV8fCFlLnZhbGlkKSYmKCEhdS5jaGVja0Nvb2tpZVN1cHBvcnQoKXx8KHdpbmRvdy5kb2N1bWVudC5jb29raWU9InByZWJpZC5jb29raWVUZXN0IiwtMSE9PXdpbmRvdy5kb2N1bWVudC5jb29raWUuaW5kZXhPZigicHJlYmlkLmNvb2tpZVRlc3QiKSkpfWlmKCF0fHwiZnVuY3Rpb24iIT10eXBlb2YgdClyZXR1cm4gcyhuKTtsLnB1c2goZnVuY3Rpb24oKXt2YXIgZT1zKG4pO3QoZSl9KX0sc2V0RGF0YUluTG9jYWxTdG9yYWdlOmZ1bmN0aW9uKHQsbixyKXtmdW5jdGlvbiBpKGUpe2UmJmUudmFsaWQmJmMoKSYmd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKHQsbil9aWYoIXJ8fCJmdW5jdGlvbiIhPXR5cGVvZiByKXJldHVybiBzKGkpO2wucHVzaChmdW5jdGlvbigpe3ZhciBlPXMoaSk7cihlKX0pfSxnZXREYXRhRnJvbUxvY2FsU3RvcmFnZTpmdW5jdGlvbih0LG4pe2Z1bmN0aW9uIHIoZSl7cmV0dXJuIGUmJmUudmFsaWQmJmMoKT93aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0odCk6bnVsbH1pZighbnx8ImZ1bmN0aW9uIiE9dHlwZW9mIG4pcmV0dXJuIHMocik7bC5wdXNoKGZ1bmN0aW9uKCl7dmFyIGU9cyhyKTtuKGUpfSl9LHJlbW92ZURhdGFGcm9tTG9jYWxTdG9yYWdlOmZ1bmN0aW9uKHQsbil7ZnVuY3Rpb24gcihlKXtlJiZlLnZhbGlkJiZjKCkmJndpbmRvdy5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSh0KX1pZighbnx8ImZ1bmN0aW9uIiE9dHlwZW9mIG4pcmV0dXJuIHMocik7bC5wdXNoKGZ1bmN0aW9uKCl7dmFyIGU9cyhyKTtuKGUpfSl9LGhhc0xvY2FsU3RvcmFnZTpjLGZpbmRTaW1pbGFyQ29va2llczpmdW5jdGlvbihvLHQpe2Z1bmN0aW9uIG4oZSl7aWYoZSYmZS52YWxpZCl7dmFyIHQ9W107aWYodS5oYXNEZXZpY2VBY2Nlc3MoKSlmb3IodmFyIG49ZG9jdW1lbnQuY29va2llLnNwbGl0KCI7Iik7bi5sZW5ndGg7KXt2YXIgcj1uLnBvcCgpLGk9KGk9ci5pbmRleE9mKCI9IikpPDA/ci5sZW5ndGg6aTswPD1kZWNvZGVVUklDb21wb25lbnQoci5zbGljZSgwLGkpLnJlcGxhY2UoL15ccysvLCIiKSkuaW5kZXhPZihvKSYmdC5wdXNoKGRlY29kZVVSSUNvbXBvbmVudChyLnNsaWNlKGkrMSkpKX1yZXR1cm4gdH19aWYoIXR8fCJmdW5jdGlvbiIhPXR5cGVvZiB0KXJldHVybiBzKG4pO2wucHVzaChmdW5jdGlvbigpe3ZhciBlPXMobik7dChlKX0pfX19dmFyIHA9T2JqZWN0KHIuYikoImFzeW5jIixmdW5jdGlvbihlLHQsbixyKXtyKG4pfSwidmFsaWRhdGVTdG9yYWdlRW5mb3JjZW1lbnQiKX0sNzA6ZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0IjtPYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksbi5kKHQsImFkVW5pdFNldHVwQ2hlY2tzIixmdW5jdGlvbigpe3JldHVybiBWfSksbi5kKHQsImNoZWNrQWRVbml0U2V0dXAiLGZ1bmN0aW9uKCl7cmV0dXJuIEh9KSx0LmV4ZWN1dGVDYWxsYmFja3M9WTt2YXIgcj1uKDE5KSxpPW4oMCksbz1uKDIyOCksYT1uKDQ0KSxkPW4oMyksQT1uKDI0KSxmPW4oNDUpLGM9bigxMyksdT1uKDIyOSkscz1uKDEyKSxsPW4ubihzKSxwPW4oNjgpLEU9bigxMSksZz1uKDM0KSxiPW4oNyksdj1uKDQzKTtmdW5jdGlvbiB5KGUpe3JldHVybih5PSJmdW5jdGlvbiI9PXR5cGVvZiBTeW1ib2wmJiJzeW1ib2wiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJiJmdW5jdGlvbiI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlPyJzeW1ib2wiOnR5cGVvZiBlfSkoZSl9ZnVuY3Rpb24gaCgpe3JldHVybihoPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9KS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIG09T2JqZWN0KHIuYSkoKSxTPW4oNSksTz1uKDApLFQ9big5KS5kZWZhdWx0LEk9big4KSxDPWEuYS50cmlnZ2VyVXNlclN5bmNzLHc9Uy5FVkVOVFMsaj13LkFERF9BRF9VTklUUyxfPXcuQklEX1dPTixCPXcuUkVRVUVTVF9CSURTLFU9dy5TRVRfVEFSR0VUSU5HLHg9dy5BRF9SRU5ERVJfRkFJTEVELFI9Uy5BRF9SRU5ERVJfRkFJTEVEX1JFQVNPTixrPVIuUFJFVkVOVF9XUklUSU5HX09OX01BSU5fRE9DVU1FTlQsTj1SLk5PX0FELEQ9Ui5FWENFUFRJT04sUD1SLkNBTk5PVF9GSU5EX0FELE09Ui5NSVNTSU5HX0RPQ19PUl9BRElELHE9e2JpZFdvbjpmdW5jdGlvbihlKXt2YXIgdD1BLmEuZ2V0Qmlkc1JlcXVlc3RlZCgpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZS5iaWRzLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZS5hZFVuaXRDb2RlfSl9KS5yZWR1Y2UoaS5mbGF0dGVuKS5maWx0ZXIoaS51bmlxdWVzKTtyZXR1cm4hIU8uY29udGFpbnModCxlKXx8dm9pZCBPLmxvZ0Vycm9yKCdUaGUgIicrZSsnIiBwbGFjZW1lbnQgaXMgbm90IGRlZmluZWQuJyl9fTtmdW5jdGlvbiBHKGUsdCxuKXtlJiYoZS53aWR0aD10LGUuaGVpZ2h0PW4pfWZ1bmN0aW9uIFcoZSx0KXt2YXIgbj1bXTtyZXR1cm4gTy5pc0FycmF5KGUpJiYodD9lLmxlbmd0aD09PXQ6MDxlLmxlbmd0aCkmJihlLmV2ZXJ5KGZ1bmN0aW9uKGUpe3JldHVybiBPYmplY3QoaS5pc0FycmF5T2ZOdW1zKShlLDIpfSk/bj1lOk9iamVjdChpLmlzQXJyYXlPZk51bXMpKGUsMikmJm4ucHVzaChlKSksbn1mdW5jdGlvbiBMKGUpe3ZhciB0PU8uZGVlcENsb25lKGUpLG49dC5tZWRpYVR5cGVzLmJhbm5lcixyPVcobi5zaXplcyk7cmV0dXJuIDA8ci5sZW5ndGg/KG4uc2l6ZXM9cix0LnNpemVzPXIpOihPLmxvZ0Vycm9yKCJEZXRlY3RlZCBhIG1lZGlhVHlwZXMuYmFubmVyIG9iamVjdCB3aXRob3V0IGEgcHJvcGVyIHNpemVzIGZpZWxkLiAgUGxlYXNlIGVuc3VyZSB0aGUgc2l6ZXMgYXJlIGxpc3RlZCBsaWtlOiBbWzMwMCwgMjUwXSwgLi4uXS4gIFJlbW92aW5nIGludmFsaWQgbWVkaWFUeXBlcy5iYW5uZXIgb2JqZWN0IGZyb20gcmVxdWVzdC4iKSxkZWxldGUgdC5tZWRpYVR5cGVzLmJhbm5lciksdH1mdW5jdGlvbiBGKGUpe3ZhciB0LG4scj1PLmRlZXBDbG9uZShlKSxpPXIubWVkaWFUeXBlcy52aWRlbztyZXR1cm4gaS5wbGF5ZXJTaXplJiYodD0ibnVtYmVyIj09dHlwZW9mIGkucGxheWVyU2l6ZVswXT8yOjEsMDwobj1XKGkucGxheWVyU2l6ZSx0KSkubGVuZ3RoPygyPT10JiZPLmxvZ0luZm8oIlRyYW5zZm9ybWluZyB2aWRlby5wbGF5ZXJTaXplIGZyb20gWzY0MCw0ODBdIHRvIFtbNjQwLDQ4MF1dIHNvIGl0J3MgaW4gdGhlIHByb3BlciBmb3JtYXQuIiksaS5wbGF5ZXJTaXplPW4sci5zaXplcz1uKTooTy5sb2dFcnJvcigiRGV0ZWN0ZWQgaW5jb3JyZWN0IGNvbmZpZ3VyYXRpb24gb2YgbWVkaWFUeXBlcy52aWRlby5wbGF5ZXJTaXplLiAgUGxlYXNlIHNwZWNpZnkgb25seSBvbmUgc2V0IG9mIGRpbWVuc2lvbnMgaW4gYSBmb3JtYXQgbGlrZTogW1s2NDAsIDQ4MF1dLiBSZW1vdmluZyBpbnZhbGlkIG1lZGlhVHlwZXMudmlkZW8ucGxheWVyU2l6ZSBwcm9wZXJ0eSBmcm9tIHJlcXVlc3QuIiksZGVsZXRlIHIubWVkaWFUeXBlcy52aWRlby5wbGF5ZXJTaXplKSkscn1mdW5jdGlvbiB6KGUpe3ZhciB0PU8uZGVlcENsb25lKGUpLG49dC5tZWRpYVR5cGVzLm5hdGl2ZTtyZXR1cm4gbi5pbWFnZSYmbi5pbWFnZS5zaXplcyYmIUFycmF5LmlzQXJyYXkobi5pbWFnZS5zaXplcykmJihPLmxvZ0Vycm9yKCJQbGVhc2UgdXNlIGFuIGFycmF5IG9mIHNpemVzIGZvciBuYXRpdmUuaW1hZ2Uuc2l6ZXMgZmllbGQuICBSZW1vdmluZyBpbnZhbGlkIG1lZGlhVHlwZXMubmF0aXZlLmltYWdlLnNpemVzIHByb3BlcnR5IGZyb20gcmVxdWVzdC4iKSxkZWxldGUgdC5tZWRpYVR5cGVzLm5hdGl2ZS5pbWFnZS5zaXplcyksbi5pbWFnZSYmbi5pbWFnZS5hc3BlY3RfcmF0aW9zJiYhQXJyYXkuaXNBcnJheShuLmltYWdlLmFzcGVjdF9yYXRpb3MpJiYoTy5sb2dFcnJvcigiUGxlYXNlIHVzZSBhbiBhcnJheSBvZiBzaXplcyBmb3IgbmF0aXZlLmltYWdlLmFzcGVjdF9yYXRpb3MgZmllbGQuICBSZW1vdmluZyBpbnZhbGlkIG1lZGlhVHlwZXMubmF0aXZlLmltYWdlLmFzcGVjdF9yYXRpb3MgcHJvcGVydHkgZnJvbSByZXF1ZXN0LiIpLGRlbGV0ZSB0Lm1lZGlhVHlwZXMubmF0aXZlLmltYWdlLmFzcGVjdF9yYXRpb3MpLG4uaWNvbiYmbi5pY29uLnNpemVzJiYhQXJyYXkuaXNBcnJheShuLmljb24uc2l6ZXMpJiYoTy5sb2dFcnJvcigiUGxlYXNlIHVzZSBhbiBhcnJheSBvZiBzaXplcyBmb3IgbmF0aXZlLmljb24uc2l6ZXMgZmllbGQuICBSZW1vdmluZyBpbnZhbGlkIG1lZGlhVHlwZXMubmF0aXZlLmljb24uc2l6ZXMgcHJvcGVydHkgZnJvbSByZXF1ZXN0LiIpLGRlbGV0ZSB0Lm1lZGlhVHlwZXMubmF0aXZlLmljb24uc2l6ZXMpLHR9d2luZG93LnVwYmpzLnByZWJpZFZlcnNpb249IjIuMjMuMCIsT2JqZWN0KHUuYSkoKSxtLmJpZGRlclNldHRpbmdzPW0uYmlkZGVyU2V0dGluZ3N8fHt9LG0ubGliTG9hZGVkPSEwLG0udmVyc2lvbj0idjQuMTcuMCIsTy5sb2dJbmZvKCJQcmViaWQuanMgdjQuMTcuMCBsb2FkZWQiKSxtLmFkVW5pdHM9bS5hZFVuaXRzfHxbXSxtLnNldFVwQ29va2llRnJhbWU9ZnVuY3Rpb24oZSl7Ty5sb2dJbmZvKCJJbnZva2luZyB1cGJqcy5zZXRVcENvb2tpZUZyYW1lIixhcmd1bWVudHMpLHYuZChlKX0sbS5vbkJlZm9yZVJlcXVlc3Q9ZnVuY3Rpb24oZSl7Ty5sb2dJbmZvKCJJbnZva2luZyB1cGJqcy5vbkJlZm9yZVJlcXVlc3QiLGFyZ3VtZW50cyksdi5iKGUpfSxtLnRyaWdnZXJVc2VyU3luY3M9Qzt2YXIgVj17dmFsaWRhdGVCYW5uZXJNZWRpYVR5cGU6TCx2YWxpZGF0ZVZpZGVvTWVkaWFUeXBlOkYsdmFsaWRhdGVOYXRpdmVNZWRpYVR5cGU6eix2YWxpZGF0ZVNpemVzOld9LEg9T2JqZWN0KGMuYikoInN5bmMiLGZ1bmN0aW9uKGUpe3ZhciBjPVtdO3JldHVybiBlLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHQsbixyLGksbz1lLm1lZGlhVHlwZXMsYT1lLmJpZHM7YSYmTy5pc0FycmF5KGEpP28mJjAhPT1PYmplY3Qua2V5cyhvKS5sZW5ndGg/KG8uYmFubmVyJiYodD1MKGUpKSxvLnZpZGVvJiYobj1GKHR8fGUpKSxvLm5hdGl2ZSYmKHI9eihufHwodHx8ZSkpKSxpPWgoe30sdCxuLHIpLGMucHVzaChpKSk6Ty5sb2dFcnJvcigiRGV0ZWN0ZWQgYWRVbml0LmNvZGUgJyIuY29uY2F0KGUuY29kZSwiJyBkaWQgbm90IGhhdmUgYSAnbWVkaWFUeXBlcycgb2JqZWN0IGRlZmluZWQuICBUaGlzIGlzIGEgcmVxdWlyZWQgZmllbGQgZm9yIHRoZSBhdWN0aW9uLCBzbyB0aGlzIGFkVW5pdCBoYXMgYmVlbiByZW1vdmVkLiIpKTpPLmxvZ0Vycm9yKCJEZXRlY3RlZCBhZFVuaXQuY29kZSAnIi5jb25jYXQoZS5jb2RlLCInIGRpZCBub3QgaGF2ZSAnYWRVbml0LmJpZHMnIGRlZmluZWQgb3IgJ2FkVW5pdC5iaWRzJyBpcyBub3QgYW4gYXJyYXkuIFJlbW92aW5nIGFkVW5pdCBmcm9tIGF1Y3Rpb24uIikpfSksY30sImNoZWNrQWRVbml0U2V0dXAiKTtmdW5jdGlvbiBLKGUpe3ZhciBuPUEuYVtlXSgpLmZpbHRlcihPLmJpbmQuY2FsbChpLmFkVW5pdHNGaWx0ZXIsdGhpcyxBLmEuZ2V0QWRVbml0Q29kZXMoKSkpLHI9QS5hLmdldExhc3RBdWN0aW9uSWQoKTtyZXR1cm4gbi5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGUuYWRVbml0Q29kZX0pLmZpbHRlcihpLnVuaXF1ZXMpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gbi5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGUuYXVjdGlvbklkPT09ciYmZS5hZFVuaXRDb2RlPT09dH0pfSkuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBlJiZlWzBdJiZlWzBdLmFkVW5pdENvZGV9KS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIHQ9e30sbj1lWzBdLmFkVW5pdENvZGUscj17YmlkczplfSxuIGluIHQ/T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsbix7dmFsdWU6cixlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOnRbbl09cix0O3ZhciB0LG4scn0pLnJlZHVjZShmdW5jdGlvbihlLHQpe3JldHVybiBoKGUsdCl9LHt9KX1mdW5jdGlvbiBKKGUpe3ZhciB0PWUucmVhc29uLG49ZS5tZXNzYWdlLHI9ZS5iaWQsaT1lLmlkLG89e3JlYXNvbjp0LG1lc3NhZ2U6bn07ciYmKG8uYmlkPXIpLGkmJihvLmFkSWQ9aSksTy5sb2dFcnJvcihuKSxJLmVtaXQoeCxvKX1mdW5jdGlvbiBZKGUsdCl7ZnVuY3Rpb24gbihlKXtmb3IodmFyIHQ7dD1lLnNoaWZ0KCk7KXQoKX1uKGIuYyksbihRKSxlLmNhbGwodGhpcyx0KX1tLmdldEFkc2VydmVyVGFyZ2V0aW5nRm9yQWRVbml0Q29kZVN0cj1mdW5jdGlvbihlKXtpZihPLmxvZ0luZm8oIkludm9raW5nIHVwYmpzLmdldEFkc2VydmVyVGFyZ2V0aW5nRm9yQWRVbml0Q29kZVN0ciIsYXJndW1lbnRzKSxlKXt2YXIgdD1tLmdldEFkc2VydmVyVGFyZ2V0aW5nRm9yQWRVbml0Q29kZShlKTtyZXR1cm4gTy50cmFuc2Zvcm1BZFNlcnZlclRhcmdldGluZ09iaih0KX1PLmxvZ01lc3NhZ2UoIk5lZWQgdG8gY2FsbCBnZXRBZHNlcnZlclRhcmdldGluZ0ZvckFkVW5pdENvZGVTdHIgd2l0aCBhZHVuaXRDb2RlIil9LG0uZ2V0QWRzZXJ2ZXJUYXJnZXRpbmdGb3JBZFVuaXRDb2RlPWZ1bmN0aW9uKGUpe3JldHVybiBtLmdldEFkc2VydmVyVGFyZ2V0aW5nKGUpW2VdfSxtLmdldEFkc2VydmVyVGFyZ2V0aW5nPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIE8ubG9nSW5mbygiSW52b2tpbmcgdXBianMuZ2V0QWRzZXJ2ZXJUYXJnZXRpbmciLGFyZ3VtZW50cyksZi5hLmdldEFsbFRhcmdldGluZyhlLHQpfSxtLmdldE5vQmlkcz1mdW5jdGlvbigpe3JldHVybiBPLmxvZ0luZm8oIkludm9raW5nIHVwYmpzLmdldE5vQmlkcyIsYXJndW1lbnRzKSxLKCJnZXROb0JpZHMiKX0sbS5nZXROb0JpZHNGb3JBZFVuaXRDb2RlPWZ1bmN0aW9uKHQpe3JldHVybntiaWRzOkEuYS5nZXROb0JpZHMoKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGUuYWRVbml0Q29kZT09PXR9KX19LG0uZ2V0QmlkUmVzcG9uc2VzPWZ1bmN0aW9uKCl7cmV0dXJuIE8ubG9nSW5mbygiSW52b2tpbmcgdXBianMuZ2V0QmlkUmVzcG9uc2VzIixhcmd1bWVudHMpLEsoImdldEJpZHNSZWNlaXZlZCIpfSxtLmdldEJpZFJlc3BvbnNlc0ZvckFkVW5pdENvZGU9ZnVuY3Rpb24odCl7cmV0dXJue2JpZHM6QS5hLmdldEJpZHNSZWNlaXZlZCgpLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gZS5hZFVuaXRDb2RlPT09dH0pfX0sbS5zZXRUYXJnZXRpbmdGb3JHUFRBc3luYz1mdW5jdGlvbihlLHQsbil7dmFyIHI7Ty5sb2dJbmZvKCJJbnZva2luZyB1cGJqcy5zZXRUYXJnZXRpbmdGb3JHUFRBc3luYyIsYXJndW1lbnRzKSxPYmplY3QoaS5pc0dwdFB1YmFkc0RlZmluZWQpKCk/KHI9Zi5hLmdldEFsbFRhcmdldGluZyhlLHQpLGYuYS5yZXNldFByZXNldFRhcmdldGluZyhlLG4pLGYuYS5zZXRUYXJnZXRpbmdGb3JHUFQocixuKSxPYmplY3Qua2V5cyhyKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe09iamVjdC5rZXlzKHJbdF0pLmZvckVhY2goZnVuY3Rpb24oZSl7ImhiX2FkaWQiPT09ZSYmQS5hLnNldFN0YXR1c0ZvckJpZHMoclt0XVtlXSxTLkJJRF9TVEFUVVMuQklEX1RBUkdFVElOR19TRVQpfSl9KSxJLmVtaXQoVSxyKSk6Ty5sb2dFcnJvcigid2luZG93Lmdvb2dsZXRhZyBpcyBub3QgZGVmaW5lZCBvbiB0aGUgcGFnZSIpfSxtLnNldFRhcmdldGluZ0ZvckFzdD1mdW5jdGlvbihlKXtPLmxvZ0luZm8oIkludm9raW5nIHVwYmpzLnNldFRhcmdldGluZ0ZvckFuIixhcmd1bWVudHMpLGYuYS5pc0FwbnRhZ0RlZmluZWQoKT8oZi5hLnNldFRhcmdldGluZ0ZvckFzdChlKSxJLmVtaXQoVSxmLmEuZ2V0QWxsVGFyZ2V0aW5nKCkpKTpPLmxvZ0Vycm9yKCJ3aW5kb3cuYXBudGFnIGlzIG5vdCBkZWZpbmVkIG9uIHRoZSBwYWdlIil9LG0ucmVuZGVyQWQ9ZnVuY3Rpb24oZSx0LG4pe08ubG9nSW5mbygiSW52b2tpbmcgdXBianMucmVuZGVyQWQiLGFyZ3VtZW50cyksTy5sb2dNZXNzYWdlKCJDYWxsaW5nIHJlbmRlckFkIHdpdGggYWRJZCA6Iit0KTt2YXIgcj1uJiZuLmlmcixpPXImJnIuc3JjJiYwPD1yLnNyYy5pbmRleE9mKCJtcmIudXBhcGkubmV0L3NhZmVGcmFtZS5odG1sIik7aWYodCYmKGV8fGkpKXRyeXt2YXIgbyxhLGMsdSxzLGQsZixsLHAsZyxiLHYseSxoPUEuYS5maW5kQmlkQnlBZElkKHQpO2g/KGguYWQ9Ty5yZXBsYWNlQXVjdGlvblByaWNlKGguYWQsaC5jcG0pLGguYWRVcmw9Ty5yZXBsYWNlQXVjdGlvblByaWNlKGguYWRVcmwsaC5jcG0pLG4mJm4uY2xpY2tUaHJvdWdoJiYobz1uLmNsaWNrVGhyb3VnaCxoLmFkPU8ucmVwbGFjZUNsaWNrVGhyb3VnaChoLmFkLG8pLGguYWRVcmw9Ty5yZXBsYWNlQ2xpY2tUaHJvdWdoKGguYWRVcmwsbykpLEEuYS5hZGRXaW5uaW5nQmlkKGgpLEkuZW1pdChfLGgpLGE9aC5oZWlnaHQsYz1oLndpZHRoLHU9aC5hZCxzPWgubWVkaWFUeXBlLGQ9aC5hZFVybCxmPWgucmVuZGVyZXIsT2JqZWN0KEUuYykoZik/T2JqZWN0KEUuYikoZixoKTplPT09ZG9jdW1lbnQmJiFPLmluSWZyYW1lKCl8fCJ2aWRlbyI9PT1zPyhsPSJFcnJvciB0cnlpbmcgdG8gd3JpdGUgYWQuIEFkIHJlbmRlciBjYWxsIGFkIGlkICIuY29uY2F0KHQsIiB3YXMgcHJldmVudGVkIGZyb20gd3JpdGluZyB0byB0aGUgbWFpbiBkb2N1bWVudC4iKSxKKHtyZWFzb246ayxtZXNzYWdlOmwsYmlkOmgsaWQ6dH0pKTp1PyhpPyhiPSJ0cnkgeyBpZiAoIisocD1uJiZuLnNob3VsZE9wZW5Eb2N1bWVudCkrIikgeyBkb2N1bWVudC5vcGVuKCd0ZXh0L2h0bWwnLCAncmVwbGFjZScpOyB9OyBkb2N1bWVudC53cml0ZShkZWNvZGVVUklDb21wb25lbnQoZXNjYXBlKGF0b2IoJyIrYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQodSkpKSsiJykpKSk7IGRvY3VtZW50LmNsb3NlKCk7IH0gY2F0Y2ggKGVycm9yKSB7IH0iLHIuY29udGVudFdpbmRvdy5wb3N0TWVzc2FnZSh7dHlwZToiZXZhbCIsY29kZTpifSwiKiIpKToocCYmZS5vcGVuKCJ0ZXh0L2h0bWwiLCJyZXBsYWNlIiksZS53cml0ZSh1KSxlLmNsb3NlKCkpLEcocixjLGEpLE8uY2FsbEJ1cmwoaCkpOmQ/KChnPU8uY3JlYXRlSW52aXNpYmxlSWZyYW1lKCkpLmhlaWdodD1hLGcud2lkdGg9YyxnLnN0eWxlLmRpc3BsYXk9ImlubGluZSIsZy5zdHlsZS5vdmVyZmxvdz0iaGlkZGVuIixnLnNyYz1kLGk/KGI9InRyeSB7IGlmICgiK3ArIikgeyBkb2N1bWVudC5vcGVuKCd0ZXh0L2h0bWwnLCAncmVwbGFjZScpOyB9OyBkb2N1bWVudC53cml0ZShkZWNvZGVVUklDb21wb25lbnQoZXNjYXBlKGF0b2IoJyIrYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoZy5vdXRlckhUTUwpKSkrIicpKSkpOyBkb2N1bWVudC5jbG9zZSgpOyB9IGNhdGNoIChlcnJvcikgeyB9IixyLmNvbnRlbnRXaW5kb3cucG9zdE1lc3NhZ2Uoe3R5cGU6ImV2YWwiLGNvZGU6Yn0sIioiKSk6Ty5pbnNlcnRFbGVtZW50KGcsZSwiYm9keSIpLEcocixjLGEpLE8uY2FsbEJ1cmwoaCkpOih2PSJFcnJvciB0cnlpbmcgdG8gd3JpdGUgYWQuIE5vIGFkIGZvciBiaWQgcmVzcG9uc2UgaWQ6ICIuY29uY2F0KHQpLEooe3JlYXNvbjpOLG1lc3NhZ2U6dixiaWQ6aCxpZDp0fSkpKTooeT0iRXJyb3IgdHJ5aW5nIHRvIHdyaXRlIGFkLiBDYW5ub3QgZmluZCBhZCBieSBnaXZlbiBpZCA6ICIuY29uY2F0KHQpLEooe3JlYXNvbjpQLG1lc3NhZ2U6eSxpZDp0fSkpfWNhdGNoKGUpe3ZhciBtPSJFcnJvciB0cnlpbmcgdG8gd3JpdGUgYWQgSWQgOiIuY29uY2F0KHQsIiB0byB0aGUgcGFnZToiKS5jb25jYXQoZS5tZXNzYWdlKTtKKHtyZWFzb246RCxtZXNzYWdlOm0saWQ6dH0pfWVsc2V7dmFyIFM9IkVycm9yIHRyeWluZyB0byB3cml0ZSBhZCBJZCA6Ii5jb25jYXQodCwiIHRvIHRoZSBwYWdlLiBNaXNzaW5nIGRvY3VtZW50IG9yIGFkSWQiKTtKKHtyZWFzb246TSxtZXNzYWdlOlMsaWQ6dH0pfX0sbS5yZW1vdmVBZFVuaXQ9ZnVuY3Rpb24oZSl7Ty5sb2dJbmZvKCJJbnZva2luZyB1cGJqcy5yZW1vdmVBZFVuaXQiLGFyZ3VtZW50cyksZT8oTy5pc0FycmF5KGUpP2U6W2VdKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1tLmFkVW5pdHMubGVuZ3RoLTE7MDw9dDt0LS0pbS5hZFVuaXRzW3RdLmNvZGU9PT1lJiZtLmFkVW5pdHMuc3BsaWNlKHQsMSl9KTptLmFkVW5pdHM9W119LG0ucmVxdWVzdEJpZHM9T2JqZWN0KGMuYikoImFzeW5jIixmdW5jdGlvbigpe3ZhciBlPTA8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PWUuYmlkc0JhY2tIYW5kbGVyLG49ZS50aW1lb3V0LHI9ZS5hZFVuaXRzLGk9ZS5hZFVuaXRDb2RlcyxvPWUubGFiZWxzLGE9ZS5hdWN0aW9uSWQ7SS5lbWl0KEIpO3ZhciBjPW58fGQuYi5nZXRDb25maWcoImJpZGRlclRpbWVvdXQiKSxyPXJ8fG0uYWRVbml0cztpZihPLmxvZ0luZm8oIkludm9raW5nIHVwYmpzLnJlcXVlc3RCaWRzIixhcmd1bWVudHMpLHI9SChyKSxpJiZpLmxlbmd0aD9yPXIuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBsKCkoaSxlLmNvZGUpfSk6aT1yJiZyLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZS5jb2RlfSksci5mb3JFYWNoKGZ1bmN0aW9uKGkpe3ZhciBvPU9iamVjdC5rZXlzKGkubWVkaWFUeXBlc3x8e2Jhbm5lcjoiYmFubmVyIn0pLGU9aS5iaWRzLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZS5iaWRkZXJ9KSxhPVQuYmlkZGVyUmVnaXN0cnksdD1kLmIuZ2V0Q29uZmlnKCJzMnNDb25maWciKSxuPXQmJnQuYmlkZGVycyxyPW4/ZS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIWwoKShuLGUpfSk6ZTtpLnRyYW5zYWN0aW9uSWQ9Ty5nZW5lcmF0ZVVVSUQoKSxyLmZvckVhY2goZnVuY3Rpb24odCl7dmFyIGU9YVt0XSxuPWUmJmUuZ2V0U3BlYyYmZS5nZXRTcGVjKCkscj1uJiZuLnN1cHBvcnRlZE1lZGlhVHlwZXN8fFsiYmFubmVyIl07by5zb21lKGZ1bmN0aW9uKGUpe3JldHVybiBsKCkocixlKX0pP3AuYS5pbmNyZW1lbnRCaWRkZXJSZXF1ZXN0c0NvdW50ZXIoaS5jb2RlLHQpOihPLmxvZ1dhcm4oTy51bnN1cHBvcnRlZEJpZGRlck1lc3NhZ2UoaSx0KSksaS5iaWRzPWkuYmlkcy5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGUuYmlkZGVyIT09dH0pKX0pLHAuYS5pbmNyZW1lbnRSZXF1ZXN0c0NvdW50ZXIoaS5jb2RlKX0pLHImJjAhPT1yLmxlbmd0aCl7dmFyIHU9QS5hLmNyZWF0ZUF1Y3Rpb24oe2FkVW5pdHM6cixhZFVuaXRDb2RlczppLGNhbGxiYWNrOnQsY2JUaW1lb3V0OmMsbGFiZWxzOm8sYXVjdGlvbklkOmF9KSxzPXIubGVuZ3RoOzE1PHMmJk8ubG9nSW5mbygiQ3VycmVudCBhdWN0aW9uICIuY29uY2F0KHUuZ2V0QXVjdGlvbklkKCksIiBjb250YWlucyAiKS5jb25jYXQocywiIGFkVW5pdHMuIiksciksaS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiBmLmEuc2V0TGF0ZXN0QXVjdGlvbkZvckFkVW5pdChlLHUuZ2V0QXVjdGlvbklkKCkpfSksdS5jYWxsQmlkcygpfWVsc2UgaWYoTy5sb2dNZXNzYWdlKCJObyBhZFVuaXRzIGNvbmZpZ3VyZWQuIE5vIGJpZHMgcmVxdWVzdGVkLiIpLCJmdW5jdGlvbiI9PXR5cGVvZiB0KXRyeXt0KCl9Y2F0Y2goZSl7Ty5sb2dFcnJvcigiRXJyb3IgZXhlY3V0aW5nIGJpZHNCYWNrSGFuZGxlciIsbnVsbCxlKX19KSxtLnJlcXVlc3RCaWRzLmJlZm9yZShZLDQ5KSxtLmFkZEFkVW5pdHM9ZnVuY3Rpb24oZSl7Ty5sb2dJbmZvKCJJbnZva2luZyB1cGJqcy5hZGRBZFVuaXRzIixhcmd1bWVudHMpLE8uaXNBcnJheShlKT9tLmFkVW5pdHMucHVzaC5hcHBseShtLmFkVW5pdHMsZSk6Im9iamVjdCI9PT15KGUpJiZtLmFkVW5pdHMucHVzaChlKSxJLmVtaXQoail9LG0ub25FdmVudD1mdW5jdGlvbihlLHQsbil7Ty5sb2dJbmZvKCJJbnZva2luZyB1cGJqcy5vbkV2ZW50Iixhcmd1bWVudHMpLE8uaXNGbih0KT8hbnx8cVtlXS5jYWxsKG51bGwsbik/SS5vbihlLHQsbik6Ty5sb2dFcnJvcignVGhlIGlkIHByb3ZpZGVkIGlzIG5vdCB2YWxpZCBmb3IgZXZlbnQgIicrZSsnIiBhbmQgbm8gaGFuZGxlciB3YXMgc2V0LicpOk8ubG9nRXJyb3IoJ1RoZSBldmVudCBoYW5kbGVyIHByb3ZpZGVkIGlzIG5vdCBhIGZ1bmN0aW9uIGFuZCB3YXMgbm90IHNldCBvbiBldmVudCAiJytlKyciLicpfSxtLm9mZkV2ZW50PWZ1bmN0aW9uKGUsdCxuKXtPLmxvZ0luZm8oIkludm9raW5nIHVwYmpzLm9mZkV2ZW50Iixhcmd1bWVudHMpLG4mJiFxW2VdLmNhbGwobnVsbCxuKXx8SS5vZmYoZSx0LG4pfSxtLmdldEV2ZW50cz1mdW5jdGlvbigpe3JldHVybiBPLmxvZ0luZm8oIkludm9raW5nIHVwYmpzLmdldEV2ZW50cyIpLEkuZ2V0RXZlbnRzKCl9LG0ucmVnaXN0ZXJCaWRBZGFwdGVyPWZ1bmN0aW9uKGUsdCl7Ty5sb2dJbmZvKCJJbnZva2luZyB1cGJqcy5yZWdpc3RlckJpZEFkYXB0ZXIiLGFyZ3VtZW50cyk7dHJ5e1QucmVnaXN0ZXJCaWRBZGFwdGVyKGUoKSx0KX1jYXRjaChlKXtPLmxvZ0Vycm9yKCJFcnJvciByZWdpc3RlcmluZyBiaWRkZXIgYWRhcHRlciA6ICIrZS5tZXNzYWdlKX19LG0ucmVnaXN0ZXJBbmFseXRpY3NBZGFwdGVyPWZ1bmN0aW9uKGUpe08ubG9nSW5mbygiSW52b2tpbmcgdXBianMucmVnaXN0ZXJBbmFseXRpY3NBZGFwdGVyIixhcmd1bWVudHMpO3RyeXtULnJlZ2lzdGVyQW5hbHl0aWNzQWRhcHRlcihlKX1jYXRjaChlKXtPLmxvZ0Vycm9yKCJFcnJvciByZWdpc3RlcmluZyBhbmFseXRpY3MgYWRhcHRlciA6ICIrZS5tZXNzYWdlKX19LG0uY3JlYXRlQmlkPWZ1bmN0aW9uKGUpe3JldHVybiBPLmxvZ0luZm8oIkludm9raW5nIHVwYmpzLmNyZWF0ZUJpZCIsYXJndW1lbnRzKSxPYmplY3QoZy5hKShlKX07dmFyIFE9W10sJD1PYmplY3QoYy5iKSgiYXN5bmMiLGZ1bmN0aW9uKGUpe2UmJiFPLmlzRW1wdHkoZSk/KE8ubG9nSW5mbygiSW52b2tpbmcgdXBianMuZW5hYmxlQW5hbHl0aWNzIGZvcjogIixlKSxULmVuYWJsZUFuYWx5dGljcyhlKSk6Ty5sb2dFcnJvcigidXBianMuZW5hYmxlQW5hbHl0aWNzIHNob3VsZCBiZSBjYWxsZWQgd2l0aCBvcHRpb24ge30iKX0sImVuYWJsZUFuYWx5dGljc0NiIik7ZnVuY3Rpb24gWChlKXtlLmZvckVhY2goZnVuY3Rpb24oZSl7aWYodm9pZCAwPT09ZS5jYWxsZWQpdHJ5e2UuY2FsbCgpLGUuY2FsbGVkPSEwfWNhdGNoKGUpe08ubG9nRXJyb3IoIkVycm9yIHByb2Nlc3NpbmcgY29tbWFuZCA6IiwicHJlYmlkLmpzIixlKX19KX1tLmVuYWJsZUFuYWx5dGljcz1mdW5jdGlvbihlKXtRLnB1c2goJC5iaW5kKHRoaXMsZSkpfSxtLmFsaWFzQmlkZGVyPWZ1bmN0aW9uKGUsdCxuKXtPLmxvZ0luZm8oIkludm9raW5nIHVwYmpzLmFsaWFzQmlkZGVyIixhcmd1bWVudHMpLGUmJnQ/VC5hbGlhc0JpZEFkYXB0ZXIoZSx0LG4pOk8ubG9nRXJyb3IoImJpZGRlckNvZGUgYW5kIGFsaWFzIG11c3QgYmUgcGFzc2VkIGFzIGFyZ3VtZW50cyIsInVwYmpzLmFsaWFzQmlkZGVyIil9LG0uZ2V0QWxsV2lubmluZ0JpZHM9ZnVuY3Rpb24oKXtyZXR1cm4gQS5hLmdldEFsbFdpbm5pbmdCaWRzKCl9LG0uZ2V0QWxsUHJlYmlkV2lubmluZ0JpZHM9ZnVuY3Rpb24oKXtyZXR1cm4gQS5hLmdldEJpZHNSZWNlaXZlZCgpLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gZS5zdGF0dXM9PT1TLkJJRF9TVEFUVVMuQklEX1RBUkdFVElOR19TRVR9KX0sbS5nZXRIaWdoZXN0Q3BtQmlkcz1mdW5jdGlvbihlKXtyZXR1cm4gZi5hLmdldFdpbm5pbmdCaWRzKGUpfSxtLm1hcmtXaW5uaW5nQmlkQXNVc2VkPWZ1bmN0aW9uKHQpe3ZhciBlPVtdO3QuYWRVbml0Q29kZSYmdC5hZElkP2U9QS5hLmdldEJpZHNSZWNlaXZlZCgpLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gZS5hZElkPT09dC5hZElkJiZlLmFkVW5pdENvZGU9PT10LmFkVW5pdENvZGV9KTp0LmFkVW5pdENvZGU/ZT1mLmEuZ2V0V2lubmluZ0JpZHModC5hZFVuaXRDb2RlKTp0LmFkSWQ/ZT1BLmEuZ2V0Qmlkc1JlY2VpdmVkKCkuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBlLmFkSWQ9PT10LmFkSWR9KTpPLmxvZ1dhcm4oIkltcHJvcGVyIHVzZSBvZiBtYXJrV2lubmluZ0JpZEFzVXNlZC4gSXQgbmVlZHMgYW4gYWRVbml0Q29kZSBvciBhbiBhZElkIHRvIGZ1bmN0aW9uLiIpLDA8ZS5sZW5ndGgmJihlWzBdLnN0YXR1cz1TLkJJRF9TVEFUVVMuUkVOREVSRUQpfSxtLmdldENvbmZpZz1kLmIuZ2V0Q29uZmlnLG0uc2V0Q29uZmlnPWQuYi5zZXRDb25maWcsbS5zZXRCaWRkZXJDb25maWc9ZC5iLnNldEJpZGRlckNvbmZpZyxtLnF1ZS5wdXNoKGZ1bmN0aW9uKCl7cmV0dXJuIE9iamVjdChvLmEpKCl9KSxtLmNtZC5wdXNoPWZ1bmN0aW9uKGUpe2lmKCJmdW5jdGlvbiI9PXR5cGVvZiBlKXRyeXtlLmNhbGwoKX1jYXRjaChlKXtPLmxvZ0Vycm9yKCJFcnJvciBwcm9jZXNzaW5nIGNvbW1hbmQgOiIsZS5tZXNzYWdlLGUuc3RhY2spfWVsc2UgTy5sb2dFcnJvcigiQ29tbWFuZHMgd3JpdHRlbiBpbnRvIHVwYmpzLmNtZC5wdXNoIG11c3QgYmUgd3JhcHBlZCBpbiBhIGZ1bmN0aW9uIil9LG0ucXVlLnB1c2g9bS5jbWQucHVzaCxtLnByb2Nlc3NRdWV1ZT1mdW5jdGlvbigpe2MuYi5yZWFkeSgpLFgobS5xdWUpLFgobS5jbWQpfSx0LmRlZmF1bHQ9bX0sNzE6ZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt0LmE9ZnVuY3Rpb24odCxuKXtvLmFkU2VydmVycz1vLmFkU2VydmVyc3x8e30sby5hZFNlcnZlcnNbdF09by5hZFNlcnZlcnNbdF18fHt9LE9iamVjdC5rZXlzKG4pLmZvckVhY2goZnVuY3Rpb24oZSl7by5hZFNlcnZlcnNbdF1bZV0/T2JqZWN0KGkubG9nV2FybikoIkF0dGVtcHRpbmcgdG8gYWRkIGFuIGFscmVhZHkgcmVnaXN0ZXJlZCBmdW5jdGlvbiBwcm9wZXJ0eSAiLmNvbmNhdChlLCIgZm9yIEFkU2VydmVyICIpLmNvbmNhdCh0LCIuIikpOm8uYWRTZXJ2ZXJzW3RdW2VdPW5bZV19KX07dmFyIHI9bigxOSksaT1uKDApLG89T2JqZWN0KHIuYSkoKX0sNzI6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMzEpLGk9big0OSksbz0iIi5zcGxpdDtlLmV4cG9ydHM9cihmdW5jdGlvbigpe3JldHVybiFPYmplY3QoInoiKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKX0pP2Z1bmN0aW9uKGUpe3JldHVybiJTdHJpbmciPT1pKGUpP28uY2FsbChlLCIiKTpPYmplY3QoZSl9Ok9iamVjdH0sNzM6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMzApLGk9bigzMSksbz1uKDc0KTtlLmV4cG9ydHM9IXImJiFpKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eShvKCJkaXYiKSwiYSIse2dldDpmdW5jdGlvbigpe3JldHVybiA3fX0pLmF9KX0sNzQ6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMjUpLGk9bigyNiksbz1yLmRvY3VtZW50LGE9aShvKSYmaShvLmNyZWF0ZUVsZW1lbnQpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gYT9vLmNyZWF0ZUVsZW1lbnQoZSk6e319fSw3NTpmdW5jdGlvbihlLHQsbil7dmFyIHI9bigxNiksaT1uKDc2KTsoZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGlbZV18fChpW2VdPXZvaWQgMCE9PXQ/dDp7fSl9KSgidmVyc2lvbnMiLFtdKS5wdXNoKHt2ZXJzaW9uOiIzLjYuNCIsbW9kZTpyPyJwdXJlIjoiZ2xvYmFsIixjb3B5cmlnaHQ6IsKpIDIwMjAgRGVuaXMgUHVzaGthcmV2ICh6bG9pcm9jay5ydSkifSl9LDc2OmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDI1KSxpPW4oMTA1KSxvPSJfX2NvcmUtanNfc2hhcmVkX18iLGE9cltvXXx8aShvLHt9KTtlLmV4cG9ydHM9YX0sNzc6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMzEpO2UuZXhwb3J0cz0hIU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMmJiFyKGZ1bmN0aW9uKCl7cmV0dXJuIVN0cmluZyhTeW1ib2woKSl9KX0sNzg6ZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoYyl7cmV0dXJuIGZ1bmN0aW9uKGUsdCxuKXt2YXIgcixpPXUoZSksbz1zKGkubGVuZ3RoKSxhPWQobixvKTtpZihjJiZ0IT10KXtmb3IoO2E8bzspaWYoKHI9aVthKytdKSE9cilyZXR1cm4hMH1lbHNlIGZvcig7YTxvO2ErKylpZigoY3x8YSBpbiBpKSYmaVthXT09PXQpcmV0dXJuIGN8fGF8fDA7cmV0dXJuIWMmJi0xfX12YXIgdT1uKDQ4KSxzPW4oNTEpLGQ9bigxMDkpO2UuZXhwb3J0cz17aW5jbHVkZXM6cighMCksaW5kZXhPZjpyKCExKX19LDc5OmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDExMCk7bigxMzMpLG4oMTM1KSxuKDEzNyksbigxMzkpLG4oMTQxKSxuKDE0MiksbigxNDMpLG4oMTQ0KSxuKDE0NSksbigxNDYpLG4oMTQ3KSxuKDE0OCksbigxNDkpLG4oMTUwKSxuKDE1MSksbigxNTIpLG4oMTUzKSxuKDE1NCksZS5leHBvcnRzPXJ9LDg6ZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoKXtyZXR1cm4ocj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSkuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBjLGksdT1uKDApLG89big1KSxhPUFycmF5LnByb3RvdHlwZS5zbGljZSxzPUFycmF5LnByb3RvdHlwZS5wdXNoLGQ9dS5fbWFwKG8uRVZFTlRTLGZ1bmN0aW9uKGUpe3JldHVybiBlfSksZj1vLkVWRU5UX0lEX1BBVEhTLGw9W107ZS5leHBvcnRzPShjPXt9LChpPXt9KS5vbj1mdW5jdGlvbihlLHQsbil7dmFyIHIsaTtpPWUsdS5jb250YWlucyhkLGkpPyhyPWNbZV18fHtxdWU6W119LG4/KHJbbl09cltuXXx8e3F1ZTpbXX0scltuXS5xdWUucHVzaCh0KSk6ci5xdWUucHVzaCh0KSxjW2VdPXIpOnUubG9nRXJyb3IoIldyb25nIGV2ZW50IG5hbWUgOiAiK2UrIiBWYWxpZCBldmVudCBuYW1lcyA6IitkKX0saS5lbWl0PWZ1bmN0aW9uKGUpeyFmdW5jdGlvbihlLHQpe3UubG9nTWVzc2FnZSgiRW1pdHRpbmcgZXZlbnQgZm9yOiAiK2UpO3ZhciBuPXRbMF18fHt9LHI9bltmW2VdXSxpPWNbZV18fHtxdWU6W119LG89dS5fbWFwKGksZnVuY3Rpb24oZSx0KXtyZXR1cm4gdH0pLGE9W107bC5wdXNoKHtldmVudFR5cGU6ZSxhcmdzOm4saWQ6cixlbGFwc2VkVGltZTp1LmdldFBlcmZvcm1hbmNlTm93KCl9KSxyJiZ1LmNvbnRhaW5zKG8scikmJnMuYXBwbHkoYSxpW3JdLnF1ZSkscy5hcHBseShhLGkucXVlKSx1Ll9lYWNoKGEsZnVuY3Rpb24oZSl7aWYoZSl0cnl7ZS5hcHBseShudWxsLHQpfWNhdGNoKGUpe3UubG9nRXJyb3IoIkVycm9yIGV4ZWN1dGluZyBoYW5kbGVyOiIsImV2ZW50cy5qcyIsZSl9fSl9KGUsYS5jYWxsKGFyZ3VtZW50cywxKSl9LGkub2ZmPWZ1bmN0aW9uKGUsbixyKXt2YXIgaT1jW2VdO3UuaXNFbXB0eShpKXx8dS5pc0VtcHR5KGkucXVlKSYmdS5pc0VtcHR5KGlbcl0pfHxyJiYodS5pc0VtcHR5KGlbcl0pfHx1LmlzRW1wdHkoaVtyXS5xdWUpKXx8KHI/dS5fZWFjaChpW3JdLnF1ZSxmdW5jdGlvbihlKXt2YXIgdD1pW3JdLnF1ZTtlPT09biYmdC5zcGxpY2UodC5pbmRleE9mKGUpLDEpfSk6dS5fZWFjaChpLnF1ZSxmdW5jdGlvbihlKXt2YXIgdD1pLnF1ZTtlPT09biYmdC5zcGxpY2UodC5pbmRleE9mKGUpLDEpfSksY1tlXT1pKX0saS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gY30saS5nZXRFdmVudHM9ZnVuY3Rpb24oKXt2YXIgbj1bXTtyZXR1cm4gdS5fZWFjaChsLGZ1bmN0aW9uKGUpe3ZhciB0PXIoe30sZSk7bi5wdXNoKHQpfSksbn0saSl9LDgwOmZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKGUpe2MoZSxkLHt2YWx1ZTp7b2JqZWN0SUQ6Ik8iKyArK2Ysd2Vha0RhdGE6e319fSl9dmFyIGk9big1NCksbz1uKDI2KSxhPW4oMjcpLGM9bigzMykuZix1PW4oNjApLHM9bigxMTMpLGQ9dSgibWV0YSIpLGY9MCxsPU9iamVjdC5pc0V4dGVuc2libGV8fGZ1bmN0aW9uKCl7cmV0dXJuITB9LHA9ZS5leHBvcnRzPXtSRVFVSVJFRDohMSxmYXN0S2V5OmZ1bmN0aW9uKGUsdCl7aWYoIW8oZSkpcmV0dXJuInN5bWJvbCI9PXR5cGVvZiBlP2U6KCJzdHJpbmciPT10eXBlb2YgZT8iUyI6IlAiKStlO2lmKCFhKGUsZCkpe2lmKCFsKGUpKXJldHVybiJGIjtpZighdClyZXR1cm4iRSI7cihlKX1yZXR1cm4gZVtkXS5vYmplY3RJRH0sZ2V0V2Vha0RhdGE6ZnVuY3Rpb24oZSx0KXtpZighYShlLGQpKXtpZighbChlKSlyZXR1cm4hMDtpZighdClyZXR1cm4hMTtyKGUpfXJldHVybiBlW2RdLndlYWtEYXRhfSxvbkZyZWV6ZTpmdW5jdGlvbihlKXtyZXR1cm4gcyYmcC5SRVFVSVJFRCYmbChlKSYmIWEoZSxkKSYmcihlKSxlfX07aVtkXT0hMH0sODE6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMjApLGk9bigzOSksbz1yKCJpdGVyYXRvciIpLGE9QXJyYXkucHJvdG90eXBlO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwIT09ZSYmKGkuQXJyYXk9PT1lfHxhW29dPT09ZSl9fSw4MjpmdW5jdGlvbihlLHQsbil7dmFyIG89bigxNSk7ZS5leHBvcnRzPWZ1bmN0aW9uKHQsZSxuLHIpe3RyeXtyZXR1cm4gcj9lKG8obilbMF0sblsxXSk6ZShuKX1jYXRjaChlKXt2YXIgaT10LnJldHVybjt0aHJvdyB2b2lkIDAhPT1pJiZvKGkuY2FsbCh0KSksZX19fSw4MzpmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlLHQsbil7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgVHlwZUVycm9yKCJJbmNvcnJlY3QgIisobj9uKyIgIjoiIikrImludm9jYXRpb24iKTtyZXR1cm4gZX19LDg0OmZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKCl7fWZ1bmN0aW9uIGkoZSl7cmV0dXJuIjxzY3JpcHQ+IitlKyI8LyIrZysiPiJ9dmFyIG8sYT1uKDE1KSxjPW4oMTE4KSx1PW4oODUpLHM9big1NCksZD1uKDEyMSksZj1uKDc0KSxsPW4oNjYpLHA9InByb3RvdHlwZSIsZz0ic2NyaXB0IixiPWwoIklFX1BST1RPIiksdj1mdW5jdGlvbigpe3RyeXtvPWRvY3VtZW50LmRvbWFpbiYmbmV3IEFjdGl2ZVhPYmplY3QoImh0bWxmaWxlIil9Y2F0Y2goZSl7fXZhciBlLHQ7dj1vP2Z1bmN0aW9uKGUpe2Uud3JpdGUoaSgiIikpLGUuY2xvc2UoKTt2YXIgdD1lLnBhcmVudFdpbmRvdy5PYmplY3Q7cmV0dXJuIGU9bnVsbCx0fShvKTooKHQ9ZigiaWZyYW1lIikpLnN0eWxlLmRpc3BsYXk9Im5vbmUiLGQuYXBwZW5kQ2hpbGQodCksdC5zcmM9U3RyaW5nKCJqYXZhc2NyaXB0OiIpLChlPXQuY29udGVudFdpbmRvdy5kb2N1bWVudCkub3BlbigpLGUud3JpdGUoaSgiZG9jdW1lbnQuRj1PYmplY3QiKSksZS5jbG9zZSgpLGUuRik7Zm9yKHZhciBuPXUubGVuZ3RoO24tLTspZGVsZXRlIHZbcF1bdVtuXV07cmV0dXJuIHYoKX07c1tiXT0hMCxlLmV4cG9ydHM9T2JqZWN0LmNyZWF0ZXx8ZnVuY3Rpb24oZSx0KXt2YXIgbjtyZXR1cm4gbnVsbCE9PWU/KHJbcF09YShlKSxuPW5ldyByLHJbcF09bnVsbCxuW2JdPWUpOm49digpLHZvaWQgMD09PXQ/bjpjKG4sdCl9fSw4NTpmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1bImNvbnN0cnVjdG9yIiwiaGFzT3duUHJvcGVydHkiLCJpc1Byb3RvdHlwZU9mIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJ0b0xvY2FsZVN0cmluZyIsInRvU3RyaW5nIiwidmFsdWVPZiJdfSw4NjpmdW5jdGlvbihlLHQsbil7dmFyIGk9bigzMik7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxuLHIpe3ImJnIuZW51bWVyYWJsZT9lW3RdPW46aShlLHQsbil9fSw4NzpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO3ZhciByLGksbyxhPW4oODgpLGM9bigzMiksdT1uKDI3KSxzPW4oMjApLGQ9bigxNiksZj1zKCJpdGVyYXRvciIpLGw9ITE7W10ua2V5cyYmKCJuZXh0ImluKG89W10ua2V5cygpKT8oaT1hKGEobykpKSE9PU9iamVjdC5wcm90b3R5cGUmJihyPWkpOmw9ITApLG51bGw9PXImJihyPXt9KSxkfHx1KHIsZil8fGMocixmLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSxlLmV4cG9ydHM9e0l0ZXJhdG9yUHJvdG90eXBlOnIsQlVHR1lfU0FGQVJJX0lURVJBVE9SUzpsfX0sODg6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMjcpLGk9big1OCksbz1uKDY2KSxhPW4oMTI0KSxjPW8oIklFX1BST1RPIiksdT1PYmplY3QucHJvdG90eXBlO2UuZXhwb3J0cz1hP09iamVjdC5nZXRQcm90b3R5cGVPZjpmdW5jdGlvbihlKXtyZXR1cm4gZT1pKGUpLHIoZSxjKT9lW2NdOiJmdW5jdGlvbiI9PXR5cGVvZiBlLmNvbnN0cnVjdG9yJiZlIGluc3RhbmNlb2YgZS5jb25zdHJ1Y3Rvcj9lLmNvbnN0cnVjdG9yLnByb3RvdHlwZTplIGluc3RhbmNlb2YgT2JqZWN0P3U6bnVsbH19LDg5OmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIGk9bigxMjkpLmNoYXJBdCxyPW4oNTUpLG89big2NyksYT0iU3RyaW5nIEl0ZXJhdG9yIixjPXIuc2V0LHU9ci5nZXR0ZXJGb3IoYSk7byhTdHJpbmcsIlN0cmluZyIsZnVuY3Rpb24oZSl7Yyh0aGlzLHt0eXBlOmEsc3RyaW5nOlN0cmluZyhlKSxpbmRleDowfSl9LGZ1bmN0aW9uKCl7dmFyIGUsdD11KHRoaXMpLG49dC5zdHJpbmcscj10LmluZGV4O3JldHVybiByPj1uLmxlbmd0aD97dmFsdWU6dm9pZCAwLGRvbmU6ITB9OihlPWkobixyKSx0LmluZGV4Kz1lLmxlbmd0aCx7dmFsdWU6ZSxkb25lOiExfSl9KX0sOTpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxuLmQodCwiZ2RwckRhdGFIYW5kbGVyIixmdW5jdGlvbigpe3JldHVybiBSfSksbi5kKHQsInVzcERhdGFIYW5kbGVyIixmdW5jdGlvbigpe3JldHVybiBrfSksdC5zZXRTMlNUZXN0aW5nTW9kdWxlPWZ1bmN0aW9uKGUpe0k9ZX07dmFyIFM9bigwKSxwPW4oOTMpLGc9bigzNyksbD1uKDEpLGg9big0KSxBPW4oMykscj1uKDEzKSxpPW4oMTIpLEU9bi5uKGkpLG89bigxMCksTz1uLm4obyksYj1uKDY4KSxUPW4oMjEpO2Z1bmN0aW9uIG0oZSx0KXtyZXR1cm4gZnVuY3Rpb24oZSl7aWYoQXJyYXkuaXNBcnJheShlKSlyZXR1cm4gZX0oZSl8fGZ1bmN0aW9uKGUsdCl7aWYoInVuZGVmaW5lZCI9PXR5cGVvZiBTeW1ib2x8fCEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChlKSkpcmV0dXJuO3ZhciBuPVtdLHI9ITAsaT0hMSxvPXZvaWQgMDt0cnl7Zm9yKHZhciBhLGM9ZVtTeW1ib2wuaXRlcmF0b3JdKCk7IShyPShhPWMubmV4dCgpKS5kb25lKSYmKG4ucHVzaChhLnZhbHVlKSwhdHx8bi5sZW5ndGghPT10KTtyPSEwKTt9Y2F0Y2goZSl7aT0hMCxvPWV9ZmluYWxseXt0cnl7cnx8bnVsbD09Yy5yZXR1cm58fGMucmV0dXJuKCl9ZmluYWxseXtpZihpKXRocm93IG99fXJldHVybiBufShlLHQpfHxmdW5jdGlvbihlLHQpe2lmKCFlKXJldHVybjtpZigic3RyaW5nIj09dHlwZW9mIGUpcmV0dXJuIGEoZSx0KTt2YXIgbj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkuc2xpY2UoOCwtMSk7Ik9iamVjdCI9PT1uJiZlLmNvbnN0cnVjdG9yJiYobj1lLmNvbnN0cnVjdG9yLm5hbWUpO2lmKCJNYXAiPT09bnx8IlNldCI9PT1uKXJldHVybiBBcnJheS5mcm9tKGUpO2lmKCJBcmd1bWVudHMiPT09bnx8L14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpcmV0dXJuIGEoZSx0KX0oZSx0KXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLiIpfSgpfWZ1bmN0aW9uIGEoZSx0KXsobnVsbD09dHx8dD5lLmxlbmd0aCkmJih0PWUubGVuZ3RoKTtmb3IodmFyIG49MCxyPW5ldyBBcnJheSh0KTtuPHQ7bisrKXJbbl09ZVtuXTtyZXR1cm4gcn1mdW5jdGlvbiB2KCl7cmV0dXJuKHY9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0pLmFwcGx5KHRoaXMsYXJndW1lbnRzKX12YXIgSSxDPW4oMCksdz1uKDUpLGo9big4KSx5PXt9LF89eS5iaWRkZXJSZWdpc3RyeT17fSxCPXkuYWxpYXNSZWdpc3RyeT17fSxVPXt9O0EuYi5nZXRDb25maWcoInMyc0NvbmZpZyIsZnVuY3Rpb24oZSl7VT1lLnMyc0NvbmZpZ30pO3ZhciBjPXt9O3ZhciB4PU9iamVjdChyLmIpKCJzeW5jIixmdW5jdGlvbihlKXt2YXIgaT1lLmJpZGRlckNvZGUscz1lLmF1Y3Rpb25JZCxkPWUuYmlkZGVyUmVxdWVzdElkLHQ9ZS5hZFVuaXRzLGY9ZS5sYWJlbHMsbD1lLnNyYztyZXR1cm4gdC5yZWR1Y2UoZnVuY3Rpb24oZSxjKXt2YXIgdD1PYmplY3QocC5iKShPYmplY3QocC5hKShjLGYpLGMubWVkaWFUeXBlcyxjLnNpemVzKSxuPXQuYWN0aXZlLHU9dC5tZWRpYVR5cGVzLHI9dC5maWx0ZXJSZXN1bHRzO3JldHVybiBuP3ImJkMubG9nSW5mbygnU2l6ZSBtYXBwaW5nIGZpbHRlcmVkIGFkVW5pdCAiJy5jb25jYXQoYy5jb2RlLCciIGJhbm5lciBzaXplcyBmcm9tICcpLHIuYmVmb3JlLCJ0byAiLHIuYWZ0ZXIpOkMubG9nSW5mbygnU2l6ZSBtYXBwaW5nIGRpc2FibGVkIGFkVW5pdCAiJy5jb25jYXQoYy5jb2RlLCciJykpLG4mJmUucHVzaChjLmJpZHMuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBlLmJpZGRlcj09PWl9KS5yZWR1Y2UoZnVuY3Rpb24oZSx0KXt2YXIgbj1jLm5hdGl2ZVBhcmFtc3x8Qy5kZWVwQWNjZXNzKGMsIm1lZGlhVHlwZXMubmF0aXZlIik7biYmKHQ9dih7fSx0LHtuYXRpdmVQYXJhbXM6T2JqZWN0KGcuZykobil9KSksdD12KHt9LHQsT2JqZWN0KFMuZ2V0RGVmaW5lZFBhcmFtcykoYyxbImZwZCIsIm1lZGlhVHlwZSIsInJlbmRlcmVyIiwic3RvcmVkQXVjdGlvblJlc3BvbnNlIl0pKTt2YXIgcj1PYmplY3QocC5iKShPYmplY3QocC5hKSh0LGYpLHUpLGk9ci5hY3RpdmUsbz1yLm1lZGlhVHlwZXMsYT1yLmZpbHRlclJlc3VsdHM7cmV0dXJuIGk/YSYmQy5sb2dJbmZvKCdTaXplIG1hcHBpbmcgZmlsdGVyZWQgYWRVbml0ICInLmNvbmNhdChjLmNvZGUsJyIgYmlkZGVyICInKS5jb25jYXQodC5iaWRkZXIsJyIgYmFubmVyIHNpemVzIGZyb20gJyksYS5iZWZvcmUsInRvICIsYS5hZnRlcik6Qy5sb2dJbmZvKCdTaXplIG1hcHBpbmcgZGVhY3RpdmF0ZWQgYWRVbml0ICInLmNvbmNhdChjLmNvZGUsJyIgYmlkZGVyICInKS5jb25jYXQodC5iaWRkZXIsJyInKSksQy5pc1ZhbGlkTWVkaWFUeXBlcyhvKT90PXYoe30sdCx7bWVkaWFUeXBlczpvfSk6Qy5sb2dFcnJvcigibWVkaWFUeXBlcyBpcyBub3QgY29ycmVjdGx5IGNvbmZpZ3VyZWQgZm9yIGFkdW5pdCAiLmNvbmNhdChjLmNvZGUpKSxpJiZlLnB1c2godih7fSx0LHthZFVuaXRDb2RlOmMuY29kZSx0cmFuc2FjdGlvbklkOmMudHJhbnNhY3Rpb25JZCxzaXplczpDLmRlZXBBY2Nlc3MobywiYmFubmVyLnNpemVzIil8fEMuZGVlcEFjY2VzcyhvLCJ2aWRlby5wbGF5ZXJTaXplIil8fFtdLGJpZElkOnQuYmlkX2lkfHxDLmdldFVuaXF1ZUlkZW50aWZpZXJTdHIoKSxiaWRkZXJSZXF1ZXN0SWQ6ZCxhdWN0aW9uSWQ6cyxzcmM6bCxiaWRSZXF1ZXN0c0NvdW50OmIuYS5nZXRSZXF1ZXN0c0NvdW50ZXIoYy5jb2RlKSxiaWRkZXJSZXF1ZXN0c0NvdW50OmIuYS5nZXRCaWRkZXJSZXF1ZXN0c0NvdW50ZXIoYy5jb2RlLHQuYmlkZGVyKSxiaWRkZXJXaW5zQ291bnQ6Yi5hLmdldEJpZGRlcldpbnNDb3VudGVyKGMuY29kZSx0LmJpZGRlcil9KSksZX0sW10pKSxlfSxbXSkucmVkdWNlKFMuZmxhdHRlbixbXSkuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiIiIT09ZX0pfSwiZ2V0QmlkcyIpO3ZhciBSPXtjb25zZW50RGF0YTpudWxsLHNldENvbnNlbnREYXRhOmZ1bmN0aW9uKGUpe1IuY29uc2VudERhdGE9ZX0sZ2V0Q29uc2VudERhdGE6ZnVuY3Rpb24oKXtyZXR1cm4gUi5jb25zZW50RGF0YX19LGs9e2NvbnNlbnREYXRhOm51bGwsc2V0Q29uc2VudERhdGE6ZnVuY3Rpb24oZSl7ay5jb25zZW50RGF0YT1lfSxnZXRDb25zZW50RGF0YTpmdW5jdGlvbigpe3JldHVybiBrLmNvbnNlbnREYXRhfX07ZnVuY3Rpb24gTigpe3JldHVybiBVJiZVLmVuYWJsZWQmJlUudGVzdGluZyYmSX1mdW5jdGlvbiB1KHQsbixlKXt0cnl7dmFyIHI9X1t0XS5nZXRTcGVjKCk7ciYmcltuXSYmImZ1bmN0aW9uIj09dHlwZW9mIHJbbl0mJihDLmxvZ0luZm8oIkludm9raW5nICIuY29uY2F0KHQsIi4iKS5jb25jYXQobikpLEEuYi5ydW5XaXRoQmlkZGVyKHQsUy5iaW5kLmNhbGwocltuXSxyLGUpKSl9Y2F0Y2goZSl7Qy5sb2dXYXJuKCJFcnJvciBjYWxsaW5nICIuY29uY2F0KG4sIiBvZiAiKS5jb25jYXQodCkpfX15Lm1ha2VCaWRSZXF1ZXN0cz1PYmplY3Qoci5iKSgic3luYyIsZnVuY3Rpb24oZSxpLG8sYSxjKXtqLmVtaXQody5FVkVOVFMuQkVGT1JFX1JFUVVFU1RfQklEUyxlKTt2YXIgdT1bXSx0PU9iamVjdChTLmdldEJpZGRlckNvZGVzKShlKTtBLmIuZ2V0Q29uZmlnKCJiaWRkZXJTZXF1ZW5jZSIpPT09QS5hJiYodD1PYmplY3QoUy5zaHVmZmxlKSh0KSk7dmFyIG4scixzLGQsZixsLHAsZz1PYmplY3QoVC5hKSgpLGI9dCx2PVtdO1UuZW5hYmxlZCYmKE4oKSYmKHY9SS5nZXRTb3VyY2VCaWRkZXJNYXAoZSlbSS5DTElFTlRdKSxuPVUuYmlkZGVycyxiPXQuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiFFKCkobixlKXx8RSgpKHYsZSl9KSxCb29sZWFuKE4oKSYmVS50ZXN0U2VydmVyT25seSkmJihwPWUsQm9vbGVhbihPKCkocCxmdW5jdGlvbihlKXtyZXR1cm4gTygpKGUuYmlkcyxmdW5jdGlvbihlKXtyZXR1cm4oZS5iaWRTb3VyY2V8fFUuYmlkZGVyQ29udHJvbCYmVS5iaWRkZXJDb250cm9sW2UuYmlkZGVyXSkmJmUuZmluYWxTb3VyY2U9PT1JLlNFUlZFUn0pfSkpKSYmKGIubGVuZ3RoPTApLGQ9ZSxmPVUuYmlkZGVycywobD1DLmRlZXBDbG9uZShkKSkuZm9yRWFjaChmdW5jdGlvbihlKXtlLmJpZHM9ZS5iaWRzLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gRSgpKGYsZS5iaWRkZXIpJiYoIU4oKXx8ZS5maW5hbFNvdXJjZSE9PUkuQ0xJRU5UKX0pLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZS5iaWRfaWQ9Qy5nZXRVbmlxdWVJZGVudGlmaWVyU3RyKCksZX0pfSkscj1sPWwuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiAwIT09ZS5iaWRzLmxlbmd0aH0pLHM9Qy5nZW5lcmF0ZVVVSUQoKSxuLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHQ9Qy5nZXRVbmlxdWVJZGVudGlmaWVyU3RyKCksbj17YmlkZGVyQ29kZTplLGF1Y3Rpb25JZDpvLGJpZGRlclJlcXVlc3RJZDp0LHRpZDpzLGJpZHM6eCh7YmlkZGVyQ29kZTplLGF1Y3Rpb25JZDpvLGJpZGRlclJlcXVlc3RJZDp0LGFkVW5pdHM6Qy5kZWVwQ2xvbmUociksbGFiZWxzOmMsc3JjOncuUzJTLlNSQ30pLGF1Y3Rpb25TdGFydDppLHRpbWVvdXQ6VS50aW1lb3V0LHNyYzp3LlMyUy5TUkMscmVmZXJlckluZm86Z307MCE9PW4uYmlkcy5sZW5ndGgmJnUucHVzaChuKX0pLHIuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdD1lLmJpZHMuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiBPKCkodSxmdW5jdGlvbihlKXtyZXR1cm4gTygpKGUuYmlkcyxmdW5jdGlvbihlKXtyZXR1cm4gZS5iaWRJZD09PXQuYmlkX2lkfSl9KX0pO2UuYmlkcz10fSksdS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2UuYWRVbml0c1MyU0NvcHk9ci5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIDA8ZS5iaWRzLmxlbmd0aH0pfSkpO3ZhciB5LGgsbT0oeT1lLChoPUMuZGVlcENsb25lKHkpKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2UuYmlkcz1lLmJpZHMuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiFOKCl8fGUuZmluYWxTb3VyY2UhPT1JLlNFUlZFUn0pfSksaD1oLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gMCE9PWUuYmlkcy5sZW5ndGh9KSk7cmV0dXJuIGIuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdD1DLmdldFVuaXF1ZUlkZW50aWZpZXJTdHIoKSxuPXtiaWRkZXJDb2RlOmUsYXVjdGlvbklkOm8sYmlkZGVyUmVxdWVzdElkOnQsYmlkczp4KHtiaWRkZXJDb2RlOmUsYXVjdGlvbklkOm8sYmlkZGVyUmVxdWVzdElkOnQsYWRVbml0czpDLmRlZXBDbG9uZShtKSxsYWJlbHM6YyxzcmM6ImNsaWVudCJ9KSxhdWN0aW9uU3RhcnQ6aSx0aW1lb3V0OmEscmVmZXJlckluZm86Z30scj1fW2VdO3J8fEMubG9nRXJyb3IoIlRyeWluZyB0byBtYWtlIGEgcmVxdWVzdCBmb3IgYmlkZGVyIHRoYXQgZG9lcyBub3QgZXhpc3Q6ICIuY29uY2F0KGUpKSxyJiZuLmJpZHMmJjAhPT1uLmJpZHMubGVuZ3RoJiZ1LnB1c2gobil9KSxSLmdldENvbnNlbnREYXRhKCkmJnUuZm9yRWFjaChmdW5jdGlvbihlKXtlLmdkcHJDb25zZW50PVIuZ2V0Q29uc2VudERhdGEoKX0pLGsuZ2V0Q29uc2VudERhdGEoKSYmdS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2UudXNwQ29uc2VudD1rLmdldENvbnNlbnREYXRhKCl9KSx1fSwibWFrZUJpZFJlcXVlc3RzIikseS5jYWxsQmlkcz1mdW5jdGlvbihlLHQsaSxvLGEsYyx1KXt2YXIgbixyLHMsZCxmLGwscCxnLGIsdix5O3QubGVuZ3RoPyhyPShuPW0odC5yZWR1Y2UoZnVuY3Rpb24oZSx0KXtyZXR1cm4gZVtOdW1iZXIodm9pZCAwIT09dC5zcmMmJnQuc3JjPT09dy5TMlMuU1JDKV0ucHVzaCh0KSxlfSxbW10sW11dKSwyKSlbMF0sKHM9blsxXSkubGVuZ3RoJiYoZD1PYmplY3QoaC5iKShjLGE/e3JlcXVlc3Q6YS5yZXF1ZXN0LmJpbmQobnVsbCwiczJzIiksZG9uZTphLmRvbmV9OnZvaWQgMCksZj1VLmJpZGRlcnMsbD1fW1UuYWRhcHRlcl0scD1zWzBdLnRpZCxnPXNbMF0uYWRVbml0c1MyU0NvcHksbD8oYj17dGlkOnAsYWRfdW5pdHM6Z30pLmFkX3VuaXRzLmxlbmd0aCYmKHY9cy5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGUuc3RhcnQ9T2JqZWN0KFMudGltZXN0YW1wKSgpLG8uYmluZChlKX0pLHk9Yi5hZF91bml0cy5yZWR1Y2UoZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS5jb25jYXQoKHQuYmlkc3x8W10pLnJlZHVjZShmdW5jdGlvbihlLHQpe3JldHVybiBlLmNvbmNhdCh0LmJpZGRlcil9LFtdKSl9LFtdKSxDLmxvZ01lc3NhZ2UoIkNBTExJTkcgUzJTIEhFQURFUiBCSURERVJTID09PT0gIi5jb25jYXQoZi5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIEUoKSh5LGUpfSkuam9pbigiLCIpKSkscy5mb3JFYWNoKGZ1bmN0aW9uKGUpe2ouZW1pdCh3LkVWRU5UUy5CSURfUkVRVUVTVEVELGUpfSksbC5jYWxsQmlkcyhiLHMsZnVuY3Rpb24oZSx0KXt2YXIgbj1PYmplY3QoUy5nZXRCaWRkZXJSZXF1ZXN0KShzLHQuYmlkZGVyQ29kZSxlKTtuJiZpLmNhbGwobixlLHQpfSxmdW5jdGlvbigpe3JldHVybiB2LmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIGUoKX0pfSxkKSk6Qy5sb2dFcnJvcigibWlzc2luZyAiK1UuYWRhcHRlcikpLHIuZm9yRWFjaChmdW5jdGlvbih0KXt0LnN0YXJ0PU9iamVjdChTLnRpbWVzdGFtcCkoKTt2YXIgZT1fW3QuYmlkZGVyQ29kZV07Qy5sb2dNZXNzYWdlKCJDQUxMSU5HIEJJRERFUiA9PT09PT09ICIuY29uY2F0KHQuYmlkZGVyQ29kZSkpLGouZW1pdCh3LkVWRU5UUy5CSURfUkVRVUVTVEVELHQpO3ZhciBuPU9iamVjdChoLmIpKGMsYT97cmVxdWVzdDphLnJlcXVlc3QuYmluZChudWxsLHQuYmlkZGVyQ29kZSksZG9uZTphLmRvbmV9OnZvaWQgMCkscj1vLmJpbmQodCk7dHJ5e0EuYi5ydW5XaXRoQmlkZGVyKHQuYmlkZGVyQ29kZSxTLmJpbmQuY2FsbChlLmNhbGxCaWRzLGUsdCxpLmJpbmQodCkscixuLHUsQS5iLmNhbGxiYWNrV2l0aEJpZGRlcih0LmJpZGRlckNvZGUpKSl9Y2F0Y2goZSl7Qy5sb2dFcnJvcigiIi5jb25jYXQodC5iaWRkZXJDb2RlLCIgQmlkIEFkYXB0ZXIgZW1pdHRlZCBhbiB1bmNhdWdodCBlcnJvciB3aGVuIHBhcnNpbmcgdGhlaXIgYmlkUmVxdWVzdCIpLHtlOmUsYmlkUmVxdWVzdDp0fSkscigpfX0pKTpDLmxvZ1dhcm4oImNhbGxCaWRzIGV4ZWN1dGVkIHdpdGggbm8gYmlkUmVxdWVzdHMuICBXZXJlIHRoZXkgZmlsdGVyZWQgYnkgbGFiZWxzIG9yIHNpemluZz8iKX0seS52aWRlb0FkYXB0ZXJzPVtdLHkucmVnaXN0ZXJCaWRBZGFwdGVyPWZ1bmN0aW9uKGUsdCl7dmFyIG49KDI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTp7fSkuc3VwcG9ydGVkTWVkaWFUeXBlcyxyPXZvaWQgMD09PW4/W106bjtlJiZ0PyJmdW5jdGlvbiI9PXR5cGVvZiBlLmNhbGxCaWRzPyhfW3RdPWUsRSgpKHIsInZpZGVvIikmJnkudmlkZW9BZGFwdGVycy5wdXNoKHQpLEUoKShyLCJuYXRpdmUiKSYmZy5lLnB1c2godCkpOkMubG9nRXJyb3IoIkJpZGRlciBhZGFwdG9yIGVycm9yIGZvciBiaWRkZXIgY29kZTogIit0KyJiaWRkZXIgbXVzdCBpbXBsZW1lbnQgYSBjYWxsQmlkcygpIGZ1bmN0aW9uIik6Qy5sb2dFcnJvcigiYmlkQWRhcHRvciBvciBiaWRkZXJDb2RlIG5vdCBzcGVjaWZpZWQiKX0seS5hbGlhc0JpZEFkYXB0ZXI9ZnVuY3Rpb24odCxlLG4pe3ZhciByLGk7aWYodm9pZCAwPT09X1tlXSl7dmFyIG89X1t0XTtpZih2b2lkIDA9PT1vKXt2YXIgYT1BLmIuZ2V0Q29uZmlnKCJzMnNDb25maWciKSxjPWEmJmEuYmlkZGVycztjJiZFKCkoYyxlKT9CW2VdPXQ6Qy5sb2dFcnJvcignYmlkZGVyQ29kZSAiJyt0KyciIGlzIG5vdCBhbiBleGlzdGluZyBiaWRkZXIuJywiYWRhcHRlck1hbmFnZXIuYWxpYXNCaWRBZGFwdGVyIil9ZWxzZSB0cnl7dmFyIHUscyxkLGY9KHI9dCxpPVtdLEUoKSh5LnZpZGVvQWRhcHRlcnMscikmJmkucHVzaCgidmlkZW8iKSxFKCkoZy5lLHIpJiZpLnB1c2goIm5hdGl2ZSIpLGkpO28uY29uc3RydWN0b3IucHJvdG90eXBlIT1PYmplY3QucHJvdG90eXBlPyhkPW5ldyBvLmNvbnN0cnVjdG9yKS5zZXRCaWRkZXJDb2RlKGUpOih1PW8uZ2V0U3BlYygpLHM9biYmbi5ndmxpZCxkPU9iamVjdChsLm5ld0JpZGRlcikodih7fSx1LHtjb2RlOmUsZ3ZsaWQ6c30pKSxCW2VdPXQpLHkucmVnaXN0ZXJCaWRBZGFwdGVyKGQsZSx7c3VwcG9ydGVkTWVkaWFUeXBlczpmfSl9Y2F0Y2goZSl7Qy5sb2dFcnJvcih0KyIgYmlkZGVyIGRvZXMgbm90IGN1cnJlbnRseSBzdXBwb3J0IGFsaWFzaW5nLiIsImFkYXB0ZXJNYW5hZ2VyLmFsaWFzQmlkQWRhcHRlciIpfX1lbHNlIEMubG9nTWVzc2FnZSgnYWxpYXMgbmFtZSAiJytlKyciIGhhcyBiZWVuIGFscmVhZHkgc3BlY2lmaWVkLicpfSx5LnJlZ2lzdGVyQW5hbHl0aWNzQWRhcHRlcj1mdW5jdGlvbihlKXt2YXIgdD1lLmFkYXB0ZXIsbj1lLmNvZGUscj1lLmd2bGlkO3QmJm4/ImZ1bmN0aW9uIj09dHlwZW9mIHQuZW5hYmxlQW5hbHl0aWNzPyh0LmNvZGU9bixjW25dPXthZGFwdGVyOnQsZ3ZsaWQ6cn0pOkMubG9nRXJyb3IoJ1ByZWJpZCBFcnJvcjogQW5hbHl0aWNzIGFkYXB0b3IgZXJyb3IgZm9yIGFuYWx5dGljcyAiJy5jb25jYXQobiwnIlxuICAgICAgICBhbmFseXRpY3MgYWRhcHRlciBtdXN0IGltcGxlbWVudCBhbiBlbmFibGVBbmFseXRpY3MoKSBmdW5jdGlvbicpKTpDLmxvZ0Vycm9yKCJQcmViaWQgRXJyb3I6IGFuYWx5dGljc0FkYXB0ZXIgb3IgYW5hbHl0aWNzQ29kZSBub3Qgc3BlY2lmaWVkIil9LHkuZW5hYmxlQW5hbHl0aWNzPWZ1bmN0aW9uKGUpe0MuaXNBcnJheShlKXx8KGU9W2VdKSxDLl9lYWNoKGUsZnVuY3Rpb24oZSl7dmFyIHQ9Y1tlLnByb3ZpZGVyXS5hZGFwdGVyO3Q/dC5lbmFibGVBbmFseXRpY3MoZSk6Qy5sb2dFcnJvcigiUHJlYmlkIEVycm9yOiBubyBhbmFseXRpY3MgYWRhcHRlciBmb3VuZCBpbiByZWdpc3RyeSBmb3JcbiAgICAgICAgIi5jb25jYXQoZS5wcm92aWRlciwiLiIpKX0pfSx5LmdldEJpZEFkYXB0ZXI9ZnVuY3Rpb24oZSl7cmV0dXJuIF9bZV19LHkuZ2V0QW5hbHl0aWNzQWRhcHRlcj1mdW5jdGlvbihlKXtyZXR1cm4gY1tlXX0seS5jYWxsVGltZWRPdXRCaWRkZXJzPWZ1bmN0aW9uKHQsbixyKXtuPW4ubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLnBhcmFtcz1DLmdldFVzZXJDb25maWd1cmVkUGFyYW1zKHQsZS5hZFVuaXRDb2RlLGUuYmlkZGVyKSxlLnRpbWVvdXQ9cixlfSksbj1DLmdyb3VwQnkobiwiYmlkZGVyIiksT2JqZWN0LmtleXMobikuZm9yRWFjaChmdW5jdGlvbihlKXt1KGUsIm9uVGltZW91dCIsbltlXSl9KX0seS5jYWxsQmlkV29uQmlkZGVyPWZ1bmN0aW9uKGUsdCxuKXt0LnBhcmFtcz1DLmdldFVzZXJDb25maWd1cmVkUGFyYW1zKG4sdC5hZFVuaXRDb2RlLHQuYmlkZGVyKSxiLmEuaW5jcmVtZW50QmlkZGVyV2luc0NvdW50ZXIodC5hZFVuaXRDb2RlLHQuYmlkZGVyKSx1KGUsIm9uQmlkV29uIix0KX0seS5jYWxsU2V0VGFyZ2V0aW5nQmlkZGVyPWZ1bmN0aW9uKGUsdCl7dShlLCJvblNldFRhcmdldGluZyIsdCl9LHQuZGVmYXVsdD15fSw5MDpmdW5jdGlvbihlLHQsbil7dmFyIHI9bigxNSksaT1uKDYyKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9aShlKTtpZigiZnVuY3Rpb24iIT10eXBlb2YgdCl0aHJvdyBUeXBlRXJyb3IoU3RyaW5nKGUpKyIgaXMgbm90IGl0ZXJhYmxlIik7cmV0dXJuIHIodC5jYWxsKGUpKX19LDkxOmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDE1NSk7ZS5leHBvcnRzPXJ9LDkxNjpmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4oNzApfSw5MjpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO3QuYT1mdW5jdGlvbihlKXt2YXIgdD1lO3JldHVybntjYWxsQmlkczpmdW5jdGlvbigpe30sc2V0QmlkZGVyQ29kZTpmdW5jdGlvbihlKXt0PWV9LGdldEJpZGRlckNvZGU6ZnVuY3Rpb24oKXtyZXR1cm4gdH19fX0sOTM6ZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt0LmE9ZnVuY3Rpb24oZSx0KXtpZihlLmxhYmVsQWxsKXJldHVybntsYWJlbEFsbDohMCxsYWJlbHM6ZS5sYWJlbEFsbCxhY3RpdmVMYWJlbHM6dH07cmV0dXJue2xhYmVsQWxsOiExLGxhYmVsczplLmxhYmVsQW55LGFjdGl2ZUxhYmVsczp0fX0sdC5jPWZ1bmN0aW9uKGUpe3ZhciB0PXYoMTxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOmIpO3JldHVybiF0LnNob3VsZEZpbHRlcnx8ISF0LnNpemVzU3VwcG9ydGVkW2VdfSx0LmI9ZnVuY3Rpb24oKXt2YXIgZT0wPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD1lLmxhYmVscyxuPXZvaWQgMD09PXQ/W106dCxyPWUubGFiZWxBbGwsaT12b2lkIDAhPT1yJiZyLG89ZS5hY3RpdmVMYWJlbHMsYT12b2lkIDA9PT1vP1tdOm8sYz0xPGFyZ3VtZW50cy5sZW5ndGg/YXJndW1lbnRzWzFdOnZvaWQgMCx1PTI8YXJndW1lbnRzLmxlbmd0aD9hcmd1bWVudHNbMl06dm9pZCAwLHM9digzPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106Yik7Yz1PYmplY3QocC5pc1BsYWluT2JqZWN0KShjKT9PYmplY3QocC5kZWVwQ2xvbmUpKGMpOnU/e2Jhbm5lcjp7c2l6ZXM6dX19Ont9O3ZhciBkPU9iamVjdChwLmRlZXBBY2Nlc3MpKGMsImJhbm5lci5zaXplcyIpO3Muc2hvdWxkRmlsdGVyJiZkJiYoYy5iYW5uZXIuc2l6ZXM9ZC5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIHMuc2l6ZXNTdXBwb3J0ZWRbZV19KSk7dmFyIGY9T2JqZWN0LmtleXMoYyksbD17YWN0aXZlOmYuZXZlcnkoZnVuY3Rpb24oZSl7cmV0dXJuImJhbm5lciIhPT1lfSl8fGYuc29tZShmdW5jdGlvbihlKXtyZXR1cm4iYmFubmVyIj09PWV9KSYmMDxPYmplY3QocC5kZWVwQWNjZXNzKShjLCJiYW5uZXIuc2l6ZXMubGVuZ3RoIikmJigwPT09bi5sZW5ndGh8fCFpJiYobi5zb21lKGZ1bmN0aW9uKGUpe3JldHVybiBzLmxhYmVsc1tlXX0pfHxuLnNvbWUoZnVuY3Rpb24oZSl7cmV0dXJuIGcoKShhLGUpfSkpfHxpJiZuLnJlZHVjZShmdW5jdGlvbihlLHQpe3JldHVybiBlP3MubGFiZWxzW3RdfHxnKCkoYSx0KTplfSwhMCkpLG1lZGlhVHlwZXM6Y307ZCYmZC5sZW5ndGghPT1jLmJhbm5lci5zaXplcy5sZW5ndGgmJihsLmZpbHRlclJlc3VsdHM9e2JlZm9yZTpkLGFmdGVyOmMuYmFubmVyLnNpemVzfSk7cmV0dXJuIGx9O3ZhciByPW4oMykscD1uKDApLGk9bigxMiksZz1uLm4oaSk7ZnVuY3Rpb24gbyhlKXtyZXR1cm4obz0iZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiYic3ltYm9sIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiYiZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT8ic3ltYm9sIjp0eXBlb2YgZX0pKGUpfXZhciBiPVtdO2Z1bmN0aW9uIHYoZSl7cmV0dXJuIGUucmVkdWNlKGZ1bmN0aW9uKG4scil7aWYoIm9iamVjdCI9PT1vKHIpJiYic3RyaW5nIj09dHlwZW9mIHIubWVkaWFRdWVyeSl7dmFyIHQ9ITE7aWYoIiI9PT1yLm1lZGlhUXVlcnkpdD0hMDtlbHNlIHRyeXt0PU9iamVjdChwLmdldFdpbmRvd1RvcCkoKS5tYXRjaE1lZGlhKHIubWVkaWFRdWVyeSkubWF0Y2hlc31jYXRjaChlKXtPYmplY3QocC5sb2dXYXJuKSgiVW5mcmllbmRseSBpRnJhbWUgYmxvY2tzIHNpemVDb25maWcgZnJvbSBiZWluZyBjb3JyZWN0bHkgZXZhbHVhdGVkIiksdD1tYXRjaE1lZGlhKHIubWVkaWFRdWVyeSkubWF0Y2hlc310JiYoQXJyYXkuaXNBcnJheShyLnNpemVzU3VwcG9ydGVkKSYmKG4uc2hvdWxkRmlsdGVyPSEwKSxbImxhYmVscyIsInNpemVzU3VwcG9ydGVkIl0uZm9yRWFjaChmdW5jdGlvbih0KXtyZXR1cm4oclt0XXx8W10pLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIG5bdF1bZV09ITB9KX0pKX1lbHNlIE9iamVjdChwLmxvZ1dhcm4pKCdzaXplQ29uZmlnIHJ1bGUgbWlzc2luZyByZXF1aXJlZCBwcm9wZXJ0eSAibWVkaWFRdWVyeSInKTtyZXR1cm4gbn0se2xhYmVsczp7fSxzaXplc1N1cHBvcnRlZDp7fSxzaG91bGRGaWx0ZXI6ITF9KX1yLmIuZ2V0Q29uZmlnKCJzaXplQ29uZmlnIixmdW5jdGlvbihlKXtyZXR1cm4gdD1lLnNpemVDb25maWcsdm9pZChiPXQpO3ZhciB0fSl9LDk0OmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDIyMCk7ZS5leHBvcnRzPXJ9LDk1OmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dC5iPWZ1bmN0aW9uKGUsdCxuKXt2YXIgcj17cHV0czplLm1hcChjLG4pfTtPYmplY3QoaS5hKShvLmIuZ2V0Q29uZmlnKCJjYWNoZS51cmwiKSxmdW5jdGlvbihuKXtyZXR1cm57c3VjY2VzczpmdW5jdGlvbihlKXt2YXIgdDt0cnl7dD1KU09OLnBhcnNlKGUpLnJlc3BvbnNlc31jYXRjaChlKXtyZXR1cm4gdm9pZCBuKGUsW10pfXQ/bihudWxsLHQpOm4obmV3IEVycm9yKCJUaGUgY2FjaGUgc2VydmVyIGRpZG4ndCByZXNwb25kIHdpdGggYSByZXNwb25zZXMgcHJvcGVydHkuIiksW10pfSxlcnJvcjpmdW5jdGlvbihlLHQpe24obmV3IEVycm9yKCJFcnJvciBzdG9yaW5nIHZpZGVvIGFkIGluIHRoZSBjYWNoZTogIi5jb25jYXQoZSwiOiAiKS5jb25jYXQoSlNPTi5zdHJpbmdpZnkodCkpKSxbXSl9fX0odCksSlNPTi5zdHJpbmdpZnkocikse2NvbnRlbnRUeXBlOiJ0ZXh0L3BsYWluIix3aXRoQ3JlZGVudGlhbHM6ITB9KX0sdC5hPWZ1bmN0aW9uKGUpe3JldHVybiIiLmNvbmNhdChvLmIuZ2V0Q29uZmlnKCJjYWNoZS51cmwiKSwiP3V1aWQ9IikuY29uY2F0KGUpfTt2YXIgaT1uKDQpLG89bigzKSxhPW4oMCk7ZnVuY3Rpb24gYyhlKXt2YXIgdCxuLHIsaT17dHlwZToieG1sIix2YWx1ZTplLnZhc3RYbWw/ZS52YXN0WG1sOih0PWUudmFzdFVybCxuPWUudmFzdEltcFVybCxyPW4/IjwhW0NEQVRBWyIuY29uY2F0KG4sIl1dPiIpOiIiLCc8VkFTVCB2ZXJzaW9uPSIzLjAiPlxuICAgIDxBZD5cbiAgICAgIDxXcmFwcGVyPlxuICAgICAgICA8QWRTeXN0ZW0+cHJlYmlkLm9yZyB3cmFwcGVyPC9BZFN5c3RlbT5cbiAgICAgICAgPFZBU1RBZFRhZ1VSST48IVtDREFUQVsnLmNvbmNhdCh0LCJdXT48L1ZBU1RBZFRhZ1VSST5cbiAgICAgICAgPEltcHJlc3Npb24+IikuY29uY2F0KHIsIjwvSW1wcmVzc2lvbj5cbiAgICAgICAgPENyZWF0aXZlcz48L0NyZWF0aXZlcz5cbiAgICAgIDwvV3JhcHBlcj5cbiAgICA8L0FkPlxuICA8L1ZBU1Q+IikpLHR0bHNlY29uZHM6TnVtYmVyKGUudHRsKX07cmV0dXJuIG8uYi5nZXRDb25maWcoImNhY2hlLnZhc3R0cmFjayIpJiYoaS5iaWRkZXI9ZS5iaWRkZXIsaS5iaWRpZD1lLnJlcXVlc3RJZCxhLmlzUGxhaW5PYmplY3QodGhpcykmJnRoaXMuaGFzT3duUHJvcGVydHkoImF1Y3Rpb25TdGFydCIpJiYoaS50aW1lc3RhbXA9dGhpcy5hdWN0aW9uU3RhcnQpKSwic3RyaW5nIj09dHlwZW9mIGUuY3VzdG9tQ2FjaGVLZXkmJiIiIT09ZS5jdXN0b21DYWNoZUtleSYmKGkua2V5PWUuY3VzdG9tQ2FjaGVLZXkpLGl9fSw5ODpmdW5jdGlvbihlLHQsbil7big5OSk7dmFyIHI9big1Myk7ZS5leHBvcnRzPXIoIkFycmF5IiwiZmluZCIpfSw5OTpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO3ZhciByPW4oMTQpLGk9big1NykuZmluZCxvPW4oNTIpLGE9big2MSksYz0iZmluZCIsdT0hMCxzPWEoYyk7YyBpbltdJiZBcnJheSgxKS5maW5kKGZ1bmN0aW9uKCl7dT0hMX0pLHIoe3RhcmdldDoiQXJyYXkiLHByb3RvOiEwLGZvcmNlZDp1fHwhc30se2ZpbmQ6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gaSh0aGlzLGUsMTxhcmd1bWVudHMubGVuZ3RoP3Q6dm9pZCAwKX19KSxvKGMpfX0pOwp1cGJqc0NodW5rKFszNjRdLHsxNjQ6ZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz1yKDE2NSl9LDE2NTpmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxyLmQodCwic3BlYyIsZnVuY3Rpb24oKXtyZXR1cm4gSX0pO3ZhciBuPXIoMSkscD1yKDMpLHU9cigwKSxsPXIoMik7ZnVuY3Rpb24gZigpe3JldHVybihmPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciByPWFyZ3VtZW50c1t0XTtmb3IodmFyIG4gaW4gcilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocixuKSYmKGVbbl09cltuXSl9cmV0dXJuIGV9KS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZnVuY3Rpb24gYSh0LGUpe3ZhciByLG49T2JqZWN0LmtleXModCk7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMmJihyPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHModCksZSYmKHI9ci5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCxlKS5lbnVtZXJhYmxlfSkpLG4ucHVzaC5hcHBseShuLHIpKSxufWZ1bmN0aW9uIG0oaSl7Zm9yKHZhciBlPTE7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl7dmFyIG89bnVsbCE9YXJndW1lbnRzW2VdP2FyZ3VtZW50c1tlXTp7fTtlJTI/YShPYmplY3QobyksITApLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHQscixuO3Q9aSxuPW9bcj1lXSxyIGluIHQ/T2JqZWN0LmRlZmluZVByb3BlcnR5KHQscix7dmFsdWU6bixlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOnRbcl09bn0pOk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzP09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGksT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMobykpOmEoT2JqZWN0KG8pKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShpLGUsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvLGUpKX0pfXJldHVybiBpfXZhciBpPSIzM2Fjcm9zcyIsYz0iaHR0cHM6Ly9zc2MuMzNhY3Jvc3MuY29tL2FwaS92MS9oYiIsYj0iaHR0cHM6Ly9zc2MtY21zLjMzYWNyb3NzLmNvbS9wcy8/bT14Y2gmcnQ9aHRtbCZydT1kZWIiLG89IlVTRCIscz0vXlthLXpBLVowLTlfLV17MjJ9JC8saD17U0lBQjoic2lhYiIsSU5WSUVXOiJpbnZpZXciLElOU1RSRUFNOiJpbnN0cmVhbSJ9LGc9WyJtaW1lcyIsIm1pbmR1cmF0aW9uIiwibWF4ZHVyYXRpb24iLCJwbGFjZW1lbnQiLCJwcm90b2NvbHMiLCJzdGFydGRlbGF5Iiwic2tpcCIsInNraXBhZnRlciIsIm1pbmJpdHJhdGUiLCJtYXhiaXRyYXRlIiwiZGVsaXZlcnkiLCJwbGF5YmFja21ldGhvZCIsImFwaSIsImxpbmVhcml0eSJdLGQ9e3VuaXF1ZVNpdGVJZHM6W119LHk9Im5tIjtmdW5jdGlvbiB2KGUpe3JldHVybnt3OnBhcnNlSW50KGVbMF0sMTApLGg6cGFyc2VJbnQoZVsxXSwxMCl9fWZ1bmN0aW9uIEEoZSl7dmFyIHQ9ZS5wYXJhbXMscj1lLm1lZGlhVHlwZXMsbj1yLmJhbm5lcixpPXIudmlkZW87cmV0dXJuIGkmJiFuJiYiaW5zdHJlYW0iPT09aS5jb250ZXh0P2guSU5TVFJFQU06dC5wcm9kdWN0SWQ9PT1oLklOVklFVz90LnByb2R1Y3RJZDpoLlNJQUJ9ZnVuY3Rpb24gdyhlLHQscil7dmFyIG49ZS5nZXRGbG9vcih7Y3VycmVuY3k6byxtZWRpYVR5cGU6cixzaXplOlt0LncsdC5oXX0pO2lmKCFpc05hTihuLmZsb29yKSYmbi5jdXJyZW5jeT09PW8pcmV0dXJuIG4uZmxvb3J9dmFyIEk9e05PTl9NRUFTVVJBQkxFOnksY29kZTppLHN1cHBvcnRlZE1lZGlhVHlwZXM6W2wuYixsLmRdLGlzQmlkUmVxdWVzdFZhbGlkOmZ1bmN0aW9uKGUpe3JldHVybihuPWUpLmJpZGRlcj09PWkmJnZvaWQgMCE9PW4ucGFyYW1zJiYhIWZ1bmN0aW9uKGUpe3JldHVybiBudWxsIT09KHUuZGVlcEFjY2VzcyhlLCJwYXJhbXMuc2l0ZUlkIiwiIil8fCIiKS50cmltKCkubWF0Y2gocyl9KG4pJiYodD1lLHZvaWQgMD09PShyPXUuZGVlcEFjY2Vzcyh0LCJtZWRpYVR5cGVzLmJhbm5lciIpKXx8ISFBcnJheS5pc0FycmF5KHIuc2l6ZXMpKSYmZnVuY3Rpb24oZSl7dmFyIHQ9dS5kZWVwQWNjZXNzKGUsIm1lZGlhVHlwZXMudmlkZW8iKSxyPXUuZGVlcEFjY2VzcyhlLCJwYXJhbXMudmlkZW8iLHt9KTtpZih2b2lkIDA9PT10KXJldHVybiEwO2lmKCFBcnJheS5pc0FycmF5KHQucGxheWVyU2l6ZSkpcmV0dXJuITE7aWYoIXQuY29udGV4dClyZXR1cm4hMTt2YXIgbj1tKG0oe30sdCkscik7cmV0dXJuISghQXJyYXkuaXNBcnJheShuLm1pbWVzKXx8MD09PW4ubWltZXMubGVuZ3RoKSYmKCEoIUFycmF5LmlzQXJyYXkobi5wcm90b2NvbHMpfHwwPT09bi5wcm90b2NvbHMubGVuZ3RoKSYmKCh2b2lkIDA9PT1uLnBsYWNlbWVudHx8Im51bWJlciI9PXR5cGVvZiBuLnBsYWNlbWVudCkmJigiaW5zdHJlYW0iIT09dC5jb250ZXh0fHx2b2lkIDA9PT1uLnN0YXJ0ZGVsYXl8fCJudW1iZXIiPT10eXBlb2Ygbi5zdGFydGRlbGF5KSkpfShlKTt2YXIgdCxyLG59LGJ1aWxkUmVxdWVzdHM6ZnVuY3Rpb24oZSx0KXt2YXIgcj1mKHtjb25zZW50U3RyaW5nOnZvaWQgMCxnZHByQXBwbGllczohMX0sdCYmdC5nZHByQ29uc2VudCksbj10JiZ0LnVzcENvbnNlbnQsaT10JiZ0LnJlZmVyZXJJbmZvP3QucmVmZXJlckluZm8ucmVmZXJlcjp2b2lkIDA7cmV0dXJuIGQudW5pcXVlU2l0ZUlkcz1lLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZS5wYXJhbXMuc2l0ZUlkfSkuZmlsdGVyKHUudW5pcXVlcyksZS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciB0PWUuYmlkUmVxdWVzdCxyPWUuZ2RwckNvbnNlbnQsbj12b2lkIDA9PT1yP3t9OnIsaT1lLnVzcENvbnNlbnQsbz1lLnBhZ2VVcmwsYT17fSxzPXQucGFyYW1zO2EuaW1wPVt7fV0sdS5kZWVwQWNjZXNzKHQsIm1lZGlhVHlwZXMuYmFubmVyIikmJihhLmltcFswXS5iYW5uZXI9bSh7fSxmdW5jdGlvbihuKXt2YXIgZSx0PXUuZGVlcEFjY2VzcyhuLCJtZWRpYVR5cGVzLmJhbm5lciIse30pLHI9ZnVuY3Rpb24oZSl7cmV0dXJuIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGUpfHxkb2N1bWVudC5nZXRFbGVtZW50QnlJZChmdW5jdGlvbihlKXtpZih1LmlzR3B0UHViYWRzRGVmaW5lZCgpKWZvcih2YXIgdD1nb29nbGV0YWcucHViYWRzKCkuZ2V0U2xvdHMoKSxyPXUuaXNTbG90TWF0Y2hpbmdBZFVuaXRDb2RlKGUpLG49MDtuPHQubGVuZ3RoO24rKylpZihyKHRbbl0pKXt2YXIgaT10W25dLmdldFNsb3RFbGVtZW50SWQoKTtyZXR1cm4gdS5sb2dJbmZvKCJbMzNBY3Jvc3MgQWRhcHRlcl0gTWFwIGFkIHVuaXQgcGF0aCB0byBIVE1MIGVsZW1lbnQgaWQ6ICciLmNvbmNhdChlLCInIC0+ICIpLmNvbmNhdChpKSksaX1yZXR1cm4gdS5sb2dXYXJuKCJbMzNBY3Jvc3MgQWRhcHRlcl0gVW5hYmxlIHRvIGxvY2F0ZSBlbGVtZW50IGZvciBhZCB1bml0IGNvZGU6ICciLmNvbmNhdChlLCInIikpLG51bGx9KGUpKX0obi5hZFVuaXRDb2RlKSxpPWZ1bmN0aW9uKGUpe3JldHVybiF1LmlzQXJyYXkoZSl8fDIhPT1lLmxlbmd0aHx8dS5pc0FycmF5KGVbMF0pP2UubWFwKHYpOlt2KGUpXX0odC5zaXplcyk7ZT0iZnVuY3Rpb24iPT10eXBlb2Ygbi5nZXRGbG9vcj9pLm1hcChmdW5jdGlvbihlKXt2YXIgdCxyPXcobixlLGwuYik7cmV0dXJuIHImJih0PXtleHQ6e3R0eDp7YmlkZmxvb3JzOltyXX19fSksZih7fSxlLHQpfSk6aTt2YXIgbz1mdW5jdGlvbihlKXtyZXR1cm4gZS5yZWR1Y2UoZnVuY3Rpb24oZSx0KXtyZXR1cm4gdC5oKnQudzxlLmgqZS53P3Q6ZX0pfShpKSxhPWZ1bmN0aW9uKGUpe3JldHVybnt0dHg6e3ZpZXdhYmlsaXR5OnthbW91bnQ6aXNOYU4oZSk/ZTpNYXRoLnJvdW5kKGUpfX19fShmdW5jdGlvbihlKXtyZXR1cm4hZnVuY3Rpb24oKXt0cnl7cmV0dXJuIHUuZ2V0V2luZG93U2VsZigpIT09dS5nZXRXaW5kb3dUb3AoKX1jYXRjaChlKXtyZXR1cm4hMH19KCkmJm51bGwhPT1lfShyKT9mdW5jdGlvbihlLHQpe3ZhciByPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTp7fSxuPXIudyxpPXIuaDtyZXR1cm4idmlzaWJsZSI9PT10LmRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZT9mdW5jdGlvbihlLHQpe3ZhciByLG4saT0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06e30sbz1pLncsYT1pLmgscz1mdW5jdGlvbihlKXt2YXIgdD0xPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e30scj10Lncsbj10LmgsaT1lLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLG89aS53aWR0aCxhPWkuaGVpZ2h0LHM9aS5sZWZ0LGQ9aS50b3AsYz1pLnJpZ2h0LHU9aS5ib3R0b207KDA9PT1vfHwwPT09YSkmJnImJm4mJihjPXMrKG89ciksdT1kKyhhPW4pKTtyZXR1cm57d2lkdGg6byxoZWlnaHQ6YSxsZWZ0OnMsdG9wOmQscmlnaHQ6Yyxib3R0b206dX19KGUse3c6byxoOmF9KSxkPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD17bGVmdDplWzBdLmxlZnQscmlnaHQ6ZVswXS5yaWdodCx0b3A6ZVswXS50b3AsYm90dG9tOmVbMF0uYm90dG9tfSxyPTE7cjxlLmxlbmd0aDsrK3Ipe2lmKHQubGVmdD1NYXRoLm1heCh0LmxlZnQsZVtyXS5sZWZ0KSx0LnJpZ2h0PU1hdGgubWluKHQucmlnaHQsZVtyXS5yaWdodCksdC5sZWZ0Pj10LnJpZ2h0KXJldHVybiBudWxsO2lmKHQudG9wPU1hdGgubWF4KHQudG9wLGVbcl0udG9wKSx0LmJvdHRvbT1NYXRoLm1pbih0LmJvdHRvbSxlW3JdLmJvdHRvbSksdC50b3A+PXQuYm90dG9tKXJldHVybiBudWxsfXJldHVybiB0LndpZHRoPXQucmlnaHQtdC5sZWZ0LHQuaGVpZ2h0PXQuYm90dG9tLXQudG9wLHR9KFt7bGVmdDowLHRvcDowLHJpZ2h0OnQuaW5uZXJXaWR0aCxib3R0b206dC5pbm5lckhlaWdodH0sc10pO3JldHVybiBudWxsPT09ZD8wOihyPWQud2lkdGgqZC5oZWlnaHQsbj1zLndpZHRoKnMuaGVpZ2h0LHIvbioxMDApfShlLHQse3c6bixoOml9KTowfShyLHUuZ2V0V2luZG93VG9wKCksbyk6eSk7cmV0dXJue2Zvcm1hdDplLGV4dDphfX0odCkpKTt1LmRlZXBBY2Nlc3ModCwibWVkaWFUeXBlcy52aWRlbyIpJiYoYS5pbXBbMF0udmlkZW89ZnVuY3Rpb24oZSl7dmFyIHQ9dS5kZWVwQWNjZXNzKGUsIm1lZGlhVHlwZXMudmlkZW8iLHt9KSxyPXUuZGVlcEFjY2VzcyhlLCJwYXJhbXMudmlkZW8iLHt9KSxuPW0obSh7fSx0KSxyKSxpPXt9LG89dihuLnBsYXllclNpemVbMF0pLGE9by53LHM9by5oO2kudz1hLGkuaD1zLGcuZm9yRWFjaChmdW5jdGlvbihlKXtuLmhhc093blByb3BlcnR5KGUpJiYoaVtlXT1uW2VdKX0pO3ZhciBkPUEoZSk7aS5wbGFjZW1lbnQ9aS5wbGFjZW1lbnR8fDIsZD09PWguSU5TVFJFQU0mJihpLnN0YXJ0ZGVsYXk9aS5zdGFydGRlbGF5fHwwLGkucGxhY2VtZW50PTEpO3t2YXIgYzsiZnVuY3Rpb24iIT10eXBlb2YgZS5nZXRGbG9vcnx8KGM9dyhlLHt3OmkudyxoOmkuaH0sbC5kKSkmJmYoaSx7ZXh0Ont0dHg6e2JpZGZsb29yczpbY119fX0pfXJldHVybiBpfSh0KSk7YS5pbXBbMF0uZXh0PXt0dHg6e3Byb2Q6QSh0KX19LGEuc2l0ZT17aWQ6cy5zaXRlSWR9LG8mJihhLnNpdGUucGFnZT1vKTthLmlkPXQuYmlkSWQsYS51c2VyPXtleHQ6e2NvbnNlbnQ6bi5jb25zZW50U3RyaW5nfX0sYS5yZWdzPXtleHQ6e2dkcHI6ITA9PT1uLmdkcHJBcHBsaWVzPzE6MCx1c19wcml2YWN5Oml8fG51bGx9fSxhLmV4dD17dHR4OntwcmViaWRTdGFydGVkQXQ6RGF0ZS5ub3coKSxjYWxsZXI6W3tuYW1lOiJwcmViaWRqcyIsdmVyc2lvbjoiNC4xNy4wIn1dfX0sdC5zY2hhaW4mJihhLnNvdXJjZT17ZXh0OntzY2hhaW46dC5zY2hhaW59fSk7MT09PXMudGVzdCYmKGEudGVzdD0xKTt2YXIgZD1wLmIuZ2V0Q29uZmlnKCJ0dHhTZXR0aW5ncyIpO3JldHVybnttZXRob2Q6IlBPU1QiLHVybDpkJiZkLnVybHx8IiIuY29uY2F0KGMsIj9ndWlkPSIpLmNvbmNhdChzLnNpdGVJZCksZGF0YTpKU09OLnN0cmluZ2lmeShhKSxvcHRpb25zOntjb250ZW50VHlwZToidGV4dC9wbGFpbiIsd2l0aENyZWRlbnRpYWxzOiEwfX19KHtiaWRSZXF1ZXN0OmUsZ2RwckNvbnNlbnQ6cix1c3BDb25zZW50Om4scGFnZVVybDppfSl9KX0saW50ZXJwcmV0UmVzcG9uc2U6ZnVuY3Rpb24oZSx0KXt2YXIgcj1bXTtyZXR1cm4gMDxlLmJvZHkuc2VhdGJpZC5sZW5ndGgmJjA8ZS5ib2R5LnNlYXRiaWRbMF0uYmlkLmxlbmd0aCYmci5wdXNoKGZ1bmN0aW9uKGUpe3ZhciB0PXtyZXF1ZXN0SWQ6ZS5pZCxiaWRkZXJDb2RlOmksY3BtOmUuc2VhdGJpZFswXS5iaWRbMF0ucHJpY2Usd2lkdGg6ZS5zZWF0YmlkWzBdLmJpZFswXS53LGhlaWdodDplLnNlYXRiaWRbMF0uYmlkWzBdLmgsYWQ6ZS5zZWF0YmlkWzBdLmJpZFswXS5hZG0sdHRsOmUuc2VhdGJpZFswXS5iaWRbMF0udHRsfHw2MCxjcmVhdGl2ZUlkOmUuc2VhdGJpZFswXS5iaWRbMF0uY3JpZCxtZWRpYVR5cGU6dS5kZWVwQWNjZXNzKGUuc2VhdGJpZFswXS5iaWRbMF0sImV4dC50dHgubWVkaWFUeXBlIixsLmIpLGN1cnJlbmN5OmUuY3VyLG5ldFJldmVudWU6ITB9O3t0Lm1lZGlhVHlwZT09PWwuZCYmKCJ4bWwiPT09dS5kZWVwQWNjZXNzKGUuc2VhdGJpZFswXS5iaWRbMF0sImV4dC50dHgudmFzdFR5cGUiLCJ4bWwiKT90LnZhc3RYbWw9dC5hZDp0LnZhc3RVcmw9dC5hZCl9cmV0dXJuIHR9KGUuYm9keSkpLHJ9LGdldFVzZXJTeW5jczpmdW5jdGlvbihlLHQscixuKXt2YXIgaT1lLmlmcmFtZUVuYWJsZWQ/ZC51bmlxdWVTaXRlSWRzLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zaXRlSWQscj12b2lkIDA9PT10PyJ6enowMDAwMDAwMDAwMDN6enoiOnQsbj1lLmdkcHJDb25zZW50LGk9dm9pZCAwPT09bj97fTpuLG89ZS51c3BDb25zZW50LGE9cC5iLmdldENvbmZpZygidHR4U2V0dGluZ3MiKSxzPWEmJmEuc3luY1VybHx8YixkPWkuY29uc2VudFN0cmluZyxjPWkuZ2RwckFwcGxpZXMsdT17dHlwZToiaWZyYW1lIix1cmw6IiIuY29uY2F0KHMsIiZpZD0iKS5jb25jYXQociwiJmdkcHJfY29uc2VudD0iKS5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KGQpLCImdXNfcHJpdmFjeT0iKS5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KG8pKX07ImJvb2xlYW4iPT10eXBlb2YgYyYmKHUudXJsKz0iJmdkcHI9Ii5jb25jYXQoTnVtYmVyKGMpKSk7cmV0dXJuIHV9KHtnZHByQ29uc2VudDpyLHVzcENvbnNlbnQ6bixzaXRlSWQ6ZX0pfSk6W107cmV0dXJuIGQudW5pcXVlU2l0ZUlkcz1bXSxpfX07T2JqZWN0KG4ucmVnaXN0ZXJCaWRkZXIpKEkpfX0sWzE2NF0pOwp1cGJqc0NodW5rKFszNjFdLHsxNzA6ZnVuY3Rpb24oZSxyLGEpe2UuZXhwb3J0cz1hKDE3MSl9LDE3MTpmdW5jdGlvbihlLHIsYSl7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxyLnJlc2V0VXNlclN5bmM9ZnVuY3Rpb24oKXtkPSExfSxhLmQociwic3BlYyIsZnVuY3Rpb24oKXtyZXR1cm4gaH0pLHIuaGFzVmFsaWRTdXBwbHlDaGFpblBhcmFtcz10O3ZhciBsPWEoMCksbj1hKDEpLGQ9ITE7dmFyIGg9e2NvZGU6ImFhcmR2YXJrIixndmxpZDo1MixhbGlhc2VzOlsiYWRzcGFyYyIsInNhZmVyZWFjaCJdLGlzQmlkUmVxdWVzdFZhbGlkOmZ1bmN0aW9uKGUpe3JldHVybiJzdHJpbmciPT10eXBlb2YgZS5wYXJhbXMuYWkmJiEhZS5wYXJhbXMuYWkubGVuZ3RoJiYic3RyaW5nIj09dHlwZW9mIGUucGFyYW1zLnNjJiYhIWUucGFyYW1zLnNjLmxlbmd0aH0sYnVpbGRSZXF1ZXN0czpmdW5jdGlvbihlLGEpe3ZhciBuLHQ9W10scz1bXSxpPXt9LG89YS5yZWZlcmVySW5mby5yZWZlcmVyLGQ9W10scD0iIixjPXdpbmRvdy5pbm5lcldpZHRoLHU9d2luZG93LmlubmVySGVpZ2h0O3RyeXt2YXIgcj1sLmdldFdpbmRvd1RvcCgpO3IucnRrY2F0ZWdvcmllcyYmQXJyYXkuaXNBcnJheShyLnJ0a2NhdGVnb3JpZXMpJiYoZD1yLnJ0a2NhdGVnb3JpZXMpLGM9ci5pbm5lcldpZHRoLHU9ci5pbm5lckhlaWdodH1jYXRjaChlKXt9cmV0dXJuIGwuaXNTdHIobC5kZWVwQWNjZXNzKGUsIjAudXNlcklkLnRkaWQiKSkmJihwPWVbMF0udXNlcklkLnRkaWQpLG49aC5zZXJpYWxpemVTdXBwbHlDaGFpbihsLmRlZXBBY2Nlc3MoZSwiMC5zY2hhaW4iKSksbC5fZWFjaChlLGZ1bmN0aW9uKGUpe3ZhciByPWlbZS5wYXJhbXMuYWldO3J8fChyPXtzaG9ydENvZGVzOltdLHBheWxvYWQ6e3ZlcnNpb246MSxqc29ucDohMSxydGtyZWZlcmVyOm8sdzpjLGg6dX0sZW5kcG9pbnQ6ImJpZGRlci5ydGsuaW8ifSxwJiYoci5wYXlsb2FkLnRkaWQ9cCksbiYmKHIucGF5bG9hZC5zY2hhaW49biksZCYmZC5sZW5ndGgmJihyLnBheWxvYWQuY2F0ZWdvcmllcz1kLnNsaWNlKDApKSxlLnBhcmFtcy5jYXRlZ29yaWVzJiZlLnBhcmFtcy5jYXRlZ29yaWVzLmxlbmd0aCYmKHIucGF5bG9hZC5jYXRlZ29yaWVzPXIucGF5bG9hZC5jYXRlZ29yaWVzfHxbXSxsLl9lYWNoKGUucGFyYW1zLmNhdGVnb3JpZXMsZnVuY3Rpb24oZSl7ci5wYXlsb2FkLmNhdGVnb3JpZXMucHVzaChlKX0pKSxhLmdkcHJDb25zZW50JiYoci5wYXlsb2FkLmdkcHI9ITEsImJvb2xlYW4iPT10eXBlb2YgYS5nZHByQ29uc2VudC5nZHByQXBwbGllcyYmKHIucGF5bG9hZC5nZHByPWEuZ2RwckNvbnNlbnQuZ2RwckFwcGxpZXMpLHIucGF5bG9hZC5nZHByJiYoci5wYXlsb2FkLmNvbnNlbnQ9YS5nZHByQ29uc2VudC5jb25zZW50U3RyaW5nKSksaVtlLnBhcmFtcy5haV09cix0LnB1c2goZS5wYXJhbXMuYWkpKSxhLnVzcENvbnNlbnQmJihyLnBheWxvYWQudXNfcHJpdmFjeT1hLnVzcENvbnNlbnQpLHIuc2hvcnRDb2Rlcy5wdXNoKGUucGFyYW1zLnNjKSxyLnBheWxvYWRbZS5wYXJhbXMuc2NdPWUuYmlkSWQsInN0cmluZyI9PXR5cGVvZiBlLnBhcmFtcy5ob3N0JiZlLnBhcmFtcy5ob3N0Lmxlbmd0aCYmZS5wYXJhbXMuaG9zdCE9PXIuZW5kcG9pbnQmJihyLmVuZHBvaW50PWUucGFyYW1zLmhvc3QpfSksbC5fZWFjaCh0LGZ1bmN0aW9uKGUpe3ZhciByPWlbZV07cy5wdXNoKHttZXRob2Q6IkdFVCIsdXJsOiJodHRwczovLyIuY29uY2F0KHIuZW5kcG9pbnQsIi8iKS5jb25jYXQoZSwiLyIpLmNvbmNhdChyLnNob3J0Q29kZXMuam9pbigiXyIpLCIvYWFyZHZhcmsiKSxkYXRhOnIucGF5bG9hZCxiaWRkZXJSZXF1ZXN0OmF9KX0pLHN9LGludGVycHJldFJlc3BvbnNlOmZ1bmN0aW9uKGUpe3ZhciBuPVtdO3JldHVybiBBcnJheS5pc0FycmF5KGUuYm9keSl8fChlLmJvZHk9W2UuYm9keV0pLGwuX2VhY2goZS5ib2R5LGZ1bmN0aW9uKGUpe3ZhciByPSsoZS5jcG18fDApO2lmKHIpe3ZhciBhPXtyZXF1ZXN0SWQ6ZS5jaWQsY3BtOnIsd2lkdGg6ZS53aWR0aHx8MCxoZWlnaHQ6ZS5oZWlnaHR8fDAsY3VycmVuY3k6ZS5jdXJyZW5jeT9lLmN1cnJlbmN5OiJVU0QiLG5ldFJldmVudWU6IWUubmV0UmV2ZW51ZXx8ZS5uZXRSZXZlbnVlLHR0bDplLnR0bD9lLnR0bDozMDAsY3JlYXRpdmVJZDplLmNyZWF0aXZlSWR8fDB9O3N3aXRjaChlLmhhc093blByb3BlcnR5KCJkZWFsSWQiKSYmKGEuZGVhbElkPWUuZGVhbElkKSxlLmhhc093blByb3BlcnR5KCJleCIpJiYoYS5leD1lLmV4KSxlLm1lZGlhKXtjYXNlImJhbm5lciI6YS5hZD1lLmFkbStsLmNyZWF0ZVRyYWNrUGl4ZWxIdG1sKGRlY29kZVVSSUNvbXBvbmVudChlLm51cmwpKTticmVhaztkZWZhdWx0OnJldHVybiBsLmxvZ0Vycm9yKCJiYWQgQWFyZHZhcmsgcmVzcG9uc2UgKG1lZGlhKSIsZSl9bi5wdXNoKGEpfX0pLG59LGdldFVzZXJTeW5jczpmdW5jdGlvbihlLHIsYSxuKXt2YXIgdD1bXSxzPVtdLGk9ITE7aWYoYSYmImJvb2xlYW4iPT10eXBlb2YgYS5nZHByQXBwbGllcyYmKGk9YS5nZHByQXBwbGllcyksIWUuaWZyYW1lRW5hYmxlZClyZXR1cm4gbC5sb2dXYXJuKCJBYXJkdmFyazogUGxlYXNlIGVuYWJsZSBpZnJhbWUgYmFzZWQgdXNlciBzeW5jLiIpLHQ7aWYoZClyZXR1cm4gdDtkPSEwLGkmJihzLnB1c2goWyJnIiwiMSJdKSxzLnB1c2goWyJjIixhLmNvbnNlbnRTdHJpbmddKSksbiYmcy5wdXNoKFsidXNfcHJpdmFjeSIsbl0pO3ZhciBvPSIiO3JldHVybiBzLmxlbmd0aCYmKG89Ij8iK3MubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlWzBdKyI9IitlbmNvZGVVUklDb21wb25lbnQoZVsxXSl9KS5qb2luKCImIikpLHQucHVzaCh7dHlwZToiaWZyYW1lIix1cmw6Imh0dHBzOi8vIi5jb25jYXQoInN5bmMucnRrLmlvIiwiL2NzIikuY29uY2F0KG8pfSksdH0sc2VyaWFsaXplU3VwcGx5Q2hhaW46ZnVuY3Rpb24oZSl7cmV0dXJuIHQoZSk/IiIuY29uY2F0KGUudmVyLCIsIikuY29uY2F0KGUuY29tcGxldGUsIiEiKS5jb25jYXQoaC5zZXJpYWxpemVTdXBwbHlDaGFpbk5vZGVzKGUubm9kZXMpKToiIn0sc2VyaWFsaXplU3VwcGx5Q2hhaW5Ob2RlczpmdW5jdGlvbihlKXt2YXIgYT1bImFzaSIsInNpZCIsImhwIiwicmlkIiwibmFtZSIsImRvbWFpbiJdO3JldHVybiBlLm1hcChmdW5jdGlvbihyKXtyZXR1cm4gYS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChyW2VdfHwiIil9KS5qb2luKCIsIil9KS5qb2luKCIhIil9fTtmdW5jdGlvbiB0KGUpe2lmKCFlfHwhZS5ub2RlcylyZXR1cm4hMTt2YXIgYT1bImFzaSIsInNpZCIsImhwIl0scj1lLm5vZGVzLnJlZHVjZShmdW5jdGlvbihlLHIpe3JldHVybiBlP2EuZXZlcnkoZnVuY3Rpb24oZSl7cmV0dXJuIHJbZV19KTplfSwhMCk7cmV0dXJuIHJ8fGwubG9nRXJyb3IoIkFhcmR2YXJrOiByZXF1aXJlZCBzY2hhaW4gcGFyYW1zIG1pc3NpbmciKSxyfU9iamVjdChuLnJlZ2lzdGVyQmlkZGVyKShoKX19LFsxNzBdKTsKdXBianNDaHVuayhbMzU3XSx7MTg2OmZ1bmN0aW9uKGUscixuKXtlLmV4cG9ydHM9bigxODcpfSwxODc6ZnVuY3Rpb24oZSxyLG4peyJ1c2Ugc3RyaWN0IjtPYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksbi5kKHIsInNwZWMiLGZ1bmN0aW9uKCl7cmV0dXJuIGR9KTt2YXIgdD1uKDEpLEk9bigzKSxnPW4oMiksaD1uKDExKSxfPW4oMCksQz0iYWRmb3JtIixkPXtjb2RlOkMsZ3ZsaWQ6NTAsc3VwcG9ydGVkTWVkaWFUeXBlczpbZy5iLGcuZF0saXNCaWRSZXF1ZXN0VmFsaWQ6ZnVuY3Rpb24oZSl7cmV0dXJuISFlLnBhcmFtcy5taWR9LGJ1aWxkUmVxdWVzdHM6ZnVuY3Rpb24oZSxyKXtmb3IodmFyIG4sdCxkLHMsaSxvLHUsYSxwPUkuYi5nZXRDb25maWcoImN1cnJlbmN5LmFkU2VydmVyQ3VycmVuY3kiKSxjPWZ1bmN0aW9uKGUpe2lmKF8uaXNBcnJheShlKSYmMDxlLmxlbmd0aCl7dmFyIHI9ZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVkdWNlKGZ1bmN0aW9uKG4sZSl7dmFyIHQ9ZS5zb3VyY2U7cmV0dXJuIG5bdF09blt0XXx8e30sZS51aWRzLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHI9ZS5pZCsiIjtuW3RdW3JdPW5bdF1bcl18fFtdLG5bdF1bcl0ucHVzaChlLmF0eXBlKX0pLG59LHt9KX0oZSk7cmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChidG9hKEpTT04uc3RyaW5naWZ5KHIpKSl9fShfLmRlZXBBY2Nlc3MoZSwiMC51c2VySWRBc0VpZHMiKSksZz1bXSxoPVtbImFkeERvbWFpbiIsImFkeC5hZGZvcm0ubmV0Il0sWyJmZCIsMV0sWyJ1cmwiLG51bGxdLFsidGlkIixudWxsXV0sZj1KU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGUpKSxsPWZbMF0mJmZbMF0uYmlkZGVyfHxDLHY9MCxiPWYubGVuZ3RoO3Y8Yjt2Kyspe2ZvcigibmV0IiE9PShkPWZbdl0pLnBhcmFtcy5wcmljZVR5cGUmJiJuZXQiIT09ZC5wYXJhbXMucHR8fCh1PSJuZXQiKSxuPTAsdD1oLmxlbmd0aDtuPHQ7bisrKShpPWRbcz1oW25dWzBdXXx8ZC5wYXJhbXNbc10pJiYoZFtzXT1kLnBhcmFtc1tzXT1udWxsLGhbbl1bMV09aSk7KG89ZC5wYXJhbXMpLnRyYW5zYWN0aW9uSWQ9ZC50cmFuc2FjdGlvbklkLG8ucmN1cj1vLnJjdXJ8fHAsZy5wdXNoKGZ1bmN0aW9uKGUpe3ZhciByLG49W107Zm9yKHIgaW4gZSllLmhhc093blByb3BlcnR5KHIpJiZlW3JdJiZuLnB1c2gociwiPSIsZVtyXSwiJiIpO3JldHVybiBlbmNvZGVVUklDb21wb25lbnQoYnRvYShuLmpvaW4oIiIpLnNsaWNlKDAsLTEpKSl9KG8pKX1nLnVuc2hpZnQoImh0dHBzOi8vIitoWzBdWzFdKyIvYWR4Lz9ycD00IiksdT11fHwiZ3Jvc3MiLGcucHVzaCgicHQ9Iit1KSxnLnB1c2goInN0aWQ9IitlWzBdLmF1Y3Rpb25JZCk7dmFyIG09Xy5kZWVwQWNjZXNzKHIsImdkcHJDb25zZW50LmdkcHJBcHBsaWVzIikseT1fLmRlZXBBY2Nlc3MociwiZ2RwckNvbnNlbnQuY29uc2VudFN0cmluZyIpO2Zvcih2b2lkIDAhPT1tJiYoYT17Z2RwcjptLGdkcHJfY29uc2VudDp5fSxnLnB1c2goImdkcHI9IisoMSZtKSksZy5wdXNoKCJnZHByX2NvbnNlbnQ9Iit5KSksciYmci51c3BDb25zZW50JiZnLnB1c2goInVzX3ByaXZhY3k9IityLnVzcENvbnNlbnQpLGMmJmcucHVzaCgiZWlkcz0iK2MpLHY9MSxiPWgubGVuZ3RoO3Y8Yjt2Kyspcz1oW3ZdWzBdLChpPWhbdl1bMV0pJiZnLnB1c2gocysiPSIrZW5jb2RlVVJJQ29tcG9uZW50KGkpKTtyZXR1cm57bWV0aG9kOiJHRVQiLHVybDpnLmpvaW4oIiYiKSxiaWRzOmUsbmV0UmV2ZW51ZTp1LGJpZGRlcjpsLGdkcHI6YX19LGludGVycHJldFJlc3BvbnNlOmZ1bmN0aW9uKGUscil7Zm9yKHZhciBuLHQsZCxzLGk9e2Jhbm5lcjoxLHZhc3RfY29udGVudDoxLHZhc3RfdXJsOjF9LG89W10sdT1yLmJpZHMsYT1lLmJvZHkscD0wO3A8YS5sZW5ndGg7cCsrKXM9ImJhbm5lciI9PT0odD1hW3BdKS5yZXNwb25zZT9nLmI6Zy5kLGQ9dVtwXSxpW3QucmVzcG9uc2VdJiYoZnVuY3Rpb24oZSxyKXtmb3IodmFyIG49MCx0PXIubGVuZ3RoO248dDtuKyspaWYoZS53aWR0aD09cltuXVswXSYmZS5oZWlnaHQ9PXJbbl1bMV0pcmV0dXJuITA7cmV0dXJuITF9KHQsXy5nZXRBZFVuaXRTaXplcyhkKSl8fHM9PT1nLmQpJiYobj17cmVxdWVzdElkOmQuYmlkSWQsY3BtOnQud2luX2JpZCx3aWR0aDp0LndpZHRoLGhlaWdodDp0LmhlaWdodCxjcmVhdGl2ZUlkOmQuYmlkSWQsZGVhbElkOnQuZGVhbF9pZCxjdXJyZW5jeTp0Lndpbl9jdXIsbmV0UmV2ZW51ZToiZ3Jvc3MiIT09ci5uZXRSZXZlbnVlLHR0bDozNjAsYWQ6dC5iYW5uZXIsYmlkZGVyQ29kZTpyLmJpZGRlcix0cmFuc2FjdGlvbklkOmQudHJhbnNhY3Rpb25JZCx2YXN0VXJsOnQudmFzdF91cmwsdmFzdFhtbDp0LnZhc3RfY29udGVudCxtZWRpYVR5cGU6c30sZC5yZW5kZXJlcnx8cyE9PWcuZHx8Im91dHN0cmVhbSIhPT1fLmRlZXBBY2Nlc3MoZCwibWVkaWFUeXBlcy52aWRlby5jb250ZXh0Iil8fChuLnJlbmRlcmVyPWguYS5pbnN0YWxsKHtpZDpkLmJpZElkLHVybDoiaHR0cHM6Ly9zMi5hZGZvcm0ubmV0L2Jhbm5lcnMvc2NyaXB0cy92aWRlby9vdXRzdHJlYW0vcmVuZGVyLmpzIn0pLG4ucmVuZGVyZXIuc2V0UmVuZGVyKGMpKSxyLmdkcHImJihuLmdkcHI9ci5nZHByLmdkcHIsbi5nZHByX2NvbnNlbnQ9ci5nZHByLmdkcHJfY29uc2VudCksby5wdXNoKG4pKTtyZXR1cm4gbztmdW5jdGlvbiBjKGUpe2UucmVuZGVyZXIucHVzaChmdW5jdGlvbigpe3dpbmRvdy5BZGZvcm0ucmVuZGVyT3V0c3RyZWFtKGUpfSl9fX07T2JqZWN0KHQucmVnaXN0ZXJCaWRkZXIpKGQpfX0sWzE4Nl0pOwp1cGJqc0NodW5rKFszMjhdLHsyNTY6ZnVuY3Rpb24oZSxuLHIpe2UuZXhwb3J0cz1yKDI1Nyl9LDI1NzpmdW5jdGlvbihlLG4scil7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShuLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxyLmQobiwic3BlYyIsZnVuY3Rpb24oKXtyZXR1cm4gYX0pO3ZhciBvPXIoMCksdD1yKDEpLGQ9cigzKSxpPXIoMTApLHM9ci5uKGkpLGE9e2NvZGU6ImFkeW91bGlrZSIsYWxpYXNlczpbImF5bCJdLGlzQmlkUmVxdWVzdFZhbGlkOmZ1bmN0aW9uKGUpe3ZhciBuPXUoYyhlKSk7cmV0dXJuISEoZS5wYXJhbXMmJmUucGFyYW1zLnBsYWNlbWVudCYmbi53aWR0aCYmbi5oZWlnaHQpfSxidWlsZFJlcXVlc3RzOmZ1bmN0aW9uKGUsbil7dmFyIHI9e1ZlcnNpb246IjEuMCIsQmlkczplLnJlZHVjZShmdW5jdGlvbihlLG4pe3ZhciByPWMobiksdD11KHIpO3JldHVybiBlW24uYmlkSWRdPXt9LGVbbi5iaWRJZF0uUGxhY2VtZW50SUQ9bi5wYXJhbXMucGxhY2VtZW50LGVbbi5iaWRJZF0uVHJhbnNhY3Rpb25JRD1uLnRyYW5zYWN0aW9uSWQsZVtuLmJpZElkXS5XaWR0aD10LndpZHRoLGVbbi5iaWRJZF0uSGVpZ2h0PXQuaGVpZ2h0LGVbbi5iaWRJZF0uQXZhaWxhYmxlU2l6ZXM9ci5qb2luKCIsIiksZX0se30pLFBhZ2VSZWZyZXNoZWQ6ZnVuY3Rpb24oKXt0cnl7aWYocGVyZm9ybWFuY2UmJnBlcmZvcm1hbmNlLm5hdmlnYXRpb24pcmV0dXJuIHBlcmZvcm1hbmNlLm5hdmlnYXRpb24udHlwZT09PXBlcmZvcm1hbmNlLm5hdmlnYXRpb24uVFlQRV9SRUxPQUR9Y2F0Y2goZSl7fXJldHVybiExfSgpfTtuJiZuLmdkcHJDb25zZW50JiYoci5nZHByQ29uc2VudD17Y29uc2VudFN0cmluZzpuLmdkcHJDb25zZW50LmNvbnNlbnRTdHJpbmcsY29uc2VudFJlcXVpcmVkOiJib29sZWFuIj09dHlwZW9mIG4uZ2RwckNvbnNlbnQuZ2RwckFwcGxpZXM/bi5nZHByQ29uc2VudC5nZHByQXBwbGllczpudWxsfSksbiYmbi51c3BDb25zZW50JiYoci51c3BDb25zZW50PW4udXNwQ29uc2VudCk7dmFyIHQsaSxhPUpTT04uc3RyaW5naWZ5KHIpO3JldHVybnttZXRob2Q6IlBPU1QiLHVybDoodD1uLGk9ZnVuY3Rpb24oZSl7dmFyIG49cygpKGUsZnVuY3Rpb24oZSl7cmV0dXJuIGUucGFyYW1zLkRDfSk7aWYobilyZXR1cm4iLSIrbi5wYXJhbXMuREM7cmV0dXJuIiJ9KGUpLG8uYnVpbGRVcmwoe3Byb3RvY29sOiJodHRwcyIsaG9zdDoiIi5jb25jYXQoImhiLWFwaSIpLmNvbmNhdChpLCIub21uaXRhZ2pzLmNvbSIpLHBhdGhuYW1lOiIvaGItYXBpL3ByZWJpZC92MSIsc2VhcmNoOmZ1bmN0aW9uKGUpe3ZhciBuLHI9e307IWV8fChuPWUucmVmZXJlckluZm8pJiYoci5SZWZlcmVyVXJsPWVuY29kZVVSSUNvbXBvbmVudChuLnJlZmVyZXIpLDA8bi5udW1JZnJhbWVzJiYoci5TYWZlRnJhbWU9ITApKTt2YXIgdD1mdW5jdGlvbigpe3ZhciBlO2lmKHdpbmRvdy5zZWxmIT09d2luZG93LnRvcCl0cnl7ZT13aW5kb3cudG9wLmRvY3VtZW50LmhlYWQucXVlcnlTZWxlY3RvcignbGlua1tyZWw9ImNhbm9uaWNhbCJdW2hyZWZdJyl9Y2F0Y2goZSl7fWVsc2UgZT1kb2N1bWVudC5oZWFkLnF1ZXJ5U2VsZWN0b3IoJ2xpbmtbcmVsPSJjYW5vbmljYWwiXVtocmVmXScpO3JldHVybiBlP2UuaHJlZjoiIn0oKTt0JiYoci5DYW5vbmljYWxVcmw9ZW5jb2RlVVJJQ29tcG9uZW50KHQpKTt2YXIgaT1kLmIuZ2V0Q29uZmlnKCJwdWJsaXNoZXJEb21haW4iKTtyZXR1cm4gaSYmKHIuUHVibGlzaGVyRG9tYWluPWVuY29kZVVSSUNvbXBvbmVudChpKSkscn0odCl9KSksZGF0YTphLG9wdGlvbnM6e3dpdGhDcmVkZW50aWFsczohMH19fSxpbnRlcnByZXRSZXNwb25zZTpmdW5jdGlvbihlLG4pe3ZhciByPVtdLHQ9e307dHJ5e3Q9SlNPTi5wYXJzZShuLmRhdGEpLkJpZHN9Y2F0Y2goZSl7fXJldHVybiBlLmJvZHkuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgbj1mdW5jdGlvbihlLG4pe2lmKCFlfHwhZS5BZClyZXR1cm47biYmbltlLkJpZElEXSYmKGUuV2lkdGgmJiIwIiE9PWUuV2lkdGh8fChlLldpZHRoPW5bZS5CaWRJRF0uV2lkdGgpLGUuSGVpZ2h0JiYiMCIhPT1lLkhlaWdodHx8KGUuSGVpZ2h0PW5bZS5CaWRJRF0uSGVpZ2h0KSk7cmV0dXJue3JlcXVlc3RJZDplLkJpZElELHdpZHRoOmUuV2lkdGgsaGVpZ2h0OmUuSGVpZ2h0LGFkOmUuQWQsdHRsOjM2MDAsY3JlYXRpdmVJZDplLkNyZWF0aXZlSUQsY3BtOmUuUHJpY2UsbmV0UmV2ZW51ZTohMCxjdXJyZW5jeToiVVNEIn19KGUsdCk7biYmci5wdXNoKG4pfSkscn19O2Z1bmN0aW9uIGMoZSl7dmFyIG49ZS5zaXplcztyZXR1cm4gZS5tZWRpYVR5cGVzJiZlLm1lZGlhVHlwZXMuYmFubmVyJiYobj1lLm1lZGlhVHlwZXMuYmFubmVyLnNpemVzKSxvLnBhcnNlU2l6ZXNJbnB1dChuKX1mdW5jdGlvbiB1KGUpe3ZhciBuPXt9LHI9ZVswXTtpZigic3RyaW5nIiE9dHlwZW9mIHIpcmV0dXJuIG47dmFyIHQ9ci50b1VwcGVyQ2FzZSgpLnNwbGl0KCJYIiksaT1wYXJzZUludCh0WzBdLDEwKTtpJiYobi53aWR0aD1pKTt2YXIgYT1wYXJzZUludCh0WzFdLDEwKTtyZXR1cm4gYSYmKG4uaGVpZ2h0PWEpLG59T2JqZWN0KHQucmVnaXN0ZXJCaWRkZXIpKGEpfX0sWzI1Nl0pOwp1cGJqc0NodW5rKFszMjZdLHsyNjA6ZnVuY3Rpb24obix0LGUpe24uZXhwb3J0cz1lKDI2MSl9LDI2MTpmdW5jdGlvbihuLHQsZSl7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxlLmQodCwiQklEREVSX0NPREUiLGZ1bmN0aW9uKCl7cmV0dXJuIGl9KSxlLmQodCwiRU5HSU5FX0JBU0VfVVJMIixmdW5jdGlvbigpe3JldHVybiBvfSksZS5kKHQsInNwZWMiLGZ1bmN0aW9uKCl7cmV0dXJuIGN9KSx0LnJlc2V0VXNlclN5bmM9ZnVuY3Rpb24oKXtzPSExfTtlKDApO3ZhciByPWUoMSksYT1lKDIpO2Z1bmN0aW9uIHUobix0LGUpe3JldHVybiB0IGluIG4/T2JqZWN0LmRlZmluZVByb3BlcnR5KG4sdCx7dmFsdWU6ZSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOm5bdF09ZSxufXZhciBpPSJhbWF6b25BQVgiLG89Imh0dHBzOi8vYy5hbWF6b24tYWRzeXN0ZW0uY29tL2UvZHRiL2JpZCIsZj1bXSxzPSExLGQ9WyJodHRwczovL2FheC1ldS5hbWF6b24tYWRzeXN0ZW0uY29tL3MvaXUzP2NtM3BwZD0xJmQ9ZHRiLXB1YiZjc2lmPXQiXTt2YXIgYz17Y29kZTppLHN1cHBvcnRlZE1lZGlhVHlwZXM6W2EuYl0saXNCaWRSZXF1ZXN0VmFsaWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMH0sYnVpbGRSZXF1ZXN0czpmdW5jdGlvbihuLHQpe2Zvcih2YXIgZT0wO2U8bi5sZW5ndGg7ZSsrKXt2YXIgcj1uW2VdO2YucHVzaChyKX12YXIgYT1bXSxpPWZ1bmN0aW9uKG4sdCl7Zm9yKHZhciBlLHI9W10sYT10JiZ0LmdkcHJDb25zZW50LGk9MDtpPG4ubGVuZ3RoO2krKyl7Zm9yKHZhciBvPXt9LHM9bltpXS5zaXplcyxkPVtdLGM9MDtjPHMubGVuZ3RoO2MrKylkLnB1c2goc1tjXVswXSsieCIrc1tjXVsxXSk7by5zZD1sLnRvU3RyaW5nKCksby5zPWQsby5zbj1uW2ldLnBhcmFtcy5hZFVuaXRHUFRQYXRoLHIucHVzaChvKSxsKyt9dmFyIG09LTE8blswXS5wYXJhbXMucHViSUQuaW5kZXhPZigiLSIpLHA9KHUoZT17fSwic3JjIixtPyI2MDAiOm5bMF0ucGFyYW1zLnB1YklEKSx1KGUsInB1YmlkIixuWzBdLnBhcmFtcy5wdWJJRCksdShlLCJ1Iix3aW5kb3cubG9jYXRpb24uaHJlZiksdShlLCJwaWQiLGZ1bmN0aW9uKG4pe2Zvcih2YXIgdD0iQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkiLGU9bmV3IEFycmF5KG4pLHI9MDtyPG47cisrKWVbcl09dFtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqdC5sZW5ndGgpXTtyZXR1cm4gZS5qb2luKCIiKX0oMTMpKSx1KGUsInByIixkb2N1bWVudC5yZWZlcnJlciksdShlLCJjYiIsMCksdShlLCJ3cyIsKHdpbmRvdy5pbm5lcldpZHRofHxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGh8fGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGgpKyJ4Iisod2luZG93LmlubmVySGVpZ2h0fHxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0fHxkb2N1bWVudC5ib2R5LmNsaWVudEhlaWdodCkpLHUoZSwidiIsIjcuNDcuMDAiKSx1KGUsInNsb3RzIixKU09OLnN0cmluZ2lmeShyKSksdShlLCJ0IiwzZTMpLGUpO2EmJiJzdHJpbmciPT10eXBlb2YgYS5jb25zZW50U3RyaW5nPyJib29sZWFuIj09dHlwZW9mIGEuZ2RwckFwcGxpZXM/KHAuZ2RwcmU9IjEiLHAuZ2RwcmM9IiIuY29uY2F0KGEuY29uc2VudFN0cmluZykscC5nZHBybD1KU09OLnN0cmluZ2lmeSh7bHNTdGF0dXM6InByZXNlbnQiLHN0YXR1czoiY21wLXN1Y2Nlc3MiLHJ0aW1lczpbMV0sY2M6IjAifSkpOnAuZ2Rwcmw9SlNPTi5zdHJpbmdpZnkodSh7c3RhdHVzOiJwcmVzZW50In0sInN0YXR1cyIsImNtcC1zdWNjZXNzIikpOnAuZ2Rwcmw9SlNPTi5zdHJpbmdpZnkoe3N0YXR1czoiY21wLWVycm9yIn0pO3JldHVybiBwfShuLHQpO3JldHVybiBhLnB1c2goe21ldGhvZDoiR0VUIix1cmw6byxkYXRhOml9KSxhfSxpbnRlcnByZXRSZXNwb25zZTpmdW5jdGlvbihuKXt2YXIgdD1bXSxlPW5ldyBSZWdFeHAoImFwc3RhZ1xcLlxcdytcXCgoLio/KVxcKSIsImdtIikscj1uLmJvZHksYT1lLmV4ZWMocik7aWYoYSYmMDxhLmxlbmd0aCl0cnl7dmFyIGksbz1KU09OLnBhcnNlKGFbMV0pO28uY21wO2lmKCFvLnNsb3RzKXJldHVybiB0O2k9by5ob3N0O2Zvcih2YXIgcz1vLnNsb3RzLGQ9MDtkPHMubGVuZ3RoO2QrKyl7Zm9yKHZhciBjLG0scCx1PXZvaWQgMCxsPXNbZF0sZz0wO2c8Zi5sZW5ndGg7ZysrKWlmKGcudG9TdHJpbmcoKT09PWwuc2xvdElEKXt1PWZbZ107YnJlYWt9dm9pZCAwIT09dSYmKGM9MCxtPSIiK01hdGgucm91bmQoMWUxMipNYXRoLnJhbmRvbSgpKStEYXRlLm5vdygpLHA9aSsiL2UvZHRiL2FkbWk/Yj0iK2wuYW16bmlpZCsiJnJuZD0iK20rIiZwcD0iK2wuYW16bmJpZCsiJnA9IitsLmFtem5wKyImY3JpZD0iK2wuY3JpZCx3aW5kb3cudXBvX2Ftem4mJndpbmRvdy51cG9fYW16bi5hbWF6b25DUE1DaGFydCYmd2luZG93LnVwb19hbXpuLmFtYXpvbkNQTUNoYXJ0W2wuYW16bmJpZF0mJihjPXdpbmRvdy51cG9fYW16bi5hbWF6b25DUE1DaGFydFtsLmFtem5iaWRdKSx0LnB1c2goe3JlcXVlc3RJZDp1LmJpZElkLGNwbTpjLHdpZHRoOmwuYW16bnN6LnNwbGl0KCJ4IilbMF0saGVpZ2h0OmwuYW16bnN6LnNwbGl0KCJ4IilbMV0sYWRUYXJnZXRpbmc6J3siYW16bmlpZCI6IicrbC5hbXpuaWlkKyciLCJhbXpucCI6IicrbC5hbXpucCsnIiwiYW16bmJpZCI6IicrbC5hbXpuYmlkKyciLCJhbXpuc3oiOiInK2wuYW16bnN6KycifScsYWQ6IiIsYWRIdG1sOic8Ym9keSBsZWZ0bWFyZ2luPSIwIiB0b3BtYXJnaW49IjAiIG1hcmdpbndpZHRoPSIwIiBtYXJnaW5oZWlnaHQ9IjAiPjxpZnJhbWUgZnJhbWVib3JkZXI9IjAiIG1hcmdpbmhlaWdodD0iMCIgbWFyZ2lud2lkdGg9IjAiIHNjcm9sbGluZz0ibm8iIHdpZHRoPSInK2wuYW16bnN6LnNwbGl0KCJ4IilbMF0rJ3B4IiBoZWlnaHQ9IicrbC5hbXpuc3ouc3BsaXQoIngiKVsxXSsncHgiIGlkPSJhbXpuYWQ3MDM1MiIgc2FuZGJveD0iYWxsb3ctZm9ybXMgYWxsb3ctcG9pbnRlci1sb2NrIGFsbG93LXBvcHVwcyBhbGxvdy1wb3B1cHMtdG8tZXNjYXBlLXNhbmRib3ggYWxsb3ctc2FtZS1vcmlnaW4gYWxsb3ctc2NyaXB0cyBhbGxvdy10b3AtbmF2aWdhdGlvbi1ieS11c2VyLWFjdGl2YXRpb24iIHNyYz0iJytwKyciPjwvaWZyYW1lPjxzY3JpcHQ+dmFyIGFteiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpO2Ftei5zcmMgPSAiLy9jLmFtYXpvbi1hZHN5c3RlbS5jb20vYmFvLWNzbS9kaXJlY3QvY3NtLmpzIjthbXouYWRkRXZlbnRMaXN0ZW5lcigibG9hZCIsZnVuY3Rpb24oKXt2YXIgY3NtRnVuYyA9IG51bGw7IGlmKHdpbmRvdy5hbXpuY3NtICYmIHdpbmRvdy5hbXpuY3NtLnJtRCl7Y3NtRnVuYyA9IHdpbmRvdy5hbXpuY3NtLnJtRDt9IGVsc2UgaWYgKHdpbmRvdy5hbXpuY3NtKSB7Y3NtRnVuYyA9IHdpbmRvdy5hbXpuY3NtW09iamVjdC5rZXlzKHdpbmRvdy5hbXpuY3NtKVswXV19OyB2YXIgYWRJZnJhbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwnaWZyYW1lW3NyYyo9ImFtYXpvbi1hZHN5c3RlbS5jb20vZS9kdGIvYWRtaVwnKTtjc21GdW5jKGFkSWZyYW1lLCAiJytsLmFtem5paWQrJyIsIHdpbmRvdywgZG9jdW1lbnQsICInK3UucGFyYW1zLnB1YklEKyciKTt9KTsoZG9jdW1lbnQuYm9keXx8ZG9jdW1lbnQuaGVhZHx8ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KS5hcHBlbmRDaGlsZChhbXopOzxcL3NjcmlwdD48L2JvZHk+JyxhZFVybDpwLHR0bDo5MDAsY3JlYXRpdmVJZDpsLmNyaWQsbmV0UmV2ZW51ZTohMCxjdXJyZW5jeToiVVNEIn0pKX19Y2F0Y2gobil7fXJldHVybiB0fSxnZXRVc2VyU3luY3M6ZnVuY3Rpb24obix0LGUpe2lmKCFzKXtlJiYic3RyaW5nIj09dHlwZW9mIGUuY29uc2VudFN0cmluZyYmKCJib29sZWFuIj09dHlwZW9mIGUuZ2RwckFwcGxpZXM/Ij9nZHByPSIuY29uY2F0KE51bWJlcihlLmdkcHJBcHBsaWVzKSwiJmdkcHJfY29uc2VudD0iKS5jb25jYXQoZS5jb25zZW50U3RyaW5nKToiP2dkcHJfY29uc2VudD0iLmNvbmNhdChlLmNvbnNlbnRTdHJpbmcpKSxzPSEwO2Zvcih2YXIgcj1bXSxhPTA7YTxkLmxlbmd0aDthKyspci5wdXNoKHt0eXBlOiJpZnJhbWUiLHVybDpkW2FdfSk7cmV0dXJuIHJ9fX07dmFyIGw9MDtPYmplY3Qoci5yZWdpc3RlckJpZGRlcikoYyl9fSxbMjYwXSk7CnVwYmpzQ2h1bmsoWzMyM10sezI2NjpmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXIoMjY3KX0sMjY3OmZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHIuZCh0LCJzcGVjIixmdW5jdGlvbigpe3JldHVybiBNfSk7dmFyIHM9cigwKSxuPXIoMSksaT1yKDIpO2Z1bmN0aW9uIGEoKXtyZXR1cm4oYT1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgcj1hcmd1bWVudHNbdF07Zm9yKHZhciBuIGluIHIpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHIsbikmJihlW25dPXJbbl0pfXJldHVybiBlfSkuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZ1bmN0aW9uIGMoZSl7cmV0dXJuKGM9ImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmInN5bWJvbCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/InN5bWJvbCI6dHlwZW9mIGV9KShlKX1mdW5jdGlvbiBvKCl7dmFyIGU9cChbImRjbj0iLCImcG9zPSIsIiZjbWQ9YmlkIiwiIl0pO3JldHVybiBvPWZ1bmN0aW9uKCl7cmV0dXJuIGV9LGV9ZnVuY3Rpb24gdSgpe3ZhciBlPXAoWyIiLCIvYmlkUmVxdWVzdD8iXSk7cmV0dXJuIHU9ZnVuY3Rpb24oKXtyZXR1cm4gZX0sZX1mdW5jdGlvbiBkKCl7dmFyIGU9cChbIiIsIi9wdWJhcGkvMy4wLyIsIi8iLCIvIiwiLyIsIi9BRFRFQ0g7dj0yO2NtZD1iaWQ7Y29ycz15ZXM7YWxpYXM9IiwiO21pc2M9IiwiOyIsIjt1cG9uaXQ9dHJ1ZSZ1cGFwaT10cnVlIl0pO3JldHVybiBkPWZ1bmN0aW9uKCl7cmV0dXJuIGV9LGV9ZnVuY3Rpb24gcChlLHQpe3JldHVybiB0PXR8fGUuc2xpY2UoMCksT2JqZWN0LmZyZWV6ZShPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLHtyYXc6e3ZhbHVlOk9iamVjdC5mcmVlemUodCl9fSkpfXZhciBsPXtBT0w6ImFvbCIsVkVSSVpPTjoidmVyaXpvbiIsT05FTU9CSUxFOiJvbmVtb2JpbGUiLE9ORURJU1BMQVk6Im9uZWRpc3BsYXkifSxtPXtHRVQ6ImRpc3BsYXktZ2V0In0sZj17R0VUOiJtb2JpbGUtZ2V0IixQT1NUOiJtb2JpbGUtcG9zdCJ9LGI9e1RBRzoiaWZyYW1lIixUWVBFOiJpZnJhbWUifSx2PXtUQUc6ImltZyIsVFlQRToiaW1hZ2UifSxoPVsiYWRzZXJ2ZXIub3JnIiwiY3JpdGVvLmNvbSIsImlkNS1zeW5jLmNvbSIsImludGVudGlxLmNvbSIsImxpdmVpbnRlbnQuY29tIiwicXVhbnRjYXN0LmNvbSIsInZlcml6b25tZWRpYS5jb20iLCJsaXZlcmFtcC5jb20iXSxnPVMoZCgpLCJob3N0IiwibmV0d29yayIsInBsYWNlbWVudCIsInBhZ2VpZCIsInNpemVpZCIsImFsaWFzIiwibWlzYyIsImR5bmFtaWNQYXJhbXMiKSx5PVModSgpLCJob3N0IiksTz1TKG8oKSwiZGNuIiwicG9zIiwiZHluYW1pY1BhcmFtcyIpLEU9e3VzOiJhZHNlcnZlci11cy5hZHRlY2guYWR2ZXJ0aXNpbmcuY29tIixldToiYWRzZXJ2ZXItZXUuYWR0ZWNoLmFkdmVydGlzaW5nLmNvbSIsYXM6ImFkc2VydmVyLWFzLmFkdGVjaC5hZHZlcnRpc2luZy5jb20ifSxJPSJodHRwcyIsUD0xO2Z1bmN0aW9uIFMoYSl7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGgscj1uZXcgQXJyYXkoMTxlP2UtMTowKSx0PTE7dDxlO3QrKylyW3QtMV09YXJndW1lbnRzW3RdO3JldHVybiBmdW5jdGlvbigpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLG49bmV3IEFycmF5KGUpLHQ9MDt0PGU7dCsrKW5bdF09YXJndW1lbnRzW3RdO3ZhciBpPW5bbi5sZW5ndGgtMV18fHt9LG89W2FbMF1dO3JldHVybiByLmZvckVhY2goZnVuY3Rpb24oZSx0KXt2YXIgcj1zLmlzSW50ZWdlcihlKT9uW2VdOmlbZV07by5wdXNoKHIsYVt0KzFdKX0pLG8uam9pbigiIil9fWZ1bmN0aW9uIFQoZSl7cmV0dXJuIGU9PT1sLkFPTHx8ZT09PWwuVkVSSVpPTnx8ZT09PWwuT05FTU9CSUxFfWZ1bmN0aW9uIHgoZSl7aWYoVChlLmJpZGRlcikmJmUucGFyYW1zLmlkJiZlLnBhcmFtcy5pbXAmJmUucGFyYW1zLmltcFswXSl7dmFyIHQ9ZS5wYXJhbXMuaW1wWzBdO3JldHVybiB0LmlkJiZ0LnRhZ2lkJiYodC5iYW5uZXImJnQuYmFubmVyLncmJnQuYmFubmVyLmh8fHQudmlkZW8mJnQudmlkZW8ubWltZXMmJnQudmlkZW8ubWluZHVyYXRpb24mJnQudmlkZW8ubWF4ZHVyYXRpb24pfX1mdW5jdGlvbiBSKGUpe3JldHVybiBUKGUuYmlkZGVyKSYmZS5wYXJhbXMuZGNuJiZlLnBhcmFtcy5wb3N9ZnVuY3Rpb24gQyhlKXtyZXR1cm4oKHQ9ZS5iaWRkZXIpPT09bC5BT0x8fHQ9PT1sLlZFUklaT058fHQ9PT1sLk9ORURJU1BMQVkpJiZlLnBhcmFtcy5wbGFjZW1lbnQmJmUucGFyYW1zLm5ldHdvcms7dmFyIHR9ZnVuY3Rpb24gQShlKXtyZXR1cm4gZS51c2VySWRBc0VpZHMuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybi0xIT09aC5pbmRleE9mKGUuc291cmNlKX0pfXZhciBNPXtjb2RlOmwuQU9MLGd2bGlkOjI1LGFsaWFzZXM6W2wuT05FTU9CSUxFLGwuT05FRElTUExBWSxsLlZFUklaT05dLHN1cHBvcnRlZE1lZGlhVHlwZXM6W2kuYl0saXNCaWRSZXF1ZXN0VmFsaWQ6ZnVuY3Rpb24oZSl7cmV0dXJuIEMoZSl8fChSKHQ9ZSl8fHgodCkpO3ZhciB0fSxidWlsZFJlcXVlc3RzOmZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcyxpPXt9O3JldHVybiB0JiYoaS5nZHByPXQuZ2RwckNvbnNlbnQsaS51c3BDb25zZW50PXQudXNwQ29uc2VudCksZS5tYXAoZnVuY3Rpb24oZSl7dmFyIHQscj1SKHQ9ZSk/Zi5HRVQ6eCh0KT9mLlBPU1Q6Qyh0KT9tLkdFVDp2b2lkIDA7aWYocilyZXR1cm4gbi5mb3JtYXRCaWRSZXF1ZXN0KHIsZSxpKX0pfSxpbnRlcnByZXRSZXNwb25zZTpmdW5jdGlvbihlLHQpe3ZhciByPWUuYm9keTtpZihyKXt2YXIgbj10aGlzLl9wYXJzZUJpZFJlc3BvbnNlKHIsdCk7aWYobilyZXR1cm4gbn1lbHNlIHMubG9nRXJyb3IoIkVtcHR5IGJpZCByZXNwb25zZSIsdC5iaWRkZXJDb2RlLHIpfSxnZXRVc2VyU3luY3M6ZnVuY3Rpb24oZSx0KXt2YXIgcj0hcy5pc0VtcHR5KHQpJiZ0WzBdLmJvZHk7cmV0dXJuIHImJnIuZXh0JiZyLmV4dC5waXhlbHM/dGhpcy5wYXJzZVBpeGVsSXRlbXMoci5leHQucGl4ZWxzKTpbXX0sZm9ybWF0QmlkUmVxdWVzdDpmdW5jdGlvbihlLHQscil7dmFyIG47c3dpdGNoKGUpe2Nhc2UgbS5HRVQ6bj17dXJsOnRoaXMuYnVpbGRNYXJrZXRwbGFjZVVybCh0LHIpLG1ldGhvZDoiR0VUIix0dGw6NjB9O2JyZWFrO2Nhc2UgZi5HRVQ6bj17dXJsOnRoaXMuYnVpbGRPbmVNb2JpbGVHZXRVcmwodCxyKSxtZXRob2Q6IkdFVCIsdHRsOjM2MDB9O2JyZWFrO2Nhc2UgZi5QT1NUOm49e3VybDp0aGlzLmJ1aWxkT25lTW9iaWxlQmFzZVVybCh0KSxtZXRob2Q6IlBPU1QiLHR0bDozNjAwLGRhdGE6dGhpcy5idWlsZE9wZW5SdGJSZXF1ZXN0RGF0YSh0LHIpLG9wdGlvbnM6e2NvbnRlbnRUeXBlOiJhcHBsaWNhdGlvbi9qc29uIixjdXN0b21IZWFkZXJzOnsieC1vcGVucnRiLXZlcnNpb24iOiIyLjIifX19fXJldHVybiBuLmJpZGRlckNvZGU9dC5iaWRkZXIsbi5iaWRJZD10LmJpZElkLG4udXNlclN5bmNPbj10LnBhcmFtcy51c2VyU3luY09uLG59LGJ1aWxkTWFya2V0cGxhY2VVcmw6ZnVuY3Rpb24oZSx0KXt2YXIgcixuPWUucGFyYW1zLGk9bi5zZXJ2ZXIsbz1uLnJlZ2lvbnx8InVzIjtyZXR1cm4gRS5oYXNPd25Qcm9wZXJ0eShvKXx8KHMubG9nV2FybigiVW5rbm93biByZWdpb24gJyIuY29uY2F0KG8sIicgZm9yIEFPTCBiaWRkZXIuIikpLG89InVzIikscj1pfHxFW29dLG4ucmVnaW9uPW8sdGhpcy5hcHBseVByb3RvY29sKGcoe2hvc3Q6cixuZXR3b3JrOm4ubmV0d29yayxwbGFjZW1lbnQ6cGFyc2VJbnQobi5wbGFjZW1lbnQpLHBhZ2VpZDpuLnBhZ2VJZHx8MCxzaXplaWQ6bi5zaXplSWR8fDAsYWxpYXM6bi5hbGlhc3x8cy5nZXRVbmlxdWVJZGVudGlmaWVyU3RyKCksbWlzYzoobmV3IERhdGUpLmdldFRpbWUoKSxkeW5hbWljUGFyYW1zOnRoaXMuZm9ybWF0TWFya2V0cGxhY2VEeW5hbWljUGFyYW1zKG4sdCl9KSl9LGJ1aWxkT25lTW9iaWxlR2V0VXJsOmZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS5wYXJhbXMsbj1yLmRjbixpPXIucG9zLG89ci5leHQ7Im9iamVjdCI9PT1jKGUudXNlcklkKSYmKG89b3x8e30sQShlKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe29bImVpZCIrZS5zb3VyY2VdPWUudWlkc1swXS5pZH0pKTt2YXIgYSxzPXRoaXMuYnVpbGRPbmVNb2JpbGVCYXNlVXJsKGUpO3JldHVybiBuJiZpJiYoYT10aGlzLmZvcm1hdE9uZU1vYmlsZUR5bmFtaWNQYXJhbXMobyx0KSxzKz1PKHtkY246bixwb3M6aSxkeW5hbWljUGFyYW1zOmF9KSksc30sYnVpbGRPbmVNb2JpbGVCYXNlVXJsOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmFwcGx5UHJvdG9jb2woeSh7aG9zdDplLnBhcmFtcy5ob3N0fHwiYzJzaGIuc3NwLnlhaG9vLmNvbSJ9KSl9LGFwcGx5UHJvdG9jb2w6ZnVuY3Rpb24oZSl7cmV0dXJuL15odHRwcz86XC9cLy9pLnRlc3QoZSk/ZTowPT09ZS5pbmRleE9mKCIvLyIpPyIiLmNvbmNhdChJLCI6IikuY29uY2F0KGUpOiIiLmNvbmNhdChJLCI6Ly8iKS5jb25jYXQoZSl9LGZvcm1hdE1hcmtldHBsYWNlRHluYW1pY1BhcmFtczpmdW5jdGlvbihlLHQpe3ZhciByPTA8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09ZT9lOnt9LG49MTxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT10P3Q6e30saT17fTtyLmJpZEZsb29yJiYoaS5iaWRmbG9vcj1yLmJpZEZsb29yKSxhKGksdGhpcy5mb3JtYXRLZXlWYWx1ZXMoci5rZXlWYWx1ZXMpKSxhKGksdGhpcy5mb3JtYXRDb25zZW50RGF0YShuKSk7dmFyIG89IiI7cmV0dXJuIHMuX2VhY2goaSxmdW5jdGlvbihlLHQpe28rPSIiLmNvbmNhdCh0LCI9IikuY29uY2F0KGVuY29kZVVSSUNvbXBvbmVudChlKSwiOyIpfSksb30sZm9ybWF0T25lTW9iaWxlRHluYW1pY1BhcmFtczpmdW5jdGlvbihlLHQpe3ZhciByPTA8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09ZT9lOnt9LG49MTxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT10P3Q6e307dGhpcy5pc1NlY3VyZVByb3RvY29sKCkmJihyLnNlY3VyZT1QKSxhKHIsdGhpcy5mb3JtYXRDb25zZW50RGF0YShuKSk7dmFyIGk9IiI7cmV0dXJuIHMuX2VhY2gocixmdW5jdGlvbihlLHQpe2krPSImIi5jb25jYXQodCwiPSIpLmNvbmNhdChlbmNvZGVVUklDb21wb25lbnQoZSkpfSksaX0sYnVpbGRPcGVuUnRiUmVxdWVzdERhdGE6ZnVuY3Rpb24oZSx0KXt2YXIgcixuPTE8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09dD90Ont9LGk9e2lkOmUucGFyYW1zLmlkLGltcDplLnBhcmFtcy5pbXB9O3JldHVybiB0aGlzLmlzRVVDb25zZW50UmVxdWlyZWQobikmJihzLmRlZXBTZXRWYWx1ZShpLCJyZWdzLmV4dC5nZHByIixQKSxuLmdkcHIuY29uc2VudFN0cmluZyYmcy5kZWVwU2V0VmFsdWUoaSwidXNlci5leHQuY29uc2VudCIsbi5nZHByLmNvbnNlbnRTdHJpbmcpKSxuLnVzcENvbnNlbnQmJnMuZGVlcFNldFZhbHVlKGksInJlZ3MuZXh0LnVzX3ByaXZhY3kiLG4udXNwQ29uc2VudCksIm9iamVjdCI9PT1jKGUudXNlcklkKSYmKGkudXNlcj1pLnVzZXJ8fHt9LGkudXNlci5leHQ9aS51c2VyLmV4dHx8e30sMDwocj1BKGUpKS5sZW5ndGgmJihpLnVzZXIuZXh0LmVpZHM9cikpLGl9LGlzRVVDb25zZW50UmVxdWlyZWQ6ZnVuY3Rpb24oZSl7cmV0dXJuISEoZSYmZS5nZHByJiZlLmdkcHIuZ2RwckFwcGxpZXMpfSxmb3JtYXRLZXlWYWx1ZXM6ZnVuY3Rpb24oZSl7dmFyIHI9e307cmV0dXJuIHMuX2VhY2goZSxmdW5jdGlvbihlLHQpe3JbImt2Ii5jb25jYXQodCldPWV9KSxyfSxmb3JtYXRDb25zZW50RGF0YTpmdW5jdGlvbihlKXt2YXIgdD17fTtyZXR1cm4gdGhpcy5pc0VVQ29uc2VudFJlcXVpcmVkKGUpJiYodC5nZHByPVAsZS5nZHByLmNvbnNlbnRTdHJpbmcmJih0LmV1Y29uc2VudD1lLmdkcHIuY29uc2VudFN0cmluZykpLGUudXNwQ29uc2VudCYmKHQudXNfcHJpdmFjeT1lLnVzcENvbnNlbnQpLHR9LHBhcnNlUGl4ZWxJdGVtczpmdW5jdGlvbihlKXt2YXIgdCxuPS9cdyooPz1ccykvLGk9L3NyYz0oInwnKSguKj8pXDEvLG89W107cmV0dXJuIWV8fCh0PWUubWF0Y2goLyhpbWd8aWZyYW1lKVtcc1xTXSo/c3JjXHMqPVxzKigifCcpKC4qPylcMi9naSkpJiZ0LmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHQ9ZS5tYXRjaChuKVswXSxyPWUubWF0Y2goaSlbMl07dCYmdCYmby5wdXNoKHt0eXBlOnQ9PT12LlRBRz92LlRZUEU6Yi5UWVBFLHVybDpyfSl9KSxvfSxfcGFyc2VCaWRSZXNwb25zZTpmdW5jdGlvbihlLHQpe3ZhciByLG47dHJ5e3I9ZS5zZWF0YmlkWzBdLmJpZFswXX1jYXRjaChlKXtyZXR1cm59aWYoci5leHQmJnIuZXh0LmVuY3Apbj1yLmV4dC5lbmNwO2Vsc2UgaWYobnVsbD09PShuPXIucHJpY2UpfHxpc05hTihuKSlyZXR1cm4gdm9pZCBzLmxvZ0Vycm9yKCJJbnZhbGlkIHByaWNlIGluIGJpZCByZXNwb25zZSIsbC5BT0wscik7cmV0dXJue2JpZGRlckNvZGU6dC5iaWRkZXJDb2RlLHJlcXVlc3RJZDp0LmJpZElkLGFkOnIuYWRtLGNwbTpuLHdpZHRoOnIudyxoZWlnaHQ6ci5oLGNyZWF0aXZlSWQ6ci5jcmlkfHwwLHB1YmFwaUlkOmUuaWQsY3VycmVuY3k6ZS5jdXJ8fCJVU0QiLGRlYWxJZDpyLmRlYWxpZCxuZXRSZXZlbnVlOiEwLHR0bDp0LnR0bH19LGlzT25lTW9iaWxlQmlkZGVyOlQsaXNTZWN1cmVQcm90b2NvbDpmdW5jdGlvbigpe3JldHVybiJodHRwczoiPT09ZG9jdW1lbnQubG9jYXRpb24ucHJvdG9jb2x9fTtPYmplY3Qobi5yZWdpc3RlckJpZGRlcikoTSl9fSxbMjY2XSk7CnVwYmpzQ2h1bmsoWzMyMF0sezI3NjpmdW5jdGlvbihlLHIsYSl7ZS5leHBvcnRzPWEoMjc3KX0sMjc3OmZ1bmN0aW9uKGUscixhKXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLGEuZChyLCJzcGVjIixmdW5jdGlvbigpe3JldHVybiBrfSk7dmFyIGY9YSgxMSksdz1hKDApLEE9YSgzKSx2PWEoMSkseT1hKDIpLHA9YSgyNCksdD1hKDEwKSx4PWEubih0KSxuPWEoMTIpLEM9YS5uKG4pLGc9YSgyOSksaT1hKDcpO2Z1bmN0aW9uIHMoZSl7cmV0dXJuKHM9ImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmInN5bWJvbCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/InN5bWJvbCI6dHlwZW9mIGV9KShlKX1mdW5jdGlvbiBiKCl7cmV0dXJuKGI9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl7dmFyIGE9YXJndW1lbnRzW3JdO2Zvcih2YXIgdCBpbiBhKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhLHQpJiYoZVt0XT1hW3RdKX1yZXR1cm4gZX0pLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1mdW5jdGlvbiBTKGUpe3JldHVybiBmdW5jdGlvbihlKXtpZihBcnJheS5pc0FycmF5KGUpKXJldHVybiBvKGUpfShlKXx8ZnVuY3Rpb24oZSl7aWYoInVuZGVmaW5lZCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoZSkpcmV0dXJuIEFycmF5LmZyb20oZSl9KGUpfHxmdW5jdGlvbihlLHIpe2lmKCFlKXJldHVybjtpZigic3RyaW5nIj09dHlwZW9mIGUpcmV0dXJuIG8oZSxyKTt2YXIgYT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkuc2xpY2UoOCwtMSk7Ik9iamVjdCI9PT1hJiZlLmNvbnN0cnVjdG9yJiYoYT1lLmNvbnN0cnVjdG9yLm5hbWUpO2lmKCJNYXAiPT09YXx8IlNldCI9PT1hKXJldHVybiBBcnJheS5mcm9tKGUpO2lmKCJBcmd1bWVudHMiPT09YXx8L14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QoYSkpcmV0dXJuIG8oZSxyKX0oZSl8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuIil9KCl9ZnVuY3Rpb24gbyhlLHIpeyhudWxsPT1yfHxyPmUubGVuZ3RoKSYmKHI9ZS5sZW5ndGgpO2Zvcih2YXIgYT0wLHQ9bmV3IEFycmF5KHIpO2E8cjthKyspdFthXT1lW2FdO3JldHVybiB0fXZhciBkPSJhcHBuZXh1cyIsVD0iaHR0cHM6Ly9pYi5hZG54cy5jb20vdXQvdjMvcHJlYmlkIixjPVsiaWQiLCJtaW5kdXJhdGlvbiIsIm1heGR1cmF0aW9uIiwic2tpcHBhYmxlIiwicGxheWJhY2tfbWV0aG9kIiwiZnJhbWV3b3JrcyIsImNvbnRleHQiLCJza2lwb2Zmc2V0Il0sRT1bImFnZSIsImV4dGVybmFsVWlkIiwic2VnbWVudHMiLCJnZW5kZXIiLCJkbnQiLCJsYW5ndWFnZSJdLE89WyJnZW8iLCJkZXZpY2VfaWQiXSxSPVsiZW5hYmxlZCIsImRvbmdsZSIsIm1lbWJlcl9pZCIsImRlYnVnX3RpbWVvdXQiXSx1PXtwbGF5YmFja19tZXRob2Q6e3Vua25vd246MCxhdXRvX3BsYXlfc291bmRfb246MSxhdXRvX3BsYXlfc291bmRfb2ZmOjIsY2xpY2tfdG9fcGxheTozLG1vdXNlX292ZXI6NCxhdXRvX3BsYXlfc291bmRfdW5rbm93bjo1fSxjb250ZXh0Ont1bmtub3duOjAscHJlX3JvbGw6MSxtaWRfcm9sbDoyLHBvc3Rfcm9sbDozLG91dHN0cmVhbTo0LCJpbi1iYW5uZXIiOjV9fSxtPXtib2R5OiJkZXNjcmlwdGlvbiIsYm9keTI6ImRlc2MyIixjdGE6ImN0YXRleHQiLGltYWdlOntzZXJ2ZXJOYW1lOiJtYWluX2ltYWdlIixyZXF1aXJlZFBhcmFtczp7cmVxdWlyZWQ6ITB9fSxpY29uOntzZXJ2ZXJOYW1lOiJpY29uIixyZXF1aXJlZFBhcmFtczp7cmVxdWlyZWQ6ITB9fSxzcG9uc29yZWRCeToic3BvbnNvcmVkX2J5Iixwcml2YWN5TGluazoicHJpdmFjeV9saW5rIixzYWxlUHJpY2U6InNhbGVwcmljZSIsZGlzcGxheVVybDoiZGlzcGxheXVybCJ9LGw9IjxzY3JpcHQiLGg9L1wvXC9jZG5cLmFkbnhzXC5jb21cL3YvLF89InRyay5qcyIsaj1PYmplY3QoaS5iKSgzMixkKSxrPXtjb2RlOmQsZ3ZsaWQ6MzIsYWxpYXNlczpbe2NvZGU6ImFwcG5leHVzQXN0IixndmxpZDozMn0se2NvZGU6ImJyZWFsdGltZSJ9LHtjb2RlOiJlbXhkaWdpdGFsIixndmxpZDoxODN9LHtjb2RlOiJwYWdlc2NpZW5jZSJ9LHtjb2RlOiJkZWZ5bWVkaWEifSx7Y29kZToiZ291cm1ldGFkcyJ9LHtjb2RlOiJtYXRvbXkifSx7Y29kZToiZmVhdHVyZWZvcndhcmQifSx7Y29kZToib2Z0bWVkaWEifSx7Y29kZToiZGlzdHJpY3RtIixndmxpZDoxNDR9LHtjb2RlOiJhZGFzdGEifSx7Y29kZToiYmVpbnRvbyIsZ3ZsaWQ6NjE4fV0sc3VwcG9ydGVkTWVkaWFUeXBlczpbeS5iLHkuZCx5LmNdLGlzQmlkUmVxdWVzdFZhbGlkOmZ1bmN0aW9uKGUpe3JldHVybiEhKGUucGFyYW1zLnBsYWNlbWVudElkfHxlLnBhcmFtcy5tZW1iZXImJmUucGFyYW1zLmludkNvZGUpfSxidWlsZFJlcXVlc3RzOmZ1bmN0aW9uKGUscil7dmFyIHQ9ZS5tYXAoTiksYT14KCkoZSxNKSxuPXt9OyEwPT09QS5iLmdldENvbmZpZygiY29wcGEiKSYmKG49e2NvcHBhOiEwfSksYSYmT2JqZWN0LmtleXMoYS5wYXJhbXMudXNlcikuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBDKCkoRSxlKX0pLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHI9dy5jb252ZXJ0Q2FtZWxUb1VuZGVyc2NvcmUoZSk7bltyXT1hLnBhcmFtcy51c2VyW2VdfSk7dmFyIGkscz14KCkoZSxEKTtzJiZzLnBhcmFtcyYmcy5wYXJhbXMuYXBwJiYoaT17fSxPYmplY3Qua2V5cyhzLnBhcmFtcy5hcHApLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gQygpKE8sZSl9KS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiBpW2VdPXMucGFyYW1zLmFwcFtlXX0pKTt2YXIgbyxkPXgoKShlLEIpO2QmJmQucGFyYW1zJiZzLnBhcmFtcy5hcHAmJnMucGFyYW1zLmFwcC5pZCYmKG89e2FwcGlkOmQucGFyYW1zLmFwcC5pZH0pO3ZhciBwPXt9LGM9e30sdT1qLmdldENvb2tpZSgiYXBuX3ByZWJpZF9kZWJ1ZyIpfHxudWxsO2lmKHUpdHJ5e3A9SlNPTi5wYXJzZSh1KX1jYXRjaChlKXt3LmxvZ0Vycm9yKCJBcHBOZXh1cyBEZWJ1ZyBBdWN0aW9uIENvb2tpZSBFcnJvcjpcblxuIitlKX1lbHNle3ZhciBtPXgoKShlLFYpO20mJm0uZGVidWcmJihwPW0uZGVidWcpfXAmJnAuZW5hYmxlZCYmT2JqZWN0LmtleXMocCkuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBDKCkoUixlKX0pLmZvckVhY2goZnVuY3Rpb24oZSl7Y1tlXT1wW2VdfSk7dmFyIGwsZj14KCkoZSx6KSx2PWY/cGFyc2VJbnQoZi5wYXJhbXMubWVtYmVyLDEwKTowLHk9ZVswXS5zY2hhaW4sZz14KCkoZSxXKSxiPXt0YWdzOlModCksdXNlcjpuLHNkazp7c291cmNlOiJwYmpzIix2ZXJzaW9uOiI0LjE3LjAifSxzY2hhaW46eX07ZyYmKGIuaWFiX3N1cHBvcnQ9e29taWRwbjoiQXBwbmV4dXMiLG9taWRwdjoiNC4xNy4wIn0pLDA8diYmKGIubWVtYmVyX2lkPXYpLHMmJihiLmRldmljZT1pKSxkJiYoYi5hcHA9byksQS5iLmdldENvbmZpZygiYWRwb2QuYnJhbmRDYXRlZ29yeUV4Y2x1c2lvbiIpJiYoYi5icmFuZF9jYXRlZ29yeV91bmlxdWVuZXNzPSEwKSxjLmVuYWJsZWQmJihiLmRlYnVnPWMsdy5sb2dJbmZvKCJBcHBOZXh1cyBEZWJ1ZyBBdWN0aW9uIFNldHRpbmdzOlxuXG4iK0pTT04uc3RyaW5naWZ5KGMsbnVsbCw0KSkpLHImJnIuZ2RwckNvbnNlbnQmJihiLmdkcHJfY29uc2VudD17Y29uc2VudF9zdHJpbmc6ci5nZHByQ29uc2VudC5jb25zZW50U3RyaW5nLGNvbnNlbnRfcmVxdWlyZWQ6ci5nZHByQ29uc2VudC5nZHByQXBwbGllc30pLHImJnIudXNwQ29uc2VudCYmKGIudXNfcHJpdmFjeT1yLnVzcENvbnNlbnQpLHImJnIucmVmZXJlckluZm8mJihsPXtyZF9yZWY6ZW5jb2RlVVJJQ29tcG9uZW50KHIucmVmZXJlckluZm8ucmVmZXJlcikscmRfdG9wOnIucmVmZXJlckluZm8ucmVhY2hlZFRvcCxyZF9pZnM6ci5yZWZlcmVySW5mby5udW1JZnJhbWVzLHJkX3N0azpyLnJlZmVyZXJJbmZvLnN0YWNrLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KGUpfSkuam9pbigiLCIpfSxiLnJlZmVycmVyX2RldGVjdGlvbj1sKSx4KCkoZSxKKSYmZS5maWx0ZXIoSikuZm9yRWFjaChmdW5jdGlvbihyKXt2YXIgZT1mdW5jdGlvbihlLHIpe3ZhciBhPXIubWVkaWFUeXBlcy52aWRlbyx0PWEuZHVyYXRpb25SYW5nZVNlYyxuPWEucmVxdWlyZUV4YWN0RHVyYXRpb24saT1mdW5jdGlvbihlKXt2YXIgcj1lLmFkUG9kRHVyYXRpb25TZWMsYT1lLmR1cmF0aW9uUmFuZ2VTZWMsdD1lLnJlcXVpcmVFeGFjdER1cmF0aW9uLG49dy5nZXRNaW5WYWx1ZUZyb21BcnJheShhKSxpPU1hdGguZmxvb3Ioci9uKTtyZXR1cm4gdD9NYXRoLm1heChpLGEubGVuZ3RoKTppfShyLm1lZGlhVHlwZXMudmlkZW8pLHM9dy5nZXRNYXhWYWx1ZUZyb21BcnJheSh0KSxvPWUuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBlLnV1aWQ9PT1yLmJpZElkfSksZD13LmZpbGwuYXBwbHkodyxTKG8pLmNvbmNhdChbaV0pKTt7dmFyIHAsYztuPyhwPU1hdGguY2VpbChpL3QubGVuZ3RoKSxjPXcuY2h1bmsoZCxwKSx0LmZvckVhY2goZnVuY3Rpb24ocixlKXtjW2VdLm1hcChmdW5jdGlvbihlKXtGKGUsIm1pbmR1cmF0aW9uIixyKSxGKGUsIm1heGR1cmF0aW9uIixyKX0pfSkpOmQubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBGKGUsIm1heGR1cmF0aW9uIixzKX0pfXJldHVybiBkfSh0LHIpLGE9Yi50YWdzLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gZS51dWlkIT09ci5iaWRJZH0pO2IudGFncz1bXS5jb25jYXQoUyhhKSxTKGUpKX0pO3ZhciBoLF89dy5kZWVwQWNjZXNzKGVbMF0sInVzZXJJZC5jcml0ZW9JZCIpO18mJigoaD1bXSkucHVzaCh7cHJvdmlkZXI6ImNyaXRlbyIsdXNlcl9pZDpffSksYi50cHVpZHM9aCk7dmFyIGs9W10sST13LmRlZXBBY2Nlc3MoZVswXSwidXNlcklkLnRkaWQiKTtyZXR1cm4gSSYmay5wdXNoKHtzb3VyY2U6ImFkc2VydmVyLm9yZyIsaWQ6SSxydGlfcGFydG5lcjoiVERJRCJ9KSxrLmxlbmd0aCYmKGIuZWlkcz1rKSx0WzBdLnB1Ymxpc2hlcl9pZCYmKGIucHVibGlzaGVyX2lkPXRbMF0ucHVibGlzaGVyX2lkKSxmdW5jdGlvbihlLGEpe3ZhciB0PVtdLG49e307IWZ1bmN0aW9uKGUpe3ZhciByPSEwO2UmJmUuZ2RwckNvbnNlbnQmJmUuZ2RwckNvbnNlbnQuZ2RwckFwcGxpZXMmJjI9PT1lLmdkcHJDb25zZW50LmFwaVZlcnNpb24mJihyPSEoITAhPT13LmRlZXBBY2Nlc3MoZS5nZHByQ29uc2VudCwidmVuZG9yRGF0YS5wdXJwb3NlLmNvbnNlbnRzLjEiKSkpO3JldHVybiByfShhKSYmKG49e3dpdGhDcmVkZW50aWFsczohMX0pO3t2YXIgaSxyOzE1PGUudGFncy5sZW5ndGg/KGk9dy5kZWVwQ2xvbmUoZSksdy5jaHVuayhlLnRhZ3MsMTUpLmZvckVhY2goZnVuY3Rpb24oZSl7aS50YWdzPWU7dmFyIHI9SlNPTi5zdHJpbmdpZnkoaSk7dC5wdXNoKHttZXRob2Q6IlBPU1QiLHVybDpULGRhdGE6cixiaWRkZXJSZXF1ZXN0OmEsb3B0aW9uczpufSl9KSk6KHI9SlNPTi5zdHJpbmdpZnkoZSksdD17bWV0aG9kOiJQT1NUIix1cmw6VCxkYXRhOnIsYmlkZGVyUmVxdWVzdDphLG9wdGlvbnM6bn0pfXJldHVybiB0fShiLHIpfSxpbnRlcnByZXRSZXNwb25zZTpmdW5jdGlvbihlLHIpe3ZhciBpPXRoaXMscz1yLmJpZGRlclJlcXVlc3Q7ZT1lLmJvZHk7dmFyIGEsbz1bXTtpZihlJiYhZS5lcnJvcilyZXR1cm4gZS50YWdzJiZlLnRhZ3MuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgcixhLHQsbj0ocj1lKSYmci5hZHMmJnIuYWRzLmxlbmd0aCYmeCgpKHIuYWRzLGZ1bmN0aW9uKGUpe3JldHVybiBlLnJ0Yn0pO24mJjAhPT1uLmNwbSYmQygpKGkuc3VwcG9ydGVkTWVkaWFUeXBlcyxuLmFkX3R5cGUpJiYoKGE9ZnVuY3Rpb24ocixlLGEpe3ZhciB0PXcuZ2V0QmlkUmVxdWVzdChyLnV1aWQsW2FdKSxuPXtyZXF1ZXN0SWQ6ci51dWlkLGNwbTplLmNwbSxjcmVhdGl2ZUlkOmUuY3JlYXRpdmVfaWQsZGVhbElkOmUuZGVhbF9pZCxjdXJyZW5jeToiVVNEIixuZXRSZXZlbnVlOiEwLHR0bDozMDAsYWRVbml0Q29kZTp0LmFkVW5pdENvZGUsYXBwbmV4dXM6e2J1eWVyTWVtYmVySWQ6ZS5idXllcl9tZW1iZXJfaWQsZGVhbFByaW9yaXR5OmUuZGVhbF9wcmlvcml0eSxkZWFsQ29kZTplLmRlYWxfY29kZX19O2UuYWR2ZXJ0aXNlcl9pZCYmKG4ubWV0YT1iKHt9LG4ubWV0YSx7YWR2ZXJ0aXNlcklkOmUuYWR2ZXJ0aXNlcl9pZH0pKTtpZihlLnJ0Yi52aWRlbyl7dmFyIGkscztzd2l0Y2goYihuLHt3aWR0aDplLnJ0Yi52aWRlby5wbGF5ZXJfd2lkdGgsaGVpZ2h0OmUucnRiLnZpZGVvLnBsYXllcl9oZWlnaHQsdmFzdEltcFVybDplLm5vdGlmeV91cmwsdHRsOjM2MDB9KSx3LmRlZXBBY2Nlc3ModCwibWVkaWFUeXBlcy52aWRlby5jb250ZXh0Iikpe2Nhc2UgeS5hOnZhciBvPU9iamVjdCh2LmdldElhYlN1YkNhdGVnb3J5KSh0LmJpZGRlcixlLmJyYW5kX2NhdGVnb3J5X2lkKTtuLm1ldGE9Yih7fSxuLm1ldGEse3ByaW1hcnlDYXRJZDpvfSk7dmFyIGQ9ZS5kZWFsX3ByaW9yaXR5O24udmlkZW89e2NvbnRleHQ6eS5hLGR1cmF0aW9uU2Vjb25kczpNYXRoLmZsb29yKGUucnRiLnZpZGVvLmR1cmF0aW9uX21zLzFlMyksZGVhbFRpZXI6ZH0sbi52YXN0VXJsPWUucnRiLnZpZGVvLmFzc2V0X3VybDticmVhaztjYXNlIGcuYjpuLmFkUmVzcG9uc2U9cixuLmFkUmVzcG9uc2UuYWQ9bi5hZFJlc3BvbnNlLmFkc1swXSxuLmFkUmVzcG9uc2UuYWQudmlkZW89bi5hZFJlc3BvbnNlLmFkLnJ0Yi52aWRlbyxuLnZhc3RYbWw9ZS5ydGIudmlkZW8uY29udGVudCxlLnJlbmRlcmVyX3VybCYmKGk9eCgpKGEuYmlkcyxmdW5jdGlvbihlKXtyZXR1cm4gZS5iaWRJZD09PXIudXVpZH0pLHM9dy5kZWVwQWNjZXNzKGksInJlbmRlcmVyLm9wdGlvbnMiKSxuLnJlbmRlcmVyPWZ1bmN0aW9uKGUscil7dmFyIGE9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOnt9LHQ9Zi5hLmluc3RhbGwoe2lkOnIucmVuZGVyZXJfaWQsdXJsOnIucmVuZGVyZXJfdXJsLGNvbmZpZzphLGxvYWRlZDohMSxhZFVuaXRDb2RlOmV9KTt0cnl7dC5zZXRSZW5kZXIoTCl9Y2F0Y2goZSl7dy5sb2dXYXJuKCJQcmViaWQgRXJyb3IgY2FsbGluZyBzZXRSZW5kZXIgb24gcmVuZGVyZXIiLGUpfXJldHVybiB0LnNldEV2ZW50SGFuZGxlcnMoe2ltcHJlc3Npb246ZnVuY3Rpb24oKXtyZXR1cm4gdy5sb2dNZXNzYWdlKCJBcHBOZXh1cyBvdXRzdHJlYW0gdmlkZW8gaW1wcmVzc2lvbiBldmVudCIpfSxsb2FkZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gdy5sb2dNZXNzYWdlKCJBcHBOZXh1cyBvdXRzdHJlYW0gdmlkZW8gbG9hZGVkIGV2ZW50Iil9LGVuZGVkOmZ1bmN0aW9uKCl7dy5sb2dNZXNzYWdlKCJBcHBOZXh1cyBvdXRzdHJlYW0gcmVuZGVyZXIgdmlkZW8gZXZlbnQiKSxkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjIi5jb25jYXQoZSkpLnN0eWxlLmRpc3BsYXk9Im5vbmUifX0pLHR9KG4uYWRVbml0Q29kZSxlLHMpKTticmVhaztjYXNlIGcuYTpuLnZhc3RVcmw9ZS5ub3RpZnlfdXJsKyImcmVkaXI9IitlbmNvZGVVUklDb21wb25lbnQoZS5ydGIudmlkZW8uYXNzZXRfdXJsKX19ZWxzZSBpZihlLnJ0Ylt5LmNdKXt2YXIgcD1lLnJ0Ylt5LmNdLGM9ZS52aWV3YWJpbGl0eS5jb25maWcucmVwbGFjZSgic3JjPSIsImRhdGEtc3JjPSIpLHU9cC5qYXZhc2NyaXB0X3RyYWNrZXJzO251bGw9PXU/dT1jOncuaXNTdHIodSk/dT1bdSxjXTp1LnB1c2goYyksblt5LmNdPXt0aXRsZTpwLnRpdGxlLGJvZHk6cC5kZXNjLGJvZHkyOnAuZGVzYzIsY3RhOnAuY3RhdGV4dCxyYXRpbmc6cC5yYXRpbmcsc3BvbnNvcmVkQnk6cC5zcG9uc29yZWQscHJpdmFjeUxpbms6cC5wcml2YWN5X2xpbmssYWRkcmVzczpwLmFkZHJlc3MsZG93bmxvYWRzOnAuZG93bmxvYWRzLGxpa2VzOnAubGlrZXMscGhvbmU6cC5waG9uZSxwcmljZTpwLnByaWNlLHNhbGVQcmljZTpwLnNhbGVwcmljZSxjbGlja1VybDpwLmxpbmsudXJsLGRpc3BsYXlVcmw6cC5kaXNwbGF5dXJsLGNsaWNrVHJhY2tlcnM6cC5saW5rLmNsaWNrX3RyYWNrZXJzLGltcHJlc3Npb25UcmFja2VyczpwLmltcHJlc3Npb25fdHJhY2tlcnMsamF2YXNjcmlwdFRyYWNrZXJzOnV9LHAubWFpbl9pbWcmJihuLm5hdGl2ZS5pbWFnZT17dXJsOnAubWFpbl9pbWcudXJsLGhlaWdodDpwLm1haW5faW1nLmhlaWdodCx3aWR0aDpwLm1haW5faW1nLndpZHRofSkscC5pY29uJiYobi5uYXRpdmUuaWNvbj17dXJsOnAuaWNvbi51cmwsaGVpZ2h0OnAuaWNvbi5oZWlnaHQsd2lkdGg6cC5pY29uLndpZHRofSl9ZWxzZXtiKG4se3dpZHRoOmUucnRiLmJhbm5lci53aWR0aCxoZWlnaHQ6ZS5ydGIuYmFubmVyLmhlaWdodCxhZDplLnJ0Yi5iYW5uZXIuY29udGVudH0pO3RyeXt2YXIgbSxsO2UucnRiLnRyYWNrZXJzJiYobT1lLnJ0Yi50cmFja2Vyc1swXS5pbXByZXNzaW9uX3VybHNbMF0sbD13LmNyZWF0ZVRyYWNrUGl4ZWxIdG1sKG0pLG4uYWQrPWwpfWNhdGNoKGUpe3cubG9nRXJyb3IoIkVycm9yIGFwcGVuZGluZyB0cmFja2luZyBwaXhlbCIsZSl9fXJldHVybiBufShlLG4scykpLm1lZGlhVHlwZT0odD1uLmFkX3R5cGUpPT09eS5kP3kuZDp0PT09eS5jP3kuYzp5LmIsby5wdXNoKGEpKX0pLGUuZGVidWcmJmUuZGVidWcuZGVidWdfaW5mbyYmKGE9KGE9IkFwcE5leHVzIERlYnVnIEF1Y3Rpb24gZm9yIFByZWJpZFxuXG4iK2UuZGVidWcuZGVidWdfaW5mbykucmVwbGFjZSgvKDx0ZD58PHRoPikvZ20sIlx0IikucmVwbGFjZSgvKDxcL3RkPnw8XC90aD4pL2dtLCJcbiIpLnJlcGxhY2UoL148YnI+L2dtLCIiKS5yZXBsYWNlKC8oPGJyPlxufDxicj4pL2dtLCJcbiIpLnJlcGxhY2UoLzxoMT4oLiopPFwvaDE+L2dtLCJcblxuPT09PT0gJDEgPT09PT1cblxuIikucmVwbGFjZSgvPGhbMi02XT4oLiopPFwvaFsyLTZdPi9nbSwiXG5cbioqKiAkMSAqKipcblxuIikucmVwbGFjZSgvKDwoW14+XSspPikvZ2ltLCIiKSx3LmxvZ01lc3NhZ2UoImh0dHBzOi8vY29uc29sZS5hcHBuZXh1cy5jb20vZG9jcy91bmRlcnN0YW5kaW5nLXRoZS1kZWJ1Zy1hdWN0aW9uIiksdy5sb2dNZXNzYWdlKGEpKSxvO3ZhciB0PSJpbiByZXNwb25zZSBmb3IgIi5jb25jYXQocy5iaWRkZXJDb2RlLCIgYWRhcHRlciIpO3JldHVybiBlJiZlLmVycm9yJiYodCs9IjogIi5jb25jYXQoZS5lcnJvcikpLHcubG9nRXJyb3IodCksb30sZ2V0TWFwcGluZ0ZpbGVJbmZvOmZ1bmN0aW9uKCl7cmV0dXJue3VybDoiaHR0cHM6Ly9hY2RuLmFkbnhzLmNvbS9wcmViaWQvYXBwbmV4dXMtbWFwcGluZy9tYXBwaW5ncy5qc29uIixyZWZyZXNoSW5EYXlzOjJ9fSxnZXRVc2VyU3luY3M6ZnVuY3Rpb24oZSl7aWYoZS5pZnJhbWVFbmFibGVkKXJldHVyblt7dHlwZToiaWZyYW1lIix1cmw6Imh0dHBzOi8vYWNkbi5hZG54cy5jb20vZG1wL2FzeW5jX3VzZXJzeW5jLmh0bWwifV19LHRyYW5zZm9ybUJpZFBhcmFtczpmdW5jdGlvbihhLGUpe3JldHVybiBhPXcuY29udmVydFR5cGVzKHttZW1iZXI6InN0cmluZyIsaW52Q29kZToic3RyaW5nIixwbGFjZW1lbnRJZDoibnVtYmVyIixrZXl3b3Jkczp3LnRyYW5zZm9ybUJpZGRlclBhcmFtS2V5d29yZHMscHVibGlzaGVySWQ6Im51bWJlciJ9LGEpLGUmJihhLnVzZV9wbXRfcnVsZT0iYm9vbGVhbiI9PXR5cGVvZiBhLnVzZVBheW1lbnRSdWxlJiZhLnVzZVBheW1lbnRSdWxlLGEudXNlUGF5bWVudFJ1bGUmJmRlbGV0ZSBhLnVzZVBheW1lbnRSdWxlLEkoYS5rZXl3b3JkcykmJmEua2V5d29yZHMuZm9yRWFjaChQKSxPYmplY3Qua2V5cyhhKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciByPXcuY29udmVydENhbWVsVG9VbmRlcnNjb3JlKGUpO3IhPT1lJiYoYVtyXT1hW2VdLGRlbGV0ZSBhW2VdKX0pKSxhfSxvbkJpZFdvbjpmdW5jdGlvbihlKXtlLm5hdGl2ZSYmZnVuY3Rpb24oZSl7dmFyIHI9ZnVuY3Rpb24oZSl7dmFyIHI7aWYody5pc1N0cihlKSYmVShlKSlyPWU7ZWxzZSBpZih3LmlzQXJyYXkoZSkpZm9yKHZhciBhPTA7YTxlLmxlbmd0aDthKyspe3ZhciB0PWVbYV07VSh0KSYmKHI9dCl9cmV0dXJuIHJ9KGUubmF0aXZlLmphdmFzY3JpcHRUcmFja2Vycyk7aWYocilmb3IodmFyIGE9InBianNfYWRpZD0iK2UuYWRJZCsiO3BianNfYXVjPSIrZS5hZFVuaXRDb2RlLHQ9ZnVuY3Rpb24oZSl7dmFyIHI9ZS5pbmRleE9mKCdzcmM9IicpKzUsYT1lLmluZGV4T2YoJyInLHIpO3JldHVybiBlLnN1YnN0cmluZyhyLGEpfShyKSxuPXQucmVwbGFjZSgiZG9tX2lkPSVuYXRpdmVfZG9tX2lkJSIsYSksaT1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaWZyYW1lIikscz0hMSxvPTA7bzxpLmxlbmd0aCYmIXM7bysrKXt2YXIgZD1pW29dO3RyeXt2YXIgcD1kLmNvbnRlbnREb2N1bWVudHx8ZC5jb250ZW50V2luZG93LmRvY3VtZW50O2lmKHApZm9yKHZhciBjPXAuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInNjcmlwdCIpLHU9MDt1PGMubGVuZ3RoJiYhczt1Kyspe3ZhciBtPWNbdV07bS5nZXRBdHRyaWJ1dGUoImRhdGEtc3JjIik9PXQmJihtLnNldEF0dHJpYnV0ZSgic3JjIixuKSxtLnNldEF0dHJpYnV0ZSgiZGF0YS1zcmMiLCIiKSxtLnJlbW92ZUF0dHJpYnV0ZSYmbS5yZW1vdmVBdHRyaWJ1dGUoImRhdGEtc3JjIikscz0hMCl9fWNhdGNoKGUpe2lmKCEoZSBpbnN0YW5jZW9mIERPTUV4Y2VwdGlvbiYmIlNlY3VyaXR5RXJyb3IiPT09ZS5uYW1lKSl0aHJvdyBlfX19KGUpfX07ZnVuY3Rpb24gSShlKXtyZXR1cm4gdy5pc0FycmF5KGUpJiYwPGUubGVuZ3RofWZ1bmN0aW9uIFAoZSl7SShlLnZhbHVlKSYmIiI9PT1lLnZhbHVlWzBdJiZkZWxldGUgZS52YWx1ZX1mdW5jdGlvbiBVKGUpe3ZhciByPWUubWF0Y2goaCksYT1udWxsIT1yJiYxPD1yLmxlbmd0aCx0PWUubWF0Y2goXyksbj1udWxsIT10JiYxPD10Lmxlbmd0aDtyZXR1cm4gZS5zdGFydHNXaXRoKGwpJiZuJiZhfWZ1bmN0aW9uIE4oYSl7dmFyIGUscixuLGksdD17fTt0LnNpemVzPXEoYS5zaXplcyksdC5wcmltYXJ5X3NpemU9dC5zaXplc1swXSx0LmFkX3R5cGVzPVtdLHQudXVpZD1hLmJpZElkLGEucGFyYW1zLnBsYWNlbWVudElkP3QuaWQ9cGFyc2VJbnQoYS5wYXJhbXMucGxhY2VtZW50SWQsMTApOnQuY29kZT1hLnBhcmFtcy5pbnZDb2RlLHQuYWxsb3dfc21hbGxlcl9zaXplcz1hLnBhcmFtcy5hbGxvd1NtYWxsZXJTaXplc3x8ITEsdC51c2VfcG10X3J1bGU9YS5wYXJhbXMudXNlUGF5bWVudFJ1bGV8fCExLHQucHJlYmlkPSEwLHQuZGlzYWJsZV9wc2E9ITAsYS5wYXJhbXMucmVzZXJ2ZSYmKHQucmVzZXJ2ZT1hLnBhcmFtcy5yZXNlcnZlKSxhLnBhcmFtcy5wb3NpdGlvbiYmKHQucG9zaXRpb249e2Fib3ZlOjEsYmVsb3c6Mn1bYS5wYXJhbXMucG9zaXRpb25dfHwwKSxhLnBhcmFtcy50cmFmZmljU291cmNlQ29kZSYmKHQudHJhZmZpY19zb3VyY2VfY29kZT1hLnBhcmFtcy50cmFmZmljU291cmNlQ29kZSksYS5wYXJhbXMucHJpdmF0ZVNpemVzJiYodC5wcml2YXRlX3NpemVzPXEoYS5wYXJhbXMucHJpdmF0ZVNpemVzKSksYS5wYXJhbXMuc3VwcGx5VHlwZSYmKHQuc3VwcGx5X3R5cGU9YS5wYXJhbXMuc3VwcGx5VHlwZSksYS5wYXJhbXMucHViQ2xpY2smJih0LnB1YmNsaWNrPWEucGFyYW1zLnB1YkNsaWNrKSxhLnBhcmFtcy5leHRJbnZDb2RlJiYodC5leHRfaW52X2NvZGU9YS5wYXJhbXMuZXh0SW52Q29kZSksYS5wYXJhbXMucHVibGlzaGVySWQmJih0LnB1Ymxpc2hlcl9pZD1wYXJzZUludChhLnBhcmFtcy5wdWJsaXNoZXJJZCwxMCkpLGEucGFyYW1zLmV4dGVybmFsSW1wSWQmJih0LmV4dGVybmFsX2ltcF9pZD1hLnBhcmFtcy5leHRlcm5hbEltcElkKSx3LmlzRW1wdHkoYS5wYXJhbXMua2V5d29yZHMpfHwoMDwoZT13LnRyYW5zZm9ybUJpZGRlclBhcmFtS2V5d29yZHMoYS5wYXJhbXMua2V5d29yZHMpKS5sZW5ndGgmJmUuZm9yRWFjaChQKSx0LmtleXdvcmRzPWUpLGEubWVkaWFUeXBlIT09eS5jJiYhdy5kZWVwQWNjZXNzKGEsIm1lZGlhVHlwZXMuIi5jb25jYXQoeS5jKSl8fCh0LmFkX3R5cGVzLnB1c2goeS5jKSwwPT09dC5zaXplcy5sZW5ndGgmJih0LnNpemVzPXEoWzEsMV0pKSxhLm5hdGl2ZVBhcmFtcyYmKG49YS5uYXRpdmVQYXJhbXMsaT17fSxPYmplY3Qua2V5cyhuKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciByLGE9bVtlXSYmbVtlXS5zZXJ2ZXJOYW1lfHxtW2VdfHxlLHQ9bVtlXSYmbVtlXS5yZXF1aXJlZFBhcmFtcztpW2FdPWIoe30sdCxuW2VdKSxhIT09bS5pbWFnZS5zZXJ2ZXJOYW1lJiZhIT09bS5pY29uLnNlcnZlck5hbWV8fCFpW2FdLnNpemVzfHwocj1pW2FdLnNpemVzLCh3LmlzQXJyYXlPZk51bXMocil8fHcuaXNBcnJheShyKSYmMDxyLmxlbmd0aCYmci5ldmVyeShmdW5jdGlvbihlKXtyZXR1cm4gdy5pc0FycmF5T2ZOdW1zKGUpfSkpJiYoaVthXS5zaXplcz1xKGlbYV0uc2l6ZXMpKSksYT09PW0ucHJpdmFjeUxpbmsmJihpLnByaXZhY3lfc3VwcG9ydGVkPSEwKX0pLHI9aSx0W3kuY109e2xheW91dHM6W3JdfSkpO3ZhciBzPXcuZGVlcEFjY2VzcyhhLCJtZWRpYVR5cGVzLiIuY29uY2F0KHkuZCkpLG89dy5kZWVwQWNjZXNzKGEsIm1lZGlhVHlwZXMudmlkZW8uY29udGV4dCIpO3QuaGJfc291cmNlPXMmJiJhZHBvZCI9PT1vPzc6MSxhLm1lZGlhVHlwZSE9PXkuZCYmIXN8fHQuYWRfdHlwZXMucHVzaCh5LmQpLChhLm1lZGlhVHlwZT09PXkuZHx8cyYmIm91dHN0cmVhbSIhPT1vKSYmKHQucmVxdWlyZV9hc3NldF91cmw9ITApLGEucGFyYW1zLnZpZGVvJiYodC52aWRlbz17fSxPYmplY3Qua2V5cyhhLnBhcmFtcy52aWRlbykuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBDKCkoYyxlKX0pLmZvckVhY2goZnVuY3Rpb24oZSl7c3dpdGNoKGUpe2Nhc2UiY29udGV4dCI6Y2FzZSJwbGF5YmFja19tZXRob2QiOnZhciByPWEucGFyYW1zLnZpZGVvW2VdLHI9dy5pc0FycmF5KHIpP3JbMF06cjt0LnZpZGVvW2VdPXVbZV1bcl07YnJlYWs7Y2FzZSJmcmFtZXdvcmtzIjpicmVhaztkZWZhdWx0OnQudmlkZW9bZV09YS5wYXJhbXMudmlkZW9bZV19fSksYS5wYXJhbXMudmlkZW8uZnJhbWV3b3JrcyYmdy5pc0FycmF5KGEucGFyYW1zLnZpZGVvLmZyYW1ld29ya3MpJiYodC52aWRlb19mcmFtZXdvcmtzPWEucGFyYW1zLnZpZGVvLmZyYW1ld29ya3MpKSxhLnJlbmRlcmVyJiYodC52aWRlbz1iKHt9LHQudmlkZW8se2N1c3RvbV9yZW5kZXJlcl9wcmVzZW50OiEwfSkpLGEucGFyYW1zLmZyYW1ld29ya3MmJncuaXNBcnJheShhLnBhcmFtcy5mcmFtZXdvcmtzKSYmKHQuYmFubmVyX2ZyYW1ld29ya3M9YS5wYXJhbXMuZnJhbWV3b3Jrcyk7dmFyIGQ9eCgpKHAuYS5nZXRBZFVuaXRzKCksZnVuY3Rpb24oZSl7cmV0dXJuIGEudHJhbnNhY3Rpb25JZD09PWUudHJhbnNhY3Rpb25JZH0pO3JldHVybiBkJiZkLm1lZGlhVHlwZXMmJmQubWVkaWFUeXBlcy5iYW5uZXImJnQuYWRfdHlwZXMucHVzaCh5LmIpLDA9PT10LmFkX3R5cGVzLmxlbmd0aCYmZGVsZXRlIHQuYWRfdHlwZXMsdH1mdW5jdGlvbiBxKGUpe3ZhciByPVtdLGE9e307aWYody5pc0FycmF5KGUpJiYyPT09ZS5sZW5ndGgmJiF3LmlzQXJyYXkoZVswXSkpYS53aWR0aD1wYXJzZUludChlWzBdLDEwKSxhLmhlaWdodD1wYXJzZUludChlWzFdLDEwKSxyLnB1c2goYSk7ZWxzZSBpZigib2JqZWN0Ij09PXMoZSkpZm9yKHZhciB0PTA7dDxlLmxlbmd0aDt0Kyspe3ZhciBuPWVbdF07KGE9e30pLndpZHRoPXBhcnNlSW50KG5bMF0sMTApLGEuaGVpZ2h0PXBhcnNlSW50KG5bMV0sMTApLHIucHVzaChhKX1yZXR1cm4gcn1mdW5jdGlvbiBNKGUpe3JldHVybiEhZS5wYXJhbXMudXNlcn1mdW5jdGlvbiB6KGUpe3JldHVybiEhcGFyc2VJbnQoZS5wYXJhbXMubWVtYmVyLDEwKX1mdW5jdGlvbiBEKGUpe2lmKGUucGFyYW1zKXJldHVybiEhZS5wYXJhbXMuYXBwfWZ1bmN0aW9uIEIoZSl7cmV0dXJuIGUucGFyYW1zJiZlLnBhcmFtcy5hcHA/ISFlLnBhcmFtcy5hcHAuaWQ6ISFlLnBhcmFtcy5hcHB9ZnVuY3Rpb24gVihlKXtyZXR1cm4hIWUuZGVidWd9ZnVuY3Rpb24gSihlKXtyZXR1cm4gZS5tZWRpYVR5cGVzJiZlLm1lZGlhVHlwZXMudmlkZW8mJmUubWVkaWFUeXBlcy52aWRlby5jb250ZXh0PT09eS5hfWZ1bmN0aW9uIFcoZSl7dmFyIHI9ITEsYT1lLnBhcmFtcyx0PWUucGFyYW1zLnZpZGVvO3JldHVybiBhLmZyYW1ld29ya3MmJncuaXNBcnJheShhLmZyYW1ld29ya3MpJiYocj1DKCkoZS5wYXJhbXMuZnJhbWV3b3Jrcyw2KSksIXImJnQmJnQuZnJhbWV3b3JrcyYmdy5pc0FycmF5KHQuZnJhbWV3b3JrcykmJihyPUMoKShlLnBhcmFtcy52aWRlby5mcmFtZXdvcmtzLDYpKSxyfWZ1bmN0aW9uIEYoZSxyLGEpe3cuaXNFbXB0eShlLnZpZGVvKSYmKGUudmlkZW89e30pLGUudmlkZW9bcl09YX1mdW5jdGlvbiBMKGUpe3ZhciByLGE7cj1lLmFkVW5pdENvZGUsKGE9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocikucXVlcnlTZWxlY3RvckFsbCgiZGl2W2lkXj0nZ29vZ2xlX2FkcyddIikpWzBdJiZhWzBdLnN0eWxlLnNldFByb3BlcnR5KCJkaXNwbGF5Iiwibm9uZSIpLGUucmVuZGVyZXIucHVzaChmdW5jdGlvbigpe3dpbmRvdy5BTk91dHN0cmVhbVZpZGVvLnJlbmRlckFkKHt0YWdJZDplLmFkUmVzcG9uc2UudGFnX2lkLHNpemVzOltlLmdldFNpemUoKS5zcGxpdCgieCIpXSx0YXJnZXRJZDplLmFkVW5pdENvZGUsdXVpZDplLmFkUmVzcG9uc2UudXVpZCxhZFJlc3BvbnNlOmUuYWRSZXNwb25zZSxyZW5kZXJlck9wdGlvbnM6ZS5yZW5kZXJlci5nZXRDb25maWcoKX0sZnVuY3Rpb24oZSxyLGEpe2UucmVuZGVyZXIuaGFuZGxlVmlkZW9FdmVudCh7aWQ6cixldmVudE5hbWU6YX0pfS5iaW5kKG51bGwsZSkpfSl9T2JqZWN0KHYucmVnaXN0ZXJCaWRkZXIpKGspfX0sWzI3Nl0pOwp1cGJqc0NodW5rKFsyODVdLHszNTQ6ZnVuY3Rpb24obix0LGUpe24uZXhwb3J0cz1lKDM1NSl9LDM1NTpmdW5jdGlvbihuLHQsZSl7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxlLmQodCwiYWxsb3dBdWN0aW9uIixmdW5jdGlvbigpe3JldHVybiB5fSksZS5kKHQsInVzZXJDTVAiLGZ1bmN0aW9uKCl7cmV0dXJuIGR9KSxlLmQodCwiY29uc2VudFRpbWVvdXQiLGZ1bmN0aW9uKCl7cmV0dXJuIHV9KSxlLmQodCwiZ2RwclNjb3BlIixmdW5jdGlvbigpe3JldHVybiBwfSksZS5kKHQsInN0YXRpY0NvbnNlbnREYXRhIixmdW5jdGlvbigpe3JldHVybiBnfSksdC5yZXF1ZXN0Qmlkc0hvb2s9aCx0LnJlc2V0Q29uc2VudERhdGE9ZnVuY3Rpb24oKXtDPXZvaWQgMCxkPXZvaWQgMCx3PTAsYS5nZHByRGF0YUhhbmRsZXIuc2V0Q29uc2VudERhdGEobnVsbCl9LHQuc2V0Q29uc2VudENvbmZpZz1fO3ZhciBsPWUoMCksbz1lKDMpLGE9ZSg5KSxpPWUoMTIpLHI9ZS5uKGkpLHM9ZSgzNTYpLGY9ZS5uKHMpO2Z1bmN0aW9uIGMobil7cmV0dXJuKGM9ImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmInN5bWJvbCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24obil7cmV0dXJuIHR5cGVvZiBufTpmdW5jdGlvbihuKXtyZXR1cm4gbiYmImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmbi5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmbiE9PVN5bWJvbC5wcm90b3R5cGU/InN5bWJvbCI6dHlwZW9mIG59KShuKX12YXIgZCx1LHAsZyxDLG09ImlhYiIsdj0xZTQsYj0hMCx5PXt2YWx1ZTpiLGRlZmluZWRJbkNvbmZpZzohMX0sdz0wLEQ9ITEsaz17aWFiOmZ1bmN0aW9uKG8sZSxyKXtmdW5jdGlvbiBuKG4sdCl7bC5sb2dJbmZvKCJSZWNlaXZlZCBhIHJlc3BvbnNlIGZyb20gQ01QIixuKSx0PyExIT09bi5nZHByQXBwbGllcyYmInRjbG9hZGVkIiE9PW4uZXZlbnRTdGF0dXMmJiJ1c2VyYWN0aW9uY29tcGxldGUiIT09bi5ldmVudFN0YXR1c3x8byhuLHIpOmUoIkNNUCB1bmFibGUgdG8gcmVnaXN0ZXIgY2FsbGJhY2sgZnVuY3Rpb24uICBQbGVhc2UgY2hlY2sgQ01QIHNldHVwLiIscil9dmFyIHQ9ZnVuY3Rpb24oKXt2YXIgdD17fTtmdW5jdGlvbiBlKCl7dC5nZXRDb25zZW50RGF0YSYmdC5nZXRWZW5kb3JDb25zZW50cyYmKGwubG9nSW5mbygiUmVjZWl2ZWQgYWxsIHJlcXVlc3RlZCByZXNwb25zZXMgZnJvbSBDTVAiLHQpLG8odCxyKSl9cmV0dXJue2NvbnNlbnREYXRhQ2FsbGJhY2s6ZnVuY3Rpb24obil7dC5nZXRDb25zZW50RGF0YT1uLGUoKX0sdmVuZG9yQ29uc2VudHNDYWxsYmFjazpmdW5jdGlvbihuKXt0LmdldFZlbmRvckNvbnNlbnRzPW4sZSgpfX19KCksdT17fSxhPWZ1bmN0aW9uKCl7Zm9yKHZhciBuLHQsZT13aW5kb3c7IW47KXt0cnl7aWYoImZ1bmN0aW9uIj09dHlwZW9mIGUuX190Y2ZhcGl8fCJmdW5jdGlvbiI9PXR5cGVvZiBlLl9fY21wKXt0PSJmdW5jdGlvbiI9PXR5cGVvZiBlLl9fdGNmYXBpPyh3PTIsZS5fX3RjZmFwaSk6KHc9MSxlLl9fY21wKSxuPWU7YnJlYWt9fWNhdGNoKG4pe310cnl7aWYoZS5mcmFtZXMuX190Y2ZhcGlMb2NhdG9yKXt3PTIsbj1lO2JyZWFrfX1jYXRjaChuKXt9dHJ5e2lmKGUuZnJhbWVzLl9fY21wTG9jYXRvcil7dz0xLG49ZTticmVha319Y2F0Y2gobil7fWlmKGU9PT13aW5kb3cudG9wKWJyZWFrO2U9ZS5wYXJlbnR9cmV0dXJue2NtcEZyYW1lOm4sY21wRnVuY3Rpb246dH19KCksaT1hLmNtcEZyYW1lLHM9YS5jbXBGdW5jdGlvbjtpZighaSlyZXR1cm4gZSgiQ01QIG5vdCBmb3VuZC4iLHIpO2wuaXNGbihzKT8obC5sb2dJbmZvKCJEZXRlY3RlZCBDTVAgQVBJIGlzIGRpcmVjdGx5IGFjY2Vzc2libGUsIGNhbGxpbmcgaXQgbm93Li4uIiksMT09PXc/KHMoImdldENvbnNlbnREYXRhIixudWxsLHQuY29uc2VudERhdGFDYWxsYmFjaykscygiZ2V0VmVuZG9yQ29uc2VudHMiLG51bGwsdC52ZW5kb3JDb25zZW50c0NhbGxiYWNrKSk6Mj09PXcmJnMoImFkZEV2ZW50TGlzdGVuZXIiLHcsbikpOjE9PT13JiZ3aW5kb3cuJHNmJiZ3aW5kb3cuJHNmLmV4dCYmImZ1bmN0aW9uIj09dHlwZW9mIHdpbmRvdy4kc2YuZXh0LmNtcD8obC5sb2dJbmZvKCJEZXRlY3RlZCBQcmViaWQuanMgaXMgZW5jYXNlZCBpbiBhIFNhZmVGcmFtZSBhbmQgQ01QIGlzIHJlZ2lzdGVyZWQsIGNhbGxpbmcgaXQgbm93Li4uIiksYygiZ2V0Q29uc2VudERhdGEiLHQuY29uc2VudERhdGFDYWxsYmFjayksYygiZ2V0VmVuZG9yQ29uc2VudHMiLHQudmVuZG9yQ29uc2VudHNDYWxsYmFjaykpOihsLmxvZ0luZm8oIkRldGVjdGVkIENNUCBpcyBvdXRzaWRlIHRoZSBjdXJyZW50IGlmcmFtZSB3aGVyZSBQcmViaWQuanMgaXMgbG9jYXRlZCwgY2FsbGluZyBpdCBub3cuLi4iKSwxPT09dz8oZCgiZ2V0Q29uc2VudERhdGEiLGksdC5jb25zZW50RGF0YUNhbGxiYWNrKSxkKCJnZXRWZW5kb3JDb25zZW50cyIsaSx0LnZlbmRvckNvbnNlbnRzQ2FsbGJhY2spKToyPT09dyYmZCgiYWRkRXZlbnRMaXN0ZW5lciIsaSxuKSk7ZnVuY3Rpb24gYyhvLGEpe3ZhciBuLHQ9ci5hZFVuaXRzLGU9MSxpPTE7QXJyYXkuaXNBcnJheSh0KSYmMDx0Lmxlbmd0aCYmKGU9KG49bC5nZXRBZFVuaXRTaXplcyh0WzBdKSlbMF1bMF0saT1uWzBdWzFdKSx3aW5kb3cuJHNmLmV4dC5yZWdpc3RlcihlLGksZnVuY3Rpb24obix0KXt2YXIgZTsiY21wUmV0dXJuIj09PW4mJihlPSJnZXRDb25zZW50RGF0YSI9PT1vP3QudmVuZG9yQ29uc2VudERhdGE6dC52ZW5kb3JDb25zZW50cyxhKGUpKX0pLHdpbmRvdy4kc2YuZXh0LmNtcChvKX1mdW5jdGlvbiBkKG4sZCx0KXt2YXIgbD0yPT09dz8iX190Y2ZhcGkiOiJfX2NtcCI7d2luZG93W2xdPWZ1bmN0aW9uKG4sdCxlKXt2YXIgbyxhLGkscj1NYXRoLnJhbmRvbSgpKyIiLHM9IiIuY29uY2F0KGwsIkNhbGwiKSxjPShpPXtjb21tYW5kOm4scGFyYW1ldGVyOnQsY2FsbElkOnJ9LChhPXMpaW4obz17fSk/T2JqZWN0LmRlZmluZVByb3BlcnR5KG8sYSx7dmFsdWU6aSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOm9bYV09aSxvKTsxIT09dyYmKGNbc10udmVyc2lvbj13KSx1W3JdPWUsZC5wb3N0TWVzc2FnZShjLCIqIil9LHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIixmdW5jdGlvbihuKXt2YXIgdD0iIi5jb25jYXQobCwiUmV0dXJuIiksZT0ic3RyaW5nIj09dHlwZW9mIG4uZGF0YSYmZigpKG4uZGF0YSx0KT9KU09OLnBhcnNlKG4uZGF0YSk6bi5kYXRhO3t2YXIgbztlW3RdJiZlW3RdLmNhbGxJZCYmKG89ZVt0XSx2b2lkIDAhPT11W28uY2FsbElkXSYmdVtvLmNhbGxJZF0oby5yZXR1cm5WYWx1ZSxvLnN1Y2Nlc3MpKX19LCExKSx3aW5kb3dbbF0obix2b2lkIDAsdCl9fSxzdGF0aWM6ZnVuY3Rpb24obix0LGUpe24oZyxlKX19O2Z1bmN0aW9uIGgobix0KXt2YXIgZT17Y29udGV4dDp0aGlzLGFyZ3M6W3RdLG5leHRGbjpuLGFkVW5pdHM6dC5hZFVuaXRzfHx1cGJqcy5hZFVuaXRzLGJpZHNCYWNrSGFuZGxlcjp0LmJpZHNCYWNrSGFuZGxlcixoYXZlRXhpdGVkOiExLHRpbWVyOm51bGx9O3JldHVybiBDPyhsLmxvZ0luZm8oIlVzZXIgY29uc2VudCBpbmZvcm1hdGlvbiBhbHJlYWR5IGtub3duLiAgUHVsbGluZyBpbnRlcm5hbGx5IHN0b3JlZCBpbmZvcm1hdGlvbi4uLiIpLFMobnVsbCxlKSk6cigpKE9iamVjdC5rZXlzKGspLGQpPyhrW2RdLmNhbGwodGhpcyxNLEEsZSksdm9pZChlLmhhdmVFeGl0ZWR8fCgwPT09dT9NKHZvaWQgMCxlKTplLnRpbWVyPXNldFRpbWVvdXQoZnVuY3Rpb24obil7QSgiQ01QIHdvcmtmbG93IGV4Y2VlZGVkIHRpbWVvdXQgdGhyZXNob2xkLiIsbil9LmJpbmQobnVsbCxlKSx1KSkpKToobC5sb2dXYXJuKCJDTVAgZnJhbWV3b3JrICgiLmNvbmNhdChkLCIpIGlzIG5vdCBhIHN1cHBvcnRlZCBmcmFtZXdvcmsuICBBYm9ydGluZyBjb25zZW50TWFuYWdlbWVudCBtb2R1bGUgYW5kIHJlc3VtaW5nIGF1Y3Rpb24uIikpLGUubmV4dEZuLmFwcGx5KGUuY29udGV4dCxlLmFyZ3MpKX1mdW5jdGlvbiBNKGUsbil7InN0YXRpYyI9PT1kJiYyPT09KHc9ZS5nZXRDb25zZW50RGF0YT8xOmUuZ2V0VENEYXRhPzI6MCkmJihlPWUuZ2V0VENEYXRhKTt2YXIgdD0xPT09dz9mdW5jdGlvbihuKXt2YXIgdD1uJiZuLmdldENvbnNlbnREYXRhJiZuLmdldENvbnNlbnREYXRhLmdkcHJBcHBsaWVzO3JldHVybiEoImJvb2xlYW4iPT10eXBlb2YgdCYmKCEwIT09dHx8bC5pc1N0cihuLmdldENvbnNlbnREYXRhLmNvbnNlbnREYXRhKSYmbC5pc1BsYWluT2JqZWN0KG4uZ2V0VmVuZG9yQ29uc2VudHMpJiYxPE9iamVjdC5rZXlzKG4uZ2V0VmVuZG9yQ29uc2VudHMpLmxlbmd0aCkpfToyPT09dz9mdW5jdGlvbigpe3ZhciBuPWUmJiJib29sZWFuIj09dHlwZW9mIGUuZ2RwckFwcGxpZXM/ZS5nZHByQXBwbGllczpwLHQ9ZSYmZS50Y1N0cmluZztyZXR1cm4hKCJib29sZWFuIj09dHlwZW9mIG4mJighMCE9PW58fGwuaXNTdHIodCkpKX06bnVsbDt5LmRlZmluZWRJbkNvbmZpZyYmMj09PXc/bC5sb2dXYXJuKCInYWxsb3dBdWN0aW9uV2l0aG91dENvbnNlbnQnIGlnbm9yZWQgZm9yIFRDRiAyIik6eS5kZWZpbmVkSW5Db25maWd8fDEhPT13fHxsLmxvZ0luZm8oIidhbGxvd0F1Y3Rpb25XaXRob3V0Q29uc2VudCcgdXNpbmcgc3lzdGVtIGRlZmF1bHQ6ICgiLmNvbmNhdChiLCIpLiIpKSxsLmlzRm4odCk/dChlKT9BKCJDTVAgcmV0dXJuZWQgdW5leHBlY3RlZCB2YWx1ZSBkdXJpbmcgbG9va3VwIHByb2Nlc3MuIixuLGUpOihjbGVhclRpbWVvdXQobi50aW1lciksUChlKSxTKG51bGwsbikpOkEoIlVuYWJsZSB0byBkZXJpdmUgQ01QIHZlcnNpb24gdG8gcHJvY2VzcyBkYXRhLiAgQ29uc2VudCBvYmplY3QgZG9lcyBub3QgY29uZm9ybSB0byBUQ0YgdjEgb3IgdjIgc3BlY3MuIixuLGUpfWZ1bmN0aW9uIEEobix0LGUpe2NsZWFyVGltZW91dCh0LnRpbWVyKSx5LnZhbHVlJiYxPT09dyYmUCh2b2lkIDApLFMobix0LGUpfWZ1bmN0aW9uIFAobil7MT09PXc/Qz17Y29uc2VudFN0cmluZzpuP24uZ2V0Q29uc2VudERhdGEuY29uc2VudERhdGE6dm9pZCAwLHZlbmRvckRhdGE6bj9uLmdldFZlbmRvckNvbnNlbnRzOnZvaWQgMCxnZHByQXBwbGllczpuP24uZ2V0Q29uc2VudERhdGEuZ2RwckFwcGxpZXM6cH06KEM9e2NvbnNlbnRTdHJpbmc6bj9uLnRjU3RyaW5nOnZvaWQgMCx2ZW5kb3JEYXRhOm58fHZvaWQgMCxnZHByQXBwbGllczpuJiYiYm9vbGVhbiI9PXR5cGVvZiBuLmdkcHJBcHBsaWVzP24uZ2RwckFwcGxpZXM6cH0sbiYmbi5hZGR0bENvbnNlbnQmJmwuaXNTdHIobi5hZGR0bENvbnNlbnQpJiYoQy5hZGR0bENvbnNlbnQ9bi5hZGR0bENvbnNlbnQpKSxDLmFwaVZlcnNpb249dyxhLmdkcHJEYXRhSGFuZGxlci5zZXRDb25zZW50RGF0YShDKX1mdW5jdGlvbiBTKG4sdCxlKXt2YXIgbyxhLGk7ITE9PT10LmhhdmVFeGl0ZWQmJih0LmhhdmVFeGl0ZWQ9ITAsbz10LmNvbnRleHQsYT10LmFyZ3MsaT10Lm5leHRGbixuP3kudmFsdWUmJjE9PT13PyhsLmxvZ1dhcm4obisiICdhbGxvd0F1Y3Rpb25XaXRob3V0Q29uc2VudCcgYWN0aXZhdGVkLiIsZSksaS5hcHBseShvLGEpKToobC5sb2dFcnJvcihuKyIgQ2FuY2VsaW5nIGF1Y3Rpb24gYXMgcGVyIGNvbnNlbnRNYW5hZ2VtZW50IGNvbmZpZy4iLGUpLCJmdW5jdGlvbiI9PXR5cGVvZiB0LmJpZHNCYWNrSGFuZGxlcj90LmJpZHNCYWNrSGFuZGxlcigpOmwubG9nRXJyb3IoIkVycm9yIGV4ZWN1dGluZyBiaWRzQmFja0hhbmRsZXIiKSk6aS5hcHBseShvLGEpKX1mdW5jdGlvbiBfKG4peyhuPW4mJihuLmdkcHJ8fG4udXNwP24uZ2RwcjpuKSkmJiJvYmplY3QiPT09YyhuKT8obC5pc1N0cihuLmNtcEFwaSk/ZD1uLmNtcEFwaTooZD1tLGwubG9nSW5mbygiY29uc2VudE1hbmFnZW1lbnQgY29uZmlnIGRpZCBub3Qgc3BlY2lmeSBjbXAuICBVc2luZyBzeXN0ZW0gZGVmYXVsdCBzZXR0aW5nICgiLmNvbmNhdChtLCIpLiIpKSksbC5pc051bWJlcihuLnRpbWVvdXQpP3U9bi50aW1lb3V0Oih1PXYsbC5sb2dJbmZvKCJjb25zZW50TWFuYWdlbWVudCBjb25maWcgZGlkIG5vdCBzcGVjaWZ5IHRpbWVvdXQuICBVc2luZyBzeXN0ZW0gZGVmYXVsdCBzZXR0aW5nICgiLmNvbmNhdCh2LCIpLiIpKSksImJvb2xlYW4iPT10eXBlb2Ygbi5hbGxvd0F1Y3Rpb25XaXRob3V0Q29uc2VudCYmKHkudmFsdWU9bi5hbGxvd0F1Y3Rpb25XaXRob3V0Q29uc2VudCx5LmRlZmluZWRJbkNvbmZpZz0hMCkscD0hMD09PW4uZGVmYXVsdEdkcHJTY29wZSxsLmxvZ0luZm8oImNvbnNlbnRNYW5hZ2VtZW50IG1vZHVsZSBoYXMgYmVlbiBhY3RpdmF0ZWQuLi4iKSwic3RhdGljIj09PWQmJihsLmlzUGxhaW5PYmplY3Qobi5jb25zZW50RGF0YSk/KGc9bi5jb25zZW50RGF0YSx1PTApOmwubG9nRXJyb3IoImNvbnNlbnRNYW5hZ2VtZW50IGNvbmZpZyB3aXRoIGNtcEFwaTogJ3N0YXRpYycgZGlkIG5vdCBzcGVjaWZ5IGNvbnNlbnREYXRhLiBObyBjb25zZW50cyB3aWxsIGJlIGF2YWlsYWJsZSB0byBhZGFwdGVycy4iKSksRHx8dXBianMucmVxdWVzdEJpZHMuYmVmb3JlKGgsNTApLEQ9ITApOmwubG9nV2FybigiY29uc2VudE1hbmFnZW1lbnQgY29uZmlnIG5vdCBkZWZpbmVkLCBleGl0aW5nIGNvbnNlbnQgbWFuYWdlciIpfW8uYi5nZXRDb25maWcoImNvbnNlbnRNYW5hZ2VtZW50IixmdW5jdGlvbihuKXtyZXR1cm4gXyhuLmNvbnNlbnRNYW5hZ2VtZW50KX0pfX0sWzM1NF0pOwp1cGJqc0NodW5rKFsyODRdLHszNjI6ZnVuY3Rpb24obix0LGUpe24uZXhwb3J0cz1lKDM2Myl9LDM2MzpmdW5jdGlvbihuLHQsZSl7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxlLmQodCwiY29uc2VudEFQSSIsZnVuY3Rpb24oKXtyZXR1cm4gY30pLGUuZCh0LCJjb25zZW50VGltZW91dCIsZnVuY3Rpb24oKXtyZXR1cm4gcn0pLGUuZCh0LCJzdGF0aWNDb25zZW50RGF0YSIsZnVuY3Rpb24oKXtyZXR1cm4gdX0pLHQucmVxdWVzdEJpZHNIb29rPW0sdC5yZXNldENvbnNlbnREYXRhPWZ1bmN0aW9uKCl7bD12b2lkIDAsYz12b2lkIDAsby51c3BEYXRhSGFuZGxlci5zZXRDb25zZW50RGF0YShudWxsKX0sdC5zZXRDb25zZW50Q29uZmlnPVA7dmFyIHM9ZSgwKSxhPWUoMyksbz1lKDkpO2Z1bmN0aW9uIGkobil7cmV0dXJuKGk9ImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmInN5bWJvbCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24obil7cmV0dXJuIHR5cGVvZiBufTpmdW5jdGlvbihuKXtyZXR1cm4gbiYmImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmbi5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmbiE9PVN5bWJvbC5wcm90b3R5cGU/InN5bWJvbCI6dHlwZW9mIG59KShuKX12YXIgYyxyLHUsbCxkPSJpYWIiLHA9NTAsZj0hMSxnPXtpYWI6ZnVuY3Rpb24oYSxvLGkpe3ZhciB0LGU9ZnVuY3Rpb24oKXt2YXIgZT17fTtyZXR1cm57Y29uc2VudERhdGFDYWxsYmFjazpmdW5jdGlvbihuLHQpe3QmJm4udXNwU3RyaW5nJiYoZS51c1ByaXZhY3k9bi51c3BTdHJpbmcpLGUudXNQcml2YWN5P2EoZSxpKTpvKCJVbmFibGUgdG8gZ2V0IFVTUCBjb25zZW50IHN0cmluZy4iLGkpfX19KCkscz17fTt0cnl7d2luZG93Ll9fdXNwYXBpKCJnZXRVU1BEYXRhIiwxLGUuY29uc2VudERhdGFDYWxsYmFjayl9Y2F0Y2gobil7Zm9yKHZhciBjPXdpbmRvdzshdDspe3RyeXtjLmZyYW1lcy5fX3VzcGFwaUxvY2F0b3ImJih0PWMpfWNhdGNoKG4pe31pZihjPT09d2luZG93LnRvcClicmVhaztjPWMucGFyZW50fWlmKCF0KXJldHVybiBvKCJVU1AgQ01QIG5vdCBmb3VuZC4iLGkpOyFmdW5jdGlvbihuLGksZSl7ZnVuY3Rpb24gYShuKXt2YXIgdD1uJiZuLmRhdGEmJm4uZGF0YS5fX3VzcGFwaVJldHVybjt0JiZ0LmNhbGxJZCYmdm9pZCAwIT09c1t0LmNhbGxJZF0mJihzW3QuY2FsbElkXSh0LnJldHVyblZhbHVlLHQuc3VjY2VzcyksZGVsZXRlIHNbdC5jYWxsSWRdKX13aW5kb3cuX191c3BhcGk9ZnVuY3Rpb24obix0LGUpe3ZhciBhPU1hdGgucmFuZG9tKCkrIiIsbz17X191c3BhcGlDYWxsOntjb21tYW5kOm4sdmVyc2lvbjp0LGNhbGxJZDphfX07c1thXT1lLGkucG9zdE1lc3NhZ2UobywiKiIpfSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsYSwhMSksd2luZG93Ll9fdXNwYXBpKG4sMSxmdW5jdGlvbihuLHQpe3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCJtZXNzYWdlIixhLCExKSxlKG4sdCl9KX0oImdldFVTUERhdGEiLHQsZS5jb25zZW50RGF0YUNhbGxiYWNrKX19LHN0YXRpYzpmdW5jdGlvbihuLHQsZSl7bih1LGUpfX07ZnVuY3Rpb24gbShuLHQpe3ZhciBlPXtjb250ZXh0OnRoaXMsYXJnczpbdF0sbmV4dEZuOm4sYWRVbml0czp0LmFkVW5pdHN8fHVwYmpzLmFkVW5pdHMsYmlkc0JhY2tIYW5kbGVyOnQuYmlkc0JhY2tIYW5kbGVyLGhhdmVFeGl0ZWQ6ITEsdGltZXI6bnVsbH07aWYoIWdbY10pcmV0dXJuIHMubG9nV2FybigiVVNQIGZyYW1ld29yayAoIi5jb25jYXQoYywiKSBpcyBub3QgYSBzdXBwb3J0ZWQgZnJhbWV3b3JrLiBBYm9ydGluZyBjb25zZW50TWFuYWdlbWVudCBtb2R1bGUgYW5kIHJlc3VtaW5nIGF1Y3Rpb24uIikpLGUubmV4dEZuLmFwcGx5KGUuY29udGV4dCxlLmFyZ3MpO2dbY10uY2FsbCh0aGlzLHYsYixlKSxlLmhhdmVFeGl0ZWR8fCgwPT09cj92KHZvaWQgMCxlKTplLnRpbWVyPXNldFRpbWVvdXQoZnVuY3Rpb24obil7YigiVVNQQVBJIHdvcmtmbG93IGV4Y2VlZGVkIHRpbWVvdXQgdGhyZXNob2xkLiIsbil9LmJpbmQobnVsbCxlKSxyKSl9ZnVuY3Rpb24gdihuLHQpe3ZhciBlOyFufHwhbi51c1ByaXZhY3k/YigiVVNQQVBJIHJldHVybmVkIHVuZXhwZWN0ZWQgdmFsdWUgZHVyaW5nIGxvb2t1cCBwcm9jZXNzLiIsdCxuKTooY2xlYXJUaW1lb3V0KHQudGltZXIpLChlPW4pJiZlLnVzUHJpdmFjeSYmKGw9ZS51c1ByaXZhY3ksby51c3BEYXRhSGFuZGxlci5zZXRDb25zZW50RGF0YShsKSkseShudWxsLHQpKX1mdW5jdGlvbiBiKG4sdCxlKXtjbGVhclRpbWVvdXQodC50aW1lcikseShuLHQsZSl9ZnVuY3Rpb24geShuLHQsZSl7dmFyIGEsbyxpOyExPT09dC5oYXZlRXhpdGVkJiYodC5oYXZlRXhpdGVkPSEwLGE9dC5jb250ZXh0LG89dC5hcmdzLGk9dC5uZXh0Rm4sbiYmcy5sb2dXYXJuKG4rIiBSZXN1bWluZyBhdWN0aW9uIHdpdGhvdXQgY29uc2VudCBkYXRhIGFzIHBlciBjb25zZW50TWFuYWdlbWVudCBjb25maWcuIixlKSxpLmFwcGx5KGEsbykpfWZ1bmN0aW9uIFAobil7KG49biYmbi51c3ApJiYib2JqZWN0Ij09PWkobik/KHMuaXNTdHIobi5jbXBBcGkpP2M9bi5jbXBBcGk6KGM9ZCxzLmxvZ0luZm8oImNvbnNlbnRNYW5hZ2VtZW50LnVzcCBjb25maWcgZGlkIG5vdCBzcGVjaWZ5IGNtcEFwaS4gVXNpbmcgc3lzdGVtIGRlZmF1bHQgc2V0dGluZyAoIi5jb25jYXQoZCwiKS4iKSkpLHMuaXNOdW1iZXIobi50aW1lb3V0KT9yPW4udGltZW91dDoocj1wLHMubG9nSW5mbygiY29uc2VudE1hbmFnZW1lbnQudXNwIGNvbmZpZyBkaWQgbm90IHNwZWNpZnkgdGltZW91dC4gVXNpbmcgc3lzdGVtIGRlZmF1bHQgc2V0dGluZyAoIi5jb25jYXQocCwiKS4iKSkpLHMubG9nSW5mbygiVVNQQVBJIGNvbnNlbnRNYW5hZ2VtZW50IG1vZHVsZSBoYXMgYmVlbiBhY3RpdmF0ZWQuLi4iKSwic3RhdGljIj09PWMmJihzLmlzUGxhaW5PYmplY3Qobi5jb25zZW50RGF0YSkmJnMuaXNQbGFpbk9iamVjdChuLmNvbnNlbnREYXRhLmdldFVTUERhdGEpPyhuLmNvbnNlbnREYXRhLmdldFVTUERhdGEudXNwU3RyaW5nJiYodT17dXNQcml2YWN5Om4uY29uc2VudERhdGEuZ2V0VVNQRGF0YS51c3BTdHJpbmd9KSxyPTApOnMubG9nRXJyb3IoImNvbnNlbnRNYW5hZ2VtZW50IGNvbmZpZyB3aXRoIGNtcEFwaTogJ3N0YXRpYycgZGlkIG5vdCBzcGVjaWZ5IGNvbnNlbnREYXRhLiBObyBjb25zZW50cyB3aWxsIGJlIGF2YWlsYWJsZSB0byBhZGFwdGVycy4iKSksZnx8dXBianMucmVxdWVzdEJpZHMuYmVmb3JlKG0sNTApLGY9ITApOnMubG9nV2FybigiY29uc2VudE1hbmFnZW1lbnQudXNwIGNvbmZpZyBub3QgZGVmaW5lZCwgZXhpdGluZyB1c3AgY29uc2VudCBtYW5hZ2VyIil9YS5iLmdldENvbmZpZygiY29uc2VudE1hbmFnZW1lbnQiLGZ1bmN0aW9uKG4pe3JldHVybiBQKG4uY29uc2VudE1hbmFnZW1lbnQpfSl9fSxbMzYyXSk7CnVwYmpzQ2h1bmsoWzI4M10sezM2NDpmdW5jdGlvbihlLHIsbil7ZS5leHBvcnRzPW4oMzY1KX0sMzY1OmZ1bmN0aW9uKGUscixuKXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLG4uZChyLCJzcGVjIixmdW5jdGlvbigpe3JldHVybiBzfSk7dmFyIGM9bigwKSx0PW4oMSk7ZnVuY3Rpb24gaSgpe3JldHVybihpPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgcj0xO3I8YXJndW1lbnRzLmxlbmd0aDtyKyspe3ZhciBuPWFyZ3VtZW50c1tyXTtmb3IodmFyIHQgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobix0KSYmKGVbdF09blt0XSl9cmV0dXJuIGV9KS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGE9MCxkPSJjb25zdW1hYmxlIixzPXtjb2RlOiJjb25zdW1hYmxlIixpc0JpZFJlcXVlc3RWYWxpZDpmdW5jdGlvbihlKXtyZXR1cm4hIShlLnBhcmFtcy5uZXR3b3JrSWQmJmUucGFyYW1zLnNpdGVJZCYmZS5wYXJhbXMudW5pdElkJiZlLnBhcmFtcy51bml0TmFtZSl9LGJ1aWxkUmVxdWVzdHM6ZnVuY3Rpb24oZSxyKXt2YXIgbj17bWV0aG9kOiJQT1NUIix1cmw6IiIsZGF0YToiIixiaWRSZXF1ZXN0OltdfTtpZihlLmxlbmd0aDwxKXJldHVybiBuO2E9ZVswXS5wYXJhbXMuc2l0ZUlkLGQ9ZVswXS5iaWRkZXI7dmFyIHM9aSh7cGxhY2VtZW50czpbXSx0aW1lOkRhdGUubm93KCksdXJsOnIucmVmZXJlckluZm8ucmVmZXJlcixyZWZlcnJlcjpkb2N1bWVudC5yZWZlcnJlcixzb3VyY2U6W3tuYW1lOiJwcmViaWRqcyIsdmVyc2lvbjoiNC4xNy4wIn1dfSxlWzBdLnBhcmFtcyk7cmV0dXJuIHImJnIuZ2RwckNvbnNlbnQmJihzLmdkcHI9e2NvbnNlbnQ6ci5nZHByQ29uc2VudC5jb25zZW50U3RyaW5nLGFwcGxpZXM6ImJvb2xlYW4iIT10eXBlb2Ygci5nZHByQ29uc2VudC5nZHByQXBwbGllc3x8ci5nZHByQ29uc2VudC5nZHByQXBwbGllc30pLHImJnIudXNwQ29uc2VudCYmKHMuY2NwYT1yLnVzcENvbnNlbnQpLGUubWFwKGZ1bmN0aW9uKGUpe3ZhciBuLHI9ZS5tZWRpYVR5cGVzJiZlLm1lZGlhVHlwZXMuYmFubmVyJiZlLm1lZGlhVHlwZXMuYmFubmVyLnNpemVzfHxlLnNpemVzfHxbXSx0PWkoe2Rpdk5hbWU6ZS5iaWRJZCxhZFR5cGVzOmUuYWRUeXBlc3x8KG49W10sci5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciByPXUuaW5kZXhPZihlWzBdKyJ4IitlWzFdKTswPD1yJiZuLnB1c2gocil9KSxuKX0sZS5wYXJhbXMpO3QubmV0d29ya0lkJiZ0LnNpdGVJZCYmdC51bml0SWQmJnQudW5pdE5hbWUmJnMucGxhY2VtZW50cy5wdXNoKHQpfSksbi5kYXRhPUpTT04uc3RyaW5naWZ5KHMpLG4uYmlkUmVxdWVzdD1lLG4uYmlkZGVyUmVxdWVzdD1yLG4udXJsPSJodHRwczovL2Uuc2VydmVyYmlkLmNvbS9hcGkvdjIiLG59LGludGVycHJldFJlc3BvbnNlOmZ1bmN0aW9uKGUscil7dmFyIG49W10sdD1yLmJpZFJlcXVlc3Q7ZT0oZXx8e30pLmJvZHk7Zm9yKHZhciBzLGk9MDtpPHQubGVuZ3RoO2krKyl7dmFyIGEsZCx1LHA9e30sbz0odT10W2ldKS5iaWRJZDtlJiYoZD0oYT1lLmRlY2lzaW9ucyYmZS5kZWNpc2lvbnNbb10pJiZhLnByaWNpbmcmJmEucHJpY2luZy5jbGVhclByaWNlLGEmJmQmJihwLnJlcXVlc3RJZD1vLHAuY3BtPWQscC53aWR0aD1hLndpZHRoLHAuaGVpZ2h0PWEuaGVpZ2h0LHAudW5pdElkPXUucGFyYW1zLnVuaXRJZCxwLnVuaXROYW1lPXUucGFyYW1zLnVuaXROYW1lLHAuYWQ9KHM9YSxwLnVuaXRJZCxwLnVuaXROYW1lLHMuY29udGVudHMmJnMuY29udGVudHNbMF0mJnMuY29udGVudHNbMF0uYm9keStjLmNyZWF0ZVRyYWNrUGl4ZWxIdG1sKHMuaW1wcmVzc2lvblVybCkpLHAuY3VycmVuY3k9IlVTRCIscC5jcmVhdGl2ZUlkPWEuYWRJZCxwLnR0bD0zMCxwLm5ldFJldmVudWU9ITAscC5yZWZlcnJlcj1yLmJpZGRlclJlcXVlc3QucmVmZXJlckluZm8ucmVmZXJlcixuLnB1c2gocCkpKX1yZXR1cm4gbn0sZ2V0VXNlclN5bmNzOmZ1bmN0aW9uKGUscil7cmV0dXJuIGUuaWZyYW1lRW5hYmxlZD9be3R5cGU6ImlmcmFtZSIsdXJsOiJodHRwczovL3N5bmMuc2VydmVyYmlkLmNvbS9zcy8iK2ErIi5odG1sIn1dOmUucGl4ZWxFbmFibGVkJiYwPHIubGVuZ3RoP3JbMF0uYm9keS5waXhlbHM6dm9pZCBjLmxvZ1dhcm4oZCsiOiBQbGVhc2UgZW5hYmxlIGlmcmFtZSBiYXNlZCB1c2VyIHN5bmNpbmcuIil9fSx1PVtudWxsLCIxMjB4OTAiLCIxMjB4OTAiLCI0Njh4NjAiLCI3Mjh4OTAiLCIzMDB4MjUwIiwiMTYweDYwMCIsIjEyMHg2MDAiLCIzMDB4MTAwIiwiMTgweDE1MCIsIjMzNngyODAiLCIyNDB4NDAwIiwiMjM0eDYwIiwiODh4MzEiLCIxMjB4NjAiLCIxMjB4MjQwIiwiMTI1eDEyNSIsIjIyMHgyNTAiLCIyNTB4MjUwIiwiMjUweDkwIiwiMHgwIiwiMjAweDkwIiwiMzAweDUwIiwiMzIweDUwIiwiMzIweDQ4MCIsIjE4NXgxODUiLCI2MjB4NDUiLCIzMDB4MTI1IiwiODAweDI1MCJdO3VbNzddPSI5NzB4OTAiLHVbMTIzXT0iOTcweDI1MCIsdVs0M109IjMwMHg2MDAiLHVbMjg2XT0iOTcweDY2Iix1WzMyMzBdPSI5NzB4MjgwIix1WzQyOV09IjQ4Nng2MCIsdVszNzRdPSI3MDB4NTAwIix1WzkzNF09IjMwMHgxMDUwIix1WzE1NzhdPSIzMjB4MTAwIix1WzMzMV09IjMyMHgyNTAiLHVbMzMwMV09IjMyMHgyNjciLHVbMjczMF09IjcyOHgyNTAiLE9iamVjdCh0LnJlZ2lzdGVyQmlkZGVyKShzKX19LFszNjRdKTsKdXBianNDaHVuayhbMjgxXSx7MzY4OmZ1bmN0aW9uKGUscixhKXtlLmV4cG9ydHM9YSgzNjkpfSwzNjk6ZnVuY3Rpb24oZSxyLGEpeyJ1c2Ugc3RyaWN0IjtPYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksYS5kKHIsInN0b3JhZ2UiLGZ1bmN0aW9uKCl7cmV0dXJuIGx9KSxhLmQociwic3BlYyIsZnVuY3Rpb24oKXtyZXR1cm4gb30pO3ZhciBnPWEoMCksaT1hKDEpLHQ9YSgyKSxzPWEoNyksbD1PYmplY3Qocy5iKSgyNCksbj0iY29udmVyc2FudCIsbz17Y29kZTpuLGd2bGlkOjI0LGFsaWFzZXM6WyJjbnZyIl0sc3VwcG9ydGVkTWVkaWFUeXBlczpbdC5iLHQuZF0saXNCaWRSZXF1ZXN0VmFsaWQ6ZnVuY3Rpb24oZSl7aWYoIWV8fCFlLnBhcmFtcylyZXR1cm4gZy5sb2dXYXJuKG4rIjogTWlzc2luZyBiaWQgcGFyYW1ldGVycyIpLCExO2lmKCFnLmlzU3RyKGUucGFyYW1zLnNpdGVfaWQpKXJldHVybiBnLmxvZ1dhcm4obisiOiBzaXRlX2lkIG11c3QgYmUgc3BlY2lmaWVkIGFzIGEgc3RyaW5nIiksITE7aWYoYihlKSlpZihlLnBhcmFtcy5taW1lcyl7aWYoIWcuaXNBcnJheShlLnBhcmFtcy5taW1lcyl8fCFlLnBhcmFtcy5taW1lcy5ldmVyeShmdW5jdGlvbihlKXtyZXR1cm4gZy5pc1N0cihlKX0pKXJldHVybiBnLmxvZ1dhcm4obisiOiBtaW1lcyBtdXN0IGJlIGFuIGFycmF5IG9mIHN0cmluZ3MiKSwhMX1lbHNlIGcubG9nV2FybihuKyI6IG1pbWVzIHNob3VsZCBiZSBzcGVjaWZpZWQgZm9yIHZpZGVvcyIpO3JldHVybiEwfSxidWlsZFJlcXVlc3RzOmZ1bmN0aW9uKGUscil7dmFyIGEsaT1yJiZyLnJlZmVyZXJJbmZvP3IucmVmZXJlckluZm8ucmVmZXJlcjoiIixvPSIiLGQ9IiIscD1udWxsLHU9Il9wdWJjaWQiLGM9Imh0dHBzOi8vd2ViLmhiLmFkLmNwZS5kb3RvbWkuY29tL2N2eC9jbGllbnQvaGIvb3J0Yi8yNSIsdD1lLm1hcChmdW5jdGlvbihlKXt2YXIgcj1nLmdldEJpZElkUGFyYW1ldGVyKCJiaWRmbG9vciIsZS5wYXJhbXMpO289Zy5nZXRCaWRJZFBhcmFtZXRlcigic2l0ZV9pZCIsZS5wYXJhbXMpfHxvLHU9Zy5nZXRCaWRJZFBhcmFtZXRlcigicHViY2lkX25hbWUiLGUucGFyYW1zKXx8dSxkPWUuYXVjdGlvbklkO3ZhciBhLGksdCxzLG49e2lkOmUuYmlkSWQsc2VjdXJlOjEsYmlkZmxvb3I6cnx8MCxkaXNwbGF5bWFuYWdlcjoiUHJlYmlkLmpzIixkaXNwbGF5bWFuYWdlcnZlcjoiNC4xNy4wIn07cmV0dXJuIGYoZS5wYXJhbXMudGFnX2lkLG4sInRhZ2lkIiksYihlKT8odD17fSwoaT12KChhPWcuZGVlcEFjY2VzcyhlLCJtZWRpYVR5cGVzLnZpZGVvIil8fHt9KS5wbGF5ZXJTaXplfHxlLnNpemVzKSkmJmlbMF0mJihmKGlbMF0udyx0LCJ3IiksZihpWzBdLmgsdCwiaCIpKSxmKGUucGFyYW1zLnBvc2l0aW9uLHQsInBvcyIpLGYoZS5wYXJhbXMubWltZXN8fGEubWltZXMsdCwibWltZXMiKSxmKGUucGFyYW1zLm1heGR1cmF0aW9uLHQsIm1heGR1cmF0aW9uIiksZihlLnBhcmFtcy5wcm90b2NvbHN8fGEucHJvdG9jb2xzLHQsInByb3RvY29scyIpLGYoZS5wYXJhbXMuYXBpfHxhLmFwaSx0LCJhcGkiKSxuLnZpZGVvPXQpOihzPXtmb3JtYXQ6digoZy5kZWVwQWNjZXNzKGUsIm1lZGlhVHlwZXMuYmFubmVyIil8fHt9KS5zaXplc3x8ZS5zaXplcyl9LGYoZS5wYXJhbXMucG9zaXRpb24scywicG9zIiksbi5iYW5uZXI9cyksZS51c2VySWQmJmUudXNlcklkLnB1YmNpZD9wPWUudXNlcklkLnB1YmNpZDplLmNydW1icyYmZS5jcnVtYnMucHViY2lkJiYocD1lLmNydW1icy5wdWJjaWQpLGUucGFyYW1zLndoaXRlX2xhYmVsX3VybCYmKGM9ZS5wYXJhbXMud2hpdGVfbGFiZWxfdXJsKSxufSkscz17aWQ6ZCxpbXA6dCxzaXRlOntpZDpvLG1vYmlsZTpudWxsIT09ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignbWV0YVtuYW1lPSJ2aWV3cG9ydCJdW2NvbnRlbnQqPSJ3aWR0aD1kZXZpY2Utd2lkdGgiXScpPzE6MCxwYWdlOml9LGRldmljZTooYT1uYXZpZ2F0b3IubGFuZ3VhZ2U/Imxhbmd1YWdlIjoidXNlckxhbmd1YWdlIix7aDpzY3JlZW4uaGVpZ2h0LHc6c2NyZWVuLndpZHRoLGRudDoiMSI9PT1uYXZpZ2F0b3IuZG9Ob3RUcmFja3x8IjEiPT09d2luZG93LmRvTm90VHJhY2t8fCIxIj09PW5hdmlnYXRvci5tc0RvTm9UcmFja3x8InllcyI9PT1uYXZpZ2F0b3IuZG9Ob3RUcmFjaz8xOjAsbGFuZ3VhZ2U6bmF2aWdhdG9yW2FdLnNwbGl0KCItIilbMF0sbWFrZTpuYXZpZ2F0b3IudmVuZG9yP25hdmlnYXRvci52ZW5kb3I6IiIsdWE6bmF2aWdhdG9yLnVzZXJBZ2VudH0pLGF0OjF9LG49e307ciYmKHIuZ2RwckNvbnNlbnQmJihuLmNvbnNlbnQ9ci5nZHByQ29uc2VudC5jb25zZW50U3RyaW5nLCJib29sZWFuIj09dHlwZW9mIHIuZ2RwckNvbnNlbnQuZ2RwckFwcGxpZXMmJmcuZGVlcFNldFZhbHVlKHMsInJlZ3MuZXh0LmdkcHIiLHIuZ2RwckNvbnNlbnQuZ2RwckFwcGxpZXM/MTowKSksci51c3BDb25zZW50JiZnLmRlZXBTZXRWYWx1ZShzLCJyZWdzLmV4dC51c19wcml2YWN5IixyLnVzcENvbnNlbnQpKSwocD1wfHxmdW5jdGlvbihlKXt2YXIgcjt0cnl7dmFyIGE7KHI9bC5nZXRDb29raWUoZSkpfHwoIiI9PT0oYT1sLmdldERhdGFGcm9tTG9jYWxTdG9yYWdlKCIiLmNvbmNhdChlLCJfZXhwIikpKXx8YSYmMDxuZXcgRGF0ZShhKS5nZXRUaW1lKCktRGF0ZS5ub3coKSkmJihyPShyPWwuZ2V0RGF0YUZyb21Mb2NhbFN0b3JhZ2UoZSkpP2RlY29kZVVSSUNvbXBvbmVudChyKTpyKSxnLmlzU3RyKHIpJiYieyI9PT1yLmNoYXJBdCgwKSYmKHI9SlNPTi5wYXJzZShyKSl9Y2F0Y2goZSl7Zy5sb2dFcnJvcihlKX1yZXR1cm4gcn0odSkpJiYobi5mcGM9cCk7dmFyIG09ZnVuY3Rpb24oZSl7dmFyIHI9ZVswXSxhPVtdO3t2YXIgaTtnLmlzQXJyYXkoci51c2VySWRBc0VpZHMpJiYwPHIudXNlcklkQXNFaWRzLmxlbmd0aCYmKGk9eyJhZHNlcnZlci5vcmciOjEsImxpdmVyYW1wLmNvbSI6MSwiY3JpdGVvLmNvbSI6MSwiaWQ1LXN5bmMuY29tIjoxLCJwYXJyYWJsZS5jb20iOjEsImRpZ2l0cnUuc3QiOjEsImxpdmVpbnRlbnQuY29tIjoxfSxyLnVzZXJJZEFzRWlkcy5mb3JFYWNoKGZ1bmN0aW9uKGUpe2kuaGFzT3duUHJvcGVydHkoZS5zb3VyY2UpJiZhLnB1c2goZSl9KSl9cmV0dXJuIGF9KGUpO3JldHVybiAwPG0ubGVuZ3RoJiYobi5laWRzPW0pLGcuaXNFbXB0eShuKXx8KHMudXNlcj17ZXh0Om59KSx7bWV0aG9kOiJQT1NUIix1cmw6YyxkYXRhOnN9fSxpbnRlcnByZXRSZXNwb25zZTpmdW5jdGlvbihuLGUpe3ZhciBvPVtdLGQ9e307cmV0dXJuIG49bi5ib2R5LGUmJmUuZGF0YSYmZS5kYXRhLmltcCYmZy5fZWFjaChlLmRhdGEuaW1wLGZ1bmN0aW9uKGUpe3JldHVybiBkW2UuaWRdPWV9KSxuJiZnLmlzQXJyYXkobi5zZWF0YmlkKSYmZy5fZWFjaChuLnNlYXRiaWQsZnVuY3Rpb24oZSl7Zy5fZWFjaChlLmJpZCxmdW5jdGlvbihlKXt2YXIgcixhLGksdCxzPXBhcnNlRmxvYXQoZS5wcmljZSk7MDxzJiZlLmltcGlkJiYocj1lLmFkbXx8IiIsYT1lLm51cmx8fCIiLGk9ZFtlLmltcGlkXSx0PXtyZXF1ZXN0SWQ6ZS5pbXBpZCxjdXJyZW5jeTpuLmN1cnx8IlVTRCIsY3BtOnMsY3JlYXRpdmVJZDplLmNyaWR8fCIiLHR0bDozMDAsbmV0UmV2ZW51ZTohMH0saS52aWRlbz8oIjwiPT09ci5jaGFyQXQoMCk/dC52YXN0WG1sPXI6dC52YXN0VXJsPXIsdC5tZWRpYVR5cGU9InZpZGVvIix0LndpZHRoPWkudmlkZW8udyx0LmhlaWdodD1pLnZpZGVvLmgpOih0LmFkPXIrJzxpbWcgc3JjPSInK2ErJyIgLz4nLHQud2lkdGg9ZS53LHQuaGVpZ2h0PWUuaCksby5wdXNoKHQpKX0pfSksb30sdHJhbnNmb3JtQmlkUGFyYW1zOmZ1bmN0aW9uKGUpe3JldHVybiBnLmNvbnZlcnRUeXBlcyh7c2l0ZV9pZDoic3RyaW5nIixzZWN1cmU6Im51bWJlciIsbW9iaWxlOiJudW1iZXIifSxlKX19O2Z1bmN0aW9uIHYoZSl7dmFyIHI7cmV0dXJuIEFycmF5LmlzQXJyYXkoZSkmJihyPTI9PT1lLmxlbmd0aCYmIm51bWJlciI9PXR5cGVvZiBlWzBdJiYibnVtYmVyIj09dHlwZW9mIGVbMV0/W3t3OmVbMF0saDplWzFdfV06Zy5fbWFwKGUsZnVuY3Rpb24oZSl7cmV0dXJue3c6ZVswXSxoOmVbMV19fSkpLHJ9ZnVuY3Rpb24gYihlKXtyZXR1cm4idmlkZW8iPT09ZS5tZWRpYVR5cGV8fGcuZGVlcEFjY2VzcyhlLCJtZWRpYVR5cGVzLnZpZGVvIil9ZnVuY3Rpb24gZihlLHIsYSl7ZSYmKHJbYV09ZSl9T2JqZWN0KGkucmVnaXN0ZXJCaWRkZXIpKG8pfX0sWzM2OF0pOwp1cGJqc0NodW5rKFsxXSx7Mzc2OmZ1bmN0aW9uKHQsZSxyKXt0LmV4cG9ydHM9cigzNzcpfSwzNzc6ZnVuY3Rpb24obW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShfX3dlYnBhY2tfZXhwb3J0c19fLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiQURBUFRFUl9WRVJTSU9OIixmdW5jdGlvbigpe3JldHVybiBBREFQVEVSX1ZFUlNJT059KSxfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiUFJPRklMRV9JRF9QVUJMSVNIRVJUQUciLGZ1bmN0aW9uKCl7cmV0dXJuIFBST0ZJTEVfSURfUFVCTElTSEVSVEFHfSksX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sInNwZWMiLGZ1bmN0aW9uKCl7cmV0dXJuIHNwZWN9KSxfX3dlYnBhY2tfZXhwb3J0c19fLnRyeUdldENyaXRlb0Zhc3RCaWQ9dHJ5R2V0Q3JpdGVvRmFzdEJpZDt2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19zcmNfYWRsb2FkZXJfanNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKDM4KSxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX3NyY19hZGFwdGVyc19iaWRkZXJGYWN0b3J5X2pzX189X193ZWJwYWNrX3JlcXVpcmVfXygxKSxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX3NyY19jb25maWdfanNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKDMpLF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fc3JjX21lZGlhVHlwZXNfanNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKDIpLF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fc3JjX3V0aWxzX2pzX189X193ZWJwYWNrX3JlcXVpcmVfXygwKSxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfY29yZV9qc19wdXJlX2ZlYXR1cmVzX2FycmF5X2ZpbmRfanNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKDEwKSxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfY29yZV9qc19wdXJlX2ZlYXR1cmVzX2FycmF5X2ZpbmRfanNfX19kZWZhdWx0PV9fd2VicGFja19yZXF1aXJlX18ubihfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfY29yZV9qc19wdXJlX2ZlYXR1cmVzX2FycmF5X2ZpbmRfanNfXyksX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X2NyaXRlb19kaXJlY3RfcnNhX3ZhbGlkYXRlX2J1aWxkX3ZlcmlmeV9qc19fPV9fd2VicGFja19yZXF1aXJlX18oMzc4KSxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfY3JpdGVvX2RpcmVjdF9yc2FfdmFsaWRhdGVfYnVpbGRfdmVyaWZ5X2pzX19fZGVmYXVsdD1fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X2NyaXRlb19kaXJlY3RfcnNhX3ZhbGlkYXRlX2J1aWxkX3ZlcmlmeV9qc19fKSxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX3NyY19zdG9yYWdlTWFuYWdlcl9qc19fPV9fd2VicGFja19yZXF1aXJlX18oNyk7ZnVuY3Rpb24gX2V4dGVuZHMoKXtyZXR1cm4oX2V4dGVuZHM9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTE7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl7dmFyIHI9YXJndW1lbnRzW2VdO2Zvcih2YXIgaSBpbiByKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChyLGkpJiYodFtpXT1yW2ldKX1yZXR1cm4gdH0pLmFwcGx5KHRoaXMsYXJndW1lbnRzKX12YXIgR1ZMSUQ9OTEsQURBUFRFUl9WRVJTSU9OPTMyLEJJRERFUl9DT0RFPSJjcml0ZW8iLENEQl9FTkRQT0lOVD0iaHR0cHM6Ly9iaWRkZXIuY3JpdGVvLmNvbS9jZGIiLFBST0ZJTEVfSURfSU5MSU5FPTIwNyxQUk9GSUxFX0lEX1BVQkxJU0hFUlRBRz0xODUsc3RvcmFnZT1PYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19zcmNfc3RvcmFnZU1hbmFnZXJfanNfXy5iKShHVkxJRCksTE9HX1BSRUZJWD0iQ3JpdGVvOiAiLFBVQkxJU0hFUl9UQUdfVVJMPSJodHRwczovL3N0YXRpYy5jcml0ZW8ubmV0L2pzL2xkL3B1Ymxpc2hlcnRhZy5wcmViaWQuanMiLEZBU1RfQklEX1BVQktFWV9FPTY1NTM3LEZBU1RfQklEX1BVQktFWV9OPSJ6dFFZd0NFNUJVN1Q5Q0RNNWhlNnJLb2Fic3RYUm1reng1NHpGUFprV2JLNTMwZHd0TEJEZWFXQk14SEJVVDU1Q1l5Ym9SL0VaNGVmZ2hQaTNDb05HZkdXZXpwamtvOVA2cDJFd0dBcnRIRWVTNHNsaHUvU3BTSUZNakc2ZmRycFJvTnVJQU1ocTFaK1ByLytIT2QxcFRoRktlR0ZyMi9OaHRBZytUWEF6YVU9IixzcGVjPXtjb2RlOkJJRERFUl9DT0RFLGd2bGlkOkdWTElELHN1cHBvcnRlZE1lZGlhVHlwZXM6W19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fc3JjX21lZGlhVHlwZXNfanNfXy5iLF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fc3JjX21lZGlhVHlwZXNfanNfXy5kLF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fc3JjX21lZGlhVHlwZXNfanNfXy5jXSxpc0JpZFJlcXVlc3RWYWxpZDpmdW5jdGlvbih0KXtyZXR1cm4hKCF0fHwhdC5wYXJhbXN8fCF0LnBhcmFtcy56b25lSWQmJiF0LnBhcmFtcy5uZXR3b3JrSWQpJiYhKGhhc1ZpZGVvTWVkaWFUeXBlKHQpJiYhaGFzVmFsaWRWaWRlb01lZGlhVHlwZSh0KSl9LGJ1aWxkUmVxdWVzdHM6ZnVuY3Rpb24odCxlKXt2YXIgcixpLHMsbyxfO2lmKF9leHRlbmRzKGUse3B1Ymxpc2hlckV4dDpfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX3NyY19jb25maWdfanNfXy5iLmdldENvbmZpZygiZnBkLmNvbnRleHQiKSx1c2VyRXh0Ol9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fc3JjX2NvbmZpZ19qc19fLmIuZ2V0Q29uZmlnKCJmcGQudXNlciIpLGNlaDpfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX3NyY19jb25maWdfanNfXy5iLmdldENvbmZpZygiY3JpdGVvLmNlaCIpfSkscHVibGlzaGVyVGFnQXZhaWxhYmxlKCl8fCh3aW5kb3cuQ3JpdGVvPXdpbmRvdy5Dcml0ZW98fHt9LHdpbmRvdy5Dcml0ZW8udXNlUHJlYmlkRXZlbnRzPSExLHRyeUdldENyaXRlb0Zhc3RCaWQoKSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7T2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fc3JjX2FkbG9hZGVyX2pzX18uYSkoUFVCTElTSEVSX1RBR19VUkwsQklEREVSX0NPREUpfSxlLnRpbWVvdXQpKSxfPXB1Ymxpc2hlclRhZ0F2YWlsYWJsZSgpPyhyPW5ldyBDcml0ZW8uUHViVGFnLkFkYXB0ZXJzLlByZWJpZChQUk9GSUxFX0lEX1BVQkxJU0hFUlRBRyxBREFQVEVSX1ZFUlNJT04sdCxlLCI0LjE3LjAiKSxpPV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fc3JjX2NvbmZpZ19qc19fLmIuZ2V0Q29uZmlnKCJlbmFibGVTZW5kQWxsQmlkcyIpLHIuc2V0RW5hYmxlU2VuZEFsbEJpZHMmJiJmdW5jdGlvbiI9PXR5cGVvZiByLnNldEVuYWJsZVNlbmRBbGxCaWRzJiYiYm9vbGVhbiI9PXR5cGVvZiBpJiZyLnNldEVuYWJsZVNlbmRBbGxCaWRzKGkpLG89ci5idWlsZENkYlVybCgpLHIuYnVpbGRDZGJSZXF1ZXN0KCkpOihvPWJ1aWxkQ2RiVXJsKHM9YnVpbGRDb250ZXh0KHQsZSkpLGJ1aWxkQ2RiUmVxdWVzdChzLHQsZSkpKXJldHVybnttZXRob2Q6IlBPU1QiLHVybDpvLGRhdGE6XyxiaWRSZXF1ZXN0czp0fX0saW50ZXJwcmV0UmVzcG9uc2U6ZnVuY3Rpb24odCxzKXt2YXIgZT10LmJvZHl8fHQ7aWYocHVibGlzaGVyVGFnQXZhaWxhYmxlKCkpe3ZhciByPUNyaXRlby5QdWJUYWcuQWRhcHRlcnMuUHJlYmlkLkdldEFkYXB0ZXIocyk7aWYocilyZXR1cm4gci5pbnRlcnByZXRSZXNwb25zZShlLHMpfXZhciBvPVtdO3JldHVybiBlJiZlLnNsb3RzJiZfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX3NyY191dGlsc19qc19fLmlzQXJyYXkoZS5zbG90cykmJmUuc2xvdHMuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdD1fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfY29yZV9qc19wdXJlX2ZlYXR1cmVzX2FycmF5X2ZpbmRfanNfX19kZWZhdWx0KCkocy5iaWRSZXF1ZXN0cyxmdW5jdGlvbih0KXtyZXR1cm4gdC5hZFVuaXRDb2RlPT09ZS5pbXBpZCYmKCF0LnBhcmFtcy56b25lSWR8fHBhcnNlSW50KHQucGFyYW1zLnpvbmVJZCk9PT1lLnpvbmVpZCl9KSxyPXQuYmlkSWQsaT17cmVxdWVzdElkOnIsYWRJZDplLmJpZElkfHxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX3NyY191dGlsc19qc19fLmdldFVuaXF1ZUlkZW50aWZpZXJTdHIoKSxjcG06ZS5jcG0sY3VycmVuY3k6ZS5jdXJyZW5jeSxuZXRSZXZlbnVlOiEwLHR0bDplLnR0bHx8NjAsY3JlYXRpdmVJZDpyLHdpZHRoOmUud2lkdGgsaGVpZ2h0OmUuaGVpZ2h0LGRlYWxJZDplLmRlYWxDb2RlfTtpZihlLm5hdGl2ZSlpZih0LnBhcmFtcy5uYXRpdmVDYWxsYmFjaylpLmFkPWNyZWF0ZU5hdGl2ZUFkKHIsZS5uYXRpdmUsdC5wYXJhbXMubmF0aXZlQ2FsbGJhY2spO2Vsc2V7aWYoITA9PT1fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX3NyY19jb25maWdfanNfXy5iLmdldENvbmZpZygiZW5hYmxlU2VuZEFsbEJpZHMiKSlyZXR1cm47aS5uYXRpdmU9Y3JlYXRlUHJlYmlkTmF0aXZlQWQoZS5uYXRpdmUpLGkubWVkaWFUeXBlPV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fc3JjX21lZGlhVHlwZXNfanNfXy5jfWVsc2UgZS52aWRlbz8oaS52YXN0VXJsPWUuZGlzcGxheXVybCxpLm1lZGlhVHlwZT1fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX3NyY19tZWRpYVR5cGVzX2pzX18uZCk6aS5hZD1lLmNyZWF0aXZlO28ucHVzaChpKX0pLG99LG9uVGltZW91dDpmdW5jdGlvbih0KXt2YXIgZTtwdWJsaXNoZXJUYWdBdmFpbGFibGUoKSYmQXJyYXkuaXNBcnJheSh0KSYmKGU9W10sdC5mb3JFYWNoKGZ1bmN0aW9uKHQpey0xPT09ZS5pbmRleE9mKHQuYXVjdGlvbklkKSYmKGUucHVzaCh0LmF1Y3Rpb25JZCksQ3JpdGVvLlB1YlRhZy5BZGFwdGVycy5QcmViaWQuR2V0QWRhcHRlcih0LmF1Y3Rpb25JZCkuaGFuZGxlQmlkVGltZW91dCgpKX0pKX0sb25CaWRXb246ZnVuY3Rpb24odCl7cHVibGlzaGVyVGFnQXZhaWxhYmxlKCkmJnQmJkNyaXRlby5QdWJUYWcuQWRhcHRlcnMuUHJlYmlkLkdldEFkYXB0ZXIodC5hdWN0aW9uSWQpLmhhbmRsZUJpZFdvbih0KX0sb25TZXRUYXJnZXRpbmc6ZnVuY3Rpb24odCl7cHVibGlzaGVyVGFnQXZhaWxhYmxlKCkmJkNyaXRlby5QdWJUYWcuQWRhcHRlcnMuUHJlYmlkLkdldEFkYXB0ZXIodC5hdWN0aW9uSWQpLmhhbmRsZVNldFRhcmdldGluZyh0KX19O2Z1bmN0aW9uIHB1Ymxpc2hlclRhZ0F2YWlsYWJsZSgpe3JldHVybiJ1bmRlZmluZWQiIT10eXBlb2YgQ3JpdGVvJiZDcml0ZW8uUHViVGFnJiZDcml0ZW8uUHViVGFnLkFkYXB0ZXJzJiZDcml0ZW8uUHViVGFnLkFkYXB0ZXJzLlByZWJpZH1mdW5jdGlvbiBidWlsZENvbnRleHQodCxlKXt2YXIgcj0iIjtlJiZlLnJlZmVyZXJJbmZvJiYocj1lLnJlZmVyZXJJbmZvLnJlZmVyZXIpO3ZhciBpPV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fc3JjX3V0aWxzX2pzX18ucGFyc2VVcmwocikuc2VhcmNoLHM9e3VybDpyLGRlYnVnOiIxIj09PWkucGJ0X2RlYnVnLG5vTG9nOiIxIj09PWkucGJ0X25vbG9nLGFtcDohMX07cmV0dXJuIHQuZm9yRWFjaChmdW5jdGlvbih0KXsiYW1wIj09PXQucGFyYW1zLmludGVncmF0aW9uTW9kZSYmKHMuYW1wPSEwKX0pLHN9ZnVuY3Rpb24gYnVpbGRDZGJVcmwodCl7dmFyIGU9Q0RCX0VORFBPSU5UO3JldHVybiBlKz0iP3Byb2ZpbGVJZD0iK1BST0ZJTEVfSURfSU5MSU5FLGUrPSImYXY9IitTdHJpbmcoQURBUFRFUl9WRVJTSU9OKSxlKz0iJnd2PSIrZW5jb2RlVVJJQ29tcG9uZW50KCI0LjE3LjAiKSxlKz0iJmNiPSIrU3RyaW5nKE1hdGguZmxvb3IoOTk5OTk5OTk5OTkqTWF0aC5yYW5kb20oKSkpLHQuYW1wJiYoZSs9IiZpbT0xIiksdC5kZWJ1ZyYmKGUrPSImZGVidWc9MSIpLHQubm9Mb2cmJihlKz0iJm5vbG9nPTEiKSxlfWZ1bmN0aW9uIGNoZWNrTmF0aXZlU2VuZElkKHQpe3JldHVybiF0Lm5hdGl2ZVBhcmFtc3x8ISh0Lm5hdGl2ZVBhcmFtcy5pbWFnZSYmITAhPT10Lm5hdGl2ZVBhcmFtcy5pbWFnZS5zZW5kSWR8fHQubmF0aXZlUGFyYW1zLmljb24mJiEwIT09dC5uYXRpdmVQYXJhbXMuaWNvbi5zZW5kSWR8fHQubmF0aXZlUGFyYW1zLmNsaWNrVXJsJiYhMCE9PXQubmF0aXZlUGFyYW1zLmNsaWNrVXJsLnNlbmRJZHx8dC5uYXRpdmVQYXJhbXMuZGlzcGxheVVybCYmITAhPT10Lm5hdGl2ZVBhcmFtcy5kaXNwbGF5VXJsLnNlbmRJZHx8dC5uYXRpdmVQYXJhbXMucHJpdmFjeUxpbmsmJiEwIT09dC5uYXRpdmVQYXJhbXMucHJpdmFjeUxpbmsuc2VuZElkfHx0Lm5hdGl2ZVBhcmFtcy5wcml2YWN5SWNvbiYmITAhPT10Lm5hdGl2ZVBhcmFtcy5wcml2YWN5SWNvbi5zZW5kSWQpfWZ1bmN0aW9uIGJ1aWxkQ2RiUmVxdWVzdCh0LGUscil7dmFyIGkscz17cHVibGlzaGVyOnt1cmw6dC51cmwsZXh0OnIucHVibGlzaGVyRXh0fSxzbG90czplLm1hcChmdW5jdGlvbih0KXtpPXQucGFyYW1zLm5ldHdvcmtJZHx8aTt2YXIgZSxyPXtpbXBpZDp0LmFkVW5pdENvZGUsdHJhbnNhY3Rpb25pZDp0LnRyYW5zYWN0aW9uSWQsYXVjdGlvbklkOnQuYXVjdGlvbklkfTtyZXR1cm4gdC5wYXJhbXMuem9uZUlkJiYoci56b25laWQ9dC5wYXJhbXMuem9uZUlkKSx0LmZwZCYmdC5mcGQuY29udGV4dCYmKHIuZXh0PXQuZnBkLmNvbnRleHQpLHQucGFyYW1zLmV4dCYmKHIuZXh0PV9leHRlbmRzKHt9LHIuZXh0LHQucGFyYW1zLmV4dCkpLHQucGFyYW1zLnB1Ymxpc2hlclN1YklkJiYoci5wdWJsaXNoZXJzdWJpZD10LnBhcmFtcy5wdWJsaXNoZXJTdWJJZCksdC5wYXJhbXMubmF0aXZlQ2FsbGJhY2t8fF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fc3JjX3V0aWxzX2pzX18uZGVlcEFjY2Vzcyh0LCJtZWRpYVR5cGVzLiIuY29uY2F0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fc3JjX21lZGlhVHlwZXNfanNfXy5jKSk/KHIubmF0aXZlPSEwLGNoZWNrTmF0aXZlU2VuZElkKHQpfHxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX3NyY191dGlsc19qc19fLmxvZ1dhcm4oTE9HX1BSRUZJWCsiYWxsIG5hdGl2ZSBhc3NldHMgY29udGFpbmluZyBVUkwgc2hvdWxkIGJlIHNlbnQgYXMgcGxhY2Vob2xkZXJzIHdpdGggc2VuZElkKGljb24sIGltYWdlLCBjbGlja1VybCwgZGlzcGxheVVybCwgcHJpdmFjeUxpbmssIHByaXZhY3lJY29uKSIpLHIuc2l6ZXM9cGFyc2VTaXplcyhyZXRyaWV2ZUJhbm5lclNpemVzKHQpLHBhcnNlTmF0aXZlU2l6ZSkpOnIuc2l6ZXM9cGFyc2VTaXplcyhyZXRyaWV2ZUJhbm5lclNpemVzKHQpLHBhcnNlU2l6ZSksaGFzVmlkZW9NZWRpYVR5cGUodCkmJigoZT17cGxheWVyc2l6ZXM6cGFyc2VTaXplcyhfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX3NyY191dGlsc19qc19fLmRlZXBBY2Nlc3ModCwibWVkaWFUeXBlcy52aWRlby5wbGF5ZXJTaXplIikscGFyc2VTaXplKSxtaW1lczp0Lm1lZGlhVHlwZXMudmlkZW8ubWltZXMscHJvdG9jb2xzOnQubWVkaWFUeXBlcy52aWRlby5wcm90b2NvbHMsbWF4ZHVyYXRpb246dC5tZWRpYVR5cGVzLnZpZGVvLm1heGR1cmF0aW9uLGFwaTp0Lm1lZGlhVHlwZXMudmlkZW8uYXBpfSkuc2tpcD10LnBhcmFtcy52aWRlby5za2lwLGUucGxhY2VtZW50PXQucGFyYW1zLnZpZGVvLnBsYWNlbWVudCxlLm1pbmR1cmF0aW9uPXQucGFyYW1zLnZpZGVvLm1pbmR1cmF0aW9uLGUucGxheWJhY2ttZXRob2Q9dC5wYXJhbXMudmlkZW8ucGxheWJhY2ttZXRob2QsZS5zdGFydGRlbGF5PXQucGFyYW1zLnZpZGVvLnN0YXJ0ZGVsYXksci52aWRlbz1lKSxyfSl9O3JldHVybiBpJiYocy5wdWJsaXNoZXIubmV0d29ya2lkPWkpLHMudXNlcj17ZXh0OnIudXNlckV4dH0sciYmci5jZWgmJihzLnVzZXIuY2VoPXIuY2VoKSxyJiZyLmdkcHJDb25zZW50JiYocy5nZHByQ29uc2VudD17fSx2b2lkIDAhPT1yLmdkcHJDb25zZW50LmdkcHJBcHBsaWVzJiYocy5nZHByQ29uc2VudC5nZHByQXBwbGllcz0hIXIuZ2RwckNvbnNlbnQuZ2RwckFwcGxpZXMpLHMuZ2RwckNvbnNlbnQudmVyc2lvbj1yLmdkcHJDb25zZW50LmFwaVZlcnNpb24sdm9pZCAwIT09ci5nZHByQ29uc2VudC5jb25zZW50U3RyaW5nJiYocy5nZHByQ29uc2VudC5jb25zZW50RGF0YT1yLmdkcHJDb25zZW50LmNvbnNlbnRTdHJpbmcpKSxyJiZyLnVzcENvbnNlbnQmJihzLnVzZXIudXNwSWFiPXIudXNwQ29uc2VudCksc31mdW5jdGlvbiByZXRyaWV2ZUJhbm5lclNpemVzKHQpe3JldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX3NyY191dGlsc19qc19fLmRlZXBBY2Nlc3ModCwibWVkaWFUeXBlcy5iYW5uZXIuc2l6ZXMiKXx8dC5zaXplc31mdW5jdGlvbiBwYXJzZVNpemVzKHQsZSl7cmV0dXJuIEFycmF5LmlzQXJyYXkodFswXSk/dC5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIGUodCl9KTpbZSh0KV19ZnVuY3Rpb24gcGFyc2VTaXplKHQpe3JldHVybiB0WzBdKyJ4Iit0WzFdfWZ1bmN0aW9uIHBhcnNlTmF0aXZlU2l6ZSh0KXtyZXR1cm4gdm9pZCAwPT09dFswXSYmdm9pZCAwPT09dFsxXT8iMngyIjp0WzBdKyJ4Iit0WzFdfWZ1bmN0aW9uIGhhc1ZpZGVvTWVkaWFUeXBlKHQpe3JldHVybiB2b2lkIDAhPT1fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX3NyY191dGlsc19qc19fLmRlZXBBY2Nlc3ModCwicGFyYW1zLnZpZGVvIikmJnZvaWQgMCE9PV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fc3JjX3V0aWxzX2pzX18uZGVlcEFjY2Vzcyh0LCJtZWRpYVR5cGVzLnZpZGVvIil9ZnVuY3Rpb24gaGFzVmFsaWRWaWRlb01lZGlhVHlwZShlKXt2YXIgcj0hMDtbIm1pbWVzIiwicGxheWVyU2l6ZSIsIm1heGR1cmF0aW9uIiwicHJvdG9jb2xzIiwiYXBpIl0uZm9yRWFjaChmdW5jdGlvbih0KXt2b2lkIDA9PT1fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX3NyY191dGlsc19qc19fLmRlZXBBY2Nlc3MoZSwibWVkaWFUeXBlcy52aWRlby4iK3QpJiYocj0hMSxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX3NyY191dGlsc19qc19fLmxvZ0Vycm9yKCJDcml0ZW8gQmlkIEFkYXB0ZXI6IG1lZGlhVHlwZXMudmlkZW8uIit0KyIgaXMgcmVxdWlyZWQiKSl9KTtpZihbInNraXAiLCJwbGFjZW1lbnQiLCJwbGF5YmFja21ldGhvZCJdLmZvckVhY2goZnVuY3Rpb24odCl7dm9pZCAwPT09X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19zcmNfdXRpbHNfanNfXy5kZWVwQWNjZXNzKGUsInBhcmFtcy52aWRlby4iK3QpJiYocj0hMSxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX3NyY191dGlsc19qc19fLmxvZ0Vycm9yKCJDcml0ZW8gQmlkIEFkYXB0ZXI6IHBhcmFtcy52aWRlby4iK3QrIiBpcyByZXF1aXJlZCIpKX0pLHIpe2lmKCJpbnN0cmVhbSI9PWUubWVkaWFUeXBlcy52aWRlby5jb250ZXh0JiYxPT09ZS5wYXJhbXMudmlkZW8ucGxhY2VtZW50KXJldHVybiAxO2lmKCJvdXRzdHJlYW0iPT1lLm1lZGlhVHlwZXMudmlkZW8uY29udGV4dCYmMSE9PWUucGFyYW1zLnZpZGVvLnBsYWNlbWVudClyZXR1cm4gMX19ZnVuY3Rpb24gY3JlYXRlUHJlYmlkTmF0aXZlQWQodCl7cmV0dXJue3RpdGxlOnQucHJvZHVjdHNbMF0udGl0bGUsYm9keTp0LnByb2R1Y3RzWzBdLmRlc2NyaXB0aW9uLHNwb25zb3JlZEJ5OnQuYWR2ZXJ0aXNlci5kZXNjcmlwdGlvbixpY29uOnQuYWR2ZXJ0aXNlci5sb2dvLGltYWdlOnQucHJvZHVjdHNbMF0uaW1hZ2UsY2xpY2tVcmw6dC5wcm9kdWN0c1swXS5jbGlja191cmwscHJpdmFjeUxpbms6dC5wcml2YWN5Lm9wdG91dF9jbGlja191cmwscHJpdmFjeUljb246dC5wcml2YWN5Lm9wdG91dF9pbWFnZV91cmwsY3RhOnQucHJvZHVjdHNbMF0uY2FsbF90b19hY3Rpb24scHJpY2U6dC5wcm9kdWN0c1swXS5wcmljZSxpbXByZXNzaW9uVHJhY2tlcnM6dC5pbXByZXNzaW9uX3BpeGVscy5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQudXJsfSl9fWZ1bmN0aW9uIGNyZWF0ZU5hdGl2ZUFkKHQsZSxyKXt2YXIgaT0iY3JpdGVvX3ByZWJpZF9uYXRpdmVfc2xvdHMiO3JldHVybiB3aW5kb3dbaV09d2luZG93W2ldfHx7fSx3aW5kb3dbaV1bdF09e2NhbGxiYWNrOnIscGF5bG9hZDplfSwnXG48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+XG5mb3IgKHZhciBpID0gMDsgaSA8IDEwOyArK2kpIHtcbiB2YXIgc2xvdHMgPSB3aW5kb3cucGFyZW50LicuY29uY2F0KGksJztcbiAgaWYoIXNsb3RzKXtjb250aW51ZTt9XG4gIHZhciByZXNwb25zZVNsb3QgPSBzbG90c1siJykuY29uY2F0KHQsJyJdO1xuICByZXNwb25zZVNsb3QuY2FsbGJhY2socmVzcG9uc2VTbG90LnBheWxvYWQpO1xuICBicmVhaztcbn1cbjxcL3NjcmlwdD4nKX1mdW5jdGlvbiB0cnlHZXRDcml0ZW9GYXN0QmlkKCl7dHJ5e3ZhciBmYXN0QmlkU3RvcmFnZUtleT0iY3JpdGVvX2Zhc3RfYmlkIixoYXNoUHJlZml4PSIvLyBIYXNoOiAiLGZhc3RCaWRGcm9tU3RvcmFnZT1zdG9yYWdlLmdldERhdGFGcm9tTG9jYWxTdG9yYWdlKGZhc3RCaWRTdG9yYWdlS2V5KSxmaXJzdExpbmVFbmRQb3NpdGlvbixmaXJzdExpbmUscHVibGlzaGVyVGFnSGFzaCxwdWJsaXNoZXJUYWc7bnVsbCE9PWZhc3RCaWRGcm9tU3RvcmFnZSYmKGZpcnN0TGluZUVuZFBvc2l0aW9uPWZhc3RCaWRGcm9tU3RvcmFnZS5pbmRleE9mKCJcbiIpLGZpcnN0TGluZT1mYXN0QmlkRnJvbVN0b3JhZ2Uuc3Vic3RyKDAsZmlyc3RMaW5lRW5kUG9zaXRpb24pLnRyaW0oKSxmaXJzdExpbmUuc3Vic3RyKDAsaGFzaFByZWZpeC5sZW5ndGgpIT09aGFzaFByZWZpeD8oX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19zcmNfdXRpbHNfanNfXy5sb2dXYXJuKCJObyBoYXNoIGZvdW5kIGluIEZhc3RCaWQiKSxzdG9yYWdlLnJlbW92ZURhdGFGcm9tTG9jYWxTdG9yYWdlKGZhc3RCaWRTdG9yYWdlS2V5KSk6KHB1Ymxpc2hlclRhZ0hhc2g9Zmlyc3RMaW5lLnN1YnN0cihoYXNoUHJlZml4Lmxlbmd0aCkscHVibGlzaGVyVGFnPWZhc3RCaWRGcm9tU3RvcmFnZS5zdWJzdHIoZmlyc3RMaW5lRW5kUG9zaXRpb24rMSksT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9jcml0ZW9fZGlyZWN0X3JzYV92YWxpZGF0ZV9idWlsZF92ZXJpZnlfanNfXy52ZXJpZnkpKHB1Ymxpc2hlclRhZyxwdWJsaXNoZXJUYWdIYXNoLEZBU1RfQklEX1BVQktFWV9OLEZBU1RfQklEX1BVQktFWV9FKT8oX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19zcmNfdXRpbHNfanNfXy5sb2dJbmZvKCJVc2luZyBDcml0ZW8gRmFzdEJpZCIpLGV2YWwocHVibGlzaGVyVGFnKSk6KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fc3JjX3V0aWxzX2pzX18ubG9nV2FybigiSW52YWxpZCBDcml0ZW8gRmFzdEJpZCBmb3VuZCIpLHN0b3JhZ2UucmVtb3ZlRGF0YUZyb21Mb2NhbFN0b3JhZ2UoZmFzdEJpZFN0b3JhZ2VLZXkpKSkpfWNhdGNoKHQpe319T2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fc3JjX2FkYXB0ZXJzX2JpZGRlckZhY3RvcnlfanNfXy5yZWdpc3RlckJpZGRlcikoc3BlYyl9LDM3ODpmdW5jdGlvbih0LGUscil7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgYT1yKDM3OSksbj1yKDM4MCk7ZS52ZXJpZnk9ZnVuY3Rpb24odCxlLHIsaSl7dmFyIHM9bmV3IGEuQmlnSW50ZWdlcihhLmI2NHRvSGV4KGUpKSxvPW5ldyBhLkJpZ0ludGVnZXIoYS5iNjR0b0hleChyKSksXz1zLm1vZFBvd0ludChpLG8pO3JldHVybiBhLnJlbW92ZUV4dHJhU3ltYm9scyhfLnRvSGV4U3RyaW5nKCkpPT09bi5TaGEyNTYuaGFzaCh0KX19LDM3OTpmdW5jdGlvbih0LGUscil7InVzZSBzdHJpY3QiO3ZhciBpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgcz0oVC5wcm90b3R5cGUudG9IZXhTdHJpbmc9ZnVuY3Rpb24oKXtpZih0aGlzLnM8MClyZXR1cm4iLSIrdGhpcy5uZWdhdGUoKS50b0hleFN0cmluZygpO3ZhciB0LGU9ITEscj0iIixpPXRoaXMudCxzPXRoaXMuREItaSp0aGlzLkRCJTQ7aWYoMDxpLS0pZm9yKHM8dGhpcy5EQiYmMDwodD10aGlzW2ldPj5zKSYmKGU9ITAscj1jKHQpKTswPD1pOylzPDQ/KHQ9KHRoaXNbaV0mKDE8PHMpLTEpPDw0LXMsdHw9dGhpc1stLWldPj4ocys9dGhpcy5EQi00KSk6KHQ9dGhpc1tpXT4+KHMtPTQpJjE1LHM8PTAmJihzKz10aGlzLkRCLC0taSkpLDA8dCYmKGU9ITApLGUmJihyKz1jKHQpKTtyZXR1cm4gZT9yOiIwIn0sVC5wcm90b3R5cGUuZnJvbUhleFN0cmluZz1mdW5jdGlvbih0KXtpZihudWxsIT09dCl7dGhpcy50PTAsdGhpcy5zPTA7Zm9yKHZhciBlPXQubGVuZ3RoLHI9ITEsaT0wOzA8PS0tZTspe3ZhciBzPW4odCxlKTtzPDA/Ii0iPT10LmNoYXJBdChlKSYmKHI9ITApOihyPSExLDA9PWk/dGhpc1t0aGlzLnQrK109czppKzQ+dGhpcy5EQj8odGhpc1t0aGlzLnQtMV18PShzJigxPDx0aGlzLkRCLWkpLTEpPDxpLHRoaXNbdGhpcy50KytdPXM+PnRoaXMuREItaSk6dGhpc1t0aGlzLnQtMV18PXM8PGksKGkrPTQpPj10aGlzLkRCJiYoaS09dGhpcy5EQikpfXRoaXMuY2xhbXAoKSxyJiZULlpFUk8uc3ViVG8odGhpcyx0aGlzKX19LFQucHJvdG90eXBlLm5lZ2F0ZT1mdW5jdGlvbigpe3ZhciB0PWIoKTtyZXR1cm4gVC5aRVJPLnN1YlRvKHRoaXMsdCksdH0sVC5wcm90b3R5cGUuYWJzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuczwwP3RoaXMubmVnYXRlKCk6dGhpc30sVC5wcm90b3R5cGUubW9kPWZ1bmN0aW9uKHQpe3ZhciBlPWIoKTtyZXR1cm4gdGhpcy5hYnMoKS5kaXZSZW1Ubyh0LG51bGwsZSksdGhpcy5zPDAmJjA8ZS5jb21wYXJlVG8oVC5aRVJPKSYmdC5zdWJUbyhlLGUpLGV9LFQucHJvdG90eXBlLmNvcHlUbz1mdW5jdGlvbih0KXtmb3IodmFyIGU9dGhpcy50LTE7MDw9ZTstLWUpdFtlXT10aGlzW2VdO3QudD10aGlzLnQsdC5zPXRoaXMuc30sVC5wcm90b3R5cGUubFNoaWZ0VG89ZnVuY3Rpb24odCxlKXtmb3IodmFyIHI9dCV0aGlzLkRCLGk9dGhpcy5EQi1yLHM9KDE8PGkpLTEsbz1NYXRoLmZsb29yKHQvdGhpcy5EQiksXz10aGlzLnM8PHImdGhpcy5ETSxhPXRoaXMudC0xOzA8PWE7LS1hKWVbYStvKzFdPXRoaXNbYV0+Pml8XyxfPSh0aGlzW2FdJnMpPDxyO2ZvcihhPW8tMTswPD1hOy0tYSllW2FdPTA7ZVtvXT1fLGUudD10aGlzLnQrbysxLGUucz10aGlzLnMsZS5jbGFtcCgpfSxULnByb3RvdHlwZS5pbnZEaWdpdD1mdW5jdGlvbigpe2lmKHRoaXMudDwxKXJldHVybiAwO3ZhciB0PXRoaXNbMF07aWYoMD09KDEmdCkpcmV0dXJuIDA7dmFyIGU9MyZ0O3JldHVybiAwPChlPShlPShlPShlPWUqKDItKDE1JnQpKmUpJjE1KSooMi0oMjU1JnQpKmUpJjI1NSkqKDItKCg2NTUzNSZ0KSplJjY1NTM1KSkmNjU1MzUpKigyLXQqZSV0aGlzLkRWKSV0aGlzLkRWKT90aGlzLkRWLWU6LWV9LFQucHJvdG90eXBlLmRsU2hpZnRUbz1mdW5jdGlvbih0LGUpe2Zvcih2YXIgcj10aGlzLnQtMTswPD1yOy0tcillW3IrdF09dGhpc1tyXTtmb3Iocj10LTE7MDw9cjstLXIpZVtyXT0wO2UudD10aGlzLnQrdCxlLnM9dGhpcy5zfSxULnByb3RvdHlwZS5zcXVhcmVUbz1mdW5jdGlvbih0KXtmb3IodmFyIGU9dGhpcy5hYnMoKSxyPXQudD0yKmUudDswPD0tLXI7KXRbcl09MDtmb3Iocj0wO3I8ZS50LTE7KytyKXt2YXIgaT1lLmFtKHIsZVtyXSx0LDIqciwwLDEpOyh0W3IrZS50XSs9ZS5hbShyKzEsMiplW3JdLHQsMipyKzEsaSxlLnQtci0xKSk+PWUuRFYmJih0W3IrZS50XS09ZS5EVix0W3IrZS50KzFdPTEpfTA8dC50JiYodFt0LnQtMV0rPWUuYW0ocixlW3JdLHQsMipyLDAsMSkpLHQucz0wLHQuY2xhbXAoKX0sVC5wcm90b3R5cGUubXVsdGlwbHlUbz1mdW5jdGlvbih0LGUpe3ZhciByPXRoaXMuYWJzKCksaT10LmFicygpLHM9ci50O2ZvcihlLnQ9cytpLnQ7MDw9LS1zOyllW3NdPTA7Zm9yKHM9MDtzPGkudDsrK3MpZVtzK3IudF09ci5hbSgwLGlbc10sZSxzLDAsci50KTtlLnM9MCxlLmNsYW1wKCksdGhpcy5zIT10LnMmJlQuWkVSTy5zdWJUbyhlLGUpfSxULnByb3RvdHlwZS5kaXZSZW1Ubz1mdW5jdGlvbih0LGUscil7dmFyIGk9dC5hYnMoKTtpZighKGkudDw9MCkpe3ZhciBzPXRoaXMuYWJzKCk7aWYocy50PGkudClyZXR1cm4gbnVsbCE9ZSYmZS5mcm9tSGV4U3RyaW5nKCIwIiksdm9pZChudWxsIT1yJiZ0aGlzLmNvcHlUbyhyKSk7bnVsbD09ciYmKHI9YigpKTt2YXIgbz1iKCksXz10aGlzLnMsYT10LnMsbj10aGlzLkRCLUQoaVtpLnQtMV0pOzA8bj8oaS5sU2hpZnRUbyhuLG8pLHMubFNoaWZ0VG8obixyKSk6KGkuY29weVRvKG8pLHMuY29weVRvKHIpKTt2YXIgcD1vLnQsYz1vW3AtMV07aWYoMCE9Yyl7dmFyIGQ9YyooMTw8dGhpcy5GMSkrKDE8cD9vW3AtMl0+PnRoaXMuRjI6MCksdT10aGlzLkZWL2QsaD0oMTw8dGhpcy5GMSkvZCxsPTE8PHRoaXMuRjIsZj1yLnQsRT1mLXAsdj1udWxsPT1lP2IoKTplO2ZvcihvLmRsU2hpZnRUbyhFLHYpLDA8PXIuY29tcGFyZVRvKHYpJiYocltyLnQrK109MSxyLnN1YlRvKHYscikpLFQuT05FLmRsU2hpZnRUbyhwLHYpLHYuc3ViVG8obyxvKTtvLnQ8cDspb1tvLnQrK109MDtmb3IoOzA8PS0tRTspe3ZhciBtPXJbLS1mXT09Yz90aGlzLkRNOk1hdGguZmxvb3IocltmXSp1KyhyW2YtMV0rbCkqaCk7aWYoKHJbZl0rPW8uYW0oMCxtLHIsRSwwLHApKTxtKWZvcihvLmRsU2hpZnRUbyhFLHYpLHIuc3ViVG8odixyKTtyW2ZdPC0tbTspci5zdWJUbyh2LHIpfW51bGwhPWUmJihyLmRyU2hpZnRUbyhwLGUpLF8hPWEmJlQuWkVSTy5zdWJUbyhlLGUpKSxyLnQ9cCxyLmNsYW1wKCksMDxuJiZyLnJTaGlmdFRvKG4sciksXzwwJiZULlpFUk8uc3ViVG8ocixyKX19fSxULnByb3RvdHlwZS5yU2hpZnRUbz1mdW5jdGlvbih0LGUpe2Uucz10aGlzLnM7dmFyIHI9TWF0aC5mbG9vcih0L3RoaXMuREIpO2lmKHI+PXRoaXMudCllLnQ9MDtlbHNle3ZhciBpPXQldGhpcy5EQixzPXRoaXMuREItaSxvPSgxPDxpKS0xO2VbMF09dGhpc1tyXT4+aTtmb3IodmFyIF89cisxO188dGhpcy50OysrXyllW18tci0xXXw9KHRoaXNbX10mbyk8PHMsZVtfLXJdPXRoaXNbX10+Pmk7MDxpJiYoZVt0aGlzLnQtci0xXXw9KHRoaXMucyZvKTw8cyksZS50PXRoaXMudC1yLGUuY2xhbXAoKX19LFQucHJvdG90eXBlLmRyU2hpZnRUbz1mdW5jdGlvbih0LGUpe2Zvcih2YXIgcj10O3I8dGhpcy50OysrcillW3ItdF09dGhpc1tyXTtlLnQ9TWF0aC5tYXgodGhpcy50LXQsMCksZS5zPXRoaXMuc30sVC5wcm90b3R5cGUuc3ViVG89ZnVuY3Rpb24odCxlKXtmb3IodmFyIHI9MCxpPTAscz1NYXRoLm1pbih0LnQsdGhpcy50KTtyPHM7KWkrPXRoaXNbcl0tdFtyXSxlW3IrK109aSZ0aGlzLkRNLGk+Pj10aGlzLkRCO2lmKHQudDx0aGlzLnQpe2ZvcihpLT10LnM7cjx0aGlzLnQ7KWkrPXRoaXNbcl0sZVtyKytdPWkmdGhpcy5ETSxpPj49dGhpcy5EQjtpKz10aGlzLnN9ZWxzZXtmb3IoaSs9dGhpcy5zO3I8dC50OylpLT10W3JdLGVbcisrXT1pJnRoaXMuRE0saT4+PXRoaXMuREI7aS09dC5zfWUucz1pPDA/LTE6MCxpPC0xP2VbcisrXT10aGlzLkRWK2k6MDxpJiYoZVtyKytdPWkpLGUudD1yLGUuY2xhbXAoKX0sVC5wcm90b3R5cGUuY2xhbXA9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9dGhpcy5zJnRoaXMuRE07MDx0aGlzLnQmJnRoaXNbdGhpcy50LTFdPT10OyktLXRoaXMudH0sVC5wcm90b3R5cGUubW9kUG93SW50PWZ1bmN0aW9uKHQsZSl7dmFyIHI9bmV3KHQ8MjU2fHxlLmlzRXZlbigpP2Q6aCkoZSk7cmV0dXJuIHRoaXMuZXhwKHQscil9LFQucHJvdG90eXBlLmV4cD1mdW5jdGlvbih0LGUpe2lmKDQyOTQ5NjcyOTU8dHx8dDwxKXJldHVybiBULk9ORTt2YXIgcixpPWIoKSxzPWIoKSxvPWUuY29udmVydCh0aGlzKSxfPUQodCktMTtmb3Ioby5jb3B5VG8oaSk7MDw9LS1fOyllLnNxclRvKGkscyksMDwodCYxPDxfKT9lLm11bFRvKHMsbyxpKToocj1pLGk9cyxzPXIpO3JldHVybiBlLnJldmVydChpKX0sVC5wcm90b3R5cGUuaXNFdmVuPWZ1bmN0aW9uKCl7cmV0dXJuIDA9PSgwPHRoaXMudD8xJnRoaXNbMF06dGhpcy5zKX0sVC5wcm90b3R5cGUuY29tcGFyZVRvPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMucy10LnM7aWYoMCE9ZSlyZXR1cm4gZTt2YXIgcj10aGlzLnQ7aWYoMCE9KGU9ci10LnQpKXJldHVybiB0aGlzLnM8MD8tZTplO2Zvcig7MDw9LS1yOylpZigwIT0oZT10aGlzW3JdLXRbcl0pKXJldHVybiBlO3JldHVybiAwfSxULnByb3RvdHlwZS5hbTE9ZnVuY3Rpb24odCxlLHIsaSxzLG8pe2Zvcig7MDw9LS1vOyl7dmFyIF89ZSp0aGlzW3QrK10rcltpXStzO3M9TWF0aC5mbG9vcihfLzY3MTA4ODY0KSxyW2krK109NjcxMDg4NjMmX31yZXR1cm4gc30sVC5wcm90b3R5cGUuYW0yPWZ1bmN0aW9uKHQsZSxyLGkscyxvKXtmb3IodmFyIF89MzI3NjcmZSxhPWU+PjE1OzA8PS0tbzspe3ZhciBuPTMyNzY3JnRoaXNbdF0scD10aGlzW3QrK10+PjE1LGM9YSpuK3AqXztzPSgobj1fKm4rKCgzMjc2NyZjKTw8MTUpK3JbaV0rKDEwNzM3NDE4MjMmcykpPj4+MzApKyhjPj4+MTUpK2EqcCsocz4+PjMwKSxyW2krK109MTA3Mzc0MTgyMyZufXJldHVybiBzfSxULnByb3RvdHlwZS5hbTM9ZnVuY3Rpb24odCxlLHIsaSxzLG8pe2Zvcih2YXIgXz0xNjM4MyZlLGE9ZT4+MTQ7MDw9LS1vOyl7dmFyIG49MTYzODMmdGhpc1t0XSxwPXRoaXNbdCsrXT4+MTQsYz1hKm4rcCpfO3M9KChuPV8qbisoKDE2MzgzJmMpPDwxNCkrcltpXStzKT4+MjgpKyhjPj4xNCkrYSpwLHJbaSsrXT0yNjg0MzU0NTUmbn1yZXR1cm4gc30sVCk7ZnVuY3Rpb24gVCh0KXtudWxsIT09dCYmdGhpcy5mcm9tSGV4U3RyaW5nKHQpfWZ1bmN0aW9uIGIoKXtyZXR1cm4gbmV3IHMobnVsbCl9ZnVuY3Rpb24gRCh0KXt2YXIgZSxyPTE7cmV0dXJuIDAhPShlPXQ+Pj4xNikmJih0PWUscis9MTYpLDAhPShlPXQ+PjgpJiYodD1lLHIrPTgpLDAhPShlPXQ+PjQpJiYodD1lLHIrPTQpLDAhPShlPXQ+PjIpJiYodD1lLHIrPTIpLDAhPShlPXQ+PjEpJiYodD1lLHIrPTEpLHJ9ZS5CaWdJbnRlZ2VyPXMsZS5uYmk9YixlLm5iaXRzPUQ7Zm9yKHZhciBvPVtdLF89IjAiLmNoYXJDb2RlQXQoMCksYT0wO2E8PTk7KythKW9bXysrXT1hO2ZvcihfPSJhIi5jaGFyQ29kZUF0KDApLGE9MTA7YTwzNjsrK2Epb1tfKytdPWE7Zm9yKF89IkEiLmNoYXJDb2RlQXQoMCksYT0xMDthPDM2OysrYSlvW18rK109YTtmdW5jdGlvbiBuKHQsZSl7dmFyIHI9b1t0LmNoYXJDb2RlQXQoZSldO3JldHVybiBudWxsPT1yPy0xOnJ9ZS5pbnRBdD1uO3ZhciBwPSIwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoiO2Z1bmN0aW9uIGModCl7cmV0dXJuIHAuY2hhckF0KHQpfWUuaW50MmNoYXI9YztlLmI2NHRvSGV4PWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0iIixyPTAsaT0wLHM9MDtzPHQubGVuZ3RoJiYiPSIhPXQuY2hhckF0KHMpOysrcyl7dmFyIG89IkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8iLmluZGV4T2YodC5jaGFyQXQocykpO288MHx8KHI9MD09cj8oZSs9YyhvPj4yKSxpPTMmbywxKToxPT1yPyhlKz1jKGk8PDJ8bz4+NCksaT0xNSZvLDIpOjI9PXI/KGUrPWMoaSksZSs9YyhvPj4yKSxpPTMmbywzKTooZSs9YyhpPDwyfG8+PjQpLGUrPWMoMTUmbyksMCkpfXJldHVybiAxPT1yJiYoZSs9YyhpPDwyKSksZX0sZS5yZW1vdmVFeHRyYVN5bWJvbHM9ZnVuY3Rpb24odCl7cmV0dXJuIHQucmVwbGFjZSgvXjFmKzAwLywiIikucmVwbGFjZSgiMzAzMTMwMGQwNjA5NjA4NjQ4MDE2NTAzMDQwMjAxMDUwMDA0MjAiLCIiKX07dmFyIGQ9KHUucHJvdG90eXBlLmNvbnZlcnQ9ZnVuY3Rpb24odCl7cmV0dXJuIHQuczwwfHwwPD10LmNvbXBhcmVUbyh0aGlzLm0pP3QubW9kKHRoaXMubSk6dH0sdS5wcm90b3R5cGUucmV2ZXJ0PWZ1bmN0aW9uKHQpe3JldHVybiB0fSx1LnByb3RvdHlwZS5yZWR1Y2U9ZnVuY3Rpb24odCl7dC5kaXZSZW1Ubyh0aGlzLm0sbnVsbCx0KX0sdS5wcm90b3R5cGUubXVsVG89ZnVuY3Rpb24odCxlLHIpe3QubXVsdGlwbHlUbyhlLHIpLHRoaXMucmVkdWNlKHIpfSx1LnByb3RvdHlwZS5zcXJUbz1mdW5jdGlvbih0LGUpe3Quc3F1YXJlVG8oZSksdGhpcy5yZWR1Y2UoZSl9LHUpO2Z1bmN0aW9uIHUodCl7dGhpcy5tPXR9dmFyIGg9KGwucHJvdG90eXBlLmNvbnZlcnQ9ZnVuY3Rpb24odCl7dmFyIGU9YigpO3JldHVybiB0LmFicygpLmRsU2hpZnRUbyh0aGlzLm0udCxlKSxlLmRpdlJlbVRvKHRoaXMubSxudWxsLGUpLHQuczwwJiYwPGUuY29tcGFyZVRvKHMuWkVSTykmJnRoaXMubS5zdWJUbyhlLGUpLGV9LGwucHJvdG90eXBlLnJldmVydD1mdW5jdGlvbih0KXt2YXIgZT1iKCk7cmV0dXJuIHQuY29weVRvKGUpLHRoaXMucmVkdWNlKGUpLGV9LGwucHJvdG90eXBlLnJlZHVjZT1mdW5jdGlvbih0KXtmb3IoO3QudDw9dGhpcy5tdDI7KXRbdC50KytdPTA7Zm9yKHZhciBlPTA7ZTx0aGlzLm0udDsrK2Upe3ZhciByPTMyNzY3JnRbZV0saT1yKnRoaXMubXBsKygocip0aGlzLm1waCsodFtlXT4+MTUpKnRoaXMubXBsJnRoaXMudW0pPDwxNSkmdC5ETTtmb3IodFtyPWUrdGhpcy5tLnRdKz10aGlzLm0uYW0oMCxpLHQsZSwwLHRoaXMubS50KTt0W3JdPj10LkRWOyl0W3JdLT10LkRWLHRbKytyXSsrfXQuY2xhbXAoKSx0LmRyU2hpZnRUbyh0aGlzLm0udCx0KSwwPD10LmNvbXBhcmVUbyh0aGlzLm0pJiZ0LnN1YlRvKHRoaXMubSx0KX0sbC5wcm90b3R5cGUubXVsVG89ZnVuY3Rpb24odCxlLHIpe3QubXVsdGlwbHlUbyhlLHIpLHRoaXMucmVkdWNlKHIpfSxsLnByb3RvdHlwZS5zcXJUbz1mdW5jdGlvbih0LGUpe3Quc3F1YXJlVG8oZSksdGhpcy5yZWR1Y2UoZSl9LGwpO2Z1bmN0aW9uIGwodCl7dGhpcy5tPXQsdGhpcy5tcD10LmludkRpZ2l0KCksdGhpcy5tcGw9MzI3NjcmdGhpcy5tcCx0aGlzLm1waD10aGlzLm1wPj4xNSx0aGlzLnVtPSgxPDx0LkRCLTE1KS0xLHRoaXMubXQyPTIqdC50fWZ1bmN0aW9uIGYodCl7dmFyIGU9YigpO3JldHVybiBlLmZyb21IZXhTdHJpbmcodC50b1N0cmluZygpKSxlfWUubmJ2PWYscy5aRVJPPWYoMCkscy5PTkU9ZigxKSxpPSJNaWNyb3NvZnQgSW50ZXJuZXQgRXhwbG9yZXIiPT1uYXZpZ2F0b3IuYXBwTmFtZT8ocy5wcm90b3R5cGUuYW09cy5wcm90b3R5cGUuYW0yLDMwKToiTmV0c2NhcGUiIT1uYXZpZ2F0b3IuYXBwTmFtZT8ocy5wcm90b3R5cGUuYW09cy5wcm90b3R5cGUuYW0xLDI2KToocy5wcm90b3R5cGUuYW09cy5wcm90b3R5cGUuYW0zLDI4KSxzLnByb3RvdHlwZS5EQj1pLHMucHJvdG90eXBlLkRNPSgxPDxpKS0xLHMucHJvdG90eXBlLkRWPTE8PGk7cy5wcm90b3R5cGUuRlY9TWF0aC5wb3coMiw1Mikscy5wcm90b3R5cGUuRjE9NTItaSxzLnByb3RvdHlwZS5GMj0yKmktNTJ9LDM4MDpmdW5jdGlvbih0LGUscil7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgaT0oeS5oYXNoPWZ1bmN0aW9uKHQpe3Q9eS51dGY4RW5jb2RlKHR8fCIiKTtmb3IodmFyIGU9WzExMTYzNTI0MDgsMTg5OTQ0NzQ0MSwzMDQ5MzIzNDcxLDM5MjEwMDk1NzMsOTYxOTg3MTYzLDE1MDg5NzA5OTMsMjQ1MzYzNTc0OCwyODcwNzYzMjIxLDM2MjQzODEwODAsMzEwNTk4NDAxLDYwNzIyNTI3OCwxNDI2ODgxOTg3LDE5MjUwNzgzODgsMjE2MjA3ODIwNiwyNjE0ODg4MTAzLDMyNDgyMjI1ODAsMzgzNTM5MDQwMSw0MDIyMjI0Nzc0LDI2NDM0NzA3OCw2MDQ4MDc2MjgsNzcwMjU1OTgzLDEyNDkxNTAxMjIsMTU1NTA4MTY5MiwxOTk2MDY0OTg2LDI1NTQyMjA4ODIsMjgyMTgzNDM0OSwyOTUyOTk2ODA4LDMyMTAzMTM2NzEsMzMzNjU3MTg5MSwzNTg0NTI4NzExLDExMzkyNjk5MywzMzgyNDE4OTUsNjY2MzA3MjA1LDc3MzUyOTkxMiwxMjk0NzU3MzcyLDEzOTYxODIyOTEsMTY5NTE4MzcwMCwxOTg2NjYxMDUxLDIxNzcwMjYzNTAsMjQ1Njk1NjAzNywyNzMwNDg1OTIxLDI4MjAzMDI0MTEsMzI1OTczMDgwMCwzMzQ1NzY0NzcxLDM1MTYwNjU4MTcsMzYwMDM1MjgwNCw0MDk0NTcxOTA5LDI3NTQyMzM0NCw0MzAyMjc3MzQsNTA2OTQ4NjE2LDY1OTA2MDU1Niw4ODM5OTc4NzcsOTU4MTM5NTcxLDEzMjI4MjIyMTgsMTUzNzAwMjA2MywxNzQ3ODczNzc5LDE5NTU1NjIyMjIsMjAyNDEwNDgxNSwyMjI3NzMwNDUyLDIzNjE4NTI0MjQsMjQyODQzNjQ3NCwyNzU2NzM0MTg3LDMyMDQwMzE0NzksMzMyOTMyNTI5OF0scj1bMTc3OTAzMzcwMywzMTQ0MTM0Mjc3LDEwMTM5MDQyNDIsMjc3MzQ4MDc2MiwxMzU5ODkzMTE5LDI2MDA4MjI5MjQsNTI4NzM0NjM1LDE1NDE0NTkyMjVdLGk9KHQrPVN0cmluZy5mcm9tQ2hhckNvZGUoMTI4KSkubGVuZ3RoLzQrMixzPU1hdGguY2VpbChpLzE2KSxvPW5ldyBBcnJheShzKSxfPTA7XzxzO18rKyl7b1tfXT1uZXcgQXJyYXkoMTYpO2Zvcih2YXIgYT0wO2E8MTY7YSsrKW9bX11bYV09dC5jaGFyQ29kZUF0KDY0Kl8rNCphKTw8MjR8dC5jaGFyQ29kZUF0KDY0Kl8rNCphKzEpPDwxNnx0LmNoYXJDb2RlQXQoNjQqXys0KmErMik8PDh8dC5jaGFyQ29kZUF0KDY0Kl8rNCphKzMpPDwwfXZhciBuPTgqKHQubGVuZ3RoLTEpL01hdGgucG93KDIsMzIpLHA9OCoodC5sZW5ndGgtMSk+Pj4wO2ZvcihvW3MtMV1bMTRdPU1hdGguZmxvb3Iobiksb1tzLTFdWzE1XT1wLF89MDtfPHM7XysrKXtmb3IodmFyIGM9bmV3IEFycmF5KDY0KSxkPTA7ZDwxNjtkKyspY1tkXT1vW19dW2RdO2ZvcihkPTE2O2Q8NjQ7ZCsrKWNbZF09eS5xMShjW2QtMl0pK2NbZC03XSt5LnEwKGNbZC0xNV0pK2NbZC0xNl0+Pj4wO2Zvcih2YXIgdT1yWzBdLGg9clsxXSxsPXJbMl0sZj1yWzNdLEU9cls0XSx2PXJbNV0sbT1yWzZdLFQ9cls3XSxkPTA7ZDw2NDtkKyspe3ZhciBiPVQreS56MShFKSt5LkNoKEUsdixtKStlW2RdK2NbZF0sRD15LnowKHUpK3kuTWFqKHUsaCxsKTtUPW0sbT12LHY9RSxFPWYrYj4+PjAsZj1sLGw9aCxoPXUsdT1iK0Q+Pj4wfXJbMF09clswXSt1Pj4+MCxyWzFdPXJbMV0raD4+PjAsclsyXT1yWzJdK2w+Pj4wLHJbM109clszXStmPj4+MCxyWzRdPXJbNF0rRT4+PjAscls1XT1yWzVdK3Y+Pj4wLHJbNl09cls2XSttPj4+MCxyWzddPXJbN10rVD4+PjB9Zm9yKHZhciBQPW5ldyBBcnJheShyLmxlbmd0aCksVD0wO1Q8ci5sZW5ndGg7VCsrKVBbVF09KCIwMDAwMDAwMCIrcltUXS50b1N0cmluZygxNikpLnNsaWNlKC04KTtyZXR1cm4gUC5qb2luKCIiKX0seS51dGY4RW5jb2RlPWZ1bmN0aW9uKGUpe3RyeXtyZXR1cm4obmV3IFRleHRFbmNvZGVyKS5lbmNvZGUoZSkucmVkdWNlKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQrU3RyaW5nLmZyb21DaGFyQ29kZShlKX0sIiIpfWNhdGNoKHQpe3JldHVybiB1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoZSkpfX0seS5ST1RSPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGU+Pj50fGU8PDMyLXR9LHkuejA9ZnVuY3Rpb24odCl7cmV0dXJuIHkuUk9UUigyLHQpXnkuUk9UUigxMyx0KV55LlJPVFIoMjIsdCl9LHkuejE9ZnVuY3Rpb24odCl7cmV0dXJuIHkuUk9UUig2LHQpXnkuUk9UUigxMSx0KV55LlJPVFIoMjUsdCl9LHkucTA9ZnVuY3Rpb24odCl7cmV0dXJuIHkuUk9UUig3LHQpXnkuUk9UUigxOCx0KV50Pj4+M30seS5xMT1mdW5jdGlvbih0KXtyZXR1cm4geS5ST1RSKDE3LHQpXnkuUk9UUigxOSx0KV50Pj4+MTB9LHkuQ2g9ZnVuY3Rpb24odCxlLHIpe3JldHVybiB0JmVefnQmcn0seS5NYWo9ZnVuY3Rpb24odCxlLHIpe3JldHVybiB0JmVedCZyXmUmcn0seSk7ZnVuY3Rpb24geSgpe31lLlNoYTI1Nj1pfX0sWzM3Nl0pOwp1cGJqc0NodW5rKFsyNzZdLHszODM6ZnVuY3Rpb24oZSxuLHIpe2UuZXhwb3J0cz1yKDM4NCl9LDM4NDpmdW5jdGlvbihlLG4scil7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShuLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxyLmQobiwiY3VycmVuY3lTdXBwb3J0RW5hYmxlZCIsZnVuY3Rpb24oKXtyZXR1cm4gUn0pLHIuZChuLCJjdXJyZW5jeVJhdGVzIixmdW5jdGlvbigpe3JldHVybiBEfSksbi5zZXRDb25maWc9YyxuLmFkZEJpZFJlc3BvbnNlSG9vaz1qO3ZhciBzPXIoMTkpLHU9cigzNCksYT1yKDUpLGY9KHIubihhKSxyKDQpKSxkPXIoMCksbz1yKDMpLGw9cigxMyk7ZnVuY3Rpb24geShlKXtyZXR1cm4oeT0iZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiYic3ltYm9sIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiYiZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT8ic3ltYm9sIjp0eXBlb2YgZX0pKGUpfXZhciBnLHY9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC9wcmViaWQvY3VycmVuY3ktZmlsZUAxL2xhdGVzdC5qc29uP2RhdGU9JCRUT0RBWSQkIixwPTQsYj1bXSxoPXt9LEM9ITEsUz0hMCxtPSJVU0QiLFI9ITEsRD17fSxJPXt9O2Z1bmN0aW9uIGMoZSl7dmFyIG4scixvLGMsdCxpPXY7Im9iamVjdCI9PT15KGUucmF0ZXMpJiYoRC5jb252ZXJzaW9ucz1lLnJhdGVzLFM9IShDPSEwKSksIm9iamVjdCI9PT15KGUuZGVmYXVsdFJhdGVzKSYmKGc9ZS5kZWZhdWx0UmF0ZXMsRC5jb252ZXJzaW9ucz1nLEM9ITApLCJzdHJpbmciPT10eXBlb2YgZS5hZFNlcnZlckN1cnJlbmN5PyhkLmxvZ0luZm8oImVuYWJsaW5nIGN1cnJlbmN5IHN1cHBvcnQiLGFyZ3VtZW50cyksbT1lLmFkU2VydmVyQ3VycmVuY3ksZS5jb252ZXJzaW9uUmF0ZUZpbGUmJihkLmxvZ0luZm8oImN1cnJlbmN5IHVzaW5nIG92ZXJyaWRlIGNvbnZlcnNpb25SYXRlRmlsZToiLGUuY29udmVyc2lvblJhdGVGaWxlKSxpPWUuY29udmVyc2lvblJhdGVGaWxlKSwtMSE9PShuPWkuaW5kZXhPZigiJCRUT0RBWSQkIikpJiYocj1uZXcgRGF0ZSxvPSIiLmNvbmNhdChyLmdldE1vbnRoKCkrMSksYz0iIi5jb25jYXQoci5nZXREYXRlKCkpLG8ubGVuZ3RoPDImJihvPSIwIi5jb25jYXQobykpLGMubGVuZ3RoPDImJihjPSIwIi5jb25jYXQoYykpLHQ9IiIuY29uY2F0KHIuZ2V0RnVsbFllYXIoKSkuY29uY2F0KG8pLmNvbmNhdChjKSxpPSIiLmNvbmNhdChpLnN1YnN0cmluZygwLG4pKS5jb25jYXQodCkuY29uY2F0KGkuc3Vic3RyaW5nKG4rOSxpLmxlbmd0aCkpKSxmdW5jdGlvbihlKXtoPXt9LFI9ITAsZC5sb2dJbmZvKCJJbnN0YWxsaW5nIGFkZEJpZFJlc3BvbnNlIGRlY29yYXRvciBmb3IgY3VycmVuY3kgbW9kdWxlIixhcmd1bWVudHMpLE9iamVjdChzLmEpKCkuY29udmVydEN1cnJlbmN5PWZ1bmN0aW9uKGUsbixyKXtyZXR1cm4gcGFyc2VGbG9hdChlKSpGKG4scil9LE9iamVjdChsLmEpKCJhZGRCaWRSZXNwb25zZSIpLmJlZm9yZShqLDEwMCksUyYmKFM9ITEsT2JqZWN0KGYuYSkoZSx7c3VjY2VzczpmdW5jdGlvbihuKXt0cnl7RD1KU09OLnBhcnNlKG4pLGQubG9nSW5mbygiY3VycmVuY3lSYXRlcyBzZXQgdG8gIitKU09OLnN0cmluZ2lmeShEKSksQz0hMCx3KCl9Y2F0Y2goZSl7TygiRmFpbGVkIHRvIHBhcnNlIGN1cnJlbmN5UmF0ZXMgcmVzcG9uc2U6ICIrbil9fSxlcnJvcjpPfSkpfShpKSk6KGQubG9nSW5mbygiZGlzYWJsaW5nIGN1cnJlbmN5IHN1cHBvcnQiKSxmdW5jdGlvbigpe2QubG9nSW5mbygiVW5pbnN0YWxsaW5nIGFkZEJpZFJlc3BvbnNlIGRlY29yYXRvciBmb3IgY3VycmVuY3kgbW9kdWxlIixhcmd1bWVudHMpLE9iamVjdChsLmEpKCJhZGRCaWRSZXNwb25zZSIpLmdldEhvb2tzKHtob29rOmp9KS5yZW1vdmUoKSxkZWxldGUgT2JqZWN0KHMuYSkoKS5jb252ZXJ0Q3VycmVuY3ksbT0iVVNEIixoPXt9LEM9Uj0hMSxTPSEwLEQ9e30sST17fX0oKSksIm9iamVjdCI9PT15KGUuYmlkZGVyQ3VycmVuY3lEZWZhdWx0KSYmKEk9ZS5iaWRkZXJDdXJyZW5jeURlZmF1bHQpfWZ1bmN0aW9uIE8oZSl7Zz8oZC5sb2dXYXJuKGUpLGQubG9nV2FybigiQ3VycmVuY3kgZmFpbGVkIGxvYWRpbmcgcmF0ZXMsIGZhbGxpbmcgYmFjayB0byBjdXJyZW5jeS5kZWZhdWx0UmF0ZXMiKSk6ZC5sb2dFcnJvcihlKX1mdW5jdGlvbiBqKGUsbixyKXtpZighcilyZXR1cm4gZS5jYWxsKHRoaXMsbik7dmFyIG8sYyx0LGkscz1yLmJpZGRlckNvZGV8fHIuYmlkZGVyO2lmKElbc10mJihvPUlbc10sci5jdXJyZW5jeSYmbyE9PXIuY3VycmVuY3k/ZC5sb2dXYXJuKCJDdXJyZW5jeSBkZWZhdWx0ICciLmNvbmNhdChzLCI6ICIpLmNvbmNhdChvLCInIGlnbm9yZWQuIGFkYXB0ZXIgc3BlY2lmaWVkICciKS5jb25jYXQoci5jdXJyZW5jeSwiJyIpKTpyLmN1cnJlbmN5PW8pLHIuY3VycmVuY3l8fChkLmxvZ1dhcm4oJ0N1cnJlbmN5IG5vdCBzcGVjaWZpZWQgb24gYmlkLiAgRGVmYXVsdGVkIHRvICJVU0QiJyksci5jdXJyZW5jeT0iVVNEIiksci5nZXRDcG1Jbk5ld0N1cnJlbmN5PWZ1bmN0aW9uKGUpe3JldHVybihwYXJzZUZsb2F0KHRoaXMuY3BtKSpGKHRoaXMuY3VycmVuY3ksZSkpLnRvRml4ZWQoMyl9LHIuY3VycmVuY3k9PT1tKXJldHVybiBlLmNhbGwodGhpcyxuLHIpO2IucHVzaCgoYz1lLHQ9dGhpcyxpPVtuLHJdLGZ1bmN0aW9uKCl7dmFyIG49aVsxXTtpZih2b2lkIDAhPT1uJiYiY3VycmVuY3kiaW4gbiYmImNwbSJpbiBuKXt2YXIgZT1uLmN1cnJlbmN5O3RyeXt2YXIgcj1GKGUpOzEhPT1yJiYobi5jcG09KHBhcnNlRmxvYXQobi5jcG0pKnIpLnRvRml4ZWQoNCksbi5jdXJyZW5jeT1tKX1jYXRjaChlKXtkLmxvZ1dhcm4oIlJldHVybmluZyBOT19CSUQsIGdldEN1cnJlbmN5Q29udmVyc2lvbiB0aHJldyBlcnJvcjogIixlKSxpWzFdPU9iamVjdCh1LmEpKGEuU1RBVFVTLk5PX0JJRCx7YmlkZGVyOm4uYmlkZGVyQ29kZXx8bi5iaWRkZXIsYmlkSWQ6bi5yZXF1ZXN0SWR9KX19cmV0dXJuIGMuYXBwbHkodCxpKX0pKSxSJiYhQ3x8dygpfWZ1bmN0aW9uIHcoKXtmb3IoOzA8Yi5sZW5ndGg7KWIuc2hpZnQoKSgpfWZ1bmN0aW9uIEYoZSxuKXt2YXIgcixvPTE8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09bj9uOm0sYz1udWxsLHQ9IiIuY29uY2F0KGUsIi0+IikuY29uY2F0KG8pO2lmKHQgaW4gaCljPWhbdF0sZC5sb2dNZXNzYWdlKCJVc2luZyBjb252ZXJzaW9uQ2FjaGUgdmFsdWUgIitjKyIgZm9yICIrdCk7ZWxzZSBpZighMT09PVIpe2lmKCJVU0QiIT09ZSl0aHJvdyBuZXcgRXJyb3IoIlByZWJpZCBjdXJyZW5jeSBzdXBwb3J0IGhhcyBub3QgYmVlbiBlbmFibGVkIGFuZCBmcm9tQ3VycmVuY3kgaXMgbm90IFVTRCIpO2M9MX1lbHNlIGlmKGU9PT1vKWM9MTtlbHNlIGlmKGUgaW4gRC5jb252ZXJzaW9ucyl7aWYoIShvIGluKHI9RC5jb252ZXJzaW9uc1tlXSkpKXRocm93IG5ldyBFcnJvcigiU3BlY2lmaWVkIGFkU2VydmVyQ3VycmVuY3kgaW4gY29uZmlnICciK28rIicgbm90IGZvdW5kIGluIHRoZSBjdXJyZW5jeSByYXRlcyBmaWxlIik7Yz1yW29dLGQubG9nSW5mbygiZ2V0Q3VycmVuY3lDb252ZXJzaW9uIHVzaW5nIGRpcmVjdCAiK2UrIiB0byAiK28rIiBjb252ZXJzaW9uUmF0ZSAiK2MpfWVsc2UgaWYobyBpbiBELmNvbnZlcnNpb25zKXtpZighKGUgaW4ocj1ELmNvbnZlcnNpb25zW29dKSkpdGhyb3cgbmV3IEVycm9yKCJTcGVjaWZpZWQgZnJvbUN1cnJlbmN5ICciK2UrIicgbm90IGZvdW5kIGluIHRoZSBjdXJyZW5jeSByYXRlcyBmaWxlIik7Yz1VKDEvcltlXSxwKSxkLmxvZ0luZm8oImdldEN1cnJlbmN5Q29udmVyc2lvbiB1c2luZyByZWNpcHJvY2FsICIrZSsiIHRvICIrbysiIGNvbnZlcnNpb25SYXRlICIrYyl9ZWxzZXt2YXIgaT1PYmplY3Qua2V5cyhELmNvbnZlcnNpb25zKVswXTtpZighKGUgaW4gRC5jb252ZXJzaW9uc1tpXSkpdGhyb3cgbmV3IEVycm9yKCJTcGVjaWZpZWQgZnJvbUN1cnJlbmN5ICciK2UrIicgbm90IGZvdW5kIGluIHRoZSBjdXJyZW5jeSByYXRlcyBmaWxlIik7dmFyIHM9MS9ELmNvbnZlcnNpb25zW2ldW2VdO2lmKCEobyBpbiBELmNvbnZlcnNpb25zW2ldKSl0aHJvdyBuZXcgRXJyb3IoIlNwZWNpZmllZCBhZFNlcnZlckN1cnJlbmN5IGluIGNvbmZpZyAnIitvKyInIG5vdCBmb3VuZCBpbiB0aGUgY3VycmVuY3kgcmF0ZXMgZmlsZSIpO2M9VShzKkQuY29udmVyc2lvbnNbaV1bb10scCk7ZC5sb2dJbmZvKCJnZXRDdXJyZW5jeUNvbnZlcnNpb24gdXNpbmcgaW50ZXJtZWRpYXRlICIrZSsiIHRocnUgIitpKyIgdG8gIitvKyIgY29udmVyc2lvblJhdGUgIitjKX1yZXR1cm4gdCBpbiBofHwoZC5sb2dNZXNzYWdlKCJBZGRpbmcgY29udmVyc2lvbkNhY2hlIHZhbHVlICIrYysiIGZvciAiK3QpLGhbdF09YyksY31mdW5jdGlvbiBVKGUsbil7Zm9yKHZhciByPTEsbz0wO288bjtvKyspcis9IjAiO3JldHVybiBNYXRoLnJvdW5kKGUqcikvcn1vLmIuZ2V0Q29uZmlnKCJjdXJyZW5jeSIsZnVuY3Rpb24oZSl7cmV0dXJuIGMoZS5jdXJyZW5jeSl9KX19LFszODNdKTsKdXBianNDaHVuayhbMjY5XSx7Mzk5OmZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9cig0MDApfSw0MDA6ZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtPYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksci5kKHQsIkRpc3RyaWN0bURteEFkYXB0ZXIiLGZ1bmN0aW9uKCl7cmV0dXJuIGN9KSx0Lm1hdGNoUmVxdWVzdD1mLHQuY2hlY2tEZWVwQXJyYXk9bCx0LmRlZmF1bHRTaXplPXA7dmFyIGE9cigwKSxuPXIoMSksdT1yKDMpO2Z1bmN0aW9uIGkoZSx0KXtyZXR1cm4gZnVuY3Rpb24oZSl7aWYoQXJyYXkuaXNBcnJheShlKSlyZXR1cm4gZX0oZSl8fGZ1bmN0aW9uKGUsdCl7aWYoInVuZGVmaW5lZCI9PXR5cGVvZiBTeW1ib2x8fCEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChlKSkpcmV0dXJuO3ZhciByPVtdLG49ITAsaT0hMSxhPXZvaWQgMDt0cnl7Zm9yKHZhciB1LG89ZVtTeW1ib2wuaXRlcmF0b3JdKCk7IShuPSh1PW8ubmV4dCgpKS5kb25lKSYmKHIucHVzaCh1LnZhbHVlKSwhdHx8ci5sZW5ndGghPT10KTtuPSEwKTt9Y2F0Y2goZSl7aT0hMCxhPWV9ZmluYWxseXt0cnl7bnx8bnVsbD09by5yZXR1cm58fG8ucmV0dXJuKCl9ZmluYWxseXtpZihpKXRocm93IGF9fXJldHVybiByfShlLHQpfHxmdW5jdGlvbihlLHQpe2lmKCFlKXJldHVybjtpZigic3RyaW5nIj09dHlwZW9mIGUpcmV0dXJuIG8oZSx0KTt2YXIgcj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkuc2xpY2UoOCwtMSk7Ik9iamVjdCI9PT1yJiZlLmNvbnN0cnVjdG9yJiYocj1lLmNvbnN0cnVjdG9yLm5hbWUpO2lmKCJNYXAiPT09cnx8IlNldCI9PT1yKXJldHVybiBBcnJheS5mcm9tKGUpO2lmKCJBcmd1bWVudHMiPT09cnx8L14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QocikpcmV0dXJuIG8oZSx0KX0oZSx0KXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLiIpfSgpfWZ1bmN0aW9uIG8oZSx0KXsobnVsbD09dHx8dD5lLmxlbmd0aCkmJih0PWUubGVuZ3RoKTtmb3IodmFyIHI9MCxuPW5ldyBBcnJheSh0KTtyPHQ7cisrKW5bcl09ZVtyXTtyZXR1cm4gbn1mdW5jdGlvbiBzKGUsdCl7Zm9yKHZhciByPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBuPXRbcl07bi5lbnVtZXJhYmxlPW4uZW51bWVyYWJsZXx8ITEsbi5jb25maWd1cmFibGU9ITAsInZhbHVlImluIG4mJihuLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxuLmtleSxuKX19dmFyIGQ9ImRpc3RyaWN0bURNWCIsYz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXshZnVuY3Rpb24oZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKX0odGhpcyxlKSx0aGlzLmNvZGU9ZCx0aGlzLnN1cHBvcnRlZEZvcm1hdD1bImJhbm5lciJdfXZhciB0LHIsbjtyZXR1cm4gdD1lLChyPVt7a2V5OiJpc0JpZFJlcXVlc3RWYWxpZCIsdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuISghZS5wYXJhbXMuZG14aWR8fCFlLnBhcmFtcy5tZW1iZXJpZCl9fSx7a2V5OiJpbnRlcnByZXRSZXNwb25zZSIsdmFsdWU6ZnVuY3Rpb24oZSxhKXtyZXR1cm4oZT1lLmJvZHl8fHt9KS5zZWF0YmlkJiZBcnJheS5pc0FycmF5KGUuc2VhdGJpZCk/ZS5zZWF0YmlkLnJlZHVjZShmdW5jdGlvbihlLHQpe3ZhciByPXQuYmlkLnJlZHVjZShmdW5jdGlvbihlLHQpe2lmKGUucHJpY2U8dC5wcmljZSl7dmFyIHI9cChmKHQuaW1waWQsYSkpLG49ci53aWR0aCxpPXIuaGVpZ2h0O3JldHVybiB0LmNwbT10LnByaWNlLHQuYmlkSWQ9dC5pbXBpZCx0LnJlcXVlc3RJZD10LmltcGlkLHQud2lkdGg9dC53fHxuLHQuaGVpZ2h0PXQuaHx8aSx0LmFkPXQuYWRtLHQubmV0UmV2ZW51ZT0hMCx0LmNyZWF0aXZlSWQ9dC5jcmlkLHQuY3VycmVuY3k9IlVTRCIsdC50dGw9NjAsdH1yZXR1cm4gZS5jcG09ZS5wcmljZSxlfSx7cHJpY2U6MH0pO3JldHVybiByLmFkbSYmZS5wdXNoKHIpLGV9LFtdKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuISFlLmJpZElkfSk6W119fSx7a2V5OiJidWlsZFJlcXVlc3RzIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXUuYi5nZXRDb25maWcoImJpZGRlclRpbWVvdXQiKSxuPXtpZDphLmdlbmVyYXRlVVVJRCgpLGN1cjpbIlVTRCJdLHRtYXg6ci0zMDAsdGVzdDp0aGlzLnRlc3QoKXx8MCxzaXRlOntwdWJsaXNoZXI6e2lkOlN0cmluZyhlWzBdLnBhcmFtcy5tZW1iZXJpZCl8fG51bGx9fX07bi50ZXN0fHxkZWxldGUgbi50ZXN0LHQuZ2RwckNvbnNlbnQmJihuLnJlZ3M9e30sbi5yZWdzLmV4dD17fSxuLnJlZ3MuZXh0LmdkcHI9ITA9PT10LmdkcHJDb25zZW50LmdkcHJBcHBsaWVzPzE6MCxuLnJlZ3MuZXh0LmdkcHImJihuLnJlZ3MuZXh0LmNvbnNlbnQ9dC5nZHByQ29uc2VudC5jb25zZW50U3RyaW5nKSk7dmFyIGk9ZS5tYXAoZnVuY3Rpb24oZSl7dmFyIHQ9e307cmV0dXJuIHQuaWQ9ZS5iaWRJZCx0LnRhZ2lkPVN0cmluZyhlLnBhcmFtcy5kbXhpZCksdC5zZWN1cmU9Imh0dHBzOiI9PT13aW5kb3cubG9jYXRpb24ucHJvdG9jb2w/MTowLHQuYmFubmVyPXt0b3BmcmFtZToxLHc6ZS5zaXplc1swXVswXXx8MCxoOmUuc2l6ZXNbMF1bMV18fDAsZm9ybWF0OmUuc2l6ZXMubWFwKGZ1bmN0aW9uKGUpe3JldHVybnt3OmVbMF0saDplWzFdfX0pfSx0fSk7cmV0dXJuIG4uaW1wPWkse21ldGhvZDoiUE9TVCIsdXJsOiJodHRwczovL2RteC5kaXN0cmljdG0uaW8vYi92MSIsZGF0YTpKU09OLnN0cmluZ2lmeShuKSxvcHRpb25zOntjb250ZW50VHlwZToiYXBwbGljYXRpb24vanNvbiIsd2l0aENyZWRlbnRpYWxzOiEwfSxiaWRkZXJSZXF1ZXN0OnR9fX0se2tleToidGVzdCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4tMSE9PXdpbmRvdy5sb2NhdGlvbi5ocmVmLmluZGV4T2YoImRtVGVzdD10cnVlIik/MTowfX0se2tleToiZ2V0VXNlclN5bmNzIix2YWx1ZTpmdW5jdGlvbihlKXtpZihlLmlmcmFtZUVuYWJsZWQpcmV0dXJuW3t0eXBlOiJpZnJhbWUiLHVybDoiaHR0cHM6Ly9jZG4uZGlzdHJpY3RtLmlvL2lkcy9pbmRleC5odG1sIn1dfX1dKSYmcyh0LnByb3RvdHlwZSxyKSxuJiZzKHQsbiksZX0oKTtmdW5jdGlvbiBmKHQsZSl7cmV0dXJuIGkoZS5iaWRkZXJSZXF1ZXN0LmJpZHMuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBlLmJpZElkPT09dH0pLDEpWzBdfWZ1bmN0aW9uIGwoZSl7cmV0dXJuIEFycmF5LmlzQXJyYXkoZSkmJkFycmF5LmlzQXJyYXkoZVswXSk/ZVswXTplfWZ1bmN0aW9uIHAoZSl7dmFyIHQ9ZS5zaXplcyxyPXt9O3JldHVybiByLndpZHRoPWwodClbMF0sci5oZWlnaHQ9bCh0KVsxXSxyfU9iamVjdChuLnJlZ2lzdGVyQmlkZGVyKShuZXcgYyl9fSxbMzk5XSk7CnVwYmpzQ2h1bmsoWzI2Ml0sezQxMzpmdW5jdGlvbihlLHIsdCl7ZS5leHBvcnRzPXQoNDE0KX0sNDE0OmZ1bmN0aW9uKGUscix0KXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHQuZChyLCJlbXhBZGFwdGVyIixmdW5jdGlvbigpe3JldHVybiBtfSksdC5kKHIsInNwZWMiLGZ1bmN0aW9uKCl7cmV0dXJuIHZ9KTt2YXIgcz10KDApLGk9dCgxKSxvPXQoMiksbj10KDExKSxhPXQoMTIpLGQ9dC5uKGEpLHU9dCgxMCkscD10Lm4odSk7ZnVuY3Rpb24gYygpe3JldHVybihjPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgcj0xO3I8YXJndW1lbnRzLmxlbmd0aDtyKyspe3ZhciB0PWFyZ3VtZW50c1tyXTtmb3IodmFyIGkgaW4gdClPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxpKSYmKGVbaV09dFtpXSl9cmV0dXJuIGV9KS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGw9ImVteF9kaWdpdGFsIixnPSJodHRwczovL2pzLmJyZWFsdGltZS5jb20vb3V0c3RyZWFtLzEuMzAuMC9idW5kbGUuanMiLG09e3ZhbGlkYXRlU2l6ZXM6ZnVuY3Rpb24oZSl7cmV0dXJuIHMuaXNBcnJheShlKSYmdm9pZCAwIT09ZVswXT9lLmV2ZXJ5KGZ1bmN0aW9uKGUpe3JldHVybiBzLmlzQXJyYXkoZSkmJjI9PT1lLmxlbmd0aH0pOihzLmxvZ1dhcm4obCsiOiBTaXplcyBzaG91bGQgYmUgYW4gYXJyYXkiKSwhMSl9LGNoZWNrVmlkZW9Db250ZXh0OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZlLm1lZGlhVHlwZXMmJmUubWVkaWFUeXBlcy52aWRlbyYmZS5tZWRpYVR5cGVzLnZpZGVvLmNvbnRleHQmJigiaW5zdHJlYW0iPT09ZS5tZWRpYVR5cGVzLnZpZGVvLmNvbnRleHR8fCJvdXRzdHJlYW0iPT09ZS5tZWRpYVR5cGVzLnZpZGVvLmNvbnRleHQpfSxidWlsZEJhbm5lcjpmdW5jdGlvbihlKXt2YXIgcj1bXSxyPWUubWVkaWFUeXBlcyYmZS5tZWRpYVR5cGVzLmJhbm5lciYmZS5tZWRpYVR5cGVzLmJhbm5lci5zaXplcz9lLm1lZGlhVHlwZXMuYmFubmVyLnNpemVzOmUuc2l6ZXM7cmV0dXJuIG0udmFsaWRhdGVTaXplcyhyKXx8KHMubG9nV2FybihsKyI6IGNvdWxkIG5vdCBkZXRlY3QgbWVkaWFUeXBlIGJhbm5lciBzaXplcy4gQXNzaWduaW5nIHRvIGJpZCBzaXplcyBpbnN0ZWFkIikscj1lLnNpemVzKSx7Zm9ybWF0OnIubWFwKGZ1bmN0aW9uKGUpe3JldHVybnt3OmVbMF0saDplWzFdfX0pLHc6clswXVswXSxoOnJbMF1bMV19fSxmb3JtYXRWaWRlb1Jlc3BvbnNlOmZ1bmN0aW9uKHIsZSx0KXtyZXR1cm4gci52YXN0WG1sPWUuYWRtLHQuYmlkZGVyUmVxdWVzdCYmdC5iaWRkZXJSZXF1ZXN0LmJpZHMmJjA8dC5iaWRkZXJSZXF1ZXN0LmJpZHMubGVuZ3RoJiZwKCkodC5iaWRkZXJSZXF1ZXN0LmJpZHMsZnVuY3Rpb24oZSl7cmV0dXJuIHIucmVxdWVzdElkJiZlLmJpZElkJiZyLnJlcXVlc3RJZD09PWUuYmlkSWQmJmUubWVkaWFUeXBlcyYmZS5tZWRpYVR5cGVzLnZpZGVvJiYib3V0c3RyZWFtIj09PWUubWVkaWFUeXBlcy52aWRlby5jb250ZXh0fSkmJihyLnJlbmRlcmVyPW0uY3JlYXRlUmVuZGVyZXIocix7aWQ6ZS5pZCx1cmw6Z30pKSxyfSxpc01vYmlsZTpmdW5jdGlvbigpe3JldHVybi8oaW9zfGlwb2R8aXBhZHxpcGhvbmV8YW5kcm9pZCkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpfSxpc0Nvbm5lY3RlZFRWOmZ1bmN0aW9uKCl7cmV0dXJuLyhzbWFydFstXT90dnxoYmJ0dnxhcHBsZXR2fGdvb2dsZXR2fGhkbWl8bmV0Y2FzdFwudHZ8dmllcmF8bmV0dHZ8cm9rdXxcYmR0dlxifHNvbnlkdHZ8aW5ldHR2YnJvd3NlcnxcYnR2XGIpL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KX0sZ2V0RGV2aWNlOmZ1bmN0aW9uKCl7cmV0dXJue3VhOm5hdmlnYXRvci51c2VyQWdlbnQsanM6MSxkbnQ6InllcyI9PT1uYXZpZ2F0b3IuZG9Ob3RUcmFja3x8IjEiPT09bmF2aWdhdG9yLmRvTm90VHJhY2t8fCIxIj09PW5hdmlnYXRvci5tc0RvTm90VHJhY2s/MTowLGg6c2NyZWVuLmhlaWdodCx3OnNjcmVlbi53aWR0aCxkZXZpY2V0eXBlOm0uaXNNb2JpbGUoKT8xOm0uaXNDb25uZWN0ZWRUVigpPzM6MixsYW5ndWFnZTpuYXZpZ2F0b3IubGFuZ3VhZ2V8fG5hdmlnYXRvci5icm93c2VyTGFuZ3VhZ2V8fG5hdmlnYXRvci51c2VyTGFuZ3VhZ2V8fG5hdmlnYXRvci5zeXN0ZW1MYW5ndWFnZX19LGNsZWFuUHJvdG9jb2xzOmZ1bmN0aW9uKGUpe3JldHVybiBlLnByb3RvY29scyYmZCgpKGUucHJvdG9jb2xzLDcpJiYocy5sb2dXYXJuKGwrIjogVkFTVCA0LjAgaXMgY3VycmVudGx5IG5vdCBzdXBwb3J0ZWQuIFRoaXMgcHJvdG9jb2wgaGFzIGJlZW4gZmlsdGVyZWQgb3V0IG9mIHRoZSByZXF1ZXN0LiIpLGUucHJvdG9jb2xzPWUucHJvdG9jb2xzLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gNyE9PWV9KSksZX0sb3V0c3RyZWFtUmVuZGVyOmZ1bmN0aW9uKHIpe3IucmVuZGVyZXIucHVzaChmdW5jdGlvbigpe3ZhciBlPXImJnIucGFyYW1zJiZyLnBhcmFtc1swXSYmci5wYXJhbXNbMF0udmlkZW8/ci5wYXJhbXNbMF0udmlkZW86e307d2luZG93LmVteFZpZGVvUXVldWU9d2luZG93LmVteFZpZGVvUXVldWV8fFtdLHdpbmRvdy5xdWV1ZUVteFZpZGVvKHtpZDpyLmFkVW5pdENvZGUsYWRzUmVzcG9uc2VzOnIudmFzdFhtbCxvcHRpb25zOmV9KSx3aW5kb3cuZW14VmlkZW9SZWFkeSYmd2luZG93LnZpZGVvanMmJndpbmRvdy5lbXhWaWRlb1JlYWR5KCl9KX0sY3JlYXRlUmVuZGVyZXI6ZnVuY3Rpb24oZSxyKXt2YXIgdD1uLmEuaW5zdGFsbCh7aWQ6ci5pZCx1cmw6Zyxsb2FkZWQ6ITF9KTt0cnl7dC5zZXRSZW5kZXIobS5vdXRzdHJlYW1SZW5kZXIpfWNhdGNoKGUpe3MubG9nV2FybigiUHJlYmlkIEVycm9yIGNhbGxpbmcgc2V0UmVuZGVyIG9uIHJlbmRlcmVyIixlKX1yZXR1cm4gdH0sYnVpbGRWaWRlbzpmdW5jdGlvbihlKXt2YXIgcj1jKGUubWVkaWFUeXBlcy52aWRlbyxlLnBhcmFtcy52aWRlbyk7cmV0dXJuIHMuaXNBcnJheShlLm1lZGlhVHlwZXMudmlkZW8ucGxheWVyU2l6ZVswXSk/KHIudz1lLm1lZGlhVHlwZXMudmlkZW8ucGxheWVyU2l6ZVswXVswXSxyLmg9ZS5tZWRpYVR5cGVzLnZpZGVvLnBsYXllclNpemVbMF1bMV0pOihyLnc9ZS5tZWRpYVR5cGVzLnZpZGVvLnBsYXllclNpemVbMF0sci5oPWUubWVkaWFUeXBlcy52aWRlby5wbGF5ZXJTaXplWzFdKSxtLmNsZWFuUHJvdG9jb2xzKHIpfSxwYXJzZVJlc3BvbnNlOmZ1bmN0aW9uKGUpe3RyeXtyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGUucmVwbGFjZSgvJSg/IVswLTldWzAtOWEtZkEtRl0rKS9nLCIlMjUiKSl9Y2F0Y2goZSl7cy5sb2dFcnJvcigiZW14X2RpZ2l0YWxCaWRBZGFwdGVyIiwiZXJyb3IiLGUpfX0sZ2V0UmVmZXJyZXI6ZnVuY3Rpb24oKXt0cnl7cmV0dXJuIHdpbmRvdy50b3AuZG9jdW1lbnQucmVmZXJyZXJ9Y2F0Y2goZSl7cmV0dXJuIGRvY3VtZW50LnJlZmVycmVyfX0sZ2V0U2l0ZTpmdW5jdGlvbihlKXtyZXR1cm57ZG9tYWluOnMucGFyc2VVcmwoZS5yZWZlcmVyKS5ob3N0bmFtZSxwYWdlOmUucmVmZXJlcixyZWY6bS5nZXRSZWZlcnJlcigpfX0sZ2V0R2RwcjpmdW5jdGlvbihlLHIpe3JldHVybiBlLmdkcHJDb25zZW50JiYoci5yZWdzPXtleHQ6e2dkcHI6ITA9PT1lLmdkcHJDb25zZW50LmdkcHJBcHBsaWVzPzE6MH19KSxlLmdkcHJDb25zZW50JiZlLmdkcHJDb25zZW50LmdkcHJBcHBsaWVzJiYoci51c2VyPXtleHQ6e2NvbnNlbnQ6ZS5nZHByQ29uc2VudC5jb25zZW50U3RyaW5nfX0pLHJ9LGdldFN1cHBseUNoYWluOmZ1bmN0aW9uKGUscil7cmV0dXJuIGUuc2NoYWluJiYoci5zb3VyY2U9e2V4dDp7c2NoYWluOmUuc2NoYWlufX0pLHJ9fSx2PXtjb2RlOmwsZ3ZsaWQ6MTgzLHN1cHBvcnRlZE1lZGlhVHlwZXM6W28uYixvLmRdLGlzQmlkUmVxdWVzdFZhbGlkOmZ1bmN0aW9uKGUpe2lmKCFlfHwhZS5wYXJhbXMpcmV0dXJuIHMubG9nV2FybihsKyI6IE1pc3NpbmcgYmlkIG9yIGJpZCBwYXJhbXMuIiksITE7aWYoZS5iaWRkZXIhPT1sKXJldHVybiBzLmxvZ1dhcm4obCsnOiBNdXN0IHVzZSAiZW14X2RpZ2l0YWwiIGFzIGJpZGRlciBjb2RlLicpLCExO2lmKCFlLnBhcmFtcy50YWdpZHx8IXMuaXNTdHIoZS5wYXJhbXMudGFnaWQpKXJldHVybiBzLmxvZ1dhcm4obCsiOiBNaXNzaW5nIHRhZ2lkIHBhcmFtIG9yIHRhZ2lkIHByZXNlbnQgYW5kIG5vdCB0eXBlIFN0cmluZy4iKSwhMTtpZihlLm1lZGlhVHlwZXMmJmUubWVkaWFUeXBlcy5iYW5uZXIpe3ZhciByPWUubWVkaWFUeXBlcy5iYW5uZXIuc2l6ZXM/ZS5tZWRpYVR5cGVzLmJhbm5lci5zaXplczplLnNpemVzO2lmKCFtLnZhbGlkYXRlU2l6ZXMocikpcmV0dXJuIHMubG9nV2FybihsKyI6IE1pc3Npbmcgc2l6ZXMgaW4gYmlkIiksITF9ZWxzZSBpZihlLm1lZGlhVHlwZXMmJmUubWVkaWFUeXBlcy52aWRlbyl7aWYoIW0uY2hlY2tWaWRlb0NvbnRleHQoZSkpcmV0dXJuIHMubG9nV2FybihsKyI6IE1pc3NpbmcgdmlkZW8gY29udGV4dDogaW5zdHJlYW0gb3Igb3V0c3RyZWFtIiksITE7aWYoIWUubWVkaWFUeXBlcy52aWRlby5wbGF5ZXJTaXplKXJldHVybiBzLmxvZ1dhcm4obCsiOiBNaXNzaW5nIHZpZGVvIHBsYXllclNpemUiKSwhMX1yZXR1cm4hMH0sYnVpbGRSZXF1ZXN0czpmdW5jdGlvbihlLHIpe3ZhciBhPVtdLHQ9Imh0dHBzOi8vaGIuZW14ZGd0LmNvbT90PSIrKHIudGltZW91dHx8IiIpKyImdHM9IitEYXRlLm5vdygpKyImc3JjPXBianMiLG89LTE8bG9jYXRpb24ucHJvdG9jb2wuaW5kZXhPZigiaHR0cHMiKT8xOjAsaT1tLmdldERldmljZSgpLG49bS5nZXRTaXRlKHIucmVmZXJlckluZm8pO3MuX2VhY2goZSxmdW5jdGlvbihlKXt2YXIgcj1zLmdldEJpZElkUGFyYW1ldGVyKCJ0YWdpZCIsZS5wYXJhbXMpLHQ9cGFyc2VGbG9hdChzLmdldEJpZElkUGFyYW1ldGVyKCJiaWRmbG9vciIsZS5wYXJhbXMpKXx8MCxpPSEhZS5tZWRpYVR5cGVzLnZpZGVvLG49Yyh7aWQ6ZS5iaWRJZCx0aWQ6ZS50cmFuc2FjdGlvbklkLHRhZ2lkOnIsc2VjdXJlOm99LGk/e3ZpZGVvOm0uYnVpbGRWaWRlbyhlKX06e2Jhbm5lcjptLmJ1aWxkQmFubmVyKGUpfSwwPHQ/e2JpZGZsb29yOnQsYmlkZmxvb3JjdXI6IlVTRCJ9Ont9KTthLnB1c2gobil9KTt2YXIgZD17aWQ6ci5hdWN0aW9uSWQsaW1wOmEsZGV2aWNlOmksc2l0ZTpuLGN1cjoiVVNEIix2ZXJzaW9uOiIxLjUuMSJ9LGQ9bS5nZXRHZHByKHIsYyh7fSxkKSk7cmV0dXJuIGQ9bS5nZXRTdXBwbHlDaGFpbihyLGMoe30sZCkpLHImJnIudXNwQ29uc2VudCYmKGQudXNfcHJpdmFjeT1yLnVzcENvbnNlbnQpLHttZXRob2Q6IlBPU1QiLHVybDp0LGRhdGE6SlNPTi5zdHJpbmdpZnkoZCksb3B0aW9uczp7d2l0aENyZWRlbnRpYWxzOiEwfSxiaWRkZXJSZXF1ZXN0OnJ9fSxpbnRlcnByZXRSZXNwb25zZTpmdW5jdGlvbihlLG4pe3ZhciBhPVtdLHI9ZS5ib2R5fHx7fTtyZXR1cm4gci5zZWF0YmlkJiYwPHIuc2VhdGJpZC5sZW5ndGgmJnIuc2VhdGJpZFswXS5iaWQmJnIuc2VhdGJpZC5mb3JFYWNoKGZ1bmN0aW9uKGUpe2U9ZS5iaWRbMF07dmFyIHI9ITEsdD1tLnBhcnNlUmVzcG9uc2UoZS5hZG0pfHwiIixpPXtyZXF1ZXN0SWQ6ZS5pZCxjcG06ZS5wcmljZSx3aWR0aDplLncsaGVpZ2h0OmUuaCxjcmVhdGl2ZUlkOmUuY3JpZHx8ZS5pZCxkZWFsSWQ6ZS5kZWFsaWR8fG51bGwsY3VycmVuY3k6IlVTRCIsbmV0UmV2ZW51ZTohMCx0dGw6ZS50dGwsYWQ6dH07ZS5hZG0mJi0xPGUuYWRtLmluZGV4T2YoIjw/eG1sIHZlcnNpb249IikmJihyPSEwLGk9bS5mb3JtYXRWaWRlb1Jlc3BvbnNlKGksYyh7fSxlKSxuKSksaS5tZWRpYVR5cGU9cj9vLmQ6by5iLGEucHVzaChpKX0pLGF9LGdldFVzZXJTeW5jczpmdW5jdGlvbihlLHIsdCl7dmFyIGksbj1bXTtyZXR1cm4gZS5pZnJhbWVFbmFibGVkJiYoaT0iaHR0cHM6Ly9iaWRkci5icmVhbHRpbWUuY29tL2NoZWNrLmh0bWwiLHQmJiJzdHJpbmciPT10eXBlb2YgdC5jb25zZW50U3RyaW5nJiYoImJvb2xlYW4iPT10eXBlb2YgdC5nZHByQXBwbGllcz9pKz0iP2dkcHI9Ii5jb25jYXQoTnVtYmVyKHQuZ2RwckFwcGxpZXMpLCImZ2Rwcl9jb25zZW50PSIpLmNvbmNhdCh0LmNvbnNlbnRTdHJpbmcpOmkrPSI/Z2Rwcl9jb25zZW50PSIuY29uY2F0KHQuY29uc2VudFN0cmluZykpLG4ucHVzaCh7dHlwZToiaWZyYW1lIix1cmw6aX0pKSxufX07T2JqZWN0KGkucmVnaXN0ZXJCaWRkZXIpKHYpfX0sWzQxM10pOwp1cGJqc0NodW5rKFsyNDBdLHs0NjE6ZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uKDQ2Mil9LDQ2MjpmdW5jdGlvbihlLHUsZCl7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh1LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxmdW5jdGlvbihKKXtkLmQodSwic3BlYyIsZnVuY3Rpb24oKXtyZXR1cm4gY30pO3ZhciAkPWQoMCksQT1kKDIpLG49ZCgzKSxlPWQoNyksdD1kKDEyKSxSPWQubih0KSxyPWQoMSk7ZnVuY3Rpb24gSCgpe3JldHVybihIPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9KS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZnVuY3Rpb24gYSh0LGUpe3ZhciBuLHI9T2JqZWN0LmtleXModCk7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMmJihuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHModCksZSYmKG49bi5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCxlKS5lbnVtZXJhYmxlfSkpLHIucHVzaC5hcHBseShyLG4pKSxyfWZ1bmN0aW9uIFgoaSl7Zm9yKHZhciBlPTE7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl7dmFyIG89bnVsbCE9YXJndW1lbnRzW2VdP2FyZ3VtZW50c1tlXTp7fTtlJTI/YShPYmplY3QobyksITApLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHQsbixyO3Q9aSxyPW9bbj1lXSxuIGluIHQ/T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsbix7dmFsdWU6cixlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOnRbbl09cn0pOk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzP09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGksT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMobykpOmEoT2JqZWN0KG8pKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShpLGUsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvLGUpKX0pfXJldHVybiBpfWZ1bmN0aW9uIEsoZSl7cmV0dXJuKEs9ImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmInN5bWJvbCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/InN5bWJvbCI6dHlwZW9mIGV9KShlKX1mdW5jdGlvbiBMKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIGV9KGUpfHxmdW5jdGlvbihlLHQpe2lmKCJ1bmRlZmluZWQiPT10eXBlb2YgU3ltYm9sfHwhKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoZSkpKXJldHVybjt2YXIgbj1bXSxyPSEwLGk9ITEsbz12b2lkIDA7dHJ5e2Zvcih2YXIgYSxjPWVbU3ltYm9sLml0ZXJhdG9yXSgpOyEocj0oYT1jLm5leHQoKSkuZG9uZSkmJihuLnB1c2goYS52YWx1ZSksIXR8fG4ubGVuZ3RoIT09dCk7cj0hMCk7fWNhdGNoKGUpe2k9ITAsbz1lfWZpbmFsbHl7dHJ5e3J8fG51bGw9PWMucmV0dXJufHxjLnJldHVybigpfWZpbmFsbHl7aWYoaSl0aHJvdyBvfX1yZXR1cm4gbn0oZSx0KXx8ZnVuY3Rpb24oZSx0KXtpZighZSlyZXR1cm47aWYoInN0cmluZyI9PXR5cGVvZiBlKXJldHVybiBpKGUsdCk7dmFyIG49T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpLnNsaWNlKDgsLTEpOyJPYmplY3QiPT09biYmZS5jb25zdHJ1Y3RvciYmKG49ZS5jb25zdHJ1Y3Rvci5uYW1lKTtpZigiTWFwIj09PW58fCJTZXQiPT09bilyZXR1cm4gQXJyYXkuZnJvbShlKTtpZigiQXJndW1lbnRzIj09PW58fC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKXJldHVybiBpKGUsdCl9KGUsdCl8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC4iKX0oKX1mdW5jdGlvbiBpKGUsdCl7KG51bGw9PXR8fHQ+ZS5sZW5ndGgpJiYodD1lLmxlbmd0aCk7Zm9yKHZhciBuPTAscj1uZXcgQXJyYXkodCk7bjx0O24rKylyW25dPWVbbl07cmV0dXJuIHJ9dmFyIFE9T2JqZWN0KGUuYikoKSxZPXt0OjAscnE6OCxwYnY6IjQuMTcuMCJ9LG89W0EuYixBLmRdLFU9e30sWj17fSxlZT1udWxsO3ZhciBjPXtjb2RlOiJndW1ndW0iLGFsaWFzZXM6WyJnZyJdLGlzQmlkUmVxdWVzdFZhbGlkOmZ1bmN0aW9uKGUpe3ZhciB0PWUucGFyYW1zLG49ZS5hZFVuaXRDb2RlLHI9dC5pblNjcmVlbnx8dC5pblNjcmVlblB1YklEfHx0LmluU2xvdHx8dC5JQ1Z8fHQudmlkZW98fHQuaW5WaWRlb3x8dC5zbG90fHx0Lm5hdGl2ZXx8dC56b25lfHx0LnB1YklEO2lmKFVbcl0pcmV0dXJuICQubG9nV2FybigiW0d1bUd1bV0gUGxlYXNlIGNoZWNrIHRoZSBpbXBsZW1lbnRhdGlvbiBmb3IgIi5jb25jYXQociwiIGZvciB0aGUgcGxhY2VtZW50ICIpLmNvbmNhdChuKSksITE7c3dpdGNoKCEwKXtjYXNlISF0LnpvbmU6Y2FzZSEhdC5wdWJJZDpjYXNlISF0LmluU2NyZWVuOmNhc2UhIXQuaW5TY3JlZW5QdWJJRDpjYXNlISF0LmluU2xvdDpjYXNlISF0LklDVjpjYXNlISF0LnZpZGVvOmNhc2UhIXQuaW5WaWRlbzpjYXNlISF0LnZpZGVvUHViSUQ6YnJlYWs7ZGVmYXVsdDpyZXR1cm4gJC5sb2dXYXJuKCJbR3VtR3VtXSBObyBwcm9kdWN0IHNlbGVjdGVkIGZvciB0aGUgcGxhY2VtZW50ICIuY29uY2F0KG4sIiwgcGxlYXNlIGNoZWNrIHlvdXIgaW1wbGVtZW50YXRpb24uIikpLCExfXJldHVybiEodC5iaWRmbG9vciYmKCJudW1iZXIiIT10eXBlb2YgdC5iaWRmbG9vcnx8IWlzRmluaXRlKHQuYmlkZmxvb3IpKSl8fCgkLmxvZ1dhcm4oIltHdW1HdW1dIGJpZGZsb29yIG11c3QgYmUgYSBOdW1iZXIiKSwhMSl9LGJ1aWxkUmVxdWVzdHM6ZnVuY3Rpb24oZSx0KXt2YXIgQj1bXSxGPXQmJnQuZ2RwckNvbnNlbnQsTT10JiZ0LnVzcENvbnNlbnQsVz1uLmIuZ2V0Q29uZmlnKCJiaWRkZXJUaW1lb3V0IiksXz10JiZ0LnJlZmVyZXJJbmZvJiZ0LnJlZmVyZXJJbmZvLnJlZmVyZXI7cmV0dXJuICQuX2VhY2goZSxmdW5jdGlvbihlKXt2YXIgdCxuLHIsaSxvLGEsYyx1LGQscCxzLGwsZixtLGIseSx2LGcsaCxJLFMsdyxPLGosUCx4LEMsRD1lLmJpZElkLHo9ZS5tZWRpYVR5cGVzLGs9dm9pZCAwPT09ej97fTp6LEE9ZS5wYXJhbXMsUj12b2lkIDA9PT1BP3t9OkEsVT1lLnNjaGFpbixOPWUudHJhbnNhY3Rpb25JZCxUPWUudXNlcklkLEc9dm9pZCAwPT09VD97fTpULFY9KHQ9ayxuPVIuYmlkZmxvb3Iscj1lLG89T2JqZWN0LmtleXModClbMF18fCJiYW5uZXIiLGE9bnx8MCwiZnVuY3Rpb24iPT10eXBlb2Ygci5nZXRGbG9vciYmKCJvYmplY3QiIT09SyhpPXIuZ2V0Rmxvb3Ioe2N1cnJlbmN5OiJVU0QiLG1lZGlhVHlwZTpvLHNpemU6IioifSkpfHwiVVNEIiE9PWkuY3VycmVuY3l8fGlzTmFOKHBhcnNlRmxvYXQoaS5mbG9vcikpfHwoYT1NYXRoLm1heChhLHBhcnNlRmxvYXQoaS5mbG9vcikpKSksYSksRT1bMSwxXSxxPXt9O2suYmFubmVyP0U9ay5iYW5uZXIuc2l6ZXM6ay52aWRlbyYmKEU9ay52aWRlby5wbGF5ZXJTaXplLGM9ay52aWRlbyx1PWMubWluZHVyYXRpb24sZD1jLm1heGR1cmF0aW9uLHA9Yy5saW5lYXJpdHkscz1jLnN0YXJ0ZGVsYXksbD1jLnBsYWNlbWVudCxmPWMucHJvdG9jb2xzLG09dm9pZCAwPT09Zj9bXTpmLGI9Yy5wbGF5ZXJTaXplLHk9dm9pZCAwPT09Yj9bXTpiLHY9JC5wYXJzZVNpemVzSW5wdXQoeSksZz1MKHZbMF0mJnZbMF0uc3BsaXQoIngiKSwyKSxoPWdbMF0sST1nWzFdLFM9IiIsbS5sZW5ndGgmJihTPW0uam9pbigiLCIpKSxxPXttaW5kOnUsbWF4ZDpkLGxpOnAsc2Q6cyxwdDpsLHByOlMsdml3OmgsdmloOkl9KSxlZSYmKHEucHY9ZWUpLFYmJihxLmZwPVYpLFIuaXJpc2NhdCYmInN0cmluZyI9PXR5cGVvZiBSLmlyaXNjYXQmJihxLmlyaXNjYXQ9Ui5pcmlzY2F0KSxSLnpvbmU/KHEudD1SLnpvbmUscS5waT0yLFIuc2xvdD8ocS5zaT1wYXJzZUludChSLnNsb3QsMTApLHEucGk9MyxxLmJmPUUucmVkdWNlKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIiIuY29uY2F0KGUpLmNvbmNhdChlJiYiLCIpLmNvbmNhdCh0WzBdLCJ4IikuY29uY2F0KHRbMV0pfSwiIikpOlIubmF0aXZlPyhxLm5pPXBhcnNlSW50KFIubmF0aXZlLDEwKSxxLnBpPTUpOmsudmlkZW8mJihxLnBpPTE9PT1rLnZpZGVvLmxpbmVhcml0eT83OjYpKTpSLnB1YklkPyhxLnB1YklkPVIucHViSWQscS5waT1rLnZpZGVvPzc6Mik6cT1YKFgoe30scSksZnVuY3Rpb24oZSx0KXt2YXIgbj17fTtlLmluU2NyZWVuUHViSUQmJihuLnB1YklkPWUuaW5TY3JlZW5QdWJJRCxuLnBpPTIpO2UuaW5TY3JlZW4mJihuLnQ9ZS5pblNjcmVlbixuLnBpPTIpO2UuaW5TbG90JiYobi5zaT1wYXJzZUludChlLmluU2xvdCwxMCksbi5waT0zLG4uYmY9dC5yZWR1Y2UoZnVuY3Rpb24oZSx0KXtyZXR1cm4iIi5jb25jYXQoZSkuY29uY2F0KGUmJiIsIikuY29uY2F0KHRbMF0sIngiKS5jb25jYXQodFsxXSl9LCIiKSk7ZS5JQ1YmJihuLm5pPXBhcnNlSW50KGUuSUNWLDEwKSxuLnBpPTUpO2UudmlkZW9QdWJJRCYmKG4ucHViSWQ9ZS52aWRlb1B1YklELG4ucGk9Nyk7ZS52aWRlbyYmKG4udD1lLnZpZGVvLG4ucGk9Nyk7ZS5pblZpZGVvJiYobi50PWUuaW5WaWRlbyxuLnBpPTYpO3JldHVybiBufShSLEUpKSxGJiYocS5nZHByQXBwbGllcz1GLmdkcHJBcHBsaWVzPzE6MCkscS5nZHByQXBwbGllcyYmKHEuZ2RwckNvbnNlbnQ9Ri5jb25zZW50U3RyaW5nKSxNJiYocS51c3BDb25zZW50PU0pLFUmJlUubm9kZXMmJihxLnNjaGFpbj0oTz0iIi5jb25jYXQoKHc9VSkudmVyLCIsIikuY29uY2F0KHcuY29tcGxldGUpLHcubm9kZXMubWFwKGZ1bmN0aW9uKGUpe08rPSIhIi5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KGUuYXNpfHwiIiksIiwiKSxPKz0iIi5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KGUuc2lkfHwiIiksIiwiKSxPKz0iIi5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KGUuaHB8fCIiKSwiLCIpLE8rPSIiLmNvbmNhdChlbmNvZGVVUklDb21wb25lbnQoZS5yaWR8fCIiKSwiLCIpLE8rPSIiLmNvbmNhdChlbmNvZGVVUklDb21wb25lbnQoZS5uYW1lfHwiIiksIiwiKSxPKz0iIi5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KGUuZG9tYWlufHwiIikpfSksTykpLEIucHVzaCh7aWQ6RCx0bWF4OlcsdElkOk4scGk6cS5waSxzZWxlY3RvcjpSLnNlbGVjdG9yLHNpemVzOkUsdXJsOiJodHRwczovL2cyLmd1bWd1bS5jb20vaGJpZC9pbXAiLG1ldGhvZDoiR0VUIixkYXRhOkgocSxmdW5jdGlvbihlKXt2YXIgdCxuLHIsaSxvLGEsYyx1O2lmKFoudncpcmV0dXJuIFo7dHJ5e249KHQ9Si50b3ApLnNjcmVlbixyPWV8fCIifWNhdGNoKGUpe3JldHVybiAkLmxvZ0Vycm9yKGUpLFp9cmV0dXJuIFo9e3Z3OnQuaW5uZXJXaWR0aCx2aDp0LmlubmVySGVpZ2h0LHN3Om4ud2lkdGgsc2g6bi5oZWlnaHQscHU6cixjZTpRLmNvb2tpZXNBcmVFbmFibGVkKCksZHByOnQuZGV2aWNlUGl4ZWxSYXRpb3x8MSxqY3NpOkpTT04uc3RyaW5naWZ5KFkpLG9ndTooYT0oZG9jdW1lbnQmJmRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJoZWFkIilbMF0pLnF1ZXJ5U2VsZWN0b3IoIm1ldGFbcHJvcGVydHk9J29nOnVybCddIikpP2EuY29udGVudDpudWxsfSxjPXdpbmRvdy5uYXZpZ2F0b3ImJih3aW5kb3cubmF2aWdhdG9yLmNvbm5lY3Rpb258fHdpbmRvdy5uYXZpZ2F0b3IubW96Q29ubmVjdGlvbnx8d2luZG93Lm5hdmlnYXRvci53ZWJraXRDb25uZWN0aW9uKSwobz0odT1jJiYoYy5kb3dubGlua3x8Yy5iYW5kd2lkdGgpKT9NYXRoLnJvdW5kKDEwMjQqdSk6bnVsbCkmJihaLm5zPW8pLChpPShyLm1hdGNoKC8jZ2dhZD0oXHcrKSQvKXx8WzAsMF0pWzFdKSYmKFpbaXNOYU4oaSk/ImVBZEJ1eUlkIjoiYWRCdXlJZCJdPWkpLFp9KF8pLCEoQz0oeD1HKS5kaWdpdHJ1c3RpZCYmeC5kaWdpdHJ1c3RpZC5kYXRhKXx8Qy5wcml2YWN5JiZDLnByaXZhY3kub3B0b3V0P3t9OntkdDpDLmlkfSwoUD17fSwoaj1HKS50ZGlkJiYoUC50ZGlkPWoudGRpZCksUCkpfSl9KSxCfSxpbnRlcnByZXRSZXNwb25zZTpmdW5jdGlvbihlLHQpe3ZhciBuLHIsaSxvPVtdLGE9ZS5ib2R5O2EmJiFhLmVycnx8KG49dC5kYXRhfHx7fSxyPW4uc2l8fG4ubml8fG4udHx8bi5wdWJJZCxpPWE/YS5lcnIuZHJ0OjE4ZTUsVVtyXT17cHJvZHVjdElkOm4ucGksdGltZXN0YW1wOihuZXcgRGF0ZSkuZ2V0VGltZSgpfSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7VVtyXSYmZGVsZXRlIFVbcl19LGkpLCQubG9nV2FybigiW0d1bUd1bV0gUGxlYXNlIGNoZWNrIHRoZSBpbXBsZW1lbnRhdGlvbiBmb3IgIi5jb25jYXQocikpKTt2YXIgYyx1LGQscCxzLGwsZixtLGI9SCh7YWQ6e3ByaWNlOjAsaWQ6MCxtYXJrdXA6IiJ9LHBhZzp7cHZpZDowfX0sYSkseT1iLmFkLHY9eS5wcmljZSxnPXkuaWQsaD15Lm1hcmt1cCxJPXkuY3VyLFM9Yi5jdyx3PWIucGFnLnB2aWQsTz1iLmpjc2ksaj10LmRhdGF8fHt9LFA9ai5waSx4PTM9PT1QJiY5PT09ai5zaSxDPSQucGFyc2VTaXplc0lucHV0KHQuc2l6ZXMpLEQ9TChDWzBdLnNwbGl0KCJ4IiksMiksej1EWzBdLGs9RFsxXTt0cnl7YSYmYS5hZCYmYS5hZC53aWR0aCYmYS5hZC5oZWlnaHQ/KHA9YS5hZC53aWR0aC50b1N0cmluZygpLHM9YS5hZC5oZWlnaHQudG9TdHJpbmcoKSk6aCYmKHU9KGM9aC5zcGxpdCgiXG4iKVswXSkubWF0Y2goL3dpZHRoOihbXnB4XSspcHg7LyksZD1jLm1hdGNoKC9oZWlnaHQ6KFtecHhdKylweDsvKSxwPXUmJnVbMV0scz1kJiZkWzFdKSxwJiZzJiYobD1wKyJ4IitzLDA8PUMuaW5kZXhPZihsKSYmKHo9cCxrPXMpKX1jYXRjaChlKXt9cmV0dXJuIDIhPT1QJiY1IT09UHx8IVIoKShDLCIxeDEiKXx8KGs9ej0iMSIpLE8mJihhLmpjc2k9WSksZWU9dyxnJiZvLnB1c2goWChYKFgoe30sNz09PVAmJnt2YXN0WG1sOmgsbWVkaWFUeXBlOkEuZH0pLHt9LHthZDpTPyhmPVMsbT1IKHt9LGEse2JpZFJlcXVlc3Q6dH0pLGYucmVwbGFjZSgiQURfSlNPTiIsd2luZG93LmJ0b2EoSlNPTi5zdHJpbmdpZnkobSkpKSk6aH0sNj09PVAmJnthZDpofSkse30se2NyZWF0aXZlOmgsY3BtOng/LjE6dixjcmVhdGl2ZUlkOmcsY3VycmVuY3k6SXx8IlVTRCIsaGVpZ2h0OmssbmV0UmV2ZW51ZTohMCxyZXF1ZXN0SWQ6dC5pZCx0dGw6NjAsd2lkdGg6en0pKSxvfSxnZXRVc2VyU3luY3M6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdC5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGUuYm9keSYmZS5ib2R5LnB4cyYmZS5ib2R5LnB4cy5zY3J8fFtdfSkucmVkdWNlKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUuY29uY2F0KHQpfSxbXSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybnt0eXBlOiJmIj09PWUudD8iaWZyYW1lIjoiaW1hZ2UiLHVybDplLnV9fSl9LHN1cHBvcnRlZE1lZGlhVHlwZXM6b307T2JqZWN0KHIucmVnaXN0ZXJCaWRkZXIpKGMpfS5jYWxsKHUsZCgzNSkpfX0sWzQ2MV0pOwp1cGJqc0NodW5rKFszOF0sezIyOmZ1bmN0aW9uKGUscix0KXsidXNlIHN0cmljdCI7ci5hPWZ1bmN0aW9uKGUpe3ZhciByPVtdO2Zvcih2YXIgdCBpbiBlKXt2YXIgaTtlLmhhc093blByb3BlcnR5KHQpJiYoInB1YlByb3ZpZGVkSWQiPT09dD9yPXIuY29uY2F0KGUucHViUHJvdmlkZWRJZCk6KGk9ZnVuY3Rpb24oZSxyKXt2YXIgdD1vW3JdO2lmKHQmJmUpe3ZhciBpPXt9O2kuc291cmNlPXQuc291cmNlO3ZhciBhPWMuaXNGbih0LmdldFZhbHVlKT90LmdldFZhbHVlKGUpOmU7aWYoYy5pc1N0cihhKSl7dmFyIG4scyxkPXtpZDphLGF0eXBlOnQuYXR5cGV9O3JldHVybiFjLmlzRm4odC5nZXRVaWRFeHQpfHwobj10LmdldFVpZEV4dChlKSkmJihkLmV4dD1uKSxpLnVpZHM9W2RdLCFjLmlzRm4odC5nZXRFaWRFeHQpfHwocz10LmdldEVpZEV4dChlKSkmJihpLmV4dD1zKSxpfX1yZXR1cm4gbnVsbH0oZVt0XSx0KSkmJnIucHVzaChpKSl9cmV0dXJuIHJ9O3ZhciBjPXQoMCksbz17aW50ZW50SXFJZDp7c291cmNlOiJpbnRlbnRpcS5jb20iLGF0eXBlOjF9LHB1YmNpZDp7c291cmNlOiJwdWJjaWQub3JnIixhdHlwZToxfSx0ZGlkOntzb3VyY2U6ImFkc2VydmVyLm9yZyIsYXR5cGU6MSxnZXRVaWRFeHQ6ZnVuY3Rpb24oKXtyZXR1cm57cnRpUGFydG5lcjoiVERJRCJ9fX0saWQ1aWQ6e2dldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLnVpZH0sc291cmNlOiJpZDUtc3luYy5jb20iLGF0eXBlOjEsZ2V0RWlkRXh0OmZ1bmN0aW9uKGUpe2lmKGUuZXh0KXJldHVybiBlLmV4dH19LHBhcnJhYmxlSWQ6e3NvdXJjZToicGFycmFibGUuY29tIixhdHlwZToxLGdldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLmVpZD9lLmVpZDplLmNjcGFPcHRvdXQ/IiI6bnVsbH0sZ2V0VWlkRXh0OmZ1bmN0aW9uKGUpe3ZhciByPWMucGljayhlLFsiaWJhT3B0b3V0IiwiY2NwYU9wdG91dCJdKTtpZihPYmplY3Qua2V5cyhyKS5sZW5ndGgpcmV0dXJuIHJ9fSxpZGxfZW52Ontzb3VyY2U6ImxpdmVyYW1wLmNvbSIsYXR5cGU6MX0sbGlwYjp7Z2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUubGlwYmlkfSxzb3VyY2U6ImxpdmVpbnRlbnQuY29tIixhdHlwZToxLGdldEVpZEV4dDpmdW5jdGlvbihlKXtpZihBcnJheS5pc0FycmF5KGUuc2VnbWVudHMpJiZlLnNlZ21lbnRzLmxlbmd0aClyZXR1cm57c2VnbWVudHM6ZS5zZWdtZW50c319fSxicml0ZXBvb2xpZDp7c291cmNlOiJicml0ZXBvb2wuY29tIixhdHlwZToxfSxsb3RhbWVQYW5vcmFtYUlkOntzb3VyY2U6ImNyd2RjbnRybC5uZXQiLGF0eXBlOjF9LGNyaXRlb0lkOntzb3VyY2U6ImNyaXRlby5jb20iLGF0eXBlOjF9LG1lcmtsZUlkOntzb3VyY2U6Im1lcmtsZWluYy5jb20iLGF0eXBlOjF9LG5ldElkOntzb3VyY2U6Im5ldGlkLmRlIixhdHlwZToxfSxzaGFyZWRpZDp7c291cmNlOiJzaGFyZWRpZC5vcmciLGF0eXBlOjEsZ2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuaWR9LGdldFVpZEV4dDpmdW5jdGlvbihlKXtyZXR1cm4gZSYmZS50aGlyZD97dGhpcmQ6ZS50aGlyZH06dm9pZCAwfX0sSURQOntzb3VyY2U6Inplb3RhcC5jb20iLGF0eXBlOjF9LGhhbG9JZDp7c291cmNlOiJhdWRpZ2VudC5jb20iLGF0eXBlOjF9LHF1YW50Y2FzdElkOntzb3VyY2U6InF1YW50Y2FzdC5jb20iLGF0eXBlOjF9LGlkeDp7c291cmNlOiJpZHgubGF0IixhdHlwZToxfSx2bXVpZDp7c291cmNlOiJ2ZXJpem9ubWVkaWEuY29tIixhdHlwZToxfX19LDQ4NjpmdW5jdGlvbihlLHIsdCl7ZS5leHBvcnRzPXQoNDg3KX0sNDg3OmZ1bmN0aW9uKGUscix0KXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHQuZChyLCJzcGVjIixmdW5jdGlvbigpe3JldHVybiBhfSksci5JbXByb3ZlRGlnaXRhbEFkU2VydmVySlNDbGllbnQ9dTt2YXIgaD10KDApLGk9dCgxKSxtPXQoMyksZz10KDIpLGQ9dCgxMSksYz10KDIyKSxhPXt2ZXJzaW9uOiI3LjEuMCIsY29kZToiaW1wcm92ZWRpZ2l0YWwiLGd2bGlkOjI1MyxhbGlhc2VzOlsiaWQiXSxzdXBwb3J0ZWRNZWRpYVR5cGVzOltnLmIsZy5jLGcuZF0saXNCaWRSZXF1ZXN0VmFsaWQ6ZnVuY3Rpb24oZSl7cmV0dXJuISEoZSYmZS5wYXJhbXMmJihlLnBhcmFtcy5wbGFjZW1lbnRJZHx8ZS5wYXJhbXMucGxhY2VtZW50S2V5JiZlLnBhcmFtcy5wdWJsaXNoZXJJZCkpfSxidWlsZFJlcXVlc3RzOmZ1bmN0aW9uKGUscil7dmFyIHQsaT1lLm1hcChmdW5jdGlvbihlKXt2YXIgcj1oLmdldEJpZElkUGFyYW1ldGVyKCJhZFVuaXRDb2RlIixlKXx8bnVsbCx0PWguZ2V0QmlkSWRQYXJhbWV0ZXIoInBsYWNlbWVudElkIixlLnBhcmFtcyl8fG51bGwsaT1udWxsLGE9bnVsbDtudWxsPT09dCYmKGk9aC5nZXRCaWRJZFBhcmFtZXRlcigicHVibGlzaGVySWQiLGUucGFyYW1zKXx8bnVsbCxhPWguZ2V0QmlkSWRQYXJhbWV0ZXIoInBsYWNlbWVudEtleSIsZS5wYXJhbXMpfHxudWxsKTt2YXIgbj1oLmdldEJpZElkUGFyYW1ldGVyKCJrZXlWYWx1ZXMiLGUucGFyYW1zKXx8bnVsbCxzPWguZ2V0QmlkSWRQYXJhbWV0ZXIoInNpemUiLGUucGFyYW1zKXx8bnVsbCxkPWguZ2V0QmlkSWRQYXJhbWV0ZXIoImJpZElkIixlKSxjPWguZ2V0QmlkSWRQYXJhbWV0ZXIoInRyYW5zYWN0aW9uSWQiLGUpLG89bS5iLmdldENvbmZpZygiY3VycmVuY3kuYWRTZXJ2ZXJDdXJyZW5jeSIpLHU9aC5nZXRCaWRJZFBhcmFtZXRlcigiYmlkRmxvb3IiLGUucGFyYW1zKSxwPWguZ2V0QmlkSWRQYXJhbWV0ZXIoImJpZEZsb29yQ3VyIixlLnBhcmFtcyksbD17fTt5KGUpJiYobC5hZFR5cGVzPVtnLmRdKTt0P2wucGxhY2VtZW50SWQ9dDooaSYmKGwucHVibGlzaGVySWQ9aSksYSYmKGwucGxhY2VtZW50S2V5PWEpKTtuJiYobC5rZXlWYWx1ZXM9bik7ITA9PT1tLmIuZ2V0Q29uZmlnKCJpbXByb3ZlZGlnaXRhbC51c2VQcmViaWRTaXplcyIpJiYheShlKSYmIWIoZSkmJmUuc2l6ZXMmJjA8ZS5zaXplcy5sZW5ndGg/bC5mb3JtYXQ9ZS5zaXplczpzJiZzLncmJnMuaCYmKGwuc2l6ZT17fSxsLnNpemUuaD1zLmgsbC5zaXplLnc9cy53KTtkJiYobC5pZD1kKTtyJiYobC5hZFVuaXRJZD1yKTtjJiYobC50cmFuc2FjdGlvbklkPWMpO28mJihsLmN1cnJlbmN5PW8pO3UmJihsLmJpZEZsb29yPXUsbC5iaWRGbG9vckN1cj1wP3AudG9VcHBlckNhc2UoKToiVVNEIik7cmV0dXJuIGx9KSxhPW5ldyB1KCJoYiIpLG49e3NpbmdsZVJlcXVlc3RNb2RlOiEwPT09bS5iLmdldENvbmZpZygiaW1wcm92ZWRpZ2l0YWwuc2luZ2xlUmVxdWVzdCIpLHJldHVybk9ialR5cGU6YS5DT05TVEFOVFMuUkVUVVJOX09CSl9UWVBFLlVSTF9QQVJBTVNfU1BMSVQsbGliVmVyc2lvbjp0aGlzLnZlcnNpb259O3ImJnIuZ2RwckNvbnNlbnQmJnIuZ2RwckNvbnNlbnQuY29uc2VudFN0cmluZyYmKG4uZ2Rwcj1yLmdkcHJDb25zZW50LmNvbnNlbnRTdHJpbmcpLHImJnIudXNwQ29uc2VudCYmKG4udXNQcml2YWN5PXIudXNwQ29uc2VudCksciYmci5yZWZlcmVySW5mbyYmci5yZWZlcmVySW5mby5yZWZlcmVyJiYobi5yZWZlcnJlcj1yLnJlZmVyZXJJbmZvLnJlZmVyZXIpLG4uc2NoYWluPWVbMF0uc2NoYWluLCFlWzBdLnVzZXJJZHx8KHQ9T2JqZWN0KGMuYSkoZVswXS51c2VySWQpKS5sZW5ndGgmJmguZGVlcFNldFZhbHVlKG4sInVzZXIuZXh0LmVpZHMiLHQpO3ZhciBzPWEuY3JlYXRlUmVxdWVzdChpLG4pO3JldHVybiBzLmVycm9ycyYmMDxzLmVycm9ycy5sZW5ndGgmJmgubG9nRXJyb3IoIklEIFdBUk5JTkcgMHgwMSIpLHMucmVxdWVzdHMuZm9yRWFjaChmdW5jdGlvbihlKXtyZXR1cm4gZS5iaWRkZXJSZXF1ZXN0PXJ9KSxzLnJlcXVlc3RzfSxpbnRlcnByZXRSZXNwb25zZTpmdW5jdGlvbihlLHIpe3ZhciBuPXIuYmlkZGVyUmVxdWVzdCxzPVtdO3JldHVybiBoLl9lYWNoKGUuYm9keS5iaWQsZnVuY3Rpb24odCl7dmFyIGUsaSxyLGE7dC5wcmljZSYmbnVsbCE9PXQucHJpY2UmJiF0Lmhhc093blByb3BlcnR5KCJlcnJvckNvZGUiKSYmKHQuYWRtfHx0Lm5hdGl2ZSkmJihlPWguZ2V0QmlkUmVxdWVzdCh0LmlkLFtuXSksaT17fSx0Lm5hdGl2ZT8oaS5uYXRpdmU9ZnVuY3Rpb24oZSl7dmFyIHI9e307aWYoIWV8fCFoLmlzQXJyYXkoZS5hc3NldHMpKXJldHVybiBudWxsO2UuYXNzZXRzLmZvckVhY2goZnVuY3Rpb24oZSl7aWYoZS50aXRsZSlyLnRpdGxlPWUudGl0bGUudGV4dDtlbHNlIGlmKGUuZGF0YSlzd2l0Y2goZS5kYXRhLnR5cGUpe2Nhc2UgMTpyLnNwb25zb3JlZEJ5PWUuZGF0YS52YWx1ZTticmVhaztjYXNlIDI6ci5ib2R5PWUuZGF0YS52YWx1ZTticmVhaztjYXNlIDM6ci5yYXRpbmc9ZS5kYXRhLnZhbHVlO2JyZWFrO2Nhc2UgNDpyLmxpa2VzPWUuZGF0YS52YWx1ZTticmVhaztjYXNlIDU6ci5kb3dubG9hZHM9ZS5kYXRhLnZhbHVlO2JyZWFrO2Nhc2UgNjpyLnByaWNlPWUuZGF0YS52YWx1ZTticmVhaztjYXNlIDc6ci5zYWxlUHJpY2U9ZS5kYXRhLnZhbHVlO2JyZWFrO2Nhc2UgODpyLnBob25lPWUuZGF0YS52YWx1ZTticmVhaztjYXNlIDk6ci5hZGRyZXNzPWUuZGF0YS52YWx1ZTticmVhaztjYXNlIDEwOnIuYm9keTI9ZS5kYXRhLnZhbHVlO2JyZWFrO2Nhc2UgMTE6ci5kaXNwbGF5VXJsPWUuZGF0YS52YWx1ZTticmVhaztjYXNlIDEyOnIuY3RhPWUuZGF0YS52YWx1ZX1lbHNlIGlmKGUuaW1nKXN3aXRjaChlLmltZy50eXBlKXtjYXNlIDI6ci5pY29uPXt1cmw6ZS5pbWcudXJsLHdpZHRoOmUuaW1nLncsaGVpZ2h0OmUuaW1nLmh9O2JyZWFrO2Nhc2UgMzpyLmltYWdlPXt1cmw6ZS5pbWcudXJsLHdpZHRoOmUuaW1nLncsaGVpZ2h0OmUuaW1nLmh9fX0pLGUuZXZlbnR0cmFja2Vycz8oci5pbXByZXNzaW9uVHJhY2tlcnM9W10sZS5ldmVudHRyYWNrZXJzLmZvckVhY2goZnVuY3Rpb24oZSl7aWYoMT09PWUuZXZlbnQpc3dpdGNoKGUubWV0aG9kKXtjYXNlIDE6ci5pbXByZXNzaW9uVHJhY2tlcnMucHVzaChlLnVybCk7YnJlYWs7Y2FzZSAyOnIuamF2YXNjcmlwdFRyYWNrZXJzPSc8c2NyaXB0IHNyYz0iJy5jb25jYXQoZS51cmwsJyI+PFwvc2NyaXB0PicpfX0pKTooci5pbXByZXNzaW9uVHJhY2tlcnM9ZS5pbXB0cmFja2Vyc3x8W10sci5qYXZhc2NyaXB0VHJhY2tlcnM9ZS5qc3RyYWNrZXIpO2UubGluayYmKHIuY2xpY2tVcmw9ZS5saW5rLnVybCxyLmNsaWNrVHJhY2tlcnM9ZS5saW5rLmNsaWNrdHJhY2tlcnMpO2UucHJpdmFjeSYmKHIucHJpdmFjeUxpbms9ZS5wcml2YWN5KTtyZXR1cm4gcn0odC5uYXRpdmUpLGkub3J0Yk5hdGl2ZT10Lm5hdGl2ZSx0Lm51cmwmJmkubmF0aXZlLmltcHJlc3Npb25UcmFja2Vycy51bnNoaWZ0KHQubnVybCksaS5tZWRpYVR5cGU9Zy5jKTp0LmFkX3R5cGUmJiJ2aWRlbyI9PT10LmFkX3R5cGU/KGkudmFzdFhtbD10LmFkbSxpLm1lZGlhVHlwZT1nLmQsYihlKSYmKGkuYWRSZXNwb25zZT17Y29udGVudDppLnZhc3RYbWwsaGVpZ2h0OnQuaCx3aWR0aDp0Lnd9LGkucmVuZGVyZXI9ZnVuY3Rpb24oZSl7dmFyIHI9ZC5hLmluc3RhbGwoe2lkOmUuYWRVbml0Q29kZSx1cmw6Imh0dHBzOi8vYWNkbi5hZG54cy5jb20vdmlkZW8vb3V0c3RyZWFtL0FOT3V0c3RyZWFtVmlkZW8uanMiLGxvYWRlZDohMSxjb25maWc6aC5kZWVwQWNjZXNzKGUsInJlbmRlcmVyLm9wdGlvbnMiKSxhZFVuaXRDb2RlOmUuYWRVbml0Q29kZX0pO3RyeXtyLnNldFJlbmRlcihvKX1jYXRjaChlKXtoLmxvZ1dhcm4oIlByZWJpZCBFcnJvciBjYWxsaW5nIHNldFJlbmRlciBvbiByZW5kZXJlciIsZSl9cmV0dXJuIHJ9KGUpKSk6KHI9IiIsdC5udXJsJiYwPHQubnVybC5sZW5ndGgmJihyPSc8aW1nIHNyYz0iJy5jb25jYXQodC5udXJsLCciIHdpZHRoPSIwIiBoZWlnaHQ9IjAiIHN0eWxlPSJkaXNwbGF5Om5vbmUiPicpKSxpLmFkPSIiLmNvbmNhdChyLCI8c2NyaXB0PiIpLmNvbmNhdCh0LmFkbSwiPFwvc2NyaXB0PiIpLGkubWVkaWFUeXBlPWcuYiksaS5hZElkPXQuaWQsaS5jcG09cGFyc2VGbG9hdCh0LnByaWNlKSxpLmNyZWF0aXZlSWQ9dC5jaWQsaS5jdXJyZW5jeT10LmN1cnJlbmN5P3QuY3VycmVuY3kudG9VcHBlckNhc2UoKToiVVNEIixoLmlzTnVtYmVyKHQubGlkKSYmdC5idXlpbmdfdHlwZSYmInJ0YiIhPT10LmJ1eWluZ190eXBlP2kuZGVhbElkPXQubGlkOkFycmF5LmlzQXJyYXkodC5saWQpJiZBcnJheS5pc0FycmF5KHQuYnV5aW5nX3R5cGUpJiZ0LmxpZC5sZW5ndGg9PT10LmJ1eWluZ190eXBlLmxlbmd0aCYmKGE9ITEsdC5idXlpbmdfdHlwZS5mb3JFYWNoKGZ1bmN0aW9uKGUscil7YXx8ZSYmInJ0YiIhPT1lJiYoYT0hMCxpLmRlYWxJZD10LmxpZFtyXSl9KSksaS5oZWlnaHQ9dC5oLGkubmV0UmV2ZW51ZT0hIXQuaXNOZXQmJnQuaXNOZXQsaS5yZXF1ZXN0SWQ9dC5pZCxpLnR0bD0zMDAsaS53aWR0aD10LncsaS53aWR0aCYmaS5oZWlnaHR8fChpLndpZHRoPTEsaS5oZWlnaHQ9MSkscy5wdXNoKGkpKX0pLHN9LGdldFVzZXJTeW5jczpmdW5jdGlvbihlLHIpe2lmKGUucGl4ZWxFbmFibGVkKXt2YXIgdD1bXTtyZXR1cm4gci5mb3JFYWNoKGZ1bmN0aW9uKGUpe2UuYm9keS5iaWQuZm9yRWFjaChmdW5jdGlvbihlKXtoLmlzQXJyYXkoZS5zeW5jKSYmZS5zeW5jLmZvckVhY2goZnVuY3Rpb24oZSl7LTE9PT10LmluZGV4T2YoZSkmJnQucHVzaChlKX0pfSl9KSx0Lm1hcChmdW5jdGlvbihlKXtyZXR1cm57dHlwZToiaW1hZ2UiLHVybDplfX0pfXJldHVybltdfX07ZnVuY3Rpb24geShlKXt2YXIgcj1PYmplY3Qua2V5cyhoLmRlZXBBY2Nlc3MoZSwibWVkaWFUeXBlcyIse30pKSx0PWguZGVlcEFjY2VzcyhlLCJtZWRpYVR5cGVzLnZpZGVvIiksaT1oLmRlZXBBY2Nlc3MoZSwibWVkaWFUeXBlcy52aWRlby5jb250ZXh0Iik7cmV0dXJuInZpZGVvIj09PWUubWVkaWFUeXBlfHwxPT09ci5sZW5ndGgmJnQmJiJvdXRzdHJlYW0iIT09aX1mdW5jdGlvbiBiKGUpe3ZhciByPWguZGVlcEFjY2VzcyhlLCJtZWRpYVR5cGVzLnZpZGVvIiksdD1oLmRlZXBBY2Nlc3MoZSwibWVkaWFUeXBlcy52aWRlby5jb250ZXh0Iik7cmV0dXJuIHImJiJvdXRzdHJlYW0iPT09dH1mdW5jdGlvbiBvKGUpe2UucmVuZGVyZXIucHVzaChmdW5jdGlvbigpe3dpbmRvdy5BTk91dHN0cmVhbVZpZGVvLnJlbmRlckFkKHtzaXplczpbZS53aWR0aCxlLmhlaWdodF0sdGFyZ2V0SWQ6ZS5hZFVuaXRDb2RlLGFkUmVzcG9uc2U6ZS5hZFJlc3BvbnNlLHJlbmRlcmVyT3B0aW9uczplLnJlbmRlcmVyLmdldENvbmZpZygpfSxmdW5jdGlvbihlLHIsdCl7ZS5yZW5kZXJlci5oYW5kbGVWaWRlb0V2ZW50KHtpZDpyLGV2ZW50TmFtZTp0fSl9LmJpbmQobnVsbCxlKSl9KX1mdW5jdGlvbiB1KGUpe3RoaXMuQ09OU1RBTlRTPXtBRF9TRVJWRVJfQkFTRV9VUkw6ImljZS4zNjB5aWVsZC5jb20iLEVORF9QT0lOVDplfHwiaGIiLEFEX1NFUlZFUl9VUkxfUEFSQU06Impzb25wPSIsQ0xJRU5UX1ZFUlNJT046IkpTLTYuMy4wIixNQVhfVVJMX0xFTkdUSDoyMDgzLEVSUk9SX0NPREVTOntNSVNTSU5HX1BMQUNFTUVOVF9QQVJBTVM6MixMSUJfVkVSU0lPTl9NSVNTSU5HOjN9LFJFVFVSTl9PQkpfVFlQRTp7REVGQVVMVDowLFVSTF9QQVJBTVNfU1BMSVQ6MX19LHRoaXMuZ2V0RXJyb3JSZXR1cm49ZnVuY3Rpb24oZSl7cmV0dXJue2lkTWFwcGluZ3M6e30scmVxdWVzdHM6e30sZXJyb3JDb2RlOmV9fSx0aGlzLmNyZWF0ZVJlcXVlc3Q9ZnVuY3Rpb24oZSxyLHQpe2lmKCFyLmxpYlZlcnNpb24pcmV0dXJuIHRoaXMuZ2V0RXJyb3JSZXR1cm4odGhpcy5DT05TVEFOVFMuRVJST1JfQ09ERVMuTElCX1ZFUlNJT05fTUlTU0lORyk7ci5yZXR1cm5PYmpUeXBlPXIucmV0dXJuT2JqVHlwZXx8dGhpcy5DT05TVEFOVFMuUkVUVVJOX09CSl9UWVBFLkRFRkFVTFQsci5hZFNlcnZlckJhc2VVcmw9Imh0dHBzOi8vIisoci5hZFNlcnZlckJhc2VVcmx8fHRoaXMuQ09OU1RBTlRTLkFEX1NFUlZFUl9CQVNFX1VSTCk7dmFyIGk9W107aWYoaC5pc0FycmF5KGUpKWZvcih2YXIgYT0wO2E8ZS5sZW5ndGg7YSsrKWM9dGhpcy5jcmVhdGVJbXByZXNzaW9uT2JqZWN0KGVbYV0pLGkucHVzaChjKTtlbHNlIGM9dGhpcy5jcmVhdGVJbXByZXNzaW9uT2JqZWN0KGUpLGkucHVzaChjKTt2YXIgbj0hMDtyLnJldHVybk9ialR5cGU9PT10aGlzLkNPTlNUQU5UUy5SRVRVUk5fT0JKX1RZUEUuVVJMX1BBUkFNU19TUExJVCYmKG49ITEpO3ZhciBzPXtyZXF1ZXN0czpbXX07biYmKHMuaWRNYXBwaW5ncz1bXSk7Zm9yKHZhciBkLGMsbz1udWxsLHU9IiIuY29uY2F0KHIuYWRTZXJ2ZXJCYXNlVXJsLCIvIikuY29uY2F0KHRoaXMuQ09OU1RBTlRTLkVORF9QT0lOVCwiPyIpLmNvbmNhdCh0aGlzLkNPTlNUQU5UUy5BRF9TRVJWRVJfVVJMX1BBUkFNKSxwPXtiaWRfcmVxdWVzdDp0aGlzLmNyZWF0ZUJhc2ljQmlkUmVxdWVzdE9iamVjdChyLHQpfSxsPTA7bDxpLmxlbmd0aDtsKyspeyhjPWlbbF0pLmVycm9yQ29kZT8obz1vfHxbXSkucHVzaCh7ZXJyb3JDb2RlOmMuZXJyb3JDb2RlLGFkVW5pdElkOmMuYWRVbml0SWR9KToobiYmcy5pZE1hcHBpbmdzLnB1c2goe2FkVW5pdElkOmMuYWRVbml0SWQsaWQ6Yy5pbXByZXNzaW9uT2JqZWN0LmlkfSkscC5iaWRfcmVxdWVzdC5pbXA9cC5iaWRfcmVxdWVzdC5pbXB8fFtdLHAuYmlkX3JlcXVlc3QuaW1wLnB1c2goYy5pbXByZXNzaW9uT2JqZWN0KSxkPSExLCh1K2VuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShwKSkpLmxlbmd0aD50aGlzLkNPTlNUQU5UUy5NQVhfVVJMX0xFTkdUSCYmKGQ9ITAsMTxwLmJpZF9yZXF1ZXN0LmltcC5sZW5ndGgmJihwLmJpZF9yZXF1ZXN0LmltcC5wb3AoKSxuJiZzLmlkTWFwcGluZ3MucG9wKCksbC0tKSksIWQmJnIuc2luZ2xlUmVxdWVzdE1vZGUmJmwhPT1pLmxlbmd0aC0xfHwocy5yZXF1ZXN0cy5wdXNoKHRoaXMuZm9ybWF0UmVxdWVzdChyLHApKSxwPXtiaWRfcmVxdWVzdDp0aGlzLmNyZWF0ZUJhc2ljQmlkUmVxdWVzdE9iamVjdChyLHQpfSkpfXJldHVybiBvJiYocy5lcnJvcnM9byksc30sdGhpcy5mb3JtYXRSZXF1ZXN0PWZ1bmN0aW9uKGUscil7c3dpdGNoKGUucmV0dXJuT2JqVHlwZSl7Y2FzZSB0aGlzLkNPTlNUQU5UUy5SRVRVUk5fT0JKX1RZUEUuVVJMX1BBUkFNU19TUExJVDpyZXR1cm57bWV0aG9kOiJHRVQiLHVybDoiIi5jb25jYXQoZS5hZFNlcnZlckJhc2VVcmwsIi8iKS5jb25jYXQodGhpcy5DT05TVEFOVFMuRU5EX1BPSU5UKSxkYXRhOiIiLmNvbmNhdCh0aGlzLkNPTlNUQU5UUy5BRF9TRVJWRVJfVVJMX1BBUkFNKS5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHIpKSl9O2RlZmF1bHQ6cmV0dXJue3VybDoiIi5jb25jYXQoZS5hZFNlcnZlckJhc2VVcmwsIi8iKSsiIi5jb25jYXQodGhpcy5DT05TVEFOVFMuRU5EX1BPSU5ULCI/IikuY29uY2F0KHRoaXMuQ09OU1RBTlRTLkFEX1NFUlZFUl9VUkxfUEFSQU0pK2VuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShyKSl9fX0sdGhpcy5jcmVhdGVCYXNpY0JpZFJlcXVlc3RPYmplY3Q9ZnVuY3Rpb24oZSxyKXt2YXIgdD17c2VjdXJlOjF9O2lmKGUucmVxdWVzdElkP3QuaWQ9ZS5yZXF1ZXN0SWQ6dC5pZD1oLmdldFVuaXF1ZUlkZW50aWZpZXJTdHIoKSxlLmRvbWFpbiYmKHQuZG9tYWluPWUuZG9tYWluKSxlLnBhZ2UmJih0LnBhZ2U9ZS5wYWdlKSxlLnJlZiYmKHQucmVmPWUucmVmKSxlLmNhbGxiYWNrJiYodC5jYWxsYmFjaz1lLmNhbGxiYWNrKSxlLmxpYlZlcnNpb24mJih0LnZlcnNpb249ZS5saWJWZXJzaW9uKyItIit0aGlzLkNPTlNUQU5UUy5DTElFTlRfVkVSU0lPTiksZS5yZWZlcnJlciYmKHQucmVmZXJyZXI9ZS5yZWZlcnJlciksIWUuZ2RwciYmMCE9PWUuZ2Rwcnx8KHQuZ2Rwcj1lLmdkcHIpLGUudXNQcml2YWN5JiYodC51c19wcml2YWN5PWUudXNQcml2YWN5KSxlLnNjaGFpbiYmKHQuc2NoYWluPWUuc2NoYWluKSxlLnVzZXImJih0LnVzZXI9ZS51c2VyKSxyKWZvcih2YXIgaSBpbiByKXRbaV09cltpXTtyZXR1cm4gdH0sdGhpcy5jcmVhdGVJbXByZXNzaW9uT2JqZWN0PWZ1bmN0aW9uKGUpe3ZhciByLHQ9e30saT17fTtpZih0LmltcHJlc3Npb25PYmplY3Q9aSxlLmlkP2kuaWQ9ZS5pZDppLmlkPWguZ2V0VW5pcXVlSWRlbnRpZmllclN0cigpLGUuYWRUeXBlcyYmKGkuYWRfdHlwZXM9ZS5hZFR5cGVzKSxlLmFkVW5pdElkJiYodC5hZFVuaXRJZD1lLmFkVW5pdElkKSxlLmN1cnJlbmN5JiYoaS5jdXJyZW5jeT1lLmN1cnJlbmN5LnRvVXBwZXJDYXNlKCkpLGUuYmlkRmxvb3ImJihpLmJpZGZsb29yPWUuYmlkRmxvb3IpLGUuYmlkRmxvb3JDdXImJihpLmJpZGZsb29yY3VyPWUuYmlkRmxvb3JDdXIudG9VcHBlckNhc2UoKSksZS5wbGFjZW1lbnRJZCYmKGkucGlkPWUucGxhY2VtZW50SWQpLGUucHVibGlzaGVySWQmJihpLnB1YmlkPWUucHVibGlzaGVySWQpLGUucGxhY2VtZW50S2V5JiYoaS5wa2V5PWUucGxhY2VtZW50S2V5KSxlLnRyYW5zYWN0aW9uSWQmJihpLnRpZD1lLnRyYW5zYWN0aW9uSWQpLGUua2V5VmFsdWVzKWZvcih2YXIgYSBpbiBlLmtleVZhbHVlcylmb3IodmFyIG49MDtuPGUua2V5VmFsdWVzW2FdLmxlbmd0aDtuKyspaS5rdnc9aS5rdnd8fHt9LGkua3Z3W2FdPWkua3Z3W2FdfHxbXSxpLmt2d1thXS5wdXNoKGUua2V5VmFsdWVzW2FdW25dKTtyZXR1cm4gaS5iYW5uZXI9e30sZS5zaXplJiZlLnNpemUudyYmZS5zaXplLmgmJihpLmJhbm5lci53PWUuc2l6ZS53LGkuYmFubmVyLmg9ZS5zaXplLmgpLGUuZm9ybWF0JiZoLmlzQXJyYXkoZS5mb3JtYXQpJiYoMDwocj1lLmZvcm1hdC5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIDI9PT1lLmxlbmd0aCYmaC5pc0ludGVnZXIoZVswXSkmJmguaXNJbnRlZ2VyKGVbMV0pJiYwPD1lWzBdJiYwPD1lWzFdfSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybnt3OmVbMF0saDplWzFdfX0pKS5sZW5ndGgmJihpLmJhbm5lci5mb3JtYXQ9cikpLGkucGlkfHxpLnB1YmlkfHxpLnBrZXl8fGkuYmFubmVyJiZpLmJhbm5lci53JiZpLmJhbm5lci5ofHwodC5pbXByZXNzaW9uT2JqZWN0PW51bGwsdC5lcnJvckNvZGU9dGhpcy5DT05TVEFOVFMuRVJST1JfQ09ERVMuTUlTU0lOR19QTEFDRU1FTlRfUEFSQU1TKSx0fX1PYmplY3QoaS5yZWdpc3RlckJpZGRlcikoYSl9fSxbNDg2XSk7CnVwYmpzQ2h1bmsoWzIyMl0sezUwNDpmdW5jdGlvbihlLHIsdCl7ZS5leHBvcnRzPXQoNTA1KX0sNTA1OmZ1bmN0aW9uKGUscix0KXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHQuZChyLCJzcGVjIixmdW5jdGlvbigpe3JldHVybiBjfSk7dmFyIEY9dCgwKSxqPXQoMiksQj10KDMpLG49dCgxMCksZj10Lm4obiksaT10KDUwNikscz10Lm4oaSksYT10KDEpO2Z1bmN0aW9uIEooZSl7cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIG8oZSl9KGUpfHxmdW5jdGlvbihlKXtpZigidW5kZWZpbmVkIiE9dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChlKSlyZXR1cm4gQXJyYXkuZnJvbShlKX0oZSl8fGZ1bmN0aW9uKGUscil7aWYoIWUpcmV0dXJuO2lmKCJzdHJpbmciPT10eXBlb2YgZSlyZXR1cm4gbyhlLHIpO3ZhciB0PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKS5zbGljZSg4LC0xKTsiT2JqZWN0Ij09PXQmJmUuY29uc3RydWN0b3ImJih0PWUuY29uc3RydWN0b3IubmFtZSk7aWYoIk1hcCI9PT10fHwiU2V0Ij09PXQpcmV0dXJuIEFycmF5LmZyb20oZSk7aWYoIkFyZ3VtZW50cyI9PT10fHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdCh0KSlyZXR1cm4gbyhlLHIpfShlKXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC4iKX0oKX1mdW5jdGlvbiBvKGUscil7KG51bGw9PXJ8fHI+ZS5sZW5ndGgpJiYocj1lLmxlbmd0aCk7Zm9yKHZhciB0PTAsbj1uZXcgQXJyYXkocik7dDxyO3QrKyluW3RdPWVbdF07cmV0dXJuIG59ZnVuY3Rpb24gZChyLGUpe3ZhciB0LG49T2JqZWN0LmtleXMocik7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMmJih0PU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMociksZSYmKHQ9dC5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IocixlKS5lbnVtZXJhYmxlfSkpLG4ucHVzaC5hcHBseShuLHQpKSxufWZ1bmN0aW9uIE0oaSl7Zm9yKHZhciBlPTE7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl7dmFyIHM9bnVsbCE9YXJndW1lbnRzW2VdP2FyZ3VtZW50c1tlXTp7fTtlJTI/ZChPYmplY3QocyksITApLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHIsdCxuO3I9aSxuPXNbdD1lXSx0IGluIHI/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsdCx7dmFsdWU6bixlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOnJbdF09bn0pOk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzP09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGksT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMocykpOmQoT2JqZWN0KHMpKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShpLGUsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzLGUpKX0pfXJldHVybiBpfWZ1bmN0aW9uIE4oZSl7cmV0dXJuKE49ImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmInN5bWJvbCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/InN5bWJvbCI6dHlwZW9mIGV9KShlKX12YXIgcD1bai5iLGouZF0seT0xMDAsZz0zMDAsYj0zNjAwLGg9ITAsdj17SlBZOjF9O2Z1bmN0aW9uIEMoZSl7dmFyIHI9e307cmV0dXJuIHIuaWQ9ZS5iaWRJZCxyLmV4dD17fSxyLmV4dC5zaWQ9IiIuY29uY2F0KGUucGFyYW1zLnNpemVbMF0sIngiKS5jb25jYXQoZS5wYXJhbXMuc2l6ZVsxXSksci5leHQuc2l0ZUlEPWUucGFyYW1zLnNpdGVJZCxlLnBhcmFtcy5oYXNPd25Qcm9wZXJ0eSgiYmlkRmxvb3IiKSYmZS5wYXJhbXMuaGFzT3duUHJvcGVydHkoImJpZEZsb29yQ3VyIikmJihyLmJpZGZsb29yPWUucGFyYW1zLmJpZEZsb29yLHIuYmlkZmxvb3JjdXI9ZS5wYXJhbXMuYmlkRmxvb3JDdXIpLHJ9ZnVuY3Rpb24gQShlKXtyZXR1cm4gQXJyYXkuaXNBcnJheShlKSYmMj09PWUubGVuZ3RoJiZzKCkoZVswXSkmJnMoKShlWzFdKX1mdW5jdGlvbiBUKGUscix0LG4pe3ZhciBpPVtdLHM9Imh0dHBzOi8vaHRsYi5jYXNhbGVtZWRpYS5jb20vY3lnbnVzIixhPXt9LG89ZVswXS51c2VySWQ7aWYobyYmIm9iamVjdCI9PT1OKG8pJiZvLmlkbF9lbnYmJmZ1bmN0aW9uKGUscix0LG4saSxzKXtpZih0KXJldHVybiByW2ldPTEsZS5wdXNoKHtzb3VyY2U6bix1aWRzOlt7aWQ6dCxleHQ6e3J0aVBhcnRuZXI6c319XX0pO0YubG9nV2FybigiVHJpZWQgdG8gYWRkIGEgdXNlciBJRCBmcm9tIFByZWJpZCwgdGhlIElEIHJlY2VpdmVkIHdhcyBudWxsIil9KGksYSxvLmlkbF9lbnYsImxpdmVyYW1wLmNvbSIsIkxpdmVSYW1wSXAiLCJpZGwiKSx3aW5kb3cuaGVhZGVydGFnJiYiZnVuY3Rpb24iPT10eXBlb2Ygd2luZG93LmhlYWRlcnRhZy5nZXRJZGVudGl0eUluZm8pe3ZhciBkLHA9d2luZG93LmhlYWRlcnRhZy5nZXRJZGVudGl0eUluZm8oKTtpZihwJiYib2JqZWN0Ij09PU4ocCkpZm9yKHZhciBjIGluIHApe3AuaGFzT3duUHJvcGVydHkoYykmJihhLmhhc093blByb3BlcnR5KGMpfHwhKGQ9cFtjXSkucmVzcG9uc2VQZW5kaW5nJiZkLmRhdGEmJiJvYmplY3QiPT09TihkLmRhdGEpJiZPYmplY3Qua2V5cyhkLmRhdGEpLmxlbmd0aCYmaS5wdXNoKGQuZGF0YSkpfX12YXIgbSx1PXt9O3UuaWQ9ZVswXS5iaWRkZXJSZXF1ZXN0SWQsdS5zaXRlPXt9LHUuZXh0PXt9LHUuZXh0LnNvdXJjZT0icHJlYmlkIix1LmV4dC5peGRpYWc9e30sZVswXS5zY2hhaW4mJih1LnNvdXJjZT17ZXh0OntzY2hhaW46ZVswXS5zY2hhaW59fSksMDxpLmxlbmd0aCYmKHUudXNlcj17fSx1LnVzZXIuZWlkcz1pKSxkb2N1bWVudC5yZWZlcnJlciYmIiIhPT1kb2N1bWVudC5yZWZlcnJlciYmKHUuc2l0ZS5yZWY9ZG9jdW1lbnQucmVmZXJyZXIpLHImJihyLmdkcHJDb25zZW50JiYoKG09ci5nZHByQ29uc2VudCkuaGFzT3duUHJvcGVydHkoImdkcHJBcHBsaWVzIikmJih1LnJlZ3M9e2V4dDp7Z2RwcjptLmdkcHJBcHBsaWVzPzE6MH19KSxtLmhhc093blByb3BlcnR5KCJjb25zZW50U3RyaW5nIikmJih1LnVzZXI9dS51c2VyfHx7fSx1LnVzZXIuZXh0PXtjb25zZW50Om0uY29uc2VudFN0cmluZ3x8IiJ9KSksci51c3BDb25zZW50JiZGLmRlZXBTZXRWYWx1ZSh1LCJyZWdzLmV4dC51c19wcml2YWN5IixyLnVzcENvbnNlbnQpLHIucmVmZXJlckluZm8mJih1LnNpdGUucGFnZT1yLnJlZmVyZXJJbmZvLnJlZmVyZXIpKTt2YXIgbD17fSxmPXImJnIuYmlkZGVyQ29kZXx8Iml4Iix5PUIuYi5nZXRDb25maWcoZik7aWYoeSl7aWYoIm9iamVjdCI9PT1OKHkuZmlyc3RQYXJ0eURhdGEpKXt2YXIgZz15LmZpcnN0UGFydHlEYXRhLGI9Ij8iO2Zvcih2YXIgaCBpbiBnKWcuaGFzT3duUHJvcGVydHkoaCkmJihiKz0iIi5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KGgpLCI9IikuY29uY2F0KGVuY29kZVVSSUNvbXBvbmVudChnW2hdKSwiJiIpKTtiPWIuc2xpY2UoMCwtMSksdS5zaXRlLnBhZ2UrPWJ9Im51bWJlciI9PXR5cGVvZiB5LnRpbWVvdXQmJihsLnQ9eS50aW1lb3V0KSwiYm9vbGVhbiI9PXR5cGVvZiB5LmRldGVjdE1pc3NpbmdTaXplcz91LmV4dC5peGRpYWcuZG1zPXkuZGV0ZWN0TWlzc2luZ1NpemVzOnUuZXh0Lml4ZGlhZy5kbXM9ITB9bC5zPWVbMF0ucGFyYW1zLnNpdGVJZCxsLnY9bixsLmFjPSJqIixsLnNkPTEsOC4xPT09biYmKGwubmY9MSk7dmFyIHY9W10seD17bWV0aG9kOiJHRVQiLHVybDpzLGRhdGE6bH0sST1uZXcgQmxvYihbIiIuY29uY2F0KHgudXJsKS5jb25jYXQoRi5wYXJzZVF1ZXJ5U3RyaW5nUGFyYW1ldGVycyhNKE0oe30seC5kYXRhKSx7fSx7cjpKU09OLnN0cmluZ2lmeSh1KX0pKSldKS5zaXplLE89SSx3PTAsUD0wLFM9MDt1LmV4dC5peGRpYWcubXNkPTAsdS5leHQuaXhkaWFnLm1zaT0wLHUuaW1wPVtdO2Zvcih2YXIgeixqLEMsQSxULEU9MCxEPU9iamVjdC5rZXlzKHQpLFI9W107RTxELmxlbmd0aCYmdi5sZW5ndGg8NDspe3RbRFtFXV0uaGFzT3duUHJvcGVydHkoIm1pc3NpbmdDb3VudCIpJiYoUz10W0RbRV1dLm1pc3NpbmdDb3VudCksZnVuY3Rpb24oZSxyKXt2YXIgdD1uZXcgQmxvYihbZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGUpKV0pLnNpemU7aWYodDxyKXJldHVybjtmb3IoO3I8dDspZS5oYXNPd25Qcm9wZXJ0eSgibWlzc2luZ0ltcHMiKSYmMDxlLm1pc3NpbmdJbXBzLmxlbmd0aD9lLm1pc3NpbmdJbXBzLnBvcCgpOmUuaGFzT3duUHJvcGVydHkoIml4SW1wcyIpJiYwPGUuaXhJbXBzLmxlbmd0aCYmZS5peEltcHMucG9wKCksdD1uZXcgQmxvYihbZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGUpKV0pLnNpemV9KHRbRFtFXV0sOGUzLUkpLHRbRFtFXV0uaGFzT3duUHJvcGVydHkoIm1pc3NpbmdJbXBzIikmJihQPXRbRFtFXV0ubWlzc2luZ0ltcHMubGVuZ3RoKSwoTys9bmV3IEJsb2IoW2VuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeSh0W0RbRV1dKSldKS5zaXplKTw4ZTM/KCh6PXUuaW1wKS5wdXNoLmFwcGx5KHosSih0W0RbRV1dLml4SW1wcykpLHUuZXh0Lml4ZGlhZy5tc2QrPVMsdS5leHQuaXhkaWFnLm1zaSs9UCx0W0RbRV1dLmhhc093blByb3BlcnR5KCJtaXNzaW5nSW1wcyIpJiZSLnB1c2guYXBwbHkoUixKKHRbRFtFXV0ubWlzc2luZ0ltcHMpKSxFKyspOihDPUYuZGVlcENsb25lKGwpLChqPXUuaW1wKS5wdXNoLmFwcGx5KGosSihSKSksdS5leHQuaXhkaWFnLnNuPXcsQy5zbj13LHcrKyxDLnI9SlNPTi5zdHJpbmdpZnkodSksdi5wdXNoKHttZXRob2Q6IkdFVCIsdXJsOnMsZGF0YTpDfSksUj1bXSxPPUksdS5pbXA9W10sUD1TPTAsdS5leHQuaXhkaWFnLm1zZD0wLHUuZXh0Lml4ZGlhZy5tc2k9MCl9cmV0dXJuIEk8TyYmTzw4ZTMmJnYubGVuZ3RoPDQmJihUPUYuZGVlcENsb25lKGwpLChBPXUuaW1wKS5wdXNoLmFwcGx5KEEsSihSKSksMDx2Lmxlbmd0aCYmKHUuZXh0Lml4ZGlhZy5zbj13LFQuc249dyksVC5yPUpTT04uc3RyaW5naWZ5KHUpLHYucHVzaCh7bWV0aG9kOiJHRVQiLHVybDpzLGRhdGE6VH0pKSx2fWZ1bmN0aW9uIEUoZSxyKXtmb3IodmFyIHQ9MDt0PGUubGVuZ3RoO3QrKylpZihyWzBdPT1lW3RdWzBdJiZyWzFdPT1lW3RdWzFdKXJldHVybiBlLnNwbGljZSh0LDEpLDF9dmFyIGM9e2NvZGU6Iml4IixndmxpZDoxMCxhbGlhc2VzOlsiaW5kZXhFeGNoYW5nZSJdLHN1cHBvcnRlZE1lZGlhVHlwZXM6cCxpc0JpZFJlcXVlc3RWYWxpZDpmdW5jdGlvbihlKXtpZighQShlLnBhcmFtcy5zaXplKSlyZXR1cm4gRi5sb2dFcnJvcigiaXggYmlkZGVyIHBhcmFtczogYmlkIHNpemUgaGFzIGludmFsaWQgZm9ybWF0LiIpLCExO2lmKCJzdHJpbmciIT10eXBlb2YgZS5wYXJhbXMuc2l0ZUlkJiYibnVtYmVyIiE9dHlwZW9mIGUucGFyYW1zLnNpdGVJZClyZXR1cm4gRi5sb2dFcnJvcigiaXggYmlkZGVyIHBhcmFtczogc2l0ZUlkIG11c3QgYmUgc3RyaW5nIG9yIG51bWJlciB2YWx1ZS4iKSwhMTt2YXIgcix0LG49ZS5wYXJhbXMuaGFzT3duUHJvcGVydHkoImJpZEZsb29yIiksaT1lLnBhcmFtcy5oYXNPd25Qcm9wZXJ0eSgiYmlkRmxvb3JDdXIiKTtyZXR1cm4hISghbiYmIWl8fG4mJmkmJihyPWUucGFyYW1zLmJpZEZsb29yLHQ9ZS5wYXJhbXMuYmlkRmxvb3JDdXIsQm9vbGVhbigibnVtYmVyIj09dHlwZW9mIHImJiJzdHJpbmciPT10eXBlb2YgdCYmdC5tYXRjaCgvXltBLVpdezN9JC8pKSkpfHwoRi5sb2dFcnJvcigiaXggYmlkZGVyIHBhcmFtczogYmlkRmxvb3IgLyBiaWRGbG9vckN1ciBwYXJhbWV0ZXIgaGFzIGludmFsaWQgZm9ybWF0LiIpLCExKX0sYnVpbGRSZXF1ZXN0czpmdW5jdGlvbihlLHIpe2Zvcih2YXIgdCxuLGkscyxhLG8sZCxwLGMsbSx1LGwsZix5PVtdLGc9e30sYj17fSxoPW51bGwsdj17fSx4PU0oTSh7fSx7ZGV0ZWN0TWlzc2luZ1NpemVzOiEwfSksQi5iLmdldENvbmZpZygiaXgiKSksST0wO0k8ZS5sZW5ndGg7SSsrKXsoaD1lW0ldKS5tZWRpYVR5cGUhPT1qLmQmJiFGLmRlZXBBY2Nlc3MoaCwibWVkaWFUeXBlcy52aWRlbyIpfHwoaC5tZWRpYVR5cGU9PT1qLmR8fGZ1bmN0aW9uKGUscil7aWYoQShlKSlyZXR1cm4gZVswXT09PXJbMF0mJmVbMV09PT1yWzFdO2Zvcih2YXIgdD0wO3Q8ZS5sZW5ndGg7dCsrKWlmKGVbdF1bMF09PT1yWzBdJiZlW3RdWzFdPT09clsxXSlyZXR1cm4gMX0oaC5tZWRpYVR5cGVzLnZpZGVvLnBsYXllclNpemUsaC5wYXJhbXMuc2l6ZSk/KGIuaGFzT3duUHJvcGVydHkoaC50cmFuc2FjdGlvbklkKXx8KGJbaC50cmFuc2FjdGlvbklkXT17fSksYltoLnRyYW5zYWN0aW9uSWRdLmhhc093blByb3BlcnR5KCJpeEltcHMiKXx8KGJbaC50cmFuc2FjdGlvbklkXS5peEltcHM9W10pLGJbaC50cmFuc2FjdGlvbklkXS5peEltcHMucHVzaChmdW5jdGlvbihlKXt2YXIgcj1DKGUpO3IudmlkZW89Ri5kZWVwQ2xvbmUoZS5wYXJhbXMudmlkZW8pLHIudmlkZW8udz1lLnBhcmFtcy5zaXplWzBdLHIudmlkZW8uaD1lLnBhcmFtcy5zaXplWzFdO3ZhciB0PUYuZGVlcEFjY2VzcyhlLCJtZWRpYVR5cGVzLnZpZGVvLmNvbnRleHQiKTtyZXR1cm4gdCYmKCJpbnN0cmVhbSI9PT10P3IudmlkZW8ucGxhY2VtZW50PTE6Im91dHN0cmVhbSI9PT10P3IudmlkZW8ucGxhY2VtZW50PTQ6Ri5sb2dXYXJuKCJpeCBiaWRkZXIgcGFyYW1zOiB2aWRlbyBjb250ZXh0ICciLmNvbmNhdCh0LCInIGlzIG5vdCBzdXBwb3J0ZWQiKSkpLHJ9KGgpKSk6Ri5sb2dFcnJvcigiQmlkIHNpemUgaXMgbm90IGluY2x1ZGVkIGluIHZpZGVvIHBsYXllclNpemUiKSksaC5tZWRpYVR5cGUhPT1qLmImJiFGLmRlZXBBY2Nlc3MoaCwibWVkaWFUeXBlcy5iYW5uZXIiKSYmKGgubWVkaWFUeXBlfHxoLm1lZGlhVHlwZXMpfHwobT12b2lkIDAsKG09QyhjPWgpKS5iYW5uZXI9e30sbS5iYW5uZXIudz1jLnBhcmFtcy5zaXplWzBdLG0uYmFubmVyLmg9Yy5wYXJhbXMuc2l6ZVsxXSxtLmJhbm5lci50b3BmcmFtZT1GLmluSWZyYW1lKCk/MDoxLHQ9bSxnLmhhc093blByb3BlcnR5KGgudHJhbnNhY3Rpb25JZCl8fChnW2gudHJhbnNhY3Rpb25JZF09e30pLGdbaC50cmFuc2FjdGlvbklkXS5oYXNPd25Qcm9wZXJ0eSgiaXhJbXBzIil8fChnW2gudHJhbnNhY3Rpb25JZF0uaXhJbXBzPVtdKSxnW2gudHJhbnNhY3Rpb25JZF0uaXhJbXBzLnB1c2godCkseC5oYXNPd25Qcm9wZXJ0eSgiZGV0ZWN0TWlzc2luZ1NpemVzIikmJnguZGV0ZWN0TWlzc2luZ1NpemVzJiYoaT12LHM9dCxwPWQ9bz1hPXZvaWQgMCxwPShuPWgpLnRyYW5zYWN0aW9uSWQsaS5oYXNPd25Qcm9wZXJ0eShwKT8oYT1bXSxpW3BdLmhhc093blByb3BlcnR5KCJtaXNzaW5nU2l6ZXMiKSYmKGE9aVtwXS5taXNzaW5nU2l6ZXMpLEUoYSxuLnBhcmFtcy5zaXplKSxpW3BdLm1pc3NpbmdTaXplcz1hKTpGLmRlZXBBY2Nlc3MobiwibWVkaWFUeXBlcy5iYW5uZXIuc2l6ZXMiKSYmKEUobz1GLmRlZXBDbG9uZShuLm1lZGlhVHlwZXMuYmFubmVyLnNpemVzKSxuLnBhcmFtcy5zaXplKSxkPXttaXNzaW5nU2l6ZXM6byxpbXByZXNzaW9uOnN9LGlbcF09ZCkpKX1mb3IodmFyIE8gaW4gdilpZih2Lmhhc093blByb3BlcnR5KE8pKXt2YXIgdz12W09dLm1pc3NpbmdTaXplcztnLmhhc093blByb3BlcnR5KE8pfHwoZ1tPXT17fSksZ1tPXS5oYXNPd25Qcm9wZXJ0eSgibWlzc2luZ0ltcHMiKXx8KGdbT10ubWlzc2luZ0ltcHM9W10sZ1tPXS5taXNzaW5nQ291bnQ9MCk7Zm9yKHZhciBQPXZbT10uaW1wcmVzc2lvbixTPTA7Uzx3Lmxlbmd0aDtTKyspe3ZhciB6PSh1PVAsbD13W1NdLGY9dm9pZCAwLChmPUYuZGVlcENsb25lKHUpKS5leHQuc2lkPSIiLmNvbmNhdChsWzBdLCJ4IikuY29uY2F0KGxbMV0pLGYuYmFubmVyLnc9bFswXSxmLmJhbm5lci5oPWxbMV0sZik7Z1tPXS5taXNzaW5nSW1wcy5wdXNoKHopLGdbT10ubWlzc2luZ0NvdW50Kyt9fXJldHVybiAwPE9iamVjdC5rZXlzKGcpLmxlbmd0aCYmeS5wdXNoLmFwcGx5KHksSihUKGUscixnLDcuMikpKSwwPE9iamVjdC5rZXlzKGIpLmxlbmd0aCYmeS5wdXNoLmFwcGx5KHksSihUKGUscixiLDguMSkpKSx5fSxpbnRlcnByZXRSZXNwb25zZTpmdW5jdGlvbihlLHIpe3ZhciB0PVtdO2lmKCFlLmhhc093blByb3BlcnR5KCJib2R5Iil8fCFlLmJvZHkuaGFzT3duUHJvcGVydHkoInNlYXRiaWQiKSlyZXR1cm4gdDtmb3IodmFyIG4saSxzLGEsbz1lLmJvZHksZD1vLnNlYXRiaWQscD0wO3A8ZC5sZW5ndGg7cCsrKWlmKGRbcF0uaGFzT3duUHJvcGVydHkoImJpZCIpKWZvcih2YXIgYz1kW3BdLmJpZCxtPUpTT04ucGFyc2Uoci5kYXRhLnIpLHU9MDt1PGMubGVuZ3RoO3UrKyl7dmFyIGw9ZnVuY3Rpb24ocixlKXtpZihyKXJldHVybiBmKCkoZSxmdW5jdGlvbihlKXtyZXR1cm4gZS5pZD09PXJ9KX0oY1t1XS5pbXBpZCxtLmltcCk7bj1jW3VdLGk9by5jdXIscz1sLGE9dm9pZCAwLGE9e30sdi5oYXNPd25Qcm9wZXJ0eShpKT9hLmNwbT1uLnByaWNlL3ZbaV06YS5jcG09bi5wcmljZS95LGEucmVxdWVzdElkPW4uaW1waWQsYS5kZWFsSWQ9Ri5kZWVwQWNjZXNzKG4sImV4dC5kZWFsaWQiKSxhLm5ldFJldmVudWU9aCxhLmN1cnJlbmN5PWksYS5jcmVhdGl2ZUlkPW4uaGFzT3duUHJvcGVydHkoImNyaWQiKT9uLmNyaWQ6Ii0iLEYuZGVlcEFjY2VzcyhuLCJleHQudmFzdHVybCIpPyhhLnZhc3RVcmw9bi5leHQudmFzdHVybCxhLndpZHRoPXMudmlkZW8udyxhLmhlaWdodD1zLnZpZGVvLmgsYS5tZWRpYVR5cGU9ai5kLGEudHRsPWIpOihhLmFkPW4uYWRtLGEud2lkdGg9bi53LGEuaGVpZ2h0PW4uaCxhLm1lZGlhVHlwZT1qLmIsYS50dGw9ZyksYS5tZXRhPXt9LGEubWV0YS5uZXR3b3JrSWQ9Ri5kZWVwQWNjZXNzKG4sImV4dC5kc3BpZCIpLGEubWV0YS5icmFuZElkPUYuZGVlcEFjY2VzcyhuLCJleHQuYWR2YnJhbmRpZCIpLGEubWV0YS5icmFuZE5hbWU9Ri5kZWVwQWNjZXNzKG4sImV4dC5hZHZicmFuZCIpLG4uYWRvbWFpbiYmMDxuLmFkb21haW4ubGVuZ3RoJiYoYS5tZXRhLmFkdmVydGlzZXJEb21haW5zPW4uYWRvbWFpbiksdC5wdXNoKGEpfXJldHVybiB0fSx0cmFuc2Zvcm1CaWRQYXJhbXM6ZnVuY3Rpb24oZSl7cmV0dXJuIEYuY29udmVydFR5cGVzKHtzaXRlSUQ6Im51bWJlciJ9LGUpfSxnZXRVc2VyU3luY3M6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuaWZyYW1lRW5hYmxlZD9be3R5cGU6ImlmcmFtZSIsdXJsOiJodHRwczovL2pzLXNlYy5pbmRleHd3LmNvbS91bS9peG1hdGNoLmh0bWwifV06W119fTtPYmplY3QoYS5yZWdpc3RlckJpZGRlcikoYyl9fSxbNTA0XSk7CnVwYmpzQ2h1bmsoWzIxNl0sezUyMjpmdW5jdGlvbihyLGUsdCl7ci5leHBvcnRzPXQoNTIzKX0sNTIzOmZ1bmN0aW9uKHIsZSx0KXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHQuZChlLCJzcGVjIixmdW5jdGlvbigpe3JldHVybiBvfSk7dmFyIGk9dCgwKSxuPXQoMSk7ZnVuY3Rpb24gcyhyKXtyZXR1cm4gZnVuY3Rpb24ocil7aWYoQXJyYXkuaXNBcnJheShyKSlyZXR1cm4gYShyKX0ocil8fGZ1bmN0aW9uKHIpe2lmKCJ1bmRlZmluZWQiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KHIpKXJldHVybiBBcnJheS5mcm9tKHIpfShyKXx8ZnVuY3Rpb24ocixlKXtpZighcilyZXR1cm47aWYoInN0cmluZyI9PXR5cGVvZiByKXJldHVybiBhKHIsZSk7dmFyIHQ9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHIpLnNsaWNlKDgsLTEpOyJPYmplY3QiPT09dCYmci5jb25zdHJ1Y3RvciYmKHQ9ci5jb25zdHJ1Y3Rvci5uYW1lKTtpZigiTWFwIj09PXR8fCJTZXQiPT09dClyZXR1cm4gQXJyYXkuZnJvbShyKTtpZigiQXJndW1lbnRzIj09PXR8fC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KHQpKXJldHVybiBhKHIsZSl9KHIpfHxmdW5jdGlvbigpe3Rocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLiIpfSgpfWZ1bmN0aW9uIGEocixlKXsobnVsbD09ZXx8ZT5yLmxlbmd0aCkmJihlPXIubGVuZ3RoKTtmb3IodmFyIHQ9MCxuPW5ldyBBcnJheShlKTt0PGU7dCsrKW5bdF09clt0XTtyZXR1cm4gbn12YXIgbz17Y29kZToia29tb29uYSIsaXNCaWRSZXF1ZXN0VmFsaWQ6ZnVuY3Rpb24ocil7cmV0dXJuISEociYmci5wYXJhbXMmJnIucGFyYW1zLnBsYWNlbWVudElkJiZyLnBhcmFtcy5oYmlkKX0sYnVpbGRSZXF1ZXN0czpmdW5jdGlvbihyKXt2YXIgZSx0PXIubWFwKGZ1bmN0aW9uKHIpe3ZhciBlPXt1dWlkOnIuYmlkSWQsc2l6ZXM6ci5zaXplcyx0cmlkOnIudHJhbnNhY3Rpb25JZCxoYmlkOnIucGFyYW1zLmhiaWQscGxhY2VtZW50aWQ6ci5wYXJhbXMucGxhY2VtZW50SWR9O3JldHVybiByLnBhcmFtcy5mbG9vclByaWNlJiYoZS5mbG9vcnByaWNlPXIucGFyYW1zLmZsb29yUHJpY2UpLGV9KSxuPShuZXcgRGF0ZSkuZ2V0VGltZSgpLGE9e3RzX2FzOm4saGJfcGxhY2VtZW50czpbXSxoYl9wbGFjZW1lbnRfYmlkaWRzOnt9LGhiX2Zsb29yczp7fSxjYjooZT1uLE1hdGguZmxvb3IoZSU2NTUzNis2NTUzNipNYXRoLmZsb29yKDY1NTM2Kk1hdGgucmFuZG9tKCkpKSksdHo6KG5ldyBEYXRlKS5nZXRUaW1lem9uZU9mZnNldCgpfTtyLmZvckVhY2goZnVuY3Rpb24ocil7YS5oZGJkaWQ9YS5oZGJkaWR8fHIucGFyYW1zLmhiaWQsYS5lbmNvZGVfYmlkPWEuZW5jb2RlX2JpZHx8ci5wYXJhbXMuZW5jb2RlX2JpZCxhLmhiX3BsYWNlbWVudF9iaWRpZHNbci5wYXJhbXMucGxhY2VtZW50SWRdPXIuYmlkSWQsci5wYXJhbXMuZmxvb3JQcmljZSYmKGEuaGJfZmxvb3JzW3IucGFyYW1zLnBsYWNlbWVudElkXT1yLnBhcmFtcy5mbG9vclByaWNlKSxhLmhiX3BsYWNlbWVudHMucHVzaChyLnBhcmFtcy5wbGFjZW1lbnRJZCl9KTt2YXIgbz17fTtyZXR1cm4gaS5pc0VtcHR5KHQpfHwobz17YmlkczpzKHQpLGtiQ29uZjphfSkse21ldGhvZDoiUE9TVCIsdXJsOiJodHRwczovL2JpZGRlci5rb21vb25hLmNvbS92MS9HZXRTQmlkcyIsZGF0YTpKU09OLnN0cmluZ2lmeShvKX19LGludGVycHJldFJlc3BvbnNlOmZ1bmN0aW9uKHIpe3ZhciBlPVtdO3RyeXtyLmJvZHkmJnIuYm9keS5iaWRzJiZyLmJvZHkuYmlkcy5mb3JFYWNoKGZ1bmN0aW9uKHIpe3IucmVxdWVzdElkPXIudXVpZCxyLmFkPXIuY3JlYXRpdmUsZS5wdXNoKHIpfSl9Y2F0Y2gocil7aS5sb2dFcnJvcihyKX1yZXR1cm4gZX0sZ2V0VXNlclN5bmNzOmZ1bmN0aW9uKHIpe2lmKHIuaWZyYW1lRW5hYmxlZClyZXR1cm5be3R5cGU6ImlmcmFtZSIsdXJsOiJodHRwczovL3Mua29tb29uYS5jb20vc3luYy91c3luYy5odG1sIn1dfX07T2JqZWN0KG4ucmVnaXN0ZXJCaWRkZXIpKG8pfX0sWzUyMl0pOwp1cGJqc0NodW5rKFsyMDldLHs1NDU6ZnVuY3Rpb24oZSxuLHIpe2UuZXhwb3J0cz1yKDU0Nil9LDU0NjpmdW5jdGlvbihlLG4scil7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShuLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxyLmQobiwic3BlYyIsZnVuY3Rpb24oKXtyZXR1cm4gaX0pO3ZhciBvPXIoMCksdD1yKDIpLGQ9cigxKSxpPXtjb2RlOiJsb2NrZXJkb21lIixzdXBwb3J0ZWRNZWRpYVR5cGVzOlt0LmJdLGlzQmlkUmVxdWVzdFZhbGlkOmZ1bmN0aW9uKGUpe3JldHVybiEhZS5wYXJhbXMuYWRVbml0SWR9LGJ1aWxkUmVxdWVzdHM6ZnVuY3Rpb24oZSxuKXt2YXIgcix0PWUubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLnNjaGFpbiYmKHI9cnx8ZS5zY2hhaW4pLHtyZXF1ZXN0SWQ6ZS5iaWRJZCxhZFVuaXRDb2RlOmUuYWRVbml0Q29kZSxhZFVuaXRJZDpvLmdldEJpZElkUGFyYW1ldGVyKCJhZFVuaXRJZCIsZS5wYXJhbXMpLHNpemVzOmUubWVkaWFUeXBlcyYmZS5tZWRpYVR5cGVzLmJhbm5lciYmZS5tZWRpYVR5cGVzLmJhbm5lci5zaXplc319KSxkPW4mJm4ucmVmZXJlckluZm8mJm4ucmVmZXJlckluZm8uY2Fub25pY2FsVXJsfHwiIixpPW4mJm4ucmVmZXJlckluZm8mJm4ucmVmZXJlckluZm8ucmVmZXJlcnx8IiIscz17YmlkUmVxdWVzdHM6dCx1cmw6ZW5jb2RlVVJJQ29tcG9uZW50KGQpLHJlZmVycmVyOmVuY29kZVVSSUNvbXBvbmVudChpKX07cmV0dXJuIHImJihzLnNjaGFpbj1yKSxuJiYobi5nZHByQ29uc2VudCYmKHMuZ2Rwcj17YXBwbGllczpuLmdkcHJDb25zZW50LmdkcHJBcHBsaWVzLGNvbnNlbnQ6bi5nZHByQ29uc2VudC5jb25zZW50U3RyaW5nfSksbi51c3BDb25zZW50JiYocy51c19wcml2YWN5PXtjb25zZW50Om4udXNwQ29uc2VudH0pKSx7bWV0aG9kOiJQT1NUIix1cmw6Imh0dHBzOi8vbG9ja2VyZG9tZS5jb20vbGFkYmlkL3ByZWJpZCIsZGF0YTpKU09OLnN0cmluZ2lmeShzKX19LGludGVycHJldFJlc3BvbnNlOmZ1bmN0aW9uKGUpe3JldHVybiBlJiZlLmJvZHkmJmUuYm9keS5iaWRzP2UuYm9keS5iaWRzLm1hcChmdW5jdGlvbihlKXtyZXR1cm57cmVxdWVzdElkOmUucmVxdWVzdElkLGNwbTplLmNwbSx3aWR0aDplLndpZHRoLGhlaWdodDplLmhlaWdodCxjcmVhdGl2ZUlkOmUuY3JlYXRpdmVJZCxjdXJyZW5jeTplLmN1cnJlbmN5LG5ldFJldmVudWU6ZS5uZXRSZXZlbnVlLGFkOmUuYWQsdHRsOmUudHRsfX0pOltdfX07T2JqZWN0KGQucmVnaXN0ZXJCaWRkZXIpKGkpfX0sWzU0NV0pOwp1cGJqc0NodW5rKFsxOTVdLHs1Nzc6ZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uKDU3OCl9LDU3ODpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxuLmQodCwic3BlYyIsZnVuY3Rpb24oKXtyZXR1cm4gSX0pO3ZhciByPW4oMSksbT1uKDApLGY9bigzKSxpPW4oMiksYT1uKDIxKSxvPW4oMTEpO2Z1bmN0aW9uIGcoKXtyZXR1cm4oZz1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSkuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciB1PSJtZWRpYW5ldCIsZD0iaHR0cHM6Ly9wcmViaWQubWVkaWEubmV0L3ZpZGVvL2J1bmRsZS5qcyIscD17Tk9UX0RFVEVSTUlORUQ6MCxBQk9WRV9USEVfRk9MRDoxLEJFTE9XX1RIRV9GT0xEOjJ9LHM9ImNsaWVudF90aW1lb3V0IixjPSJjbGllbnRfYmlkX3dvbiIsbD1PYmplY3QoYS5hKSgpLGI9e307ZnVuY3Rpb24geShlKXtyZXR1cm4gZyh7ZG9tYWluOihlPWV8fHt9KS5kb21haW58fGIudXJsRGF0YS5kb21haW4scGFnZTplLnBhZ2V8fGIudXJsRGF0YS5wYWdlLHJlZjplLnJlZnx8ZnVuY3Rpb24oKXt0cnl7cmV0dXJuIHdpbmRvdy50b3AuZG9jdW1lbnQucmVmZXJyZXJ9Y2F0Y2goZSl7cmV0dXJuIGRvY3VtZW50LnJlZmVycmVyfX0oKSxpc1RvcDplLmlzVG9wfHxiLnVybERhdGEuaXNUb3B9LGZ1bmN0aW9uKCl7aWYoYi5wYWdlTWV0YSlyZXR1cm4gYi5wYWdlTWV0YTt2YXIgZT1oKCdsaW5rW3JlbD0iY2Fub25pY2FsIl0nLCJocmVmIiksdD1oKCdtZXRhW3Byb3BlcnR5PSJvZzp1cmwiXScsImNvbnRlbnQiKSxuPWgoJ21ldGFbbmFtZT0idHdpdHRlcjp1cmwiXScsImNvbnRlbnQiKTtyZXR1cm4gYi5wYWdlTWV0YT1nKHt9LGUmJntjYW5vbmljYWxfdXJsOmV9LHQmJntvZ191cmw6dH0sbiYme3R3aXR0ZXJfdXJsOm59KSxiLnBhZ2VNZXRhfSgpKX1mdW5jdGlvbiBoKGUsdCl7dmFyIG4scixpPWZ1bmN0aW9uKGUsdCl7dHJ5e3ZhciBuPW0uZ2V0V2luZG93VG9wKCkuZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlKTtpZihudWxsIT09biYmblt0XSlyZXR1cm4gblt0XX1jYXRjaChlKXt9fShlLHQpO3JldHVybiBpJiYobj1pLChyPW0uZ2V0V2luZG93VG9wKCkuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYSIpKS5ocmVmPW4sci5ocmVmKX1mdW5jdGlvbiB2KGUsdCl7cmV0dXJuIGUuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBlLnR5cGU9PT10fSl9ZnVuY3Rpb24gdyhlKXtyZXR1cm57dzpwYXJzZUludChlWzBdLDEwKSxoOnBhcnNlSW50KGVbMV0sMTApfX1mdW5jdGlvbiBfKGUpe3ZhciB0LG49e2lkOmUuYmlkSWQsZXh0OntkZnBfaWQ6ZS5hZFVuaXRDb2RlLGRpc3BsYXlfY291bnQ6ZS5iaWRSZXF1ZXN0c0NvdW50fSxhbGw6ZS5wYXJhbXN9LHI9bS5kZWVwQWNjZXNzKGUsIm1lZGlhVHlwZXMuYmFubmVyLnNpemVzIil8fFtdLGk9bS5kZWVwQWNjZXNzKGUsIm1lZGlhVHlwZXMudmlkZW8iKXx8e30sYT1nKHt9LG0uZGVlcEFjY2VzcyhlLCJwYXJhbXMudmlkZW8iKXx8e30saSk7aWYobS5pc0VtcHR5KGEpfHwobi52aWRlbz1hKSwwPHIubGVuZ3RoJiYobi5iYW5uZXI9KHQ9cixtLmlzQXJyYXkodCkmJjI9PT10Lmxlbmd0aCYmIW0uaXNBcnJheSh0WzBdKT9bdyh0KV06dC5tYXAodykpKSxlLm5hdGl2ZVBhcmFtcyl0cnl7bi5uYXRpdmU9SlNPTi5zdHJpbmdpZnkoZS5uYXRpdmVQYXJhbXMpfWNhdGNoKGUpe20ubG9nRXJyb3IoIiIuY29uY2F0KHUsIiA6IEluY29ycmVjdCBKU09OIDogYmlkUmVxdWVzdC5uYXRpdmVQYXJhbXMiKSl9ZS5wYXJhbXMuY3JpZCYmKG4udGFnaWQ9ZS5wYXJhbXMuY3JpZC50b1N0cmluZygpKTt2YXIgbz1wYXJzZUZsb2F0KGUucGFyYW1zLmJpZGZsb29yKTtvJiYobi5iaWRmbG9vcj1vKTt2YXIgZCxzLGM9ZnVuY3Rpb24oZSl7dmFyIHQsbj1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChlKTtpZihufHwtMT09PWUuaW5kZXhPZigiLyIpfHwodD1tLmdldEdwdFNsb3RJbmZvRm9yQWRVbml0Q29kZShlKS5kaXZJZCxtLmlzU3RyKHQpJiYobj1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0KSkpLG4mJm4uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KXt2YXIgcj1uLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLGk9e307cmV0dXJuIGkudG9wX2xlZnQ9e3k6ci50b3AseDpyLmxlZnR9LGkuYm90dG9tX3JpZ2h0PXt5OnIuYm90dG9tLHg6ci5yaWdodH0saX1yZXR1cm4gbnVsbH0oZS5hZFVuaXRDb2RlKTtyZXR1cm4gYyYmbi5iYW5uZXImJjAhPT1uLmJhbm5lci5sZW5ndGg/KGQ9e3RvcF9sZWZ0Ont4OihzPWMpLnRvcF9sZWZ0Lngrd2luZG93LnBhZ2VYT2Zmc2V0LHk6cy50b3BfbGVmdC55K3dpbmRvdy5wYWdlWU9mZnNldH0sYm90dG9tX3JpZ2h0Ont4OnMuYm90dG9tX3JpZ2h0Lngrd2luZG93LnBhZ2VYT2Zmc2V0LHk6cy5ib3R0b21fcmlnaHQueSt3aW5kb3cucGFnZVlPZmZzZXR9fSxuLmV4dC5jb29yZGluYXRlcz1kLG4uZXh0LnZpZXdhYmlsaXR5PUUoYy50b3BfbGVmdCx4KG4uYmFubmVyKSksLjU8RShkLnRvcF9sZWZ0LHgobi5iYW5uZXIpKT9uLmV4dC52aXNpYmlsaXR5PXAuQUJPVkVfVEhFX0ZPTEQ6bi5leHQudmlzaWJpbGl0eT1wLkJFTE9XX1RIRV9GT0xEKTpuLmV4dC52aXNpYmlsaXR5PXAuTk9UX0RFVEVSTUlORUQsbn1mdW5jdGlvbiB4KGUpe3JldHVybiBlLnJlZHVjZShmdW5jdGlvbihlLHQpe3JldHVybiB0LmgqdC53PGUuaCplLnc/dDplfSl9ZnVuY3Rpb24gRShlLHQpe3ZhciBuPXQudyp0Lmgscj1JLmdldFdpbmRvd1NpemUoKSxpPXt4OmUueCt0LncseTplLnkrdC5ofTtyZXR1cm4gMD09bnx8LTE9PT1yLnd8fC0xPT09ci5oPzA6ZnVuY3Rpb24oZSx0LG4scil7aWYoZS54PnIueHx8dC54PG4ueHx8ZS55PnIueXx8dC55PG4ueSlyZXR1cm4gMDtyZXR1cm4oTWF0aC5taW4odC54LHIueCktTWF0aC5tYXgoZS54LG4ueCkpKihNYXRoLm1pbih0Lnksci55KS1NYXRoLm1heChlLnksbi55KSl9KGUsaSx7eDowLHk6MH0se3g6ci53LHk6ci5ofSkvbn1mdW5jdGlvbiBPKGUsdCl7cmV0dXJue3NpdGU6eShlWzBdLnBhcmFtcy5zaXRlKSxleHQ6KG49ZVswXSxyPXQsaT1tLmRlZXBBY2Nlc3MobiwicGFyYW1zIiksYT1tLmRlZXBBY2Nlc3MociwiZ2RwckNvbnNlbnQiKSxvPW0uZGVlcEFjY2VzcyhyLCJ1c3BDb25zZW50IiksZD1tLmRlZXBBY2Nlc3MobiwidXNlcklkIikscz1tLmRlZXBBY2Nlc3Mobiwic2NoYWluIil8fHt9LGM9SS5nZXRXaW5kb3dTaXplKCksdT0hKCFhfHwhYS5nZHByQXBwbGllcykscD0hIW8sbD0hIWYuYi5nZXRDb25maWcoImNvcHBhIiksZyh7fSx7Y3VzdG9tZXJfaWQ6aS5jaWR9LHtwcmViaWRfdmVyc2lvbjp1cGJqcy52ZXJzaW9ufSx7Z2Rwcl9hcHBsaWVzOnV9LHUmJntnZHByX2NvbnNlbnRfc3RyaW5nOmEuY29uc2VudFN0cmluZ3x8IiJ9LHt1c3BfYXBwbGllczpwfSxwJiZ7dXNwX2NvbnNlbnRfc3RyaW5nOm98fCIifSx7Y29wcGFfYXBwbGllczpsfSwtMSE9PWMudyYmLTEhPT1jLmgmJntzY3JlZW46Y30sZCYme3VzZXJfaWQ6ZH0sdXBianMubWVkaWFuZXRHbG9iYWxzLmFuYWx5dGljc0VuYWJsZWQmJnthbmFseXRpY3M6ITB9LCFtLmlzRW1wdHkocykmJntzY2hhaW46c30pKSxpZDplWzBdLmF1Y3Rpb25JZCxpbXA6ZS5tYXAoXyksdG1heDp0LnRpbWVvdXR8fGYuYi5nZXRDb25maWcoImJpZGRlclRpbWVvdXQiKX07dmFyIG4scixpLGEsbyxkLHMsYyx1LHAsbH1mdW5jdGlvbiBUKGUsdCl7dmFyIG49e3Byb3RvY29sOiJodHRwcyIsaG9zdG5hbWU6InFzZWFyY2gtYS5ha2FtYWloZC5uZXQvbG9nIixzZWFyY2g6ZnVuY3Rpb24oZSx0KXt0PW0uaXNBcnJheSh0KSYmdHx8W107dmFyIG49e2xvZ2lkOiJrZmsiLGV2dGlkOiJwcm9qZWN0ZXZlbnRzIixwcm9qZWN0OiJwcmViaWQifTtyZXR1cm4gbi5hY2lkPW0uZGVlcEFjY2Vzcyh0LCIwLmF1Y3Rpb25JZCIpfHwiIixuLmNpZD11cGJqcy5tZWRpYW5ldEdsb2JhbHMuY2lkfHwiIixuLmNyaWQ9dC5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIG0uZGVlcEFjY2VzcyhlLCJwYXJhbXMuMC5jcmlkIil8fGUuYWRVbml0Q29kZX0pLmpvaW4oInwiKSxuLmFkdW5pdF9jb3VudD10Lmxlbmd0aHx8MCxuLmRuPWIudXJsRGF0YS5kb21haW58fCIiLG4ucmVxdXJsPWIudXJsRGF0YS5wYWdlfHwiIixuLmlzdG9wPWIudXJsRGF0YS5pc1RvcHx8IiIsbi5ldmVudD1lLm5hbWV8fCIiLG4udmFsdWU9ZS52YWx1ZXx8IiIsbi5yZD1lLnJlbGF0ZWRfZGF0YXx8IiIsbn0oZSx0KX07bS50cmlnZ2VyUGl4ZWwobS5idWlsZFVybChuKSl9ZnVuY3Rpb24gQShlKXt2YXIgdCxuPW0uZGVlcEFjY2VzcyhlLCJjb250ZXh0Iil8fCIiLHI9bS5kZWVwQWNjZXNzKGUsInZ0byIpOyJvdXRzdHJlYW0iPT1uJiZyJiYoZS5yZW5kZXJlcj0oKHQ9by5hLmluc3RhbGwoe3VybDpkfSkpLnNldFJlbmRlcihmdW5jdGlvbihyKXt3aW5kb3cubW5ldC5xdWV1ZS5wdXNoKGZ1bmN0aW9uKCl7dmFyIGU9e3dpZHRoOnIud2lkdGgsaGVpZ2h0OnIuaGVpZ2h0LHZhc3RUaW1lb3V0OnIudnRvLG1heEFsbG93ZWRWYXN0VGFnUmVkaXJlY3RzOnIubWF2dHIsYWxsb3dWcGFpZDpyLmF2cCxhdXRvUGxheTpyLmFwLHByZWxvYWQ6ci5wbCxtdXRlOnIubXR9LHQ9ci5kZnBfaWQsbj1tLmdldEdwdFNsb3RJbmZvRm9yQWRVbml0Q29kZSh0KS5kaXZJZHx8dDt3aW5kb3cubW5ldC5tZWRpYU5ldG91dHN0cmVhbVBsYXllcihyLG4sZSl9KX0pLHQpKX13aW5kb3cubW5ldD13aW5kb3cubW5ldHx8e30sd2luZG93Lm1uZXQucXVldWU9d2luZG93Lm1uZXQucXVldWV8fFtdLGIudXJsRGF0YT17ZG9tYWluOm0ucGFyc2VVcmwobC5yZWZlcmVyKS5ob3N0bmFtZSxwYWdlOmwucmVmZXJlcixpc1RvcDpsLnJlYWNoZWRUb3B9LHVwYmpzLm1lZGlhbmV0R2xvYmFscz11cGJqcy5tZWRpYW5ldEdsb2JhbHN8fHt9O3ZhciBJPXtjb2RlOnUsZ3ZsaWQ6MTQyLHN1cHBvcnRlZE1lZGlhVHlwZXM6W2kuYixpLmMsaS5kXSxpc0JpZFJlcXVlc3RWYWxpZDpmdW5jdGlvbihlKXtyZXR1cm4gZS5wYXJhbXM/ZS5wYXJhbXMuY2lkJiZtLmlzU3RyKGUucGFyYW1zLmNpZCkmJiFtLmlzRW1wdHlTdHIoZS5wYXJhbXMuY2lkKT8oZyh1cGJqcy5tZWRpYW5ldEdsb2JhbHMsIXVwYmpzLm1lZGlhbmV0R2xvYmFscy5jaWQmJntjaWQ6ZS5wYXJhbXMuY2lkfSksITApOihtLmxvZ0Vycm9yKCIiLmNvbmNhdCh1LCIgOiBjaWQgc2hvdWxkIGJlIGEgc3RyaW5nIikpLCExKToobS5sb2dFcnJvcigiIi5jb25jYXQodSwiIDogTWlzc2luZyBiaWQgcGFyYW1ldGVycyIpKSwhMSl9LGJ1aWxkUmVxdWVzdHM6ZnVuY3Rpb24oZSx0KXt2YXIgbixyPU8oZSx0KTtyZXR1cm57bWV0aG9kOiJQT1NUIix1cmw6KG49ci5leHQuY3VzdG9tZXJfaWQsImh0dHBzOi8vcHJlYmlkLm1lZGlhLm5ldC9ydGIvcHJlYmlkP2NpZD0iK2VuY29kZVVSSUNvbXBvbmVudChuKSksZGF0YTpKU09OLnN0cmluZ2lmeShyKX19LGludGVycHJldFJlc3BvbnNlOmZ1bmN0aW9uKGUpe3ZhciB0PVtdO2lmKCFlfHwhZS5ib2R5KXJldHVybiBtLmxvZ0luZm8oIiIuY29uY2F0KHUsIiA6IHJlc3BvbnNlIGlzIGVtcHR5IikpLHQ7dmFyIG49ZS5ib2R5LmJpZExpc3Q7cmV0dXJuIG0uaXNBcnJheShuKSYmMCE9PW4ubGVuZ3RoPyh0PW4uZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiExPT09KHQ9ZSkubm9fYmlkJiYwPHBhcnNlRmxvYXQodC5jcG0pO3ZhciB0fSkpLmZvckVhY2goQSk6bS5sb2dJbmZvKCIiLmNvbmNhdCh1LCIgOiBubyBiaWRzIikpLHR9LGdldFVzZXJTeW5jczpmdW5jdGlvbihlLHQpe3ZhciBuLHI9KG49dCwhbS5pc0VtcHR5KG4pJiZuWzBdLmJvZHkmJm5bMF0uYm9keS5leHQmJm0uaXNBcnJheShuWzBdLmJvZHkuZXh0LmNzVXJsKT9uWzBdLmJvZHkuZXh0LmNzVXJsOltdKTtyZXR1cm4gZS5pZnJhbWVFbmFibGVkP3YociwiaWZyYW1lIik6ZS5waXhlbEVuYWJsZWQ/dihyLCJpbWFnZSIpOnZvaWQgMH0sb25UaW1lb3V0OmZ1bmN0aW9uKGUpe3RyeXtUKHtuYW1lOnMsdmFsdWU6ZS5sZW5ndGgscmVsYXRlZF9kYXRhOmVbMF0udGltZW91dHx8Zi5iLmdldENvbmZpZygiYmlkZGVyVGltZW91dCIpfSxlKX1jYXRjaChlKXt9fSxvbkJpZFdvbjpmdW5jdGlvbihlKXt0cnl7VCh7bmFtZTpjLHZhbHVlOmUuY3BtfSxbZV0pfWNhdGNoKGUpe319LGNsZWFyTW5EYXRhOmZ1bmN0aW9uKCl7Yj17fX0sZ2V0V2luZG93U2l6ZTpmdW5jdGlvbigpe3JldHVybnt3OndpbmRvdy5pbm5lcldpZHRofHxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGh8fGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGh8fC0xLGg6d2luZG93LmlubmVySGVpZ2h0fHxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0fHxkb2N1bWVudC5ib2R5LmNsaWVudEhlaWdodHx8LTF9fX07T2JqZWN0KHIucmVnaXN0ZXJCaWRkZXIpKEkpfX0sWzU3N10pOwp1cGJqc0NodW5rKFsxODhdLHs1OTE6ZnVuY3Rpb24oZSxyLGEpe2UuZXhwb3J0cz1hKDU5Mil9LDU5MjpmdW5jdGlvbihlLHIsYSl7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxhLmQociwic3BlYyIsZnVuY3Rpb24oKXtyZXR1cm4gcH0pO3ZhciB0PWEoMiksbj1hKDEpLnJlZ2lzdGVyQmlkZGVyLGc9Imh0dHBzOi8vaGIubXluYXRpdmVwbGF0Zm9ybS5jb20vcHViMi93ZWIvdjEuMTUuMC9oYndpZGdldC5qc29uIjtmdW5jdGlvbiBjKGUscil7dmFyIGE9e3BhZ2VVcmw6e2VtcHR5VmFsdWU6IltQQUdFX1VSTF0iLGRlZmF1bHRWYWx1ZTpmdW5jdGlvbihlKXtlPWV8fHdpbmRvdy5sb2NhdGlvbi5ocmVmO2Zvcih2YXIgcixhPW51bGwsdD1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgibWV0YSIpLG49MDtuPHQubGVuZ3RoJiYhYTtuKyspIm9nOnVybCI9PXRbbl0uZ2V0QXR0cmlidXRlKCJwcm9wZXJ0eSIpJiYoYT10W25dLmNvbnRlbnQpO3JldHVybiBhfHwocj1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCJsaW5rW3JlbD0nY2Fub25pY2FsJ10iKSkmJihhPXIuaHJlZiksZT1hfHxlLGVuY29kZVVSSUNvbXBvbmVudChlKS50b1N0cmluZygpfSgpfSxkaXNwbGF5V2l0aGluSWZyYW1lOntlbXB0eVZhbHVlOiIiLGRlZmF1bHRWYWx1ZToiIn0sZGF0YVBhcmFtczp7ZW1wdHlWYWx1ZToiW0tFWV9WQUxVRVNdIixkZWZhdWx0VmFsdWU6IiJ9LHBhaWRDbGlja3M6e2VtcHR5VmFsdWU6IltQQUlEX1RSQUNLSU5HX1BJWEVMXSIsZGVmYXVsdFZhbHVlOiIifSxvcmdhbmljQ2xpY2tzOntlbXB0eVZhbHVlOiJbT1JHQU5JQ19UUkFDS0lOR19QSVhFTF0iLGRlZmF1bHRWYWx1ZToiIn0sZGF0YVZpZXc6e2VtcHR5VmFsdWU6IltWSUVXX1RSQUNLSU5HX1BJWEVMXSIsZGVmYXVsdFZhbHVlOiIifX07cmV0dXJuIWEuaGFzT3duUHJvcGVydHkoZSl8fHImJnIhPT1hW2VdLmVtcHR5VmFsdWU/e3ZhbHVlOnIsZnJvbVVzZXI6ITB9Ont2YWx1ZTphW2VdLmRlZmF1bHRWYWx1ZSxmcm9tVXNlcjohMX19dmFyIHA9e2NvZGU6Im15NnNlbnNlIixzdXBwb3J0ZWRNZWRpYVR5cGVzOlt0LmIsdC5jXSxpc0JpZFJlcXVlc3RWYWxpZDpmdW5jdGlvbihlKXtyZXR1cm4hKCFlLnBhcmFtc3x8IWUucGFyYW1zLmtleSl9LGJ1aWxkUmVxdWVzdHM6ZnVuY3Rpb24oZSxvKXt2YXIgaT1bXTtyZXR1cm4gZSYmZS5sZW5ndGgmJmUuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgcj0hKGUud2lkZ2V0X251bT0xKSxhPSExO2lmKGUucGFyYW1zKWZvcih2YXIgdCBpbiBlLnBhcmFtcylpZihlLnBhcmFtcy5oYXNPd25Qcm9wZXJ0eSh0KSl7aWYoImRlYnVnIj09PXQmJiEwPT09ZS5wYXJhbXNbdF0pe2E9ITAsZGVsZXRlIGUucGFyYW1zW3RdO2NvbnRpbnVlfXZhciBuPWModCxlLnBhcmFtc1t0XSk7ZS5wYXJhbXNbdF09bi52YWx1ZSwicGFnZVVybCI9PT10JiYhMD09PW4uZnJvbVVzZXImJihyPSEwKSxlLnBhcmFtc1t0XXx8ZGVsZXRlIGUucGFyYW1zW3RdfXZhciBwLGQsdT0iIi5jb25jYXQoZywiP3dpZGdldF9rZXk9IikuY29uY2F0KGUucGFyYW1zLmtleSwiJmlzX2RhdGFfdXJsX3NldD0iKS5jb25jYXQocik7YSYmKHU9IiIuY29uY2F0KGcsIj9lbnY9ZGVidWcmd2lkZ2V0X2tleT0iKS5jb25jYXQoZS5wYXJhbXMua2V5LCImaXNfZGF0YV91cmxfc2V0PSIpLmNvbmNhdChyKSksZS5nZHByPShkPXtnZHByX2NvbnNlbnQ6bnVsbCxnZHByOm51bGx9LChwPW8pJiYiZ2RwckNvbnNlbnQiaW4gcCYmKGQuZ2Rwcl9jb25zZW50PXAuZ2RwckNvbnNlbnQuY29uc2VudFN0cmluZ3x8bnVsbCxkLmdkcHI9bnVsbD09PWQuZ2RwciYmMT09cC5nZHByQ29uc2VudC5nZHByQXBwbGllc3x8ZC5nZHByLGQuZ2Rwcj0obnVsbCE9PWQuZ2Rwcnx8MCE9cC5nZHByQ29uc2VudC5nZHByQXBwbGllcykmJmQuZ2RwcixkLmdkcHI9bnVsbD09PWQuZ2RwciYmMT09cC5nZHByQ29uc2VudC5nZHByQXBwbGllc3x8ZC5nZHByLGQuZ2Rwcj0obnVsbCE9PWQuZ2Rwcnx8MCE9cC5nZHByQ29uc2VudC5nZHByQXBwbGllcykmJmQuZ2RwciksZCk7dmFyIGw9e307Zm9yKHZhciBzIGluIGUpbFtzXT1lW3NdLCJiaWRkZXIiPT09cyYmKGxbc109Im15NnNlbnNlIik7aS5wdXNoKHt1cmw6dSxtZXRob2Q6IlBPU1QiLGRhdGE6SlNPTi5zdHJpbmdpZnkobCl9KX0pLGl9LGludGVycHJldFJlc3BvbnNlOmZ1bmN0aW9uKGUpe3ZhciByPVtdO3JldHVybiBlLmJvZHkmJihlLmJvZHkuYmlkZGVyQ29kZT10aGlzLmNvZGUsci5wdXNoKGUuYm9keSkpLHJ9fTtuKHApfX0sWzU5MV0pOwp1cGJqc0NodW5rKFsxODNdLHs2MDE6ZnVuY3Rpb24oZSxfLHQpe2UuZXhwb3J0cz10KDYwMil9LDYwMjpmdW5jdGlvbihtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KF9fd2VicGFja19leHBvcnRzX18sIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJCSURERVJfQ09ERSIsZnVuY3Rpb24oKXtyZXR1cm4gQklEREVSX0NPREV9KSxfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiRU5HSU5FX0JBU0VfVVJMIixmdW5jdGlvbigpe3JldHVybiBFTkdJTkVfQkFTRV9VUkx9KSxfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiTkFUSVZPX0pTX1VSTCIsZnVuY3Rpb24oKXtyZXR1cm4gTkFUSVZPX0pTX1VSTH0pLF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJVU0VSSUQiLGZ1bmN0aW9uKCl7cmV0dXJuIFVTRVJJRH0pLF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJVU0VSSVNORVciLGZ1bmN0aW9uKCl7cmV0dXJuIFVTRVJJU05FV30pLF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJSRUZFUkVSIixmdW5jdGlvbigpe3JldHVybiBSRUZFUkVSfSksX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlNQT05TT1JFRF9BUlRJQ0xFIixmdW5jdGlvbigpe3JldHVybiBTUE9OU09SRURfQVJUSUNMRX0pLF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJzcGVjIixmdW5jdGlvbigpe3JldHVybiBzcGVjfSk7dmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fc3JjX2FkYXB0ZXJzX2JpZGRlckZhY3RvcnlfanNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKDEpLF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fc3JjX21lZGlhVHlwZXNfanNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKDIpLF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fc3JjX2FkbG9hZGVyX2pzX189X193ZWJwYWNrX3JlcXVpcmVfXygzOCk7ZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KGUsXyx0KXtyZXR1cm4gXyBpbiBlP09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLF8se3ZhbHVlOnQsZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KTplW19dPXQsZX12YXIgQklEREVSX0NPREU9Im50diIsRU5HSU5FX0JBU0VfVVJMPSJodHRwczovL2phZHNlcnZlLnBvc3RyZWxlYXNlLmNvbS90IixOQVRJVk9fSlNfVVJMPSIvL3MubnR2LmlvL3NlcnZlL2xvYWQuanMiLFVTRVJJRD0ibnR2X3VzaWQiLFVTRVJJU05FVz0ibnR2X3VzbmV3IixSRUZFUkVSPSJudHZfdXJsIixTUE9OU09SRURfQVJUSUNMRT0icHJ4X3QiLGJpZHNSZXF1ZXN0ZWQ9e30sc3BlYz17Y29kZTpCSURERVJfQ09ERSxzdXBwb3J0ZWRNZWRpYVR5cGVzOltfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX3NyY19tZWRpYVR5cGVzX2pzX18uYl0saXNCaWRSZXF1ZXN0VmFsaWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMH0sYnVpbGRSZXF1ZXN0czpmdW5jdGlvbihlKXtPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19zcmNfYWRsb2FkZXJfanNfXy5hKShOQVRJVk9fSlNfVVJMLCJudHYiLGZ1bmN0aW9uKCl7fSk7dmFyIF89Y3JlYXRlU2luZ2xlQmlkUmVxdWVzdChiaWRzUmVxdWVzdGVkPWUpO3JldHVybnttZXRob2Q6IkdFVCIsdXJsOkVOR0lORV9CQVNFX1VSTCxkYXRhOl8sb3B0aW9uczp7d2l0aENyZWRlbnRpYWxzOiExfX19LGludGVycHJldFJlc3BvbnNlOmZ1bmN0aW9uIGludGVycHJldFJlc3BvbnNlKHNlcnZlclJlc3BvbnNlKXt2YXIgYmlkcz1bXSxkYXRhPXNlcnZlclJlc3BvbnNlLmJvZHk7dHJ5e2RhdGE9ZGF0YS5yZXBsYWNlKG5ldyBSZWdFeHAoYXRvYigiTEZ3aVlYVjBiMUJzWVhsUVlYSmhiWE5jSWpwN0xpby9mUT09IikpLCIiKTt2YXIgbWF0Y2hlZEFkRGF0YT1kYXRhLm1hdGNoKC9Qb3N0UmVsZWFzZVwuUHJvY2Vzc1Jlc3BvbnNlXCgoLiopXCk7fVwpXChcKTsvKTtpZigxPG1hdGNoZWRBZERhdGEubGVuZ3RoKXttYXRjaGVkQWREYXRhPUpTT04ucGFyc2UobWF0Y2hlZEFkRGF0YVsxXSk7dmFyIGFkSlM9IihmdW5jdGlvbigpe1Bvc3RSZWxlYXNlLlByb2Nlc3NSZXNwb25zZSgiK0pTT04uc3RyaW5naWZ5KG1hdGNoZWRBZERhdGEpKyIpO30pKCk7IjtpZigtMTxkb2N1bWVudC5sb2NhdGlvbi5ocmVmLmluZGV4T2YoIj9wcnhfdD0iKXx8LTE8ZG9jdW1lbnQubG9jYXRpb24uaHJlZi5pbmRleE9mKCImcHJ4X3Q9IikpcmV0dXJuIE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX3NyY19hZGxvYWRlcl9qc19fLmEpKE5BVElWT19KU19VUkwsIm50diIsZnVuY3Rpb24oKXtldmFsKGFkSlMpfSksYmlkcztmb3IodmFyIGk9MDtpPG1hdGNoZWRBZERhdGEucGxhY2VtZW50cy5sZW5ndGg7aSsrKXt2YXIgY3VycmVudFBsYWNlbWVudD1tYXRjaGVkQWREYXRhLnBsYWNlbWVudHNbaV0sc2VsZWN0b3I9Y3VycmVudFBsYWNlbWVudC5zZWxlY3RvcixwbGFjZUhvbGRlcjt0cnl7IWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpJiZkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIuZW50cnktY29udGVudCIpJiYocGxhY2VIb2xkZXI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikscGxhY2VIb2xkZXIuaWQ9c2VsZWN0b3IucmVwbGFjZSgiIyIsIiIpLGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIi5lbnRyeS1jb250ZW50IikubmV4dEVsZW1lbnRTaWJsaW5nLnBhcmVudEVsZW1lbnQuaW5zZXJ0QmVmb3JlKHBsYWNlSG9sZGVyLGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIi5lbnRyeS1jb250ZW50IikubmV4dEVsZW1lbnRTaWJsaW5nKSl9Y2F0Y2goZSl7fWlmKDA8Y3VycmVudFBsYWNlbWVudC5hZHMubGVuZ3RoKWZvcih2YXIgaj0wO2o8Y3VycmVudFBsYWNlbWVudC5hZHMubGVuZ3RoO2orKyl7dmFyIGFkV29uPWN1cnJlbnRQbGFjZW1lbnQuYWRzW2pdO2JpZHMucHVzaCh7cmVxdWVzdElkOmJpZHNSZXF1ZXN0ZWRbaV0uYmlkSWQsY3BtOndpbmRvdy5udHZDUE18fC4yLHdpZHRoOjAsaGVpZ2h0OjAsYWQ6IjxkaXY+PC9kaXY+IixhZEpTOmFkSlMsdHRsOjMwMCxjcmVhdGl2ZUlkOmFkV29uLmlkLG5ldFJldmVudWU6ITAsY3VycmVuY3k6IlVTRCJ9KX1lbHNlIE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX3NyY19hZGxvYWRlcl9qc19fLmEpKE5BVElWT19KU19VUkwsIm50diIsZnVuY3Rpb24oKXtldmFsKGFkSlMpfSl9MD09PW1hdGNoZWRBZERhdGEucGxhY2VtZW50cy5sZW5ndGgmJk9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX3NyY19hZGxvYWRlcl9qc19fLmEpKE5BVElWT19KU19VUkwsIm50diIsZnVuY3Rpb24oKXtldmFsKGFkSlMpfSl9fWNhdGNoKGUpe31yZXR1cm4gYmlkc319O2Z1bmN0aW9uIGNyZWF0ZVNpbmdsZUJpZFJlcXVlc3QoZSl7dmFyIF8sdD13aW5kb3cuUG9zdFJlbGVhc2U/d2luZG93LlBvc3RSZWxlYXNlLlNlc3Npb25NZ210LnNlc3Npb25JRDpzZXNzaW9uU3RvcmFnZS5fbnR2c258fE1hdGguZmxvb3IoMWU3Kk1hdGgucmFuZG9tKCkrMSk7c2Vzc2lvblN0b3JhZ2UuX250dnNufHwoc2Vzc2lvblN0b3JhZ2UuX250dnNuPXQpO3ZhciByPSF3aW5kb3cuUG9zdFJlbGVhc2V8fHdpbmRvdy5Qb3N0UmVsZWFzZS5TZXNzaW9uTWdtdC5uZXdTZXNzaW9uLG49ITE7LTE8ZG9jdW1lbnQubG9jYXRpb24uaHJlZi5pbmRleE9mKCImcHJ4X3Q9Iik/bj1kb2N1bWVudC5sb2NhdGlvbi5ocmVmLnNwbGl0KCImcHJ4X3Q9IilbMV0uc3BsaXQoIiYiKVswXTotMTxkb2N1bWVudC5sb2NhdGlvbi5ocmVmLmluZGV4T2YoIj9wcnhfdD0iKSYmKG49ZG9jdW1lbnQubG9jYXRpb24uaHJlZi5zcGxpdCgiP3ByeF90PSIpWzFdLnNwbGl0KCImIilbMF0pO3ZhciBhPShfZGVmaW5lUHJvcGVydHkoXz17fSxVU0VSSUQsdCksX2RlZmluZVByb3BlcnR5KF8sVVNFUklTTkVXLHIpLF9kZWZpbmVQcm9wZXJ0eShfLFJFRkVSRVIsZW5jb2RlVVJJQ29tcG9uZW50KHdpbmRvdy5sb2NhdGlvbi5ocmVmKSksXyk7cmV0dXJuIG4mJihhW1NQT05TT1JFRF9BUlRJQ0xFXT1uKSxhfU9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3NyY19hZGFwdGVyc19iaWRkZXJGYWN0b3J5X2pzX18ucmVnaXN0ZXJCaWRkZXIpKHNwZWMpfX0sWzYwMV0pOwp1cGJqc0NodW5rKFsxNzNdLHs2MjU6ZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz1yKDYyNil9LDYyNjpmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxyLmQodCwiVVNFUl9JRF9DT0RFX1RPX1FVRVJZX0FSRyIsZnVuY3Rpb24oKXtyZXR1cm4gZn0pLHIuZCh0LCJzcGVjIixmdW5jdGlvbigpe3JldHVybiBvfSk7dmFyIGM9cigzKSxuPXIoMSksZD1yKDApLHU9cigyKTtmdW5jdGlvbiBzKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIGV9KGUpfHxmdW5jdGlvbihlLHQpe2lmKCJ1bmRlZmluZWQiPT10eXBlb2YgU3ltYm9sfHwhKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoZSkpKXJldHVybjt2YXIgcj1bXSxuPSEwLGk9ITEsYT12b2lkIDA7dHJ5e2Zvcih2YXIgcyxvPWVbU3ltYm9sLml0ZXJhdG9yXSgpOyEobj0ocz1vLm5leHQoKSkuZG9uZSkmJihyLnB1c2gocy52YWx1ZSksIXR8fHIubGVuZ3RoIT09dCk7bj0hMCk7fWNhdGNoKGUpe2k9ITAsYT1lfWZpbmFsbHl7dHJ5e258fG51bGw9PW8ucmV0dXJufHxvLnJldHVybigpfWZpbmFsbHl7aWYoaSl0aHJvdyBhfX1yZXR1cm4gcn0oZSx0KXx8ZnVuY3Rpb24oZSx0KXtpZighZSlyZXR1cm47aWYoInN0cmluZyI9PXR5cGVvZiBlKXJldHVybiBpKGUsdCk7dmFyIHI9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpLnNsaWNlKDgsLTEpOyJPYmplY3QiPT09ciYmZS5jb25zdHJ1Y3RvciYmKHI9ZS5jb25zdHJ1Y3Rvci5uYW1lKTtpZigiTWFwIj09PXJ8fCJTZXQiPT09cilyZXR1cm4gQXJyYXkuZnJvbShlKTtpZigiQXJndW1lbnRzIj09PXJ8fC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KHIpKXJldHVybiBpKGUsdCl9KGUsdCl8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC4iKX0oKX1mdW5jdGlvbiBpKGUsdCl7KG51bGw9PXR8fHQ+ZS5sZW5ndGgpJiYodD1lLmxlbmd0aCk7Zm9yKHZhciByPTAsbj1uZXcgQXJyYXkodCk7cjx0O3IrKyluW3JdPWVbcl07cmV0dXJuIG59dmFyIGE9W3UuYix1LmRdLHA9ImhiX3BiIixtPSIzLjAuMyIsbD0iVVNEIixmPXticml0ZXBvb2xpZDoiYnJpdGVwb29saWQiLGNyaXRlb0lkOiJjcml0ZW9pZCIsZGlnaXRydXN0aWQ6ImRpZ2l0cnVzdGlkIixpZDVpZDoiaWQ1aWQiLGlkbF9lbnY6ImxyZSIsbGlwYjoibGlwYmlkIixuZXRJZDoibmV0aWQiLHBhcnJhYmxlSWQ6InBhcnJhYmxlaWQiLHB1YmNpZDoicHViY2lkIix0ZGlkOiJ0dGR1dWlkIn0sbz17Y29kZToib3BlbngiLGd2bGlkOjY5LGFsaWFzZXM6WyJvcGVueF9hYiJdLHN1cHBvcnRlZE1lZGlhVHlwZXM6YSxpc0JpZFJlcXVlc3RWYWxpZDpmdW5jdGlvbihlKXt2YXIgdD1lLnBhcmFtcy5kZWxEb21haW58fGUucGFyYW1zLnBsYXRmb3JtO3JldHVybiBkLmRlZXBBY2Nlc3MoZSwibWVkaWFUeXBlcy5iYW5uZXIiKSYmdD8hIWUucGFyYW1zLnVuaXR8fDA8ZC5kZWVwQWNjZXNzKGUsIm1lZGlhVHlwZXMuYmFubmVyLnNpemVzLmxlbmd0aCIpOiEoIWUucGFyYW1zLnVuaXR8fCF0KX0sYnVpbGRSZXF1ZXN0czpmdW5jdGlvbihlLG4pe2lmKDA9PT1lLmxlbmd0aClyZXR1cm5bXTt2YXIgaT1bXSx0PXMoZS5yZWR1Y2UoZnVuY3Rpb24oZSx0KXt2YXIgcjtyZXR1cm4gcj10LGQuZGVlcEFjY2VzcyhyLCJtZWRpYVR5cGVzLnZpZGVvIikmJiFkLmRlZXBBY2Nlc3MociwibWVkaWFUeXBlcy5iYW5uZXIiKXx8ci5tZWRpYVR5cGU9PT11LmQ/ZVswXS5wdXNoKHQpOmVbMV0ucHVzaCh0KSxlfSxbW10sW11dKSwyKSxyPXRbMF0sYT10WzFdO3JldHVybiAwPGEubGVuZ3RoJiZpLnB1c2goZnVuY3Rpb24oZSx0KXt2YXIgbj1bXSxpPSExLHI9aChlLHQpLGE9ZC5fbWFwKGUsZnVuY3Rpb24oZSl7cmV0dXJuIGUucGFyYW1zLnVuaXR9KTtyLmF1cz1kLl9tYXAoZSxmdW5jdGlvbihlKXtyZXR1cm4gZC5wYXJzZVNpemVzSW5wdXQoZS5tZWRpYVR5cGVzLmJhbm5lci5zaXplcykuam9pbigiLCIpfSkuam9pbigifCIpLHIuZGl2SWRzPWQuX21hcChlLGZ1bmN0aW9uKGUpe3JldHVybiBlbmNvZGVVUklDb21wb25lbnQoZS5hZFVuaXRDb2RlKX0pLmpvaW4oIiwiKSxhLnNvbWUoZnVuY3Rpb24oZSl7cmV0dXJuIGV9KSYmKHIuYXVpZD1hLmpvaW4oIiwiKSk7ZS5zb21lKGZ1bmN0aW9uKGUpe3JldHVybiBlLnBhcmFtcy5kb05vdFRyYWNrfSkmJihyLm5zPTEpOyEwIT09Yy5iLmdldENvbmZpZygiY29wcGEiKSYmIWUuc29tZShmdW5jdGlvbihlKXtyZXR1cm4gZS5wYXJhbXMuY29wcGF9KXx8KHIudGZjZD0xKTtlLmZvckVhY2goZnVuY3Rpb24odCl7dmFyIGUscjt0LnBhcmFtcy5jdXN0b21QYXJhbXM/KGU9ZC5fbWFwKE9iamVjdC5rZXlzKHQucGFyYW1zLmN1c3RvbVBhcmFtcyksZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFtlXTtkLmlzQXJyYXkocikmJihyPXIuam9pbigiLCIpKTtyZXR1cm4oZS50b0xvd2VyQ2FzZSgpKyI9IityLnRvTG93ZXJDYXNlKCkpLnJlcGxhY2UoIisiLCIuIikucmVwbGFjZSgiLyIsIl8iKX0oZSx0LnBhcmFtcy5jdXN0b21QYXJhbXMpfSkscj13aW5kb3cuYnRvYShlLmpvaW4oIiYiKSksaT0hMCxuLnB1c2gocikpOm4ucHVzaCgiIil9KSxpJiYoci50cHM9bi5qb2luKCIsIikpO3ZhciBzPVtdLG89ITE7ZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciB0PWZ1bmN0aW9uKGUsdCl7dmFyIHI9e30sbj1jLmIuZ2V0Q29uZmlnKCJjdXJyZW5jeS5hZFNlcnZlckN1cnJlbmN5Iil8fGw7ImZ1bmN0aW9uIj09dHlwZW9mIGUuZ2V0Rmxvb3ImJihyPWUuZ2V0Rmxvb3Ioe2N1cnJlbmN5Om4sbWVkaWFUeXBlOnQsc2l6ZToiKiJ9KSk7dmFyIGk9ci5mbG9vcnx8ZS5wYXJhbXMuY3VzdG9tRmxvb3J8fDA7cmV0dXJuIE1hdGgucm91bmQoMWUzKmkpfShlLHUuYik7dD8ocy5wdXNoKHQpLG89ITApOnMucHVzaCgwKX0pLG8mJihyLmF1bWZzPXMuam9pbigiLCIpKTtyZXR1cm57bWV0aG9kOiJHRVQiLHVybDpyLnBoPyJodHRwczovL3Uub3BlbngubmV0L3cvMS4wL2FyaiI6Imh0dHBzOi8vIi5jb25jYXQoZVswXS5wYXJhbXMuZGVsRG9tYWluLCIvdy8xLjAvYXJqIiksZGF0YTpyLHBheWxvYWQ6e2JpZHM6ZSxzdGFydFRpbWU6bmV3IERhdGV9fX0oYSxuKSksMDxyLmxlbmd0aCYmci5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciB0LHI7aS5wdXNoKHttZXRob2Q6IkdFVCIsdXJsOihyPWZ1bmN0aW9uKGUsdCl7dmFyIHIsbixpPWgoW2VdLHQpLGE9ZC5kZWVwQWNjZXNzKGUsInBhcmFtcy52aWRlbyIpfHx7fSxzPWQuZGVlcEFjY2VzcyhlLCJtZWRpYVR5cGVzLnZpZGVvLmNvbnRleHQiKSxvPWQuZGVlcEFjY2VzcyhlLCJtZWRpYVR5cGVzLnZpZGVvLnBsYXllclNpemUiKTtkLmlzQXJyYXkoZS5zaXplcykmJjI9PT1lLnNpemVzLmxlbmd0aCYmIWQuaXNBcnJheShlLnNpemVzWzBdKT8ocj1wYXJzZUludChlLnNpemVzWzBdLDEwKSxuPXBhcnNlSW50KGUuc2l6ZXNbMV0sMTApKTpkLmlzQXJyYXkoZS5zaXplcykmJmQuaXNBcnJheShlLnNpemVzWzBdKSYmMj09PWUuc2l6ZXNbMF0ubGVuZ3RoPyhyPXBhcnNlSW50KGUuc2l6ZXNbMF1bMF0sMTApLG49cGFyc2VJbnQoZS5zaXplc1swXVsxXSwxMCkpOmQuaXNBcnJheShvKSYmMj09PW8ubGVuZ3RoJiYocj1wYXJzZUludChvWzBdLDEwKSxuPXBhcnNlSW50KG9bMV0sMTApKTtPYmplY3Qua2V5cyhhKS5mb3JFYWNoKGZ1bmN0aW9uKGUpeyJvcGVucnRiIj09PWU/KGFbZV0udz1yfHxhW2VdLncsYVtlXS52PW58fGFbZV0udixpW2VdPUpTT04uc3RyaW5naWZ5KGFbZV0pKTplIGluIGl8fCJ1cmwiPT09ZXx8KGlbZV09YVtlXSl9KSxpLmF1aWQ9ZS5wYXJhbXMudW5pdCxpLnZ3ZD1yfHxhLnZ3ZCxpLnZodD1ufHxhLnZodCwib3V0c3RyZWFtIj09PXMmJihpLnZvcz0iMTAxIik7YS5taW1lcyYmKGkudm1pbWVzPWEubWltZXMpO2UucGFyYW1zLnRlc3QmJihpLnZ0ZXN0PTEpO3JldHVybiBpfSh0PWUsbikpLnBoPyJodHRwczovL3Uub3BlbngubmV0L3YvMS4wL2F2anAiOiJodHRwczovLyIuY29uY2F0KHQucGFyYW1zLmRlbERvbWFpbiwiL3YvMS4wL2F2anAiKSxkYXRhOnIscGF5bG9hZDp7YmlkOnQsc3RhcnRUaW1lOm5ldyBEYXRlfX0pfSksaX0saW50ZXJwcmV0UmVzcG9uc2U6ZnVuY3Rpb24oZSx0KXt2YXIgcj1lLmJvZHk7cmV0dXJuKCgvYXZqcCQvLnRlc3QodC51cmwpP3UuZDp1LmIpPT09dS5kP2Z1bmN0aW9uKGUsdCl7dmFyIHI9dC5iaWQsbj0odC5zdGFydFRpbWUsW10pO3t2YXIgaSxhO3ZvaWQgMCE9PWUmJiIiIT09ZS52YXN0VXJsJiYwPGUucHViX3JldiYmKGk9ZC5wYXJzZVVybChlLnZhc3RVcmwpLnNlYXJjaHx8e30sKGE9e30pLnJlcXVlc3RJZD1yLmJpZElkLGEudHRsPTMwMCxhLm5ldFJldmVudWU9ITAsYS5jdXJyZW5jeT1lLmN1cnJlbmN5LGEuY3BtPXBhcnNlSW50KGUucHViX3JldiwxMCkvMWUzLGEud2lkdGg9cGFyc2VJbnQoZS53aWR0aCwxMCksYS5oZWlnaHQ9cGFyc2VJbnQoZS5oZWlnaHQsMTApLGEuY3JlYXRpdmVJZD1lLmFkaWQsYS52YXN0VXJsPWUudmFzdFVybCxhLm1lZGlhVHlwZT11LmQsZS5waD1pLnBoLGUuY29sbz1pLmNvbG8sZS50cz1pLnRzLG4ucHVzaChhKSl9cmV0dXJuIG59OmZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByPXQuYmlkcyxuPSh0LnN0YXJ0VGltZSxlLmFkcy5hZCksaT1bXSxhPTA7YTxuLmxlbmd0aDthKyspe3ZhciBzLG89blthXSxjPXBhcnNlSW50KG8uaWR4LDEwKSxkPXt9O2QucmVxdWVzdElkPXJbY10uYmlkSWQsby5wdWJfcmV2JiYoZC5jcG09TnVtYmVyKG8ucHViX3JldikvMWUzLChzPW8uY3JlYXRpdmVbMF0pJiYoZC53aWR0aD1zLndpZHRoLGQuaGVpZ2h0PXMuaGVpZ2h0KSxkLmNyZWF0aXZlSWQ9cy5pZCxkLmFkPW8uaHRtbCxvLmRlYWxfaWQmJihkLmRlYWxJZD1vLmRlYWxfaWQpLGQudHRsPTMwMCxkLm5ldFJldmVudWU9ITAsZC5jdXJyZW5jeT1vLmN1cnJlbmN5LG8udGJkJiYoZC50YmQ9by50YmQpLGQudHM9by50cyxkLm1ldGE9e30sby5icmFuZF9pZCYmKGQubWV0YS5icmFuZElkPW8uYnJhbmRfaWQpLG8uYWR2X2lkJiYoZC5tZXRhLmRzcGlkPW8uYWR2X2lkKSxpLnB1c2goZCkpfXJldHVybiBpfSkocix0LnBheWxvYWQpfSxnZXRVc2VyU3luY3M6ZnVuY3Rpb24oZSx0LHIsbil7aWYoZS5pZnJhbWVFbmFibGVkfHxlLnBpeGVsRW5hYmxlZClyZXR1cm5be3R5cGU6ZS5pZnJhbWVFbmFibGVkPyJpZnJhbWUiOiJpbWFnZSIsdXJsOmQuZGVlcEFjY2Vzcyh0LCIwLmJvZHkuYWRzLnBpeGVscyIpfHxkLmRlZXBBY2Nlc3ModCwiMC5ib2R5LnBpeGVscyIpfHxmdW5jdGlvbihlLHQpe3ZhciByPVtdO2UmJihyLnB1c2goImdkcHI9IisoZS5nZHByQXBwbGllcz8xOjApKSxyLnB1c2goImdkcHJfY29uc2VudD0iK2VuY29kZVVSSUNvbXBvbmVudChlLmNvbnNlbnRTdHJpbmd8fCIiKSkpO3QmJnIucHVzaCgidXNfcHJpdmFjeT0iK2VuY29kZVVSSUNvbXBvbmVudCh0KSk7cmV0dXJuIiIuY29uY2F0KCJodHRwczovL3Uub3BlbngubmV0L3cvMS4wL3BkIikuY29uY2F0KDA8ci5sZW5ndGg/Ij8iK3Iuam9pbigiJiIpOiIiKX0ocixuKX1dfSx0cmFuc2Zvcm1CaWRQYXJhbXM6ZnVuY3Rpb24oZSl7cmV0dXJuIGQuY29udmVydFR5cGVzKHt1bml0OiJzdHJpbmciLGN1c3RvbUZsb29yOiJudW1iZXIifSxlKX19O2Z1bmN0aW9uIGgoZSx0KXt2YXIgcixuLGksYSxzPWQuaW5JZnJhbWUoKSxvPXtqdTpjLmIuZ2V0Q29uZmlnKCJwYWdlVXJsIil8fHQucmVmZXJlckluZm8ucmVmZXJlcixjaDpkb2N1bWVudC5jaGFyU2V0fHxkb2N1bWVudC5jaGFyYWN0ZXJTZXQscmVzOiIiLmNvbmNhdChzY3JlZW4ud2lkdGgsIngiKS5jb25jYXQoc2NyZWVuLmhlaWdodCwieCIpLmNvbmNhdChzY3JlZW4uY29sb3JEZXB0aCksaWZyOnMsdHo6KG5ldyBEYXRlKS5nZXRUaW1lem9uZU9mZnNldCgpLHR3czpmdW5jdGlvbihlKXt2YXIgdCxyLG4saT13aW5kb3csYT1kb2N1bWVudCxzPWEuZG9jdW1lbnRFbGVtZW50O2lmKGUpe3RyeXtpPXdpbmRvdy50b3AsYT13aW5kb3cudG9wLmRvY3VtZW50fWNhdGNoKGUpe3JldHVybn1zPWEuZG9jdW1lbnRFbGVtZW50LG49YS5ib2R5LHQ9aS5pbm5lcldpZHRofHxzLmNsaWVudFdpZHRofHxuLmNsaWVudFdpZHRoLHI9aS5pbm5lckhlaWdodHx8cy5jbGllbnRIZWlnaHR8fG4uY2xpZW50SGVpZ2h0fWVsc2Ugcz1hLmRvY3VtZW50RWxlbWVudCx0PWkuaW5uZXJXaWR0aHx8cy5jbGllbnRXaWR0aCxyPWkuaW5uZXJIZWlnaHR8fHMuY2xpZW50SGVpZ2h0O3JldHVybiIiLmNvbmNhdCh0LCJ4IikuY29uY2F0KHIpfShzKSxiZToxLGJjOmVbMF0ucGFyYW1zLmJjfHwiIi5jb25jYXQocCwiXyIpLmNvbmNhdChtKSxkZGRpZDpkLl9tYXAoZSxmdW5jdGlvbihlKXtyZXR1cm4gZS50cmFuc2FjdGlvbklkfSkuam9pbigiLCIpLG5vY2FjaGU6KG5ldyBEYXRlKS5nZXRUaW1lKCl9O3JldHVybiBlWzBdLnBhcmFtcy5wbGF0Zm9ybSYmKG8ucGg9ZVswXS5wYXJhbXMucGxhdGZvcm0pLHQuZ2RwckNvbnNlbnQmJih2b2lkIDAhPT0ocj10LmdkcHJDb25zZW50KS5jb25zZW50U3RyaW5nJiYoby5nZHByX2NvbnNlbnQ9ci5jb25zZW50U3RyaW5nKSx2b2lkIDAhPT1yLmdkcHJBcHBsaWVzJiYoby5nZHByPXIuZ2RwckFwcGxpZXM/MTowKSwiaWFiIj09PWMuYi5nZXRDb25maWcoImNvbnNlbnRNYW5hZ2VtZW50LmNtcEFwaSIpJiYoby54X2dkcHJfZj0xKSksdCYmdC51c3BDb25zZW50JiYoby51c19wcml2YWN5PXQudXNwQ29uc2VudCksZC5kZWVwQWNjZXNzKGVbMF0sImNydW1icy5wdWJjaWQiKSYmZC5kZWVwU2V0VmFsdWUoZVswXSwidXNlcklkLnB1YmNpZCIsZC5kZWVwQWNjZXNzKGVbMF0sImNydW1icy5wdWJjaWQiKSksbj1vLGk9ZVswXS51c2VySWQsZC5fZWFjaChpLGZ1bmN0aW9uKGUsdCl7dmFyIHI9Zlt0XTtpZihmLmhhc093blByb3BlcnR5KHQpKXN3aXRjaCh0KXtjYXNlImRpZ2l0cnVzdGlkIjpuW3JdPWQuZGVlcEFjY2VzcyhlLCJkYXRhLmlkIik7YnJlYWs7Y2FzZSJsaXBiIjpuW3JdPWUubGlwYmlkO2JyZWFrO2Nhc2UicGFycmFibGVJZCI6bltyXT1lLmVpZDticmVhaztjYXNlImlkNWlkIjpuW3JdPWUudWlkO2JyZWFrO2RlZmF1bHQ6bltyXT1lfX0pLG89bixlWzBdLnNjaGFpbiYmKG8uc2NoYWluPShhPWVbMF0uc2NoYWluLCIiLmNvbmNhdChhLnZlciwiLCIpLmNvbmNhdChhLmNvbXBsZXRlLCIhIikuY29uY2F0KGZ1bmN0aW9uKGUpe3ZhciByPVsiYXNpIiwic2lkIiwiaHAiLCJyaWQiLCJuYW1lIiwiZG9tYWluIl07cmV0dXJuIGUubWFwKGZ1bmN0aW9uKHQpe3JldHVybiByLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gdFtlXXx8IiJ9KS5qb2luKCIsIil9KS5qb2luKCIhIil9KGEubm9kZXMpKSkpLG99T2JqZWN0KG4ucmVnaXN0ZXJCaWRkZXIpKG8pfX0sWzYyNV0pOwp1cGJqc0NodW5rKFsxNTZdLHs2NjQ6ZnVuY3Rpb24oZSxkLG4pe2UuZXhwb3J0cz1uKDY2NSl9LDY2NTpmdW5jdGlvbihlLGQsbil7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShkLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxuLmQoZCwicHViUHJvdmlkZWRJZFN1Ym1vZHVsZSIsZnVuY3Rpb24oKXtyZXR1cm4gaX0pO3ZhciBvPW4oMTMpLHU9bigwKSxpPXtuYW1lOiJwdWJQcm92aWRlZElkIixkZWNvZGU6ZnVuY3Rpb24oZSl7dmFyIGQ9ZT97cHViUHJvdmlkZWRJZDplfTp2b2lkIDA7cmV0dXJuIHUubG9nSW5mbygiUHViUHJvdmlkZWRJZDogRGVjb2RlZCB2YWx1ZSAiK0pTT04uc3RyaW5naWZ5KGQpKSxkfSxnZXRJZDpmdW5jdGlvbihlKXt2YXIgZD1lJiZlLnBhcmFtc3x8e30sbj1bXTtyZXR1cm4gdS5pc0FycmF5KGQuZWlkcykmJihuPW4uY29uY2F0KGQuZWlkcykpLCJmdW5jdGlvbiI9PXR5cGVvZiBkLmVpZHNGdW5jdGlvbiYmKG49bi5jb25jYXQoZC5laWRzRnVuY3Rpb24oKSkpLHtpZDpufX19O09iamVjdChvLmUpKCJ1c2VySWQiLGkpfX0sWzY2NF0pOwp1cGJqc0NodW5rKFsxNTRdLHs2NzA6ZnVuY3Rpb24oZSxyLGEpe2UuZXhwb3J0cz1hKDY3MSl9LDY3MTpmdW5jdGlvbihlLHIsYSl7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxhLmQociwic3BlYyIsZnVuY3Rpb24oKXtyZXR1cm4gYn0pO3ZhciBPPWEoMCksdD1hKDEpLFM9YSgyKSxSPWEoMyksaT1hKDExKTtmdW5jdGlvbiBQKCl7cmV0dXJuKFA9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl7dmFyIGE9YXJndW1lbnRzW3JdO2Zvcih2YXIgdCBpbiBhKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhLHQpJiYoZVt0XT1hW3RdKX1yZXR1cm4gZX0pLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1mdW5jdGlvbiBEKGUpe3JldHVybihEPSJmdW5jdGlvbiI9PXR5cGVvZiBTeW1ib2wmJiJzeW1ib2wiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJiJmdW5jdGlvbiI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlPyJzeW1ib2wiOnR5cGVvZiBlfSkoZSl9dmFyIFk9IlB1Yk1hdGljOiAiLEE9IlVTRCIseD12b2lkIDAscz0iaHR0cHM6Ly9wdWJtYXRpYy5iYnZtcy5jb20vci8iLmNvbmNhdCgiJFJFTkRFUkVSIiwiLmpzIiksTj17a2FkcGFnZXVybDoiIixnZW5kZXI6IiIseW9iOiIiLGxhdDoiIixsb246IiIsd2lpZDoiIixwcm9mSWQ6IiIsdmVySWQ6IiJ9LG49e05VTUJFUjoibnVtYmVyIixTVFJJTkc6InN0cmluZyIsQk9PTEVBTjoiYm9vbGVhbiIsQVJSQVk6ImFycmF5IixPQkpFQ1Q6Im9iamVjdCJ9LG89e21pbWVzOm4uQVJSQVksbWluZHVyYXRpb246bi5OVU1CRVIsbWF4ZHVyYXRpb246bi5OVU1CRVIsc3RhcnRkZWxheTpuLk5VTUJFUixwbGF5YmFja21ldGhvZDpuLkFSUkFZLGFwaTpuLkFSUkFZLHByb3RvY29sczpuLkFSUkFZLHc6bi5OVU1CRVIsaDpuLk5VTUJFUixiYXR0cjpuLkFSUkFZLGxpbmVhcml0eTpuLk5VTUJFUixwbGFjZW1lbnQ6bi5OVU1CRVIsbWluYml0cmF0ZTpuLk5VTUJFUixtYXhiaXRyYXRlOm4uTlVNQkVSfSxjPXtUSVRMRTp7SUQ6MSxLRVk6InRpdGxlIixUWVBFOjB9LElNQUdFOntJRDoyLEtFWToiaW1hZ2UiLFRZUEU6MH0sSUNPTjp7SUQ6MyxLRVk6Imljb24iLFRZUEU6MH0sU1BPTlNPUkVEQlk6e0lEOjQsS0VZOiJzcG9uc29yZWRCeSIsVFlQRToxfSxCT0RZOntJRDo1LEtFWToiYm9keSIsVFlQRToyfSxDTElDS1VSTDp7SUQ6NixLRVk6ImNsaWNrVXJsIixUWVBFOjB9LFZJREVPOntJRDo3LEtFWToidmlkZW8iLFRZUEU6MH0sRVhUOntJRDo4LEtFWToiZXh0IixUWVBFOjB9LERBVEE6e0lEOjksS0VZOiJkYXRhIixUWVBFOjB9LExPR086e0lEOjEwLEtFWToibG9nbyIsVFlQRTowfSxTUE9OU09SRUQ6e0lEOjExLEtFWToic3BvbnNvcmVkIixUWVBFOjF9LERFU0M6e0lEOjEyLEtFWToiZGF0YSIsVFlQRToyfSxSQVRJTkc6e0lEOjEzLEtFWToicmF0aW5nIixUWVBFOjN9LExJS0VTOntJRDoxNCxLRVk6Imxpa2VzIixUWVBFOjR9LERPV05MT0FEUzp7SUQ6MTUsS0VZOiJkb3dubG9hZHMiLFRZUEU6NX0sUFJJQ0U6e0lEOjE2LEtFWToicHJpY2UiLFRZUEU6Nn0sU0FMRVBSSUNFOntJRDoxNyxLRVk6InNhbGVwcmljZSIsVFlQRTo3fSxQSE9ORTp7SUQ6MTgsS0VZOiJwaG9uZSIsVFlQRTo4fSxBRERSRVNTOntJRDoxOSxLRVk6ImFkZHJlc3MiLFRZUEU6OX0sREVTQzI6e0lEOjIwLEtFWToiZGVzYzIiLFRZUEU6MTB9LERJU1BMQVlVUkw6e0lEOjIxLEtFWToiZGlzcGxheXVybCIsVFlQRToxMX0sQ1RBOntJRDoyMixLRVk6ImN0YSIsVFlQRToxMn19LGw9e0lDT046MSxMT0dPOjIsSU1BR0U6M30sdT1be2lkOmMuU1BPTlNPUkVEQlkuSUQscmVxdWlyZWQ6ITAsZGF0YTp7dHlwZToxfX0se2lkOmMuVElUTEUuSUQscmVxdWlyZWQ6ITB9LHtpZDpjLklNQUdFLklELHJlcXVpcmVkOiEwfV0sZD17MToiUE1QIiw1OiJQUkVGIiw2OiJQTVBHIn0scD17Ym9vdHN0cmFwUGxheWVyOmZ1bmN0aW9uKGUpe3ZhciByPXtjb2RlOmUuYWRVbml0Q29kZX07aWYoZS52YXN0WG1sP3IudmFzdFhtbD1lLnZhc3RYbWw6ZS52YXN0VXJsJiYoci52YXN0VXJsPWUudmFzdFVybCksZS52YXN0WG1sfHxlLnZhc3RVcmwpe2Zvcih2YXIgYSx0PXAuZ2V0UmVuZGVyZXJJZCgicHVibWF0aWMiLGUucmVuZGVyZXJDb2RlKSxpPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGUuYWRVbml0Q29kZSkscz0wO3M8d2luZG93LmJsdWViaWxseXdpZy5yZW5kZXJlcnMubGVuZ3RoO3MrKylpZih3aW5kb3cuYmx1ZWJpbGx5d2lnLnJlbmRlcmVyc1tzXS5faWQ9PT10KXthPXdpbmRvdy5ibHVlYmlsbHl3aWcucmVuZGVyZXJzW3NdO2JyZWFrfWE/YS5ib290c3RyYXAocixpKTpPLmxvZ1dhcm4oIiIuY29uY2F0KFksIjogQ291bGRuJ3QgZmluZCBhIHJlbmRlcmVyIHdpdGggIikuY29uY2F0KHQpKX1lbHNlIE8ubG9nV2FybigiIi5jb25jYXQoWSwiOiBObyB2YXN0WG1sIG9yIHZhc3RVcmwgb24gYmlkLCBiYWlsaW5nLi4uIikpfSxuZXdSZW5kZXJlcjpmdW5jdGlvbihlLHIpe3ZhciBhPXMucmVwbGFjZSgiJFJFTkRFUkVSIixlKSx0PWkuYS5pbnN0YWxsKHt1cmw6YSxsb2FkZWQ6ITEsYWRVbml0Q29kZTpyfSk7dHJ5e3Quc2V0UmVuZGVyKHAub3V0c3RyZWFtUmVuZGVyKX1jYXRjaChlKXtPLmxvZ1dhcm4oIiIuY29uY2F0KFksIjogRXJyb3IgdHlpbmcgdG8gc2V0UmVuZGVyIG9uIHJlbmRlcmVyIiksZSl9cmV0dXJuIHR9LG91dHN0cmVhbVJlbmRlcjpmdW5jdGlvbihlKXtlLnJlbmRlcmVyLnB1c2goZnVuY3Rpb24oKXtwLmJvb3RzdHJhcFBsYXllcihlKX0pfSxnZXRSZW5kZXJlcklkOmZ1bmN0aW9uKGUscil7cmV0dXJuIiIuY29uY2F0KGUsIi0iKS5jb25jYXQocil9fSxrPTAsbT0hMSxnPXt9LGg9e307ZnVuY3Rpb24gQyhlLHIpe2lmKCFPLmlzU3RyKHIpKXJldHVybiByJiZPLmxvZ1dhcm4oWSsiSWdub3JpbmcgcGFyYW0ga2V5OiAiK2UrIiwgZXhwZWN0cyBzdHJpbmctdmFsdWUsIGZvdW5kICIrRChyKSkseDtzd2l0Y2goZSl7Y2FzZSJwbXpvbmVpZCI6cmV0dXJuIHIuc3BsaXQoIiwiKS5zbGljZSgwLDUwKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGUudHJpbSgpfSkuam9pbigpO2Nhc2Uia2FkZmxvb3IiOmNhc2UibGF0IjpjYXNlImxvbiI6cmV0dXJuIHBhcnNlRmxvYXQocil8fHg7Y2FzZSJ5b2IiOnJldHVybiBwYXJzZUludChyKXx8eDtkZWZhdWx0OnJldHVybiByfX1mdW5jdGlvbiBVKGUpe3ZhciByO2UucGFyYW1zLmFkVW5pdD0iIixlLnBhcmFtcy5hZFVuaXRJbmRleD0iMCIsZS5wYXJhbXMud2lkdGg9MCxlLnBhcmFtcy5oZWlnaHQ9MCxlLnBhcmFtcy5hZFNsb3Q9KHI9ZS5wYXJhbXMuYWRTbG90LE8uaXNTdHIocik/ci5yZXBsYWNlKC9eXHMrL2csIiIpLnJlcGxhY2UoL1xzKyQvZywiIik6IiIpO3ZhciBhPSh0PWUucGFyYW1zLmFkU2xvdCkuc3BsaXQoIjoiKSx0PWFbMF07aWYoMj09YS5sZW5ndGgmJihlLnBhcmFtcy5hZFVuaXRJbmRleD1hWzFdKSxhPXQuc3BsaXQoIkAiKSxlLnBhcmFtcy5hZFVuaXQ9YVswXSwxPGEubGVuZ3RoKXtpZigyIT0oYT1hWzFdLnNwbGl0KCJ4IikpLmxlbmd0aClyZXR1cm4gdm9pZCBPLmxvZ1dhcm4oWSsiQWRTbG90IEVycm9yOiBhZFNsb3Qgbm90IGluIHJlcXVpcmVkIGZvcm1hdCIpO2UucGFyYW1zLndpZHRoPXBhcnNlSW50KGFbMF0sMTApLGUucGFyYW1zLmhlaWdodD1wYXJzZUludChhWzFdLDEwKX1lbHNlIGlmKGUuaGFzT3duUHJvcGVydHkoIm1lZGlhVHlwZXMiKSYmZS5tZWRpYVR5cGVzLmhhc093blByb3BlcnR5KFMuYikmJmUubWVkaWFUeXBlcy5iYW5uZXIuaGFzT3duUHJvcGVydHkoInNpemVzIikpe2Zvcih2YXIgaT0wLHM9W107aTxlLm1lZGlhVHlwZXMuYmFubmVyLnNpemVzLmxlbmd0aDtpKyspMj09PWUubWVkaWFUeXBlcy5iYW5uZXIuc2l6ZXNbaV0ubGVuZ3RoJiZzLnB1c2goZS5tZWRpYVR5cGVzLmJhbm5lci5zaXplc1tpXSk7ZS5tZWRpYVR5cGVzLmJhbm5lci5zaXplcz1zLDE8PWUubWVkaWFUeXBlcy5iYW5uZXIuc2l6ZXMubGVuZ3RoJiYoZS5wYXJhbXMud2lkdGg9ZS5tZWRpYVR5cGVzLmJhbm5lci5zaXplc1swXVswXSxlLnBhcmFtcy5oZWlnaHQ9ZS5tZWRpYVR5cGVzLmJhbm5lci5zaXplc1swXVsxXSxlLm1lZGlhVHlwZXMuYmFubmVyLnNpemVzPWUubWVkaWFUeXBlcy5iYW5uZXIuc2l6ZXMuc3BsaWNlKDEsZS5tZWRpYVR5cGVzLmJhbm5lci5zaXplcy5sZW5ndGgtMSkpfX1mdW5jdGlvbiBmKGUpe3ZhciByLGE9ZS5wYXJhbXMudmlkZW87aWYoYSE9PXgpe2Zvcih2YXIgdCBpbiByPXt9LG8pYS5oYXNPd25Qcm9wZXJ0eSh0KSYmKHJbdF09ZnVuY3Rpb24oZSxyLGEpe3ZhciB0LGk9Iklnbm9yaW5nIHBhcmFtIGtleTogIitlKyIsIGV4cGVjdHMgIithKyIsIGZvdW5kICIrRChyKTtzd2l0Y2goYSl7Y2FzZSBuLkJPT0xFQU46dD1PLmlzQm9vbGVhbjticmVhaztjYXNlIG4uTlVNQkVSOnQ9Ty5pc051bWJlcjticmVhaztjYXNlIG4uU1RSSU5HOnQ9Ty5pc1N0cjticmVhaztjYXNlIG4uQVJSQVk6dD1PLmlzQXJyYXl9cmV0dXJuIHQocik/cjooTy5sb2dXYXJuKFkraSkseCl9KHQsYVt0XSxvW3RdKSk7Ty5pc0FycmF5KGUubWVkaWFUeXBlcy52aWRlby5wbGF5ZXJTaXplWzBdKT8oci53PXBhcnNlSW50KGUubWVkaWFUeXBlcy52aWRlby5wbGF5ZXJTaXplWzBdWzBdLDEwKSxyLmg9cGFyc2VJbnQoZS5tZWRpYVR5cGVzLnZpZGVvLnBsYXllclNpemVbMF1bMV0sMTApKTpPLmlzTnVtYmVyKGUubWVkaWFUeXBlcy52aWRlby5wbGF5ZXJTaXplWzBdKSYmKHIudz1wYXJzZUludChlLm1lZGlhVHlwZXMudmlkZW8ucGxheWVyU2l6ZVswXSwxMCksci5oPXBhcnNlSW50KGUubWVkaWFUeXBlcy52aWRlby5wbGF5ZXJTaXplWzFdLDEwKSksZS5wYXJhbXMudmlkZW8uaGFzT3duUHJvcGVydHkoInNraXBwYWJsZSIpJiYoci5leHQ9e3ZpZGVvX3NraXBwYWJsZTplLnBhcmFtcy52aWRlby5za2lwcGFibGU/MTowfSl9ZWxzZSByPXgsTy5sb2dXYXJuKFkrIkVycm9yOiBWaWRlbyBjb25maWcgcGFyYW1zIG1pc3NpbmcgZm9yIGFkdW5pdDogIitlLnBhcmFtcy5hZFVuaXQrIiB3aXRoIG1lZGlhVHlwZSBzZXQgYXMgdmlkZW8uIElnbm9yaW5nIHZpZGVvIGltcHJlc3Npb24gaW4gdGhlIGFkdW5pdC4iKTtyZXR1cm4gcn1mdW5jdGlvbiB6KGUpe3ZhciByLGEsdCxpLHM9e30sbj17fSxvPWUuaGFzT3duUHJvcGVydHkoInNpemVzIik/ZS5zaXplczpbXSxkPSIiLHA9W10scz17aWQ6ZS5iaWRJZCx0YWdpZDplLnBhcmFtcy5hZFVuaXR8fHZvaWQgMCxiaWRmbG9vcjpDKCJrYWRmbG9vciIsZS5wYXJhbXMua2FkZmxvb3IpLHNlY3VyZToxLGV4dDp7cG1ab25lSWQ6QygicG16b25laWQiLGUucGFyYW1zLnBtem9uZWlkKX0sYmlkZmxvb3JjdXI6ZS5wYXJhbXMuY3VycmVuY3k/QygiY3VycmVuY3kiLGUucGFyYW1zLmN1cnJlbmN5KTpBfTtpZih0PXMsKGk9ZSkucGFyYW1zLmRlYWxzJiYoTy5pc0FycmF5KGkucGFyYW1zLmRlYWxzKT9pLnBhcmFtcy5kZWFscy5mb3JFYWNoKGZ1bmN0aW9uKGUpe08uaXNTdHIoZSkmJjM8ZS5sZW5ndGg/KHQucG1wfHwodC5wbXA9e3ByaXZhdGVfYXVjdGlvbjowLGRlYWxzOltdfSksdC5wbXAuZGVhbHMucHVzaCh7aWQ6ZX0pKTpPLmxvZ1dhcm4oWSsiRXJyb3I6IGRlYWwtaWQgcHJlc2VudCBpbiBhcnJheSBiaWQucGFyYW1zLmRlYWxzIHNob3VsZCBiZSBhIHN0cmluZ3Mgd2l0aCBtb3JlIHRoYW4gMyBjaGFyYXRlcnMgbGVuZ3RoLCBkZWFsLWlkIGlnbm9yZWQ6ICIrZSl9KTpPLmxvZ1dhcm4oWSsiRXJyb3I6IGJpZC5wYXJhbXMuZGVhbHMgc2hvdWxkIGJlIGFuIGFycmF5IG9mIHN0cmluZ3MuIikpLGUuaGFzT3duUHJvcGVydHkoIm1lZGlhVHlwZXMiKSlmb3IoZCBpbiBlLm1lZGlhVHlwZXMpc3dpdGNoKGQpe2Nhc2UgUy5iOihyPWZ1bmN0aW9uKGUpe3ZhciByLGE9ZS5tZWRpYVR5cGVzLmJhbm5lci5zaXplcyx0PVtdO2lmKGEhPT14JiZPLmlzQXJyYXkoYSkpe2lmKHI9e30sZS5wYXJhbXMud2lkdGh8fGUucGFyYW1zLmhlaWdodClyLnc9ZS5wYXJhbXMud2lkdGgsci5oPWUucGFyYW1zLmhlaWdodDtlbHNle2lmKDA9PT1hLmxlbmd0aClyZXR1cm4gcj14LE8ubG9nV2FybihZKyJFcnJvcjogbWVkaWFUeXBlcy5iYW5uZXIuc2l6ZSBtaXNzaW5nIGZvciBhZHVuaXQ6ICIrZS5wYXJhbXMuYWRVbml0KyIuIElnbm9yaW5nIHRoZSBiYW5uZXIgaW1wcmVzc2lvbiBpbiB0aGUgYWR1bml0LiIpLHI7ci53PXBhcnNlSW50KGFbMF1bMF0sMTApLHIuaD1wYXJzZUludChhWzBdWzFdLDEwKSxhPWEuc3BsaWNlKDEsYS5sZW5ndGgtMSl9MDxhLmxlbmd0aCYmKHQ9W10sYS5mb3JFYWNoKGZ1bmN0aW9uKGUpezE8ZS5sZW5ndGgmJnQucHVzaCh7dzplWzBdLGg6ZVsxXX0pfSksMDx0Lmxlbmd0aCYmKHIuZm9ybWF0PXQpKSxyLnBvcz0wLHIudG9wZnJhbWU9Ty5pbklmcmFtZSgpPzA6MX1lbHNlIE8ubG9nV2FybihZKyJFcnJvcjogbWVkaWFUeXBlcy5iYW5uZXIuc2l6ZSBtaXNzaW5nIGZvciBhZHVuaXQ6ICIrZS5wYXJhbXMuYWRVbml0KyIuIElnbm9yaW5nIHRoZSBiYW5uZXIgaW1wcmVzc2lvbiBpbiB0aGUgYWR1bml0LiIpLHI9eDtyZXR1cm4gcn0oZSkpIT09eCYmKHMuYmFubmVyPXIpO2JyZWFrO2Nhc2UgUy5jOm4ucmVxdWVzdD1KU09OLnN0cmluZ2lmeShmdW5jdGlvbihlKXt2YXIgcixhLHQsaT17YXNzZXRzOltdfTtmb3IodmFyIHMgaW4gZSl7aWYoZS5oYXNPd25Qcm9wZXJ0eShzKSl7dmFyIG49e307aWYoIShpLmFzc2V0cyYmMDxpLmFzc2V0cy5sZW5ndGgmJmkuYXNzZXRzLmhhc093blByb3BlcnR5KHMpKSlzd2l0Y2gocyl7Y2FzZSBjLlRJVExFLktFWTplW3NdLmxlbnx8ZVtzXS5sZW5ndGg/bj17aWQ6Yy5USVRMRS5JRCxyZXF1aXJlZDplW3NdLnJlcXVpcmVkPzE6MCx0aXRsZTp7bGVuOmVbc10ubGVufHxlW3NdLmxlbmd0aCxleHQ6ZVtzXS5leHR9fTpPLmxvZ1dhcm4oWSsiRXJyb3I6IFRpdGxlIExlbmd0aCBpcyByZXF1aXJlZCBmb3IgbmF0aXZlIGFkOiAiK0pTT04uc3RyaW5naWZ5KGUpKTticmVhaztjYXNlIGMuSU1BR0UuS0VZOmVbc10uc2l6ZXMmJjA8ZVtzXS5zaXplcy5sZW5ndGg/bj17aWQ6Yy5JTUFHRS5JRCxyZXF1aXJlZDplW3NdLnJlcXVpcmVkPzE6MCxpbWc6e3R5cGU6bC5JTUFHRSx3OmVbc10ud3x8ZVtzXS53aWR0aHx8KGVbc10uc2l6ZXM/ZVtzXS5zaXplc1swXTp4KSxoOmVbc10uaHx8ZVtzXS5oZWlnaHR8fChlW3NdLnNpemVzP2Vbc10uc2l6ZXNbMV06eCksd21pbjplW3NdLndtaW58fGVbc10ubWluaW11bVdpZHRofHwoZVtzXS5taW5zaXplcz9lW3NdLm1pbnNpemVzWzBdOngpLGhtaW46ZVtzXS5obWlufHxlW3NdLm1pbmltdW1IZWlnaHR8fChlW3NdLm1pbnNpemVzP2Vbc10ubWluc2l6ZXNbMV06eCksbWltZXM6ZVtzXS5taW1lcyxleHQ6ZVtzXS5leHR9fTpPLmxvZ1dhcm4oWSsiRXJyb3I6IEltYWdlIHNpemVzIGlzIHJlcXVpcmVkIGZvciBuYXRpdmUgYWQ6ICIrSlNPTi5zdHJpbmdpZnkoZSkpO2JyZWFrO2Nhc2UgYy5JQ09OLktFWTplW3NdLnNpemVzJiYwPGVbc10uc2l6ZXMubGVuZ3RoP249e2lkOmMuSUNPTi5JRCxyZXF1aXJlZDplW3NdLnJlcXVpcmVkPzE6MCxpbWc6e3R5cGU6bC5JQ09OLHc6ZVtzXS53fHxlW3NdLndpZHRofHwoZVtzXS5zaXplcz9lW3NdLnNpemVzWzBdOngpLGg6ZVtzXS5ofHxlW3NdLmhlaWdodHx8KGVbc10uc2l6ZXM/ZVtzXS5zaXplc1sxXTp4KX19Ok8ubG9nV2FybihZKyJFcnJvcjogSWNvbiBzaXplcyBpcyByZXF1aXJlZCBmb3IgbmF0aXZlIGFkOiAiK0pTT04uc3RyaW5naWZ5KGUpKTticmVhaztjYXNlIGMuVklERU8uS0VZOm49e2lkOmMuVklERU8uSUQscmVxdWlyZWQ6ZVtzXS5yZXF1aXJlZD8xOjAsdmlkZW86e21pbmR1cmF0aW9uOmVbc10ubWluZHVyYXRpb24sbWF4ZHVyYXRpb246ZVtzXS5tYXhkdXJhdGlvbixwcm90b2NvbHM6ZVtzXS5wcm90b2NvbHMsbWltZXM6ZVtzXS5taW1lcyxleHQ6ZVtzXS5leHR9fTticmVhaztjYXNlIGMuRVhULktFWTpuPXtpZDpjLkVYVC5JRCxyZXF1aXJlZDplW3NdLnJlcXVpcmVkPzE6MH07YnJlYWs7Y2FzZSBjLkxPR08uS0VZOm49e2lkOmMuTE9HTy5JRCxyZXF1aXJlZDplW3NdLnJlcXVpcmVkPzE6MCxpbWc6e3R5cGU6bC5MT0dPLHc6ZVtzXS53fHxlW3NdLndpZHRofHwoZVtzXS5zaXplcz9lW3NdLnNpemVzWzBdOngpLGg6ZVtzXS5ofHxlW3NdLmhlaWdodHx8KGVbc10uc2l6ZXM/ZVtzXS5zaXplc1sxXTp4KX19O2JyZWFrO2Nhc2UgYy5TUE9OU09SRURCWS5LRVk6Y2FzZSBjLkJPRFkuS0VZOmNhc2UgYy5SQVRJTkcuS0VZOmNhc2UgYy5MSUtFUy5LRVk6Y2FzZSBjLkRPV05MT0FEUy5LRVk6Y2FzZSBjLlBSSUNFLktFWTpjYXNlIGMuU0FMRVBSSUNFLktFWTpjYXNlIGMuUEhPTkUuS0VZOmNhc2UgYy5BRERSRVNTLktFWTpjYXNlIGMuREVTQzIuS0VZOmNhc2UgYy5ESVNQTEFZVVJMLktFWTpjYXNlIGMuQ1RBLktFWTpyPWhbc10sYT1lLHQ9dm9pZCAwLHQ9ci5LRVksbj17aWQ6ci5JRCxyZXF1aXJlZDphW3RdLnJlcXVpcmVkPzE6MCxkYXRhOnt0eXBlOnIuVFlQRSxsZW46YVt0XS5sZW4sZXh0OmFbdF0uZXh0fX19fW4mJm4uaWQmJihpLmFzc2V0c1tpLmFzc2V0cy5sZW5ndGhdPW4pfXZhciBvPXUubGVuZ3RoLGQ9MDtyZXR1cm4gdS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2Zvcih2YXIgcj1pLmFzc2V0cy5sZW5ndGgsYT0wO2E8cjthKyspaWYoZS5pZD09aS5hc3NldHNbYV0uaWQpe2QrKzticmVha319KSxtPW8hPWQsaX0oZS5uYXRpdmVQYXJhbXMpKSxtP08ubG9nV2FybihZKyJFcnJvcjogRXJyb3IgaW4gTmF0aXZlIGFkdW5pdCAiK2UucGFyYW1zLmFkVW5pdCsiLiBJZ25vcmluZyB0aGUgYWR1bml0LiBSZWZlciB0byBodHRwOi8vcHJlYmlkLm9yZy9kZXYtZG9jcy9zaG93LW5hdGl2ZS1hZHMuaHRtbCBmb3IgbW9yZSBkZXRhaWxzLiIpOnMubmF0aXZlPW47YnJlYWs7Y2FzZSBTLmQ6KGE9ZihlKSkhPT14JiYocy52aWRlbz1hKX1lbHNlIHI9e3BvczowLHc6ZS5wYXJhbXMud2lkdGgsaDplLnBhcmFtcy5oZWlnaHQsdG9wZnJhbWU6Ty5pbklmcmFtZSgpPzA6MX0sTy5pc0FycmF5KG8pJiYxPG8ubGVuZ3RoJiYoKG89by5zcGxpY2UoMSxvLmxlbmd0aC0xKSkuZm9yRWFjaChmdW5jdGlvbihlKXtwLnB1c2goe3c6ZVswXSxoOmVbMV19KX0pLHIuZm9ybWF0PXApLHMuYmFubmVyPXI7cmV0dXJuIGZ1bmN0aW9uKHQsaSl7dmFyIHM9LTE7ImZ1bmN0aW9uIiE9dHlwZW9mIGkuZ2V0Rmxvb3J8fFIuYi5nZXRDb25maWcoInB1Ym1hdGljLmRpc2FibGVGbG9vcnMiKXx8W1MuYixTLmQsUy5jXS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciByLGE7dC5oYXNPd25Qcm9wZXJ0eShlKSYmKCJvYmplY3QiIT09RChyPWkuZ2V0Rmxvb3Ioe2N1cnJlbmN5OnQuYmlkZmxvb3JjdXIsbWVkaWFUeXBlOmUsc2l6ZToiKiJ9KSl8fHIuY3VycmVuY3khPT10LmJpZGZsb29yY3VyfHxpc05hTihwYXJzZUludChyLmZsb29yKSl8fChhPXBhcnNlRmxvYXQoci5mbG9vcikscz0tMT09cz9hOk1hdGgubWluKGEscykpKX0pO3QuYmlkZmxvb3ImJihzPU1hdGgubWF4KHMsdC5iaWRmbG9vcikpO3QuYmlkZmxvb3I9IWlzTmFOKHMpJiYwPHM/czp4fShzLGUpLHMuaGFzT3duUHJvcGVydHkoUy5iKXx8cy5oYXNPd25Qcm9wZXJ0eShTLmMpfHxzLmhhc093blByb3BlcnR5KFMuZCk/czp4fU8uX2VhY2goYyxmdW5jdGlvbihlKXtnW2UuSURdPWUuS0VZfSksTy5fZWFjaChjLGZ1bmN0aW9uKGUpe2hbZS5LRVldPWV9KTt2YXIgYj17Y29kZToicHVibWF0aWMiLGd2bGlkOjc2LHN1cHBvcnRlZE1lZGlhVHlwZXM6W1MuYixTLmQsUy5jXSxpc0JpZFJlcXVlc3RWYWxpZDpmdW5jdGlvbihlKXtpZihlJiZlLnBhcmFtcyl7aWYoIU8uaXNTdHIoZS5wYXJhbXMucHVibGlzaGVySWQpKXJldHVybiBPLmxvZ1dhcm4oWSsiRXJyb3I6IHB1Ymxpc2hlcklkIGlzIG1hbmRhdG9yeSBhbmQgY2Fubm90IGJlIG51bWVyaWMgKHdyYXAgaXQgaW4gcXVvdGVzIGluIHlvdXIgY29uZmlnKS4gQ2FsbCB0byBPcGVuQmlkIHdpbGwgbm90IGJlIHNlbnQgZm9yIGFkIHVuaXQ6ICIrSlNPTi5zdHJpbmdpZnkoZSkpLCExO2lmKGUucGFyYW1zLmhhc093blByb3BlcnR5KCJ2aWRlbyIpKXtpZighZS5wYXJhbXMudmlkZW8uaGFzT3duUHJvcGVydHkoIm1pbWVzIil8fCFPLmlzQXJyYXkoZS5wYXJhbXMudmlkZW8ubWltZXMpfHwwPT09ZS5wYXJhbXMudmlkZW8ubWltZXMubGVuZ3RoKXJldHVybiBPLmxvZ1dhcm4oWSsiRXJyb3I6IEZvciB2aWRlbyBhZHMsIG1pbWVzIGlzIG1hbmRhdG9yeSBhbmQgbXVzdCBzcGVjaWZ5IGF0bGVhc2UgMSBtaW1lIHZhbHVlLiBDYWxsIHRvIE9wZW5CaWQgd2lsbCBub3QgYmUgc2VudCBmb3IgYWQgdW5pdDoiK0pTT04uc3RyaW5naWZ5KGUpKSwhMTtpZighZS5oYXNPd25Qcm9wZXJ0eSgibWVkaWFUeXBlcyIpfHwhZS5tZWRpYVR5cGVzLmhhc093blByb3BlcnR5KFMuZCkpcmV0dXJuIE8ubG9nRXJyb3IoIiIuY29uY2F0KFksIjogbWVkaWFUeXBlcyBvciBtZWRpYVR5cGVzLnZpZGVvIGlzIG5vdCBzcGVjaWZpZWQuIFJlamVjdGluZyBiaWQ6ICIpLGUpLCExO2lmKCFlLm1lZGlhVHlwZXNbUy5kXS5oYXNPd25Qcm9wZXJ0eSgiY29udGV4dCIpKXJldHVybiBPLmxvZ0Vycm9yKCIiLmNvbmNhdChZLCI6IG5vIGNvbnRleHQgc3BlY2lmaWVkIGluIGJpZC4gUmVqZWN0aW5nIGJpZDogIiksZSksITE7aWYoIm91dHN0cmVhbSI9PT1lLm1lZGlhVHlwZXNbUy5kXS5jb250ZXh0JiYhTy5pc1N0cihlLnBhcmFtcy5vdXRzdHJlYW1BVSkpcmV0dXJuIE8ubG9nRXJyb3IoIiIuY29uY2F0KFksJzogZm9yICJvdXRzdHJlYW0iIGJpZHMgb3V0c3RyZWFtQVUgaXMgcmVxdWlyZWQuIFJlamVjdGluZyBiaWQ6ICcpLGUpLCExfXJldHVybiEwfXJldHVybiExfSxidWlsZFJlcXVlc3RzOmZ1bmN0aW9uKGUscil7dmFyIGE7ciYmci5yZWZlcmVySW5mbyYmKGE9ci5yZWZlcmVySW5mbyk7dmFyIHQsaSxzLG4sbyxkLHAsYyxsLHUsbSxnLGgsZixiLHksdj17cGFnZVVSTDoodD1hKSYmdC5yZWZlcmVyP3QucmVmZXJlcjp3aW5kb3cubG9jYXRpb24uaHJlZixyZWZVUkw6d2luZG93LmRvY3VtZW50LnJlZmVycmVyfSxFPShpPXYse2lkOiIiKyhuZXcgRGF0ZSkuZ2V0VGltZSgpLGF0OjEsY3VyOltBXSxpbXA6W10sc2l0ZTp7cGFnZTppLnBhZ2VVUkwscmVmOmkucmVmVVJMLHB1Ymxpc2hlcjp7fX0sZGV2aWNlOnt1YTpuYXZpZ2F0b3IudXNlckFnZW50LGpzOjEsZG50OiJ5ZXMiPT1uYXZpZ2F0b3IuZG9Ob3RUcmFja3x8IjEiPT1uYXZpZ2F0b3IuZG9Ob3RUcmFja3x8IjEiPT1uYXZpZ2F0b3IubXNEb05vdFRyYWNrPzE6MCxoOnNjcmVlbi5oZWlnaHQsdzpzY3JlZW4ud2lkdGgsbGFuZ3VhZ2U6bmF2aWdhdG9yLmxhbmd1YWdlfSx1c2VyOnt9LGV4dDp7fX0pLEk9IiIsdz1bXSxUPVtdO2lmKGUuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgcjsocz1PLmRlZXBDbG9uZShlKSkucGFyYW1zLmFkU2xvdD1zLnBhcmFtcy5hZFNsb3R8fCIiLFUocykscy5wYXJhbXMuaGFzT3duUHJvcGVydHkoInZpZGVvIil8fHMuaGFzT3duUHJvcGVydHkoIm1lZGlhVHlwZXMiKSYmcy5tZWRpYVR5cGVzLmhhc093blByb3BlcnR5KFMuYyl8fDAhPT1zLnBhcmFtcy53aWR0aHx8MCE9PXMucGFyYW1zLmhlaWdodD8odi5wdWJJZD12LnB1YklkfHxzLnBhcmFtcy5wdWJsaXNoZXJJZCwodj1mdW5jdGlvbihlLHIpe3ZhciBhLHQsaTtmb3IoYSBpbiByLmthZHBhZ2V1cmx8fChyLmthZHBhZ2V1cmw9ci5wYWdlVVJMKSxOKU4uaGFzT3duUHJvcGVydHkoYSkmJih0PWVbYV0pJiYoIm9iamVjdCI9PT1EKGk9TlthXSkmJih0PWkuZih0LHIpKSxPLmlzU3RyKHQpP3JbYV09dDpPLmxvZ1dhcm4oWSsiSWdub3JpbmcgcGFyYW0gOiAiK2ErIiB3aXRoIHZhbHVlIDogIitOW2FdKyIsIGV4cGVjdHMgc3RyaW5nLXZhbHVlLCBmb3VuZCAiK0QodCkpKTtyZXR1cm4gcn0ocy5wYXJhbXMsdikpLnRyYW5zYWN0aW9uSWQ9cy50cmFuc2FjdGlvbklkLCIiPT09ST9JPXMucGFyYW1zLmN1cnJlbmN5fHx4OnMucGFyYW1zLmhhc093blByb3BlcnR5KCJjdXJyZW5jeSIpJiZJIT09cy5wYXJhbXMuY3VycmVuY3kmJk8ubG9nV2FybihZKyJDdXJyZW5jeSBzcGVjaWZpZXIgaWdub3JlZC4gT25seSBvbmUgY3VycmVuY3kgcGVybWl0dGVkLiIpLHMucGFyYW1zLmN1cnJlbmN5PUkscy5wYXJhbXMuaGFzT3duUHJvcGVydHkoImRjdHIiKSYmTy5pc1N0cihzLnBhcmFtcy5kY3RyKSYmdy5wdXNoKHMucGFyYW1zLmRjdHIpLHMucGFyYW1zLmhhc093blByb3BlcnR5KCJiY2F0IikmJk8uaXNBcnJheShzLnBhcmFtcy5iY2F0KSYmKFQ9VC5jb25jYXQocy5wYXJhbXMuYmNhdCkpLChyPXoocykpJiZFLmltcC5wdXNoKHIpKTpPLmxvZ1dhcm4oWSsiU2tpcHBpbmcgdGhlIG5vbi1zdGFuZGFyZCBhZHNsb3Q6ICIscy5wYXJhbXMuYWRTbG90LEpTT04uc3RyaW5naWZ5KHMpKX0pLDAhPUUuaW1wLmxlbmd0aClyZXR1cm4gRS5zaXRlLnB1Ymxpc2hlci5pZD12LnB1YklkLnRyaW0oKSxrPXYucHViSWQudHJpbSgpLEUuZXh0LndyYXBwZXI9e30sRS5leHQud3JhcHBlci5wcm9maWxlPXBhcnNlSW50KHYucHJvZklkKXx8eCxFLmV4dC53cmFwcGVyLnZlcnNpb249cGFyc2VJbnQodi52ZXJJZCl8fHgsRS5leHQud3JhcHBlci53aWlkPXYud2lpZHx8ci5hdWN0aW9uSWQsRS5leHQud3JhcHBlci53dj0icHJlYmlkX3ByZWJpZF80LjE3LjAiLEUuZXh0LndyYXBwZXIudHJhbnNhY3Rpb25JZD12LnRyYW5zYWN0aW9uSWQsRS5leHQud3JhcHBlci53cD0icGJqcyIsRS51c2VyLmdlbmRlcj12LmdlbmRlcj92LmdlbmRlci50cmltKCk6eCxFLnVzZXIuZ2VvPXt9LEUudXNlci5nZW8ubGF0PUMoImxhdCIsdi5sYXQpLEUudXNlci5nZW8ubG9uPUMoImxvbiIsdi5sb24pLEUudXNlci55b2I9QygieW9iIix2LnlvYiksRS5kZXZpY2UuZ2VvPUUudXNlci5nZW8sRS5zaXRlLnBhZ2U9di5rYWRwYWdldXJsLnRyaW0oKXx8RS5zaXRlLnBhZ2UudHJpbSgpLEUuc2l0ZS5kb21haW49KG49RS5zaXRlLnBhZ2UsKG89ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYSIpKS5ocmVmPW4sby5ob3N0bmFtZSksIm9iamVjdCI9PT1EKFIuYi5nZXRDb25maWcoImNvbnRlbnQiKSkmJihFLnNpdGUuY29udGVudD1SLmIuZ2V0Q29uZmlnKCJjb250ZW50IikpLCJvYmplY3QiPT09RChSLmIuZ2V0Q29uZmlnKCJkZXZpY2UiKSkmJihFLmRldmljZT1QKEUuZGV2aWNlLFIuYi5nZXRDb25maWcoImRldmljZSIpKSksTy5kZWVwU2V0VmFsdWUoRSwic291cmNlLnRpZCIsdi50cmFuc2FjdGlvbklkKSwtMSE9PXdpbmRvdy5sb2NhdGlvbi5ocmVmLmluZGV4T2YoInB1Ym1hdGljVGVzdD10cnVlIikmJihFLnRlc3Q9MSksZVswXS5zY2hhaW4mJk8uZGVlcFNldFZhbHVlKEUsInNvdXJjZS5leHQuc2NoYWluIixlWzBdLnNjaGFpbiksciYmci5nZHByQ29uc2VudCYmKE8uZGVlcFNldFZhbHVlKEUsInVzZXIuZXh0LmNvbnNlbnQiLHIuZ2RwckNvbnNlbnQuY29uc2VudFN0cmluZyksTy5kZWVwU2V0VmFsdWUoRSwicmVncy5leHQuZ2RwciIsci5nZHByQ29uc2VudC5nZHByQXBwbGllcz8xOjApKSxyJiZyLnVzcENvbnNlbnQmJk8uZGVlcFNldFZhbHVlKEUsInJlZ3MuZXh0LnVzX3ByaXZhY3kiLHIudXNwQ29uc2VudCksITA9PT1SLmIuZ2V0Q29uZmlnKCJjb3BwYSIpJiZPLmRlZXBTZXRWYWx1ZShFLCJyZWdzLmNvcHBhIiwxKSxkPUUsYz1lLG09IiIsMDwocD13KS5sZW5ndGgmJihjWzBdLnBhcmFtcy5oYXNPd25Qcm9wZXJ0eSgiZGN0ciIpPyhtPWNbMF0ucGFyYW1zLmRjdHIsTy5pc1N0cihtKSYmMDxtLmxlbmd0aD8odT1tLnNwbGl0KCJ8IiksbT0iIix1LmZvckVhY2goZnVuY3Rpb24oZSl7bSs9MDxlLmxlbmd0aD9lLnRyaW0oKSsifCI6IiJ9KSxsPW0ubGVuZ3RoLCJ8Ij09PW0uc3Vic3RyaW5nKGwsbC0xKSYmKG09bS5zdWJzdHJpbmcoMCxsLTEpKSxkLnNpdGUuZXh0PXtrZXlfdmFsOm0udHJpbSgpfSk6Ty5sb2dXYXJuKFkrIklnbm9yaW5nIHBhcmFtIDogZGN0ciB3aXRoIHZhbHVlIDogIittKyIsIGV4cGVjdHMgc3RyaW5nLXZhbHVlLCBmb3VuZCBlbXB0eSBvciBub24tc3RyaW5nIHZhbHVlIiksMTxwLmxlbmd0aCYmTy5sb2dXYXJuKFkrImRjdHIgdmFsdWUgZm91bmQgaW4gbW9yZSB0aGFuIDEgYWR1bml0cy4gVmFsdWUgZnJvbSAxc3QgYWR1bml0IHdpbGwgYmUgcGlja2VkLiBJZ25vcmluZyB2YWx1ZXMgZnJvbSBzdWJzZXF1ZW50IGFkdW5pdHMiKSk6Ty5sb2dXYXJuKFkrImRjdHIgdmFsdWUgbm90IGZvdW5kIGluIDFzdCBhZHVuaXQsIGlnbm9yaW5nIHZhbHVlcyBmcm9tIHN1YnNlcXVlbnQgYWR1bml0cyIpKSxnPUUsaD1lLGY9Ty5kZWVwQWNjZXNzKGgsIjAudXNlcklkQXNFaWRzIiksTy5pc0FycmF5KGYpJiYwPGYubGVuZ3RoJiZPLmRlZXBTZXRWYWx1ZShnLCJ1c2VyLmVpZHMiLGYpLGI9RSwwPCh5PSh5PVQpLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4ic3RyaW5nIj09dHlwZW9mIGV8fChPLmxvZ1dhcm4oWSsiYmNhdDogRWFjaCBjYXRlZ29yeSBzaG91bGQgYmUgYSBzdHJpbmcsIGlnbm9yaW5nIGNhdGVnb3J5OiAiK2UpLCExKX0pLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZS50cmltKCl9KS5maWx0ZXIoZnVuY3Rpb24oZSxyLGEpe3JldHVybiAzPGUubGVuZ3RoP2EuaW5kZXhPZihlKT09PXI6dm9pZCBPLmxvZ1dhcm4oWSsiYmNhdDogRWFjaCBjYXRlZ29yeSBzaG91bGQgaGF2ZSBhIHZhbHVlIG9mIGEgbGVuZ3RoIG9mIG1vcmUgdGhhbiAzIGNoYXJhY3RlcnMsIGlnbm9yaW5nIGNhdGVnb3J5OiAiK2UpfSkpLmxlbmd0aCYmKE8ubG9nV2FybihZKyJiY2F0OiBTZWxlY3RlZDogIix5KSxiLmJjYXQ9eSksIm9iamVjdCI9PT1EKFIuYi5nZXRDb25maWcoImFwcCIpKSYmKEUuYXBwPVIuYi5nZXRDb25maWcoImFwcCIpLEUuYXBwLnB1Ymxpc2hlcj1FLnNpdGUucHVibGlzaGVyLEUuYXBwLmV4dD1FLnNpdGUuZXh0fHx4LCJvYmplY3QiIT09RChFLmFwcC5jb250ZW50KSYmKEUuYXBwLmNvbnRlbnQ9RS5zaXRlLmNvbnRlbnR8fHgpLGRlbGV0ZSBFLnNpdGUpLHttZXRob2Q6IlBPU1QiLHVybDoiaHR0cHM6Ly9oYm9wZW5iaWQucHVibWF0aWMuY29tL3RyYW5zbGF0b3I/c291cmNlPXByZWJpZC1jbGllbnQiLGRhdGE6SlNPTi5zdHJpbmdpZnkoRSksYmlkZGVyUmVxdWVzdDpyfX0saW50ZXJwcmV0UmVzcG9uc2U6ZnVuY3Rpb24oZSx0KXt2YXIgaT1bXSxzPUEsbj1KU09OLnBhcnNlKHQuZGF0YSksbz1uLnNpdGUmJm4uc2l0ZS5yZWY/bi5zaXRlLnJlZjoiIjt0cnl7ZS5ib2R5JiZlLmJvZHkuc2VhdGJpZCYmTy5pc0FycmF5KGUuYm9keS5zZWF0YmlkKSYmKHM9ZS5ib2R5LmN1cnx8cyxlLmJvZHkuc2VhdGJpZC5mb3JFYWNoKGZ1bmN0aW9uKGUpe2UuYmlkJiZPLmlzQXJyYXkoZS5iaWQpJiZlLmJpZC5mb3JFYWNoKGZ1bmN0aW9uKHIpe3ZhciBhPXtyZXF1ZXN0SWQ6ci5pbXBpZCxjcG06KHBhcnNlRmxvYXQoci5wcmljZSl8fDApLnRvRml4ZWQoMiksd2lkdGg6ci53LGhlaWdodDpyLmgsY3JlYXRpdmVJZDpyLmNyaWQsZGVhbElkOnIuZGVhbGlkLGN1cnJlbmN5OnMsbmV0UmV2ZW51ZTohMSx0dGw6MzAwLHJlZmVycmVyOm8sYWQ6ci5hZG0scG1fc2VhdDplLnNlYXR8fG51bGwscG1fZHNwaWQ6ci5leHQmJnIuZXh0LmRzcGlkP3IuZXh0LmRzcGlkOm51bGwscGFydG5lckltcElkOnIuaWR8fCIifTtuLmltcCYmMDxuLmltcC5sZW5ndGgmJm4uaW1wLmZvckVhY2goZnVuY3Rpb24oZSl7aWYoci5pbXBpZD09PWUuaWQpc3dpdGNoKCFmdW5jdGlvbihyLGUpe3ZhciBhLHQ9bmV3IFJlZ0V4cCgvVkFTVFxzK3ZlcnNpb24vKTtpZigwPD1yLmluZGV4T2YoJ3NwYW4gY2xhc3M9IlB1YkFQSUFkIicpKWUubWVkaWFUeXBlPVMuYjtlbHNlIGlmKHQudGVzdChyKSllLm1lZGlhVHlwZT1TLmQ7ZWxzZSB0cnl7KGE9SlNPTi5wYXJzZShyLnJlcGxhY2UoL1xcL2csIiIpKSkmJmEubmF0aXZlJiYoZS5tZWRpYVR5cGU9Uy5jKX1jYXRjaChlKXtPLmxvZ1dhcm4oWSsiRXJyb3I6IENhbm5vdCBwYXJzZSBuYXRpdmUgcmVwb25zZSBmb3IgYWQgcmVzcG9uc2U6ICIrcil9fShyLmFkbSxhKSxhLm1lZGlhVHlwZSl7Y2FzZSBTLmI6YnJlYWs7Y2FzZSBTLmQ6YS53aWR0aD1yLmhhc093blByb3BlcnR5KCJ3Iik/ci53OmUudmlkZW8udyxhLmhlaWdodD1yLmhhc093blByb3BlcnR5KCJoIik/ci5oOmUudmlkZW8uaCxhLnZhc3RYbWw9ci5hZG0sZnVuY3Rpb24oZSxyKXt2YXIgYSx0LGk7aWYoci5iaWRkZXJSZXF1ZXN0JiZyLmJpZGRlclJlcXVlc3QuYmlkcyl7Zm9yKHZhciBzPTA7czxyLmJpZGRlclJlcXVlc3QuYmlkcy5sZW5ndGg7cysrKXIuYmlkZGVyUmVxdWVzdC5iaWRzW3NdLmJpZElkPT09ZS5yZXF1ZXN0SWQmJihhPXIuYmlkZGVyUmVxdWVzdC5iaWRzW3NdLnBhcmFtcyx0PXIuYmlkZGVyUmVxdWVzdC5iaWRzW3NdLm1lZGlhVHlwZXNbUy5kXS5jb250ZXh0LGk9ci5iaWRkZXJSZXF1ZXN0LmJpZHNbc10uYWRVbml0Q29kZSk7dCYmIm91dHN0cmVhbSI9PT10JiZhJiZhLm91dHN0cmVhbUFVJiZpJiYoZS5yZW5kZXJlckNvZGU9YS5vdXRzdHJlYW1BVSxlLnJlbmRlcmVyPXAubmV3UmVuZGVyZXIoZS5yZW5kZXJlckNvZGUsaSkpfX0oYSx0KTticmVhaztjYXNlIFMuYzohZnVuY3Rpb24oZSxyKXtpZihyLm5hdGl2ZT17fSxlLmhhc093blByb3BlcnR5KCJhZG0iKSl7dmFyIGE9IiI7dHJ5e2E9SlNPTi5wYXJzZShlLmFkbS5yZXBsYWNlKC9cXC9nLCIiKSl9Y2F0Y2goZSl7cmV0dXJuIE8ubG9nV2FybihZKyJFcnJvcjogQ2Fubm90IHBhcnNlIG5hdGl2ZSByZXBvbnNlIGZvciBhZCByZXNwb25zZTogIityLmFkbSl9aWYoYSYmYS5uYXRpdmUmJmEubmF0aXZlLmFzc2V0cyYmMDxhLm5hdGl2ZS5hc3NldHMubGVuZ3RoKXtyLm1lZGlhVHlwZT1TLmM7Zm9yKHZhciB0PTAsaT1hLm5hdGl2ZS5hc3NldHMubGVuZ3RoO3Q8aTt0Kyspc3dpdGNoKGEubmF0aXZlLmFzc2V0c1t0XS5pZCl7Y2FzZSBjLlRJVExFLklEOnIubmF0aXZlLnRpdGxlPWEubmF0aXZlLmFzc2V0c1t0XS50aXRsZSYmYS5uYXRpdmUuYXNzZXRzW3RdLnRpdGxlLnRleHQ7YnJlYWs7Y2FzZSBjLklNQUdFLklEOnIubmF0aXZlLmltYWdlPXt1cmw6YS5uYXRpdmUuYXNzZXRzW3RdLmltZyYmYS5uYXRpdmUuYXNzZXRzW3RdLmltZy51cmwsaGVpZ2h0OmEubmF0aXZlLmFzc2V0c1t0XS5pbWcmJmEubmF0aXZlLmFzc2V0c1t0XS5pbWcuaCx3aWR0aDphLm5hdGl2ZS5hc3NldHNbdF0uaW1nJiZhLm5hdGl2ZS5hc3NldHNbdF0uaW1nLnd9O2JyZWFrO2Nhc2UgYy5JQ09OLklEOnIubmF0aXZlLmljb249e3VybDphLm5hdGl2ZS5hc3NldHNbdF0uaW1nJiZhLm5hdGl2ZS5hc3NldHNbdF0uaW1nLnVybCxoZWlnaHQ6YS5uYXRpdmUuYXNzZXRzW3RdLmltZyYmYS5uYXRpdmUuYXNzZXRzW3RdLmltZy5oLHdpZHRoOmEubmF0aXZlLmFzc2V0c1t0XS5pbWcmJmEubmF0aXZlLmFzc2V0c1t0XS5pbWcud307YnJlYWs7Y2FzZSBjLlNQT05TT1JFREJZLklEOmNhc2UgYy5CT0RZLklEOmNhc2UgYy5MSUtFUy5JRDpjYXNlIGMuRE9XTkxPQURTLklEOmNhc2UgYy5QUklDRTpjYXNlIGMuU0FMRVBSSUNFLklEOmNhc2UgYy5QSE9ORS5JRDpjYXNlIGMuQUREUkVTUy5JRDpjYXNlIGMuREVTQzIuSUQ6Y2FzZSBjLkNUQS5JRDpjYXNlIGMuUkFUSU5HLklEOmNhc2UgYy5ESVNQTEFZVVJMLklEOnIubmF0aXZlW2dbYS5uYXRpdmUuYXNzZXRzW3RdLmlkXV09YS5uYXRpdmUuYXNzZXRzW3RdLmRhdGEmJmEubmF0aXZlLmFzc2V0c1t0XS5kYXRhLnZhbHVlfXIubmF0aXZlLmNsaWNrVXJsPWEubmF0aXZlLmxpbmsmJmEubmF0aXZlLmxpbmsudXJsLHIubmF0aXZlLmNsaWNrVHJhY2tlcnM9YS5uYXRpdmUubGluayYmYS5uYXRpdmUubGluay5jbGlja3RyYWNrZXJzfHxbXSxyLm5hdGl2ZS5pbXByZXNzaW9uVHJhY2tlcnM9YS5uYXRpdmUuaW1wdHJhY2tlcnN8fFtdLHIubmF0aXZlLmpzdHJhY2tlcj1hLm5hdGl2ZS5qc3RyYWNrZXJ8fFtdLHIud2lkdGh8fChyLndpZHRoPTApLHIuaGVpZ2h0fHwoci5oZWlnaHQ9MCl9fX0ocixhKX19KSxyLmV4dCYmci5leHQuZGVhbF9jaGFubmVsJiYoYS5kZWFsQ2hhbm5lbD1kW3IuZXh0LmRlYWxfY2hhbm5lbF18fG51bGwpLGEubWV0YT17fSxyLmV4dCYmci5leHQuZHNwaWQmJihhLm1ldGEubmV0d29ya0lkPXIuZXh0LmRzcGlkKSxyLmV4dCYmci5leHQuYWR2aWQmJihhLm1ldGEuYnV5ZXJJZD1yLmV4dC5hZHZpZCksci5hZG9tYWluJiYwPHIuYWRvbWFpbi5sZW5ndGgmJihhLm1ldGEuYWR2ZXJ0aXNlckRvbWFpbnM9ci5hZG9tYWluLGEubWV0YS5jbGlja1VybD1yLmFkb21haW5bMF0pLGUuZXh0JiZlLmV4dC5idXlpZCYmKGEuYWRzZXJ2ZXJUYXJnZXRpbmc9e2hiX2J1eWlkX3B1Ym1hdGljOmUuZXh0LmJ1eWlkfSksaS5wdXNoKGEpfSl9KSl9Y2F0Y2goZSl7Ty5sb2dFcnJvcihlKX1yZXR1cm4gaX0sZ2V0VXNlclN5bmNzOmZ1bmN0aW9uKGUscixhLHQpe3ZhciBpPSIiK2s7cmV0dXJuIGEmJihpKz0iJmdkcHI9IisoYS5nZHByQXBwbGllcz8xOjApLGkrPSImZ2Rwcl9jb25zZW50PSIrZW5jb2RlVVJJQ29tcG9uZW50KGEuY29uc2VudFN0cmluZ3x8IiIpKSx0JiYoaSs9IiZ1c19wcml2YWN5PSIrZW5jb2RlVVJJQ29tcG9uZW50KHQpKSwhMD09PVIuYi5nZXRDb25maWcoImNvcHBhIikmJihpKz0iJmNvcHBhPTEiKSxlLmlmcmFtZUVuYWJsZWQ/W3t0eXBlOiJpZnJhbWUiLHVybDoiaHR0cHM6Ly9hZHMucHVibWF0aWMuY29tL0FkU2VydmVyL2pzL3Nob3dhZC5qcyNQSVgma2RudHVpZD0xJnA9IitpfV06W3t0eXBlOiJpbWFnZSIsdXJsOiJodHRwczovL2ltYWdlOC5wdWJtYXRpYy5jb20vQWRTZXJ2ZXIvSW1nU3luYz9wPSIraX1dfSx0cmFuc2Zvcm1CaWRQYXJhbXM6ZnVuY3Rpb24oZSl7cmV0dXJuIE8uY29udmVydFR5cGVzKHtwdWJsaXNoZXJJZDoic3RyaW5nIixhZFNsb3Q6InN0cmluZyJ9LGUpfX07T2JqZWN0KHQucmVnaXN0ZXJCaWRkZXIpKGIpfX0sWzY3MF0pOwp1cGJqc0NodW5rKFsxNTFdLHs2ODQ6ZnVuY3Rpb24oZSxyLHQpe2UuZXhwb3J0cz10KDY4NSl9LDY4NTpmdW5jdGlvbihlLHIsdCl7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSx0LmQociwic3BlYyIsZnVuY3Rpb24oKXtyZXR1cm4gaX0pO3ZhciBjPXQoMCksbj10KDEpLHA9dCgxMSk7ZnVuY3Rpb24gYSgpe3JldHVybihhPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgcj0xO3I8YXJndW1lbnRzLmxlbmd0aDtyKyspe3ZhciB0PWFyZ3VtZW50c1tyXTtmb3IodmFyIG4gaW4gdClPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxuKSYmKGVbbl09dFtuXSl9cmV0dXJuIGV9KS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIHM9e1RJVExFX0xFTjoxMDAsREVTQ1JfTEVOOjIwMCxTUE9OU09SRURfQllfTEVOOjUwLElNR19NSU46MTUwLElDT05fTUlOOjUwfSxkPVsiY3AiLCJjdCIsImNmIiwidmlkZW8iLCJiYXR0ciIsImJjYXQiLCJiYWR2IiwiYmlkZmxvb3IiXSxpPXtjb2RlOiJwdWxzZXBvaW50IixndmxpZDo4MSxhbGlhc2VzOlsicHVsc2VMaXRlIiwicHVsc2Vwb2ludExpdGUiXSxzdXBwb3J0ZWRNZWRpYVR5cGVzOlsiYmFubmVyIiwibmF0aXZlIiwidmlkZW8iXSxpc0JpZFJlcXVlc3RWYWxpZDpmdW5jdGlvbihlKXtyZXR1cm4hIShlJiZlLnBhcmFtcyYmZS5wYXJhbXMuY3AmJmUucGFyYW1zLmN0KX0sYnVpbGRSZXF1ZXN0czpmdW5jdGlvbihlLHIpe3ZhciB0LG4saTtyZXR1cm57bWV0aG9kOiJQT1NUIix1cmw6Imh0dHBzOi8vYmlkLmNvbnRleHR3ZWIuY29tL2hlYWRlci9vcnRiP3NyYz1wcmViaWQiLGRhdGE6e2lkOmVbMF0uYmlkZGVyUmVxdWVzdElkLGltcDplLm1hcChmdW5jdGlvbihlKXtyZXR1cm57aWQ6KHI9ZSkuYmlkSWQsYmFubmVyOmZ1bmN0aW9uKGUpe3ZhciByPWZ1bmN0aW9uKGUpe3ZhciByPWMuZGVlcEFjY2VzcyhlLCJtZWRpYVR5cGVzLmJhbm5lci5zaXplcyIpO3JldHVybiByJiZjLmlzQXJyYXkocik/ci5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGMuaXNBcnJheShlKSYmMj09PWUubGVuZ3RofSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybnt3OmVbMF0saDplWzFdfX0pOm51bGx9KGUpLHQ9ZnVuY3Rpb24oZSxyKXtpZihlLnBhcmFtcy5jZil7dmFyIHQ9ZS5wYXJhbXMuY2YudG9VcHBlckNhc2UoKS5zcGxpdCgiWCIpLG49cGFyc2VJbnQoZS5wYXJhbXMuY3d8fHRbMF0sMTApLGk9cGFyc2VJbnQoZS5wYXJhbXMuY2h8fHRbMV0sMTApO3JldHVybltuLGldfXJldHVybiByJiYwPHIubGVuZ3RoP1tyWzBdLncsclswXS5oXTpbMSwxXX0oZSxyKTtyZXR1cm4gZS5tZWRpYVR5cGVzJiZlLm1lZGlhVHlwZXMuYmFubmVyP3t3OnRbMF0saDp0WzFdLGJhdHRyOmUucGFyYW1zLmJhdHRyLGZvcm1hdDpyfTpudWxsfShyKSxuYXRpdmU6ZnVuY3Rpb24oZSl7aWYoZS5uYXRpdmVQYXJhbXMpe3ZhciByPVtdO3JldHVybiB1KHIsZnVuY3Rpb24oZSxyLHQpe3JldHVybiByP3tpZDplLHJlcXVpcmVkOnIucmVxdWlyZWQ/MTowLHRpdGxlOntsZW46ci5sZW58fHR9fTpudWxsfShyLmxlbmd0aCsxLGUubmF0aXZlUGFyYW1zLnRpdGxlLHMuVElUTEVfTEVOKSksdShyLGwoci5sZW5ndGgrMSxlLm5hdGl2ZVBhcmFtcy5ib2R5LDIscy5ERVNDUl9MRU4pKSx1KHIsbChyLmxlbmd0aCsxLGUubmF0aXZlUGFyYW1zLnNwb25zb3JlZEJ5LDEscy5TUE9OU09SRURfQllfTEVOKSksdShyLG8oci5sZW5ndGgrMSxlLm5hdGl2ZVBhcmFtcy5pY29uLDEscy5JQ09OX01JTixzLklDT05fTUlOKSksdShyLG8oci5sZW5ndGgrMSxlLm5hdGl2ZVBhcmFtcy5pbWFnZSwzLHMuSU1HX01JTixzLklNR19NSU4pKSx7cmVxdWVzdDpKU09OLnN0cmluZ2lmeSh7YXNzZXRzOnJ9KSx2ZXI6IjEuMSIsYmF0dHI6ZS5wYXJhbXMuYmF0dHJ9fXJldHVybiBudWxsfShyKSx0YWdpZDpyLnBhcmFtcy5jdC50b1N0cmluZygpLHZpZGVvOmZ1bmN0aW9uKGUpe3JldHVybiBlLnBhcmFtcy52aWRlbz9hKHt9LGUucGFyYW1zLnZpZGVvLHtiYXR0cjplLnBhcmFtcy5iYXR0cn0pOm51bGx9KHIpLGJpZGZsb29yOnIucGFyYW1zLmJpZGZsb29yLGV4dDpmdW5jdGlvbihyKXt2YXIgdD17fSxuPXt9O3JldHVybiBkLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIG5bZV09MX0pLE9iamVjdC5rZXlzKHIucGFyYW1zKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe25bZV18fCh0W2VdPXIucGFyYW1zW2VdKX0pLDA8T2JqZWN0LmtleXModCkubGVuZ3RoP3twcmViaWQ6dH06bnVsbH0ocil9O3ZhciByfSksc2l0ZToobj1yLGk9KHQ9ZSkmJjA8dC5sZW5ndGg/dFswXS5wYXJhbXMuY3A6IjAiLHRbMF0ucGFyYW1zLmFwcD9udWxsOntwdWJsaXNoZXI6e2lkOmkudG9TdHJpbmcoKX0scmVmOmZ1bmN0aW9uKCl7dHJ5e3JldHVybiB3aW5kb3cudG9wLmRvY3VtZW50LnJlZmVycmVyfWNhdGNoKGUpe3JldHVybiBkb2N1bWVudC5yZWZlcnJlcn19KCkscGFnZTpuJiZuLnJlZmVyZXJJbmZvP24ucmVmZXJlckluZm8ucmVmZXJlcjoiIn0pLGFwcDpmdW5jdGlvbihlKXt2YXIgcj1lJiYwPGUubGVuZ3RoP2VbMF0ucGFyYW1zLmNwOiIwIix0PWVbMF0ucGFyYW1zLmFwcDtpZih0KXJldHVybntwdWJsaXNoZXI6e2lkOnIudG9TdHJpbmcoKX0sYnVuZGxlOnQuYnVuZGxlLHN0b3JldXJsOnQuc3RvcmVVcmwsZG9tYWluOnQuZG9tYWlufTtyZXR1cm4gbnVsbH0oZSksZGV2aWNlOnt1YTpuYXZpZ2F0b3IudXNlckFnZW50LGxhbmd1YWdlOm5hdmlnYXRvci5sYW5ndWFnZXx8bmF2aWdhdG9yLmJyb3dzZXJMYW5ndWFnZXx8bmF2aWdhdG9yLnVzZXJMYW5ndWFnZXx8bmF2aWdhdG9yLnN5c3RlbUxhbmd1YWdlfSxiY2F0OmVbMF0ucGFyYW1zLmJjYXQsYmFkdjplWzBdLnBhcmFtcy5iYWR2LHVzZXI6ZnVuY3Rpb24oZSxyKXt2YXIgdD17fTtyJiZyLmdkcHJDb25zZW50JiYodC5jb25zZW50PXIuZ2RwckNvbnNlbnQuY29uc2VudFN0cmluZyk7e3ZhciBuLGk7ZSYmZS51c2VySWQmJih0LmVpZHM9W10sbSh0LmVpZHMsZS51c2VySWQucHViY2lkLCJwdWJjb21tb24iKSxtKHQuZWlkcyxlLnVzZXJJZC5icml0ZXBvb2xpZCwiYnJpdGVwb29sLmNvbSIpLG0odC5laWRzLGUudXNlcklkLmNyaXRlb0lkLCJjcml0ZW8iKSxtKHQuZWlkcyxlLnVzZXJJZC5pZGxfZW52LCJpZGVudGl0eUxpbmsiKSxtKHQuZWlkcyxjLmRlZXBBY2Nlc3MoZSwidXNlcklkLmlkNWlkLnVpZCIpLCJpZDUtc3luYy5jb20iLGMuZGVlcEFjY2VzcyhlLCJ1c2VySWQuaWQ1aWQuZXh0IikpLG0odC5laWRzLGMuZGVlcEFjY2VzcyhlLCJ1c2VySWQucGFycmFibGVJZC5laWQiKSwicGFycmFibGUuY29tIiksZS51c2VySWQubGlwYiYmZS51c2VySWQubGlwYi5saXBiaWQmJm0odC5laWRzLGUudXNlcklkLmxpcGIubGlwYmlkLCJsaXZlaW50ZW50LmNvbSIpLG0odC5laWRzLGUudXNlcklkLnRkaWQsImFkc2VydmVyLm9yZyIse3J0aVBhcnRuZXI6IlRESUQifSksKG49ZS51c2VySWQuZGlnaXRydXN0aWQpJiZuLmRhdGEmJihpPXt9LG4uZGF0YS5pZCYmKGkuaWQ9bi5kYXRhLmlkKSxuLmRhdGEua2V5diYmKGkua2V5dj1uLmRhdGEua2V5diksdC5kaWdpdHJ1c3Q9aSkpfXJldHVybntleHQ6dH19KGVbMF0scikscmVnczpmdW5jdGlvbihlKXtpZihlLmdkcHJDb25zZW50fHxlLnVzcENvbnNlbnQpe3ZhciByPXt9O3JldHVybiBlLmdkcHJDb25zZW50JiYoci5nZHByPWUuZ2RwckNvbnNlbnQuZ2RwckFwcGxpZXM/MTowKSxlLnVzcENvbnNlbnQmJihyLnVzX3ByaXZhY3k9ZS51c3BDb25zZW50KSx7ZXh0OnJ9fXJldHVybiBudWxsfShyKSxzb3VyY2U6ZnVuY3Rpb24oZSl7aWYoZSlyZXR1cm57ZXh0OntzY2hhaW46ZX19O3JldHVybiBudWxsfShlWzBdLnNjaGFpbil9LGJpZGRlclJlcXVlc3Q6cn19LGludGVycHJldFJlc3BvbnNlOmZ1bmN0aW9uKGUscil7cmV0dXJuIGZ1bmN0aW9uKGUscil7dmFyIGE9e30scz17fSxkPXt9LHU9ci5ib2R5O2UuZGF0YS5pbXAuZm9yRWFjaChmdW5jdGlvbihlKXthW2UuaWRdPWV9KSx1JiZ1LnNlYXRiaWQuZm9yRWFjaChmdW5jdGlvbihlKXtyZXR1cm4gZS5iaWQuZm9yRWFjaChmdW5jdGlvbihlKXtzW2UuaW1waWRdPWV9KX0pO2UuYmlkZGVyUmVxdWVzdCYmZS5iaWRkZXJSZXF1ZXN0LmJpZHMmJmUuYmlkZGVyUmVxdWVzdC5iaWRzLmZvckVhY2goZnVuY3Rpb24oZSl7ZFtlLmJpZElkXT1lfSk7dmFyIG89W107cmV0dXJuIE9iamVjdC5rZXlzKGEpLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHIsdCxuLGk7c1tlXSYmKHI9e3JlcXVlc3RJZDplLGNwbTpzW2VdLnByaWNlLGNyZWF0aXZlX2lkOnNbZV0uY3JpZCxjcmVhdGl2ZUlkOnNbZV0uY3JpZCxhZElkOmUsdHRsOnNbZV0uZXhwfHwyMCxuZXRSZXZlbnVlOiEwLGN1cnJlbmN5OnUuY3VyfHwiVVNEIn0sYVtlXS5uYXRpdmU/KHIubmF0aXZlPWZ1bmN0aW9uKGUscil7aWYoZS5uYXRpdmUpe3ZhciB0PWZ1bmN0aW9uKGUpe3RyeXtpZihlKXJldHVybiBKU09OLnBhcnNlKGUpfWNhdGNoKGUpe2MubG9nRXJyb3IoInB1bHNlcG9pbnRMaXRlLnNhZmVQYXJzZSIsIkVSUk9SIixlKX1yZXR1cm4gbnVsbH0oci5hZG0pLG49e307aWYodCYmdC5uYXRpdmUmJnQubmF0aXZlLmFzc2V0cylyZXR1cm4gdC5uYXRpdmUuYXNzZXRzLmZvckVhY2goZnVuY3Rpb24oZSl7bi50aXRsZT1lLnRpdGxlP2UudGl0bGUudGV4dDpuLnRpdGxlLG4uYm9keT1lLmRhdGEmJjI9PT1lLmRhdGEudHlwZT9lLmRhdGEudmFsdWU6bi5ib2R5LG4uc3BvbnNvcmVkQnk9ZS5kYXRhJiYxPT09ZS5kYXRhLnR5cGU/ZS5kYXRhLnZhbHVlOm4uc3BvbnNvcmVkQnksbi5pbWFnZT1lLmltZyYmMz09PWUuaW1nLnR5cGU/ZS5pbWcudXJsOm4uaW1hZ2Usbi5pY29uPWUuaW1nJiYxPT09ZS5pbWcudHlwZT9lLmltZy51cmw6bi5pY29ufSksdC5uYXRpdmUubGluayYmKG4uY2xpY2tVcmw9ZW5jb2RlVVJJQ29tcG9uZW50KHQubmF0aXZlLmxpbmsudXJsKSksbi5pbXByZXNzaW9uVHJhY2tlcnM9dC5uYXRpdmUuaW1wdHJhY2tlcnMsbn1yZXR1cm4gbnVsbH0oYVtlXSxzW2VdKSxyLm1lZGlhVHlwZT0ibmF0aXZlIik6YVtlXS52aWRlbz8oZFtlXSYmIm91dHN0cmVhbSI9PT1jLmRlZXBBY2Nlc3MoZFtlXSwibWVkaWFUeXBlcy52aWRlby5jb250ZXh0IikmJihyLnJlbmRlcmVyPSh0PWMuZGVlcEFjY2VzcyhkW2VdLCJyZW5kZXJlci5vcHRpb25zIiksbj1jLmRlZXBBY2Nlc3Moc1tlXSwiZXh0Lm91dHN0cmVhbSIpLChpPXAuYS5pbnN0YWxsKHt1cmw6bi5yZW5kZXJlclVybCxjb25maWc6e2RlZmF1bHRPcHRpb25zOm4uY29uZmlnLHJlbmRlcmVyT3B0aW9uczp0LHR5cGU6bi50eXBlfSxsb2FkZWQ6ITF9KSkuc2V0UmVuZGVyKGZ1bmN0aW9uKHIpe3IucmVuZGVyZXIucHVzaChmdW5jdGlvbigpe3ZhciBlPXIucmVuZGVyZXIuZ2V0Q29uZmlnKCk7KG5ldyB3aW5kb3cuUHVsc2VQb2ludE91dHN0cmVhbVJlbmRlcmVyKS5yZW5kZXIoe2FkVW5pdENvZGU6ci5hZFVuaXRDb2RlLHZhc3RYbWw6ci52YXN0WG1sLHR5cGU6ZS50eXBlLGRlZmF1bHRPcHRpb25zOmUuZGVmYXVsdE9wdGlvbnMscmVuZGVyZXJPcHRpb25zOnR9KX0pfSksaSkpLHIudmFzdFhtbD1zW2VdLmFkbSxyLm1lZGlhVHlwZT0idmlkZW8iLHIud2lkdGg9c1tlXS53LHIuaGVpZ2h0PXNbZV0uaCk6KHIuYWQ9c1tlXS5hZG0sci53aWR0aD1zW2VdLnd8fGFbZV0uYmFubmVyLncsci5oZWlnaHQ9c1tlXS5ofHxhW2VdLmJhbm5lci5oKSxvLnB1c2gocikpfSksb30ocixlKX0sZ2V0VXNlclN5bmNzOmZ1bmN0aW9uKGUpe3JldHVybiBlLmlmcmFtZUVuYWJsZWQ/W3t0eXBlOiJpZnJhbWUiLHVybDoiaHR0cHM6Ly9iaC5jb250ZXh0d2ViLmNvbS92aXNpdG9ybWF0Y2gifV06ZS5waXhlbEVuYWJsZWQ/W3t0eXBlOiJpbWFnZSIsdXJsOiJodHRwczovL2JoLmNvbnRleHR3ZWIuY29tL3Zpc2l0b3JtYXRjaC9wcmViaWQifV06dm9pZCAwfSx0cmFuc2Zvcm1CaWRQYXJhbXM6ZnVuY3Rpb24oZSl7cmV0dXJuIGMuY29udmVydFR5cGVzKHtjZjoic3RyaW5nIixjcDoibnVtYmVyIixjdDoibnVtYmVyIn0sZSl9fTtmdW5jdGlvbiB1KGUscil7ciYmZS5wdXNoKHIpfWZ1bmN0aW9uIG8oZSxyLHQsbixpKXtyZXR1cm4gcj97aWQ6ZSxyZXF1aXJlZDpyLnJlcXVpcmVkPzE6MCxpbWc6e3R5cGU6dCx3bWluOnIud21pbnx8bixobWluOnIuaG1pbnx8aX19Om51bGx9ZnVuY3Rpb24gbChlLHIsdCxuKXtyZXR1cm4gcj97aWQ6ZSxyZXF1aXJlZDpyLnJlcXVpcmVkPzE6MCxkYXRhOnt0eXBlOnQsbGVuOnIubGVufHxufX06bnVsbH1mdW5jdGlvbiBtKGUscix0LG4pe3ZhciBpO3ImJihpPXtpZDpyfSxuJiYoaS5leHQ9biksZS5wdXNoKHtzb3VyY2U6dCx1aWRzOltpXX0pKX1PYmplY3Qobi5yZWdpc3RlckJpZGRlcikoaSl9fSxbNjg0XSk7CnVwYmpzQ2h1bmsoWzEzN10sezcxNDpmdW5jdGlvbihlLHIsYSl7ZS5leHBvcnRzPWEoNzE1KX0sNzE1OmZ1bmN0aW9uKGUscixhKXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLGEuZChyLCJzcGVjIixmdW5jdGlvbigpe3JldHVybiBpfSk7dmFyIGc9YSgwKSx0PWEoMSkscz1hKDIpO3ZhciBpPW5ldyBmdW5jdGlvbigpe3RoaXMuY29kZT0icmh5dGhtb25lIix0aGlzLnN1cHBvcnRlZE1lZGlhVHlwZXM9W3MuZCxzLmJdO3ZhciBvPVsyLDMsNSw2XSxjPVsidmlkZW8vbXA0Il0sbT1bMSwyLDMsNF0sbD1bMV0sdT1bMSwyLDVdLHY9e30saD10aGlzO2Z1bmN0aW9uIGQoZSxyKXt2YXIgYSx0PVtdLHM9MDtyJiZyLnJlZmVyZXJJbmZvJiZyLnJlZmVyZXJJbmZvLnN0YWNrLmxlbmd0aCYmKChhPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImEiKSkuaHJlZj1yLnJlZmVyZXJJbmZvLnN0YWNrWzBdLHM9Imh0dHBzOiI9PWEucHJvdG9jb2w/MTowKTtmb3IodmFyIGksbj0wO248ZS5sZW5ndGg7bisrKXt2W2Vbbl0uYWRVbml0Q29kZV09ZVtuXTt2YXIgZCxwPXt9O3AuaWQ9ZVtuXS5hZFVuaXRDb2RlLHAuYmlkZmxvb3I9cGFyc2VGbG9hdChnLmRlZXBBY2Nlc3MoZVtuXSwicGFyYW1zLmZsb29yIikpfHwwLHAuc2VjdXJlPXMsIWcuZGVlcEFjY2VzcyhlW25dLCJtZWRpYVR5cGVzLmJhbm5lciIpJiYiYmFubmVyIiE9PWcuZGVlcEFjY2VzcyhlW25dLCJtZWRpYVR5cGUiKXx8KGQ9ZnVuY3Rpb24oZSl7dmFyIHI9ZS5zaXplcztlLm1lZGlhVHlwZXMmJmUubWVkaWFUeXBlcy5iYW5uZXImJihyPWUubWVkaWFUeXBlcy5iYW5uZXIuc2l6ZXMpO3ZhciBhPWcucGFyc2VTaXplc0lucHV0KHIpLHQ9W107aWYoYS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciByOyFlfHwocj1mKGUuc3BsaXQoIngiKSkpJiZ0LnB1c2goe3c6clswXSxoOnJbMV19KX0pLHQubGVuZ3RoKXJldHVybntmb3JtYXQ6dH07cmV0dXJuITF9KGVbbl0pKSYmKHAuYmFubmVyPWQpLCFnLmRlZXBBY2Nlc3MoZVtuXSwibWVkaWFUeXBlcy52aWRlbyIpJiYidmlkZW8iIT09Zy5kZWVwQWNjZXNzKGVbbl0sIm1lZGlhVHlwZSIpfHwocC52aWRlbz1mdW5jdGlvbihlKXt2YXIgcj1bXTt7dmFyIGEsdDtnLmRlZXBBY2Nlc3MoZSwibWVkaWFUeXBlcy52aWRlby5wbGF5ZXJTaXplIikmJihhPWUubWVkaWFUeXBlcy52aWRlby5wbGF5ZXJTaXplLGcuaXNBcnJheShlLm1lZGlhVHlwZXMudmlkZW8ucGxheWVyU2l6ZVswXSkmJihhPWUubWVkaWFUeXBlcy52aWRlby5wbGF5ZXJTaXplWzBdKSwodD1mKGEpKSYmKHI9dCkpfXJldHVybnttaW1lczpnLmRlZXBBY2Nlc3MoZSwibWVkaWFUeXBlcy52aWRlby5taW1lcyIpfHxjLHByb3RvY29sczpnLmRlZXBBY2Nlc3MoZSwibWVkaWFUeXBlcy52aWRlby5wcm90b2NvbHMiKXx8byx3OnJbMF0saDpyWzFdLHN0YXJ0ZGVsYXk6Zy5kZWVwQWNjZXNzKGUsIm1lZGlhVHlwZXMudmlkZW8uc3RhcnRkZWxheSIpfHwwLHNraXA6Zy5kZWVwQWNjZXNzKGUsIm1lZGlhVHlwZXMudmlkZW8uc2tpcCIpfHwwLHBsYXliYWNrbWV0aG9kOmcuZGVlcEFjY2VzcyhlLCJtZWRpYVR5cGVzLnZpZGVvLnBsYXliYWNrbWV0aG9kIil8fG0sZGVsaXZlcnk6Zy5kZWVwQWNjZXNzKGUsIm1lZGlhVHlwZXMudmlkZW8uZGVsaXZlcnkiKXx8bCxhcGk6Zy5kZWVwQWNjZXNzKGUsIm1lZGlhVHlwZXMudmlkZW8uYXBpIil8fHV9fShlW25dKSksKHAuYmFubmVyfHxwLnZpZGVvKSYmKHAuZXh0PXtiaWRkZXI6e3BsYWNlbWVudElkOihpPWVbbl0pLnBhcmFtcy5wbGFjZW1lbnRJZCx6b25lOmkucGFyYW1zJiZpLnBhcmFtcy56b25lP2kucGFyYW1zLnpvbmU6IjFyIixwYXRoOmkucGFyYW1zJiZpLnBhcmFtcy5wYXRoP2kucGFyYW1zLnBhdGg6Im12byJ9fSx0LnB1c2gocCkpfXJldHVybiB0fWZ1bmN0aW9uIGYoZSl7dmFyIHI9cGFyc2VJbnQoZVswXSksYT1wYXJzZUludChlWzFdKTtyZXR1cm4gcj09ciYmYT09YSYmW3IsYV19ZnVuY3Rpb24gcChlLHIpe3ZhciBhLHQscyxpLG49e2lkOmVbMF0uYmlkZGVyUmVxdWVzdElkLGltcDpkKGUsciksc2l0ZTooaT17ZG9tYWluOiIiLHBhZ2U6IiIscmVmOiIifSwoYT1yKSYmYS5yZWZlcmVySW5mbyYmKHQ9YS5yZWZlcmVySW5mbyxpLnJlZj10LnJlZmVyZXIsdC5zdGFjay5sZW5ndGgmJihpLnBhZ2U9dC5zdGFja1t0LnN0YWNrLmxlbmd0aC0xXSwocz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIikpLmhyZWY9dC5zdGFja1swXSxpLmRvbWFpbj1zLmhvc3RuYW1lKSksaSksZGV2aWNlOnt1YTpuYXZpZ2F0b3IudXNlckFnZW50LGlwOiIiLGRudDpnLmdldEROVCgpPzE6MH0sdXNlcjp7ZXh0Ontjb25zZW50OmcuZGVlcEFjY2VzcyhyLCJnZHByQ29uc2VudC5nZHByQXBwbGllcyIpP3IuZ2RwckNvbnNlbnQuY29uc2VudFN0cmluZzoiIn19LGF0OjEsdG1heDoxZTMscmVnczp7ZXh0OntnZHByOiEhZy5kZWVwQWNjZXNzKHIsImdkcHJDb25zZW50LmdkcHJBcHBsaWVzIikmJkJvb2xlYW4oMSZyLmdkcHJDb25zZW50LmdkcHJBcHBsaWVzKX19fTtyZXR1cm4gZVswXS5zY2hhaW4mJihuLnNvdXJjZT17ZXh0OntzY2hhaW46ZVswXS5zY2hhaW59fSksbn1mdW5jdGlvbiB5KGUscil7Zm9yKHZhciBhPTA7YTxyLmxlbmd0aDthKyspaWYoclthXS5wYXJhbXMmJnJbYV0ucGFyYW1zW2VdKXJldHVybiByW2FdLnBhcmFtc1tlXX10aGlzLmlzQmlkUmVxdWVzdFZhbGlkPWZ1bmN0aW9uKGUpe3JldHVybiEoIWUucGFyYW1zfHwhZS5wYXJhbXMucGxhY2VtZW50SWQpfSx0aGlzLmdldFVzZXJTeW5jcz1mdW5jdGlvbihlLHIsYSl7cmV0dXJuW119LHRoaXMuYnVpbGRSZXF1ZXN0cz1mdW5jdGlvbihlLHIpe3ZhciBhPXkoInBsYWNlbWVudElkIixlKTtpZih2b2lkIDA9PT1hfHxlLmxlbmd0aDwxKXJldHVybltdO3ZhciB0PXkoImVuZHBvaW50IixlKXx8Imh0dHBzOi8vdGFnLjFyeC5pby9ybXAve3BsYWNlbWVudElkfS8wL3twYXRofT96PXt6b25lfSIscz15KCJ6b25lIixlKXx8IjFyIixpPXkoInBhdGgiLGUpfHwibXZvIjt0PSh0PSh0PXQucmVwbGFjZSgvXHtwbGFjZW1lbnRJZFx9L2ksYSkpLnJlcGxhY2UoL1x7em9uZVx9L2kscykpLnJlcGxhY2UoL1x7cGF0aFx9L2ksaSk7dmFyIG49LyhednwoXC4wKSskKS9naTt0Kz0iJmhidj0iKyI0LjE3LjAiLnJlcGxhY2UobiwiIikrIiwiKyIyLjEiLnJlcGxhY2UobiwiIik7dmFyIGQ9cChlLHIpO3JldHVybiBkLmltcC5sZW5ndGg/e21ldGhvZDoiUE9TVCIsdXJsOnQsZGF0YTpKU09OLnN0cmluZ2lmeShkKX06e319LHRoaXMuaW50ZXJwcmV0UmVzcG9uc2U9ZnVuY3Rpb24oZSl7dmFyIHI9ZS5ib2R5fHxbXSxhPVtdLHQ9MDtpZihyLnNlYXRiaWQpe2Zvcih2YXIgcz1bXSx0PTA7dDxyLnNlYXRiaWQubGVuZ3RoO3QrKylmb3IodmFyIGk9MDtpPHIuc2VhdGJpZFt0XS5iaWQubGVuZ3RoO2krKylzLnB1c2goci5zZWF0YmlkW3RdLmJpZFtpXSk7cj1zfWZvcih0PTA7dDxyLmxlbmd0aDt0Kyspe3ZhciBuPXJbdF0sZD12W24uaW1waWRdLHA9e3JlcXVlc3RJZDpkLmJpZElkLGJpZGRlckNvZGU6aC5jb2RlLGNwbTpwYXJzZUZsb2F0KG4ucHJpY2UpLHdpZHRoOm4udyxoZWlnaHQ6bi5oLGNyZWF0aXZlSWQ6bi5jcmlkLGN1cnJlbmN5OiJVU0QiLG5ldFJldmVudWU6ITAsdHRsOjM1MH07ZC5tZWRpYVR5cGVzJiZkLm1lZGlhVHlwZXMudmlkZW8/KHAudmFzdFVybD1uLm51cmwscC5tZWRpYVR5cGU9InZpZGVvIixwLnR0bD02MDApOnAuYWQ9bi5hZG0sYS5wdXNoKHApfXJldHVybiBhfX07T2JqZWN0KHQucmVnaXN0ZXJCaWRkZXIpKGkpfX0sWzcxNF0pOwp1cGJqc0NodW5rKFsxMzBdLHs3MzQ6ZnVuY3Rpb24oZSxyLHQpe2UuZXhwb3J0cz10KDczNSl9LDczNTpmdW5jdGlvbihlLHIsdCl7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSx0LmQociwic3BlYyIsZnVuY3Rpb24oKXtyZXR1cm4gQX0pLHIuaGFzVmlkZW9NZWRpYVR5cGU9cyx0LmQociwicmVzZXRSdWJpQ29uZiIsZnVuY3Rpb24oKXtyZXR1cm4gY30pLHIubWFzU2l6ZU9yZGVyaW5nPWQsci5kZXRlcm1pbmVSdWJpY29uVmlkZW9TaXplSWQ9ZixyLmdldFByaWNlR3JhbnVsYXJpdHk9QyxyLmhhc1ZhbGlkVmlkZW9QYXJhbXM9SSxyLmhhc1ZhbGlkU3VwcGx5Q2hhaW5QYXJhbXM9ayxyLmVuY29kZVBhcmFtPXcsci5yZXNldFVzZXJTeW5jPWZ1bmN0aW9uKCl7ej0hMX07dmFyIGc9dCgwKSxpPXQoMSksdj10KDMpLHA9dCgyKSxuPXQoMTApLGI9dC5uKG4pO2Z1bmN0aW9uIHkoZSxyKXtyZXR1cm4gZnVuY3Rpb24oZSl7aWYoQXJyYXkuaXNBcnJheShlKSlyZXR1cm4gZX0oZSl8fGZ1bmN0aW9uKGUscil7aWYoInVuZGVmaW5lZCI9PXR5cGVvZiBTeW1ib2x8fCEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChlKSkpcmV0dXJuO3ZhciB0PVtdLGk9ITAsbj0hMSxvPXZvaWQgMDt0cnl7Zm9yKHZhciBhLHM9ZVtTeW1ib2wuaXRlcmF0b3JdKCk7IShpPShhPXMubmV4dCgpKS5kb25lKSYmKHQucHVzaChhLnZhbHVlKSwhcnx8dC5sZW5ndGghPT1yKTtpPSEwKTt9Y2F0Y2goZSl7bj0hMCxvPWV9ZmluYWxseXt0cnl7aXx8bnVsbD09cy5yZXR1cm58fHMucmV0dXJuKCl9ZmluYWxseXtpZihuKXRocm93IG99fXJldHVybiB0fShlLHIpfHxmdW5jdGlvbihlLHIpe2lmKCFlKXJldHVybjtpZigic3RyaW5nIj09dHlwZW9mIGUpcmV0dXJuIG8oZSxyKTt2YXIgdD1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkuc2xpY2UoOCwtMSk7Ik9iamVjdCI9PT10JiZlLmNvbnN0cnVjdG9yJiYodD1lLmNvbnN0cnVjdG9yLm5hbWUpO2lmKCJNYXAiPT09dHx8IlNldCI9PT10KXJldHVybiBBcnJheS5mcm9tKGUpO2lmKCJBcmd1bWVudHMiPT09dHx8L14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QodCkpcmV0dXJuIG8oZSxyKX0oZSxyKXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLiIpfSgpfWZ1bmN0aW9uIG8oZSxyKXsobnVsbD09cnx8cj5lLmxlbmd0aCkmJihyPWUubGVuZ3RoKTtmb3IodmFyIHQ9MCxpPW5ldyBBcnJheShyKTt0PHI7dCsrKWlbdF09ZVt0XTtyZXR1cm4gaX1mdW5jdGlvbiB4KCl7cmV0dXJuKHg9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl7dmFyIHQ9YXJndW1lbnRzW3JdO2Zvcih2YXIgaSBpbiB0KU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGkpJiYoZVtpXT10W2ldKX1yZXR1cm4gZX0pLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1mdW5jdGlvbiBsKGUscix0KXtyZXR1cm4gciBpbiBlP09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIse3ZhbHVlOnQsZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KTplW3JdPXQsZX1mdW5jdGlvbiBoKGUpe3JldHVybihoPSJmdW5jdGlvbiI9PXR5cGVvZiBTeW1ib2wmJiJzeW1ib2wiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJiJmdW5jdGlvbiI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlPyJzeW1ib2wiOnR5cGVvZiBlfSkoZSl9dmFyIF89e307di5iLmdldENvbmZpZygicnViaWNvbiIsZnVuY3Rpb24oZSl7Zy5tZXJnZURlZXAoXyxlLnJ1Ymljb24pfSk7dmFyIHU9ezE6IjQ2OHg2MCIsMjoiNzI4eDkwIiw1OiIxMjB4OTAiLDc6IjEyNXgxMjUiLDg6IjEyMHg2MDAiLDk6IjE2MHg2MDAiLDEwOiIzMDB4NjAwIiwxMzoiMjAweDIwMCIsMTQ6IjI1MHgyNTAiLDE1OiIzMDB4MjUwIiwxNjoiMzM2eDI4MCIsMTc6IjI0MHg0MDAiLDE5OiIzMDB4MTAwIiwzMToiOTgweDEyMCIsMzI6IjI1MHgzNjAiLDMzOiIxODB4NTAwIiwzNToiOTgweDE1MCIsMzc6IjQ2OHg0MDAiLDM4OiI5MzB4MTgwIiwzOToiNzUweDEwMCIsNDA6Ijc1MHgyMDAiLDQxOiI3NTB4MzAwIiw0MjoiMng0Iiw0MzoiMzIweDUwIiw0NDoiMzAweDUwIiw0ODoiMzAweDMwMCIsNTM6IjEwMjR4NzY4Iiw1NDoiMzAweDEwNTAiLDU1OiI5NzB4OTAiLDU3OiI5NzB4MjUwIiw1ODoiMTAwMHg5MCIsNTk6IjMyMHg4MCIsNjA6IjMyMHgxNTAiLDYxOiIxMDAweDEwMDAiLDY0OiI1ODB4NTAwIiw2NToiNjQweDQ4MCIsNjY6IjkzMHg2MDAiLDY3OiIzMjB4NDgwIiw2ODoiMTgwMHgxMDAwIiw3MjoiMzIweDMyMCIsNzM6IjMyMHgxNjAiLDc4OiI5ODB4MjQwIiw3OToiOTgweDMwMCIsODA6Ijk4MHg0MDAiLDgzOiI0ODB4MzAwIiw4NToiMzAweDEyMCIsOTA6IjU0OHgxNTAiLDk0OiI5NzB4MzEwIiw5NToiOTcweDEwMCIsOTY6Ijk3MHgyMTAiLDEwMToiNDgweDMyMCIsMTAyOiI3Njh4MTAyNCIsMTAzOiI0ODB4MjgwIiwxMDU6IjI1MHg4MDAiLDEwODoiMzIweDI0MCIsMTEzOiIxMDAweDMwMCIsMTE3OiIzMjB4MTAwIiwxMjU6IjgwMHgyNTAiLDEyNjoiMjAweDYwMCIsMTQ0OiI5ODB4NjAwIiwxNDU6Ijk4MHgxNTAiLDE1MjoiMTAwMHgyNTAiLDE1NjoiNjQweDMyMCIsMTU5OiIzMjB4MjUwIiwxNzk6IjI1MHg2MDAiLDE5NToiNjAweDMwMCIsMTk4OiI2NDB4MzYwIiwxOTk6IjY0MHgyMDAiLDIxMzoiMTAzMHg1OTAiLDIxNDoiOTgweDM2MCIsMjIxOiIxeDEiLDIyOToiMzIweDE4MCIsMjMwOiIyMDAweDE0MDAiLDIzMjoiNTgweDQwMCIsMjM0OiI2eDYiLDI1MToiMngyIiwyNTY6IjQ4MHg4MjAiLDI1NzoiNDAweDYwMCIsMjU4OiI1MDB4MjAwIiwyNTk6Ijk5OHgyMDAiLDI2NDoiOTcweDEwMDAiLDI2NToiMTkyMHgxMDgwIiwyNzQ6IjE4MDB4MjAwIiwyNzg6IjMyMHg1MDAiLDI4MjoiMzIweDQwMCIsMjg4OiI2NDB4MzgwIiw1NDg6IjUwMHgxMDAwIn07Zy5fZWFjaCh1LGZ1bmN0aW9uKGUscil7cmV0dXJuIHVbZV09cn0pO3ZhciBBPXtjb2RlOiJydWJpY29uIixndmxpZDo1MixzdXBwb3J0ZWRNZWRpYVR5cGVzOltwLmIscC5kXSxpc0JpZFJlcXVlc3RWYWxpZDpmdW5jdGlvbihlKXtpZigib2JqZWN0IiE9PWgoZS5wYXJhbXMpKXJldHVybiExO2Zvcih2YXIgcj0wLHQ9WyJhY2NvdW50SWQiLCJzaXRlSWQiLCJ6b25lSWQiXTtyPHQubGVuZ3RoO3IrKylpZihlLnBhcmFtc1t0W3JdXT1wYXJzZUludChlLnBhcmFtc1t0W3JdXSksaXNOYU4oZS5wYXJhbXNbdFtyXV0pKXJldHVybiBnLmxvZ0Vycm9yKCJSdWJpY29uOiB3cm9uZyBmb3JtYXQgb2YgYWNjb3VudElkIG9yIHNpdGVJZCBvciB6b25lSWQuIiksITE7dmFyIGk9bShlLCEwKTtyZXR1cm4hIWkmJigidmlkZW8iIT09aXx8SShlKSl9LGJ1aWxkUmVxdWVzdHM6ZnVuY3Rpb24oZSx1KXt2YXIgbixyPWUuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiJ2aWRlbyI9PT1tKGUpfSkubWFwKGZ1bmN0aW9uKHQpe3Quc3RhcnRUaW1lPShuZXcgRGF0ZSkuZ2V0VGltZSgpO3ZhciBlLHIsaSxuPXtpZDp0LnRyYW5zYWN0aW9uSWQsdGVzdDp2LmIuZ2V0Q29uZmlnKCJkZWJ1ZyIpPzE6MCxjdXI6WyJVU0QiXSxzb3VyY2U6e3RpZDp0LnRyYW5zYWN0aW9uSWR9LHRtYXg6dS50aW1lb3V0LGltcDpbe2V4cDp2LmIuZ2V0Q29uZmlnKCJzMnNDb25maWcuZGVmYXVsdFR0bCIpLGlkOnQuYWRVbml0Q29kZSxzZWN1cmU6MSxleHQ6bCh7fSx0LmJpZGRlcix0LnBhcmFtcyksdmlkZW86Zy5kZWVwQWNjZXNzKHQsIm1lZGlhVHlwZXMudmlkZW8iKXx8e319XSxleHQ6e3ByZWJpZDp7Y2FjaGU6e3Zhc3R4bWw6e3JldHVybkNyZWF0aXZlOiEwPT09Xy5yZXR1cm5WYXN0fX0sdGFyZ2V0aW5nOntpbmNsdWRld2lubmVyczohMCxpbmNsdWRlYmlkZGVya2V5czohMSxwcmljZWdyYW51bGFyaXR5OkModi5iKX0sYmlkZGVyczp7cnViaWNvbjp7aW50ZWdyYXRpb246Xy5pbnRfdHlwZXx8InBianMifX19fX07aWYoInJ1Ymljb24iIT09dC5iaWRkZXImJihuLmV4dC5wcmViaWQuYWxpYXNlcz1sKHt9LHQuYmlkZGVyLCJydWJpY29uIikpLCJmdW5jdGlvbiIhPXR5cGVvZiB0LmdldEZsb29yfHxfLmRpc2FibGVGbG9vcnMpZT1wYXJzZUZsb2F0KGcuZGVlcEFjY2Vzcyh0LCJwYXJhbXMuZmxvb3IiKSk7ZWxzZXt0cnl7cj10LmdldEZsb29yKHtjdXJyZW5jeToiVVNEIixtZWRpYVR5cGU6InZpZGVvIixzaXplOmoodCwidmlkZW8iKX0pfWNhdGNoKGUpe2cubG9nRXJyb3IoIlJ1Ymljb246IGdldEZsb29yIHRocmV3IGFuIGVycm9yOiAiLGUpfWU9Im9iamVjdCIhPT1oKHIpfHwiVVNEIiE9PXIuY3VycmVuY3l8fGlzTmFOKHBhcnNlSW50KHIuZmxvb3IpKT92b2lkIDA6cGFyc2VGbG9hdChyLmZsb29yKX1pc05hTihlKXx8KG4uaW1wWzBdLmJpZGZsb29yPWUpLG4uaW1wWzBdLmV4dFt0LmJpZGRlcl0udmlkZW8uc2l6ZV9pZD1mKHQpLGZ1bmN0aW9uKHIsdCxlKXtpZighcilyZXR1cm47Im9iamVjdCI9PT1oKHYuYi5nZXRDb25maWcoImFwcCIpKT9yLmFwcD12LmIuZ2V0Q29uZmlnKCJhcHAiKTpyLnNpdGU9e3BhZ2U6Uyh0LGUpfTsib2JqZWN0Ij09PWgodi5iLmdldENvbmZpZygiZGV2aWNlIikpJiYoci5kZXZpY2U9di5iLmdldENvbmZpZygiZGV2aWNlIikpO3QucGFyYW1zLnZpZGVvLmxhbmd1YWdlJiZbInNpdGUiLCJkZXZpY2UiXS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JbZV0mJihyW2VdLmNvbnRlbnQ9eCh7bGFuZ3VhZ2U6dC5wYXJhbXMudmlkZW8ubGFuZ3VhZ2V9LHJbZV0uY29udGVudCkpfSl9KG4sdCx1KSxmdW5jdGlvbihlLHIpeyJvYmplY3QiPT09aChlLmltcFswXS52aWRlbykmJnZvaWQgMD09PWUuaW1wWzBdLnZpZGVvLnNraXAmJihlLmltcFswXS52aWRlby5za2lwPXIucGFyYW1zLnZpZGVvLnNraXApOyJvYmplY3QiPT09aChlLmltcFswXS52aWRlbykmJnZvaWQgMD09PWUuaW1wWzBdLnZpZGVvLnNraXBhZnRlciYmKGUuaW1wWzBdLnZpZGVvLnNraXBhZnRlcj1yLnBhcmFtcy52aWRlby5za2lwZGVsYXkpOyJvYmplY3QiPT09aChlLmltcFswXS52aWRlbykmJnZvaWQgMD09PWUuaW1wWzBdLnZpZGVvLnBvcyYmKCJhdGYiPT09ci5wYXJhbXMucG9zaXRpb24/ZS5pbXBbMF0udmlkZW8ucG9zPTE6ImJ0ZiI9PT1yLnBhcmFtcy5wb3NpdGlvbiYmKGUuaW1wWzBdLnZpZGVvLnBvcz0zKSk7dmFyIHQ9aihyLCJ2aWRlbyIpO2UuaW1wWzBdLnZpZGVvLnc9dFswXSxlLmltcFswXS52aWRlby5oPXRbMV19KG4sdCksdS5nZHByQ29uc2VudCYmKCJib29sZWFuIj09dHlwZW9mIHUuZ2RwckNvbnNlbnQuZ2RwckFwcGxpZXMmJihpPXUuZ2RwckNvbnNlbnQuZ2RwckFwcGxpZXM/MTowKSxnLmRlZXBTZXRWYWx1ZShuLCJyZWdzLmV4dC5nZHByIixpKSxnLmRlZXBTZXRWYWx1ZShuLCJ1c2VyLmV4dC5jb25zZW50Iix1LmdkcHJDb25zZW50LmNvbnNlbnRTdHJpbmcpKSx1LnVzcENvbnNlbnQmJmcuZGVlcFNldFZhbHVlKG4sInJlZ3MuZXh0LnVzX3ByaXZhY3kiLHUudXNwQ29uc2VudCk7dmFyIG89Zy5kZWVwQWNjZXNzKHUsImJpZHMuMC51c2VySWRBc0VpZHMiKTtvJiZvLmxlbmd0aCYmZy5kZWVwU2V0VmFsdWUobiwidXNlci5leHQuZWlkcyIsbyk7dmFyIGE9di5iLmdldENvbmZpZygidXNlci5pZCIpO2EmJmcuZGVlcFNldFZhbHVlKG4sInVzZXIuaWQiLGEpLCEwPT09di5iLmdldENvbmZpZygiY29wcGEiKSYmZy5kZWVwU2V0VmFsdWUobiwicmVncy5jb3BwYSIsMSksdC5zY2hhaW4mJmsodC5zY2hhaW4pJiZnLmRlZXBTZXRWYWx1ZShuLCJzb3VyY2UuZXh0LnNjaGFpbiIsdC5zY2hhaW4pO3ZhciBzLGM9eCh7fSx0LnBhcmFtcy5pbnZlbnRvcnksdi5iLmdldENvbmZpZygiZnBkLmNvbnRleHQiKSksZD14KHt9LHQucGFyYW1zLnZpc2l0b3Isdi5iLmdldENvbmZpZygiZnBkLnVzZXIiKSk7Zy5pc0VtcHR5KGMpJiZnLmlzRW1wdHkoZCl8fChzPXtiaWRkZXJzOlt1LmJpZGRlckNvZGVdLGNvbmZpZzp7ZnBkOnt9fX0sZy5pc0VtcHR5KGMpfHwocy5jb25maWcuZnBkLnNpdGU9YyksZy5pc0VtcHR5KGQpfHwocy5jb25maWcuZnBkLnVzZXI9ZCksZy5kZWVwU2V0VmFsdWUobiwiZXh0LnByZWJpZC5iaWRkZXJjb25maWcuMCIscykpO3ZhciBwPWcuZGVlcEFjY2Vzcyh0LCJmcGQuY29udGV4dC5wYkFkU2xvdCIpO3JldHVybiJzdHJpbmciPT10eXBlb2YgcCYmcCYmZy5kZWVwU2V0VmFsdWUobi5pbXBbMF0uZXh0LCJjb250ZXh0LmRhdGEucGJhZHNsb3QiLHApLFsibmFtZSIsImFkU2xvdCJdLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHI9Zy5kZWVwQWNjZXNzKHQsImZwZC5jb250ZXh0LmFkc2VydmVyLiIuY29uY2F0KGUpKTsic3RyaW5nIj09dHlwZW9mIHImJnImJmcuZGVlcFNldFZhbHVlKG4uaW1wWzBdLmV4dCwiY29udGV4dC5kYXRhLmFkc2VydmVyLiIuY29uY2F0KGUudG9Mb3dlckNhc2UoKSkscil9KSx0LnN0b3JlZEF1Y3Rpb25SZXNwb25zZSYmZy5kZWVwU2V0VmFsdWUobi5pbXBbMF0sImV4dC5wcmViaWQuc3RvcmVkYXVjdGlvbnJlc3BvbnNlLmlkIix0LnN0b3JlZEF1Y3Rpb25SZXNwb25zZS50b1N0cmluZygpKSxnLmRlZXBTZXRWYWx1ZShuLmltcFswXSwiZXh0LnByZWJpZC5hdWN0aW9udGltZXN0YW1wIix1LmF1Y3Rpb25TdGFydCkse21ldGhvZDoiUE9TVCIsdXJsOiJodHRwczovLyIuY29uY2F0KF8udmlkZW9Ib3N0fHwicHJlYmlkLXNlcnZlciIsIi5ydWJpY29ucHJvamVjdC5jb20vb3BlbnJ0YjIvYXVjdGlvbiIpLGRhdGE6bixiaWRSZXF1ZXN0OnR9fSk7cmV0dXJuITAhPT1fLnNpbmdsZVJlcXVlc3Q/ci5jb25jYXQoZS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuImJhbm5lciI9PT1tKGUpfSkubWFwKGZ1bmN0aW9uKGUpe3ZhciBpPUEuY3JlYXRlU2xvdFBhcmFtcyhlLHUpO3JldHVybnttZXRob2Q6IkdFVCIsdXJsOiJodHRwczovLyIuY29uY2F0KF8uYmFubmVySG9zdHx8ImZhc3RsYW5lIiwiLnJ1Ymljb25wcm9qZWN0LmNvbS9hL2FwaS9mYXN0bGFuZS5qc29uIiksZGF0YTpBLmdldE9yZGVyZWRQYXJhbXMoaSkucmVkdWNlKGZ1bmN0aW9uKGUscil7dmFyIHQ9aVtyXTtyZXR1cm4gZy5pc1N0cih0KSYmIiIhPT10fHxnLmlzTnVtYmVyKHQpPyIiLmNvbmNhdChlKS5jb25jYXQodyhyLHQpLCImIik6ZX0sIiIpKyJzbG90cz0xJnJhbmQ9Ii5jb25jYXQoTWF0aC5yYW5kb20oKSksYmlkUmVxdWVzdDplfX0pKToobj1lLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4iYmFubmVyIj09PW0oZSl9KS5yZWR1Y2UoZnVuY3Rpb24oZSxyKXtyZXR1cm4oZVtyLnBhcmFtcy5zaXRlSWRdPWVbci5wYXJhbXMuc2l0ZUlkXXx8W10pLnB1c2gociksZX0se30pLHIuY29uY2F0KE9iamVjdC5rZXlzKG4pLnJlZHVjZShmdW5jdGlvbihyLGUpe3ZhciB0LGk7cmV0dXJuIHQ9bltlXSxpPTEwLHQubWFwKGZ1bmN0aW9uKGUscil7cmV0dXJuIHIlaT09MD90LnNsaWNlKHIscitpKTpudWxsfSkuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBlfSkuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgaT1BLmNvbWJpbmVTbG90VXJsUGFyYW1zKGUubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBBLmNyZWF0ZVNsb3RQYXJhbXMoZSx1KX0pKTtyLnB1c2goe21ldGhvZDoiR0VUIix1cmw6Imh0dHBzOi8vIi5jb25jYXQoXy5iYW5uZXJIb3N0fHwiZmFzdGxhbmUiLCIucnViaWNvbnByb2plY3QuY29tL2EvYXBpL2Zhc3RsYW5lLmpzb24iKSxkYXRhOkEuZ2V0T3JkZXJlZFBhcmFtcyhpKS5yZWR1Y2UoZnVuY3Rpb24oZSxyKXt2YXIgdD1pW3JdO3JldHVybiBnLmlzU3RyKHQpJiYiIiE9PXR8fGcuaXNOdW1iZXIodCk/IiIuY29uY2F0KGUpLmNvbmNhdCh3KHIsdCksIiYiKTplfSwiIikrInNsb3RzPSIuY29uY2F0KGUubGVuZ3RoLCImcmFuZD0iKS5jb25jYXQoTWF0aC5yYW5kb20oKSksYmlkUmVxdWVzdDplfSl9KSxyfSxbXSkpKX0sZ2V0T3JkZXJlZFBhcmFtczpmdW5jdGlvbihlKXt2YXIgcj0vXnRnX3YvLHQ9L150Z19pLyxpPS9eZWlkX3xedHBpZF8vLG49WyJhY2NvdW50X2lkIiwic2l0ZV9pZCIsInpvbmVfaWQiLCJzaXplX2lkIiwiYWx0X3NpemVfaWRzIiwicF9wb3MiLCJnZHByIiwiZ2Rwcl9jb25zZW50IiwidXNfcHJpdmFjeSIsInJwX3NjaGFpbiJdLmNvbmNhdChPYmplY3Qua2V5cyhlKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGkudGVzdChlKX0pKS5jb25jYXQoWyJ4X2xpdmVyYW1waWRsIiwicHB1aWQiLCJyZiIsInBfZ2VvLmxhdGl0dWRlIiwicF9nZW8ubG9uZ2l0dWRlIiwia3ciXSkuY29uY2F0KE9iamVjdC5rZXlzKGUpLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gci50ZXN0KGUpfSkpLmNvbmNhdChPYmplY3Qua2V5cyhlKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIHQudGVzdChlKX0pKS5jb25jYXQoWyJ0a19mbGludCIsInhfc291cmNlLnRpZCIsInhfc291cmNlLnBjaGFpbiIsInBfc2NyZWVuX3JlcyIsInJwX2Zsb29yIiwicnBfc2VjdXJlIiwidGtfdXNlcl9rZXkiXSk7cmV0dXJuIG4uY29uY2F0KE9iamVjdC5rZXlzKGUpLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4tMT09PW4uaW5kZXhPZihlKX0pKX0sY29tYmluZVNsb3RVcmxQYXJhbXM6ZnVuY3Rpb24obil7aWYoMT09PW4ubGVuZ3RoKXJldHVybiBuWzBdO3ZhciBpPW4ucmVkdWNlKGZ1bmN0aW9uKHIsdCxpKXtyZXR1cm4gT2JqZWN0LmtleXModCkuZm9yRWFjaChmdW5jdGlvbihlKXtyLmhhc093blByb3BlcnR5KGUpfHwocltlXT1uZXcgQXJyYXkobi5sZW5ndGgpKSxyW2VdLnNwbGljZShpLDEsdFtlXSl9KSxyfSx7fSksbz1uZXcgUmVnRXhwKCJeKFteO10qKSg7XFwxKSskIik7cmV0dXJuIE9iamVjdC5rZXlzKGkpLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHI9aVtlXS5qb2luKCI7IiksdD1yLm1hdGNoKG8pO2lbZV09dD90WzFdOnJ9KSxpfSxjcmVhdGVTbG90UGFyYW1zOmZ1bmN0aW9uKGUscil7ZS5zdGFydFRpbWU9KG5ldyBEYXRlKS5nZXRUaW1lKCk7dmFyIHQsaT1lLnBhcmFtcyxuPWooZSwiYmFubmVyIiksbz15KGkubGF0TG9uZ3x8W10sMiksYT1vWzBdLHM9b1sxXSxjPXthY2NvdW50X2lkOmkuYWNjb3VudElkLHNpdGVfaWQ6aS5zaXRlSWQsem9uZV9pZDppLnpvbmVJZCxzaXplX2lkOm5bMF0sYWx0X3NpemVfaWRzOm4uc2xpY2UoMSkuam9pbigiLCIpfHx2b2lkIDAscnBfZmxvb3I6LjAxPChpLmZsb29yPXBhcnNlRmxvYXQoaS5mbG9vcikpP2kuZmxvb3I6LjAxLHJwX3NlY3VyZToiMSIsdGtfZmxpbnQ6IiIuY29uY2F0KF8uaW50X3R5cGV8fCJwYmpzX2xpdGUiLCJfdjQuMTcuMCIpLCJ4X3NvdXJjZS50aWQiOmUudHJhbnNhY3Rpb25JZCwieF9zb3VyY2UucGNoYWluIjppLnBjaGFpbixwX3NjcmVlbl9yZXM6W3dpbmRvdy5zY3JlZW4ud2lkdGgsd2luZG93LnNjcmVlbi5oZWlnaHRdLmpvaW4oIngiKSx0a191c2VyX2tleTppLnVzZXJJZCwicF9nZW8ubGF0aXR1ZGUiOmlzTmFOKHBhcnNlRmxvYXQoYSkpP3ZvaWQgMDpwYXJzZUZsb2F0KGEpLnRvRml4ZWQoNCksInBfZ2VvLmxvbmdpdHVkZSI6aXNOYU4ocGFyc2VGbG9hdChzKSk/dm9pZCAwOnBhcnNlRmxvYXQocykudG9GaXhlZCg0KSwidGdfZmwuZWlkIjplLmNvZGUscmY6UyhlLHIpfTtpZigiZnVuY3Rpb24iPT10eXBlb2YgZS5nZXRGbG9vciYmIV8uZGlzYWJsZUZsb29ycyl7dHJ5e3Q9ZS5nZXRGbG9vcih7Y3VycmVuY3k6IlVTRCIsbWVkaWFUeXBlOiJiYW5uZXIiLHNpemU6IioifSl9Y2F0Y2goZSl7Zy5sb2dFcnJvcigiUnViaWNvbjogZ2V0Rmxvb3IgdGhyZXcgYW4gZXJyb3I6ICIsZSl9Yy5ycF9oYXJkX2Zsb29yPSJvYmplY3QiIT09aCh0KXx8IlVTRCIhPT10LmN1cnJlbmN5fHxpc05hTihwYXJzZUludCh0LmZsb29yKSk/dm9pZCAwOnQuZmxvb3J9Yy5wX3Bvcz0iYXRmIj09PWkucG9zaXRpb258fCJidGYiPT09aS5wb3NpdGlvbj9pLnBvc2l0aW9uOiIiO3ZhciBkPXYuYi5nZXRDb25maWcoInVzZXIuaWQiKTtkJiYoYy5wcHVpZD1kKSxlLnVzZXJJZEFzRWlkcyYmZS51c2VySWRBc0VpZHMuZm9yRWFjaChmdW5jdGlvbihyKXt0cnl7dmFyIGU7ImFkc2VydmVyLm9yZyI9PT1yLnNvdXJjZT8oYy50cGlkX3RkaWQ9ci51aWRzWzBdLmlkLGNbImVpZF9hZHNlcnZlci5vcmciXT1yLnVpZHNbMF0uaWQpOiJsaXZlaW50ZW50LmNvbSI9PT1yLnNvdXJjZT8oY1sidHBpZF9saXZlaW50ZW50LmNvbSJdPXIudWlkc1swXS5pZCxjWyJlaWRfbGl2ZWludGVudC5jb20iXT1yLnVpZHNbMF0uaWQsci5leHQmJkFycmF5LmlzQXJyYXkoci5leHQuc2VnbWVudHMpJiZyLmV4dC5zZWdtZW50cy5sZW5ndGgmJihjWyJ0Z192LkxJc2VnIl09ci5leHQuc2VnbWVudHMuam9pbigiLCIpKSk6ImxpdmVyYW1wLmNvbSI9PT1yLnNvdXJjZT9jLnhfbGl2ZXJhbXBpZGw9ci51aWRzWzBdLmlkOiJzaGFyZWRpZC5vcmciPT09ci5zb3VyY2U/Y1siZWlkX3NoYXJlZGlkLm9yZyJdPSIiLmNvbmNhdChyLnVpZHNbMF0uaWQsIl4iKS5jb25jYXQoci51aWRzWzBdLmF0eXBlLCJeIikuY29uY2F0KHIudWlkc1swXS5leHQmJnIudWlkc1swXS5leHQudGhpcmR8fCIiKToiaWQ1LXN5bmMuY29tIj09PXIuc291cmNlP2NbImVpZF9pZDUtc3luYy5jb20iXT0iIi5jb25jYXQoci51aWRzWzBdLmlkLCJeIikuY29uY2F0KHIudWlkc1swXS5hdHlwZSwiXiIpLmNvbmNhdChyLmV4dCYmci5leHQubGlua1R5cGV8fCIiKTpjWyJlaWRfIi5jb25jYXQoci5zb3VyY2UpXT0iIi5jb25jYXQoci51aWRzWzBdLmlkLCJeIikuY29uY2F0KHIudWlkc1swXS5hdHlwZXx8IiIpLGMucHB1aWR8fChlPWIoKShyLnVpZHMsZnVuY3Rpb24oZSl7cmV0dXJuIGUuZXh0JiYicHB1aWQiPT09ZS5leHQuc3R5cGV9KSkmJmUuaWQmJihjLnBwdWlkPWUuaWQpfWNhdGNoKGUpe2cubG9nV2FybigiUnViaWNvbjogZXJyb3IgcmVhZGluZyBlaWQ6IixyLGUpfX0pLHIuZ2RwckNvbnNlbnQmJigiYm9vbGVhbiI9PXR5cGVvZiByLmdkcHJDb25zZW50LmdkcHJBcHBsaWVzJiYoYy5nZHByPU51bWJlcihyLmdkcHJDb25zZW50LmdkcHJBcHBsaWVzKSksYy5nZHByX2NvbnNlbnQ9ci5nZHByQ29uc2VudC5jb25zZW50U3RyaW5nKSxyLnVzcENvbnNlbnQmJihjLnVzX3ByaXZhY3k9ZW5jb2RlVVJJQ29tcG9uZW50KHIudXNwQ29uc2VudCkpO3ZhciBwPXgoe30saS52aXNpdG9yLHYuYi5nZXRDb25maWcoImZwZC51c2VyIikpO09iamVjdC5rZXlzKHApLmZvckVhY2goZnVuY3Rpb24oZSl7bnVsbCE9cFtlXSYmImtleXdvcmRzIiE9PWUmJihjWyJ0Z192LiIuY29uY2F0KGUpXT0ib2JqZWN0IiE9PWgocFtlXSl8fEFycmF5LmlzQXJyYXkocFtlXSk/cFtlXS50b1N0cmluZygpOkpTT04uc3RyaW5naWZ5KHBbZV0pKX0pO3ZhciB1PXgoe30saS5pbnZlbnRvcnksdi5iLmdldENvbmZpZygiZnBkLmNvbnRleHQiKSk7T2JqZWN0LmtleXModSkuZm9yRWFjaChmdW5jdGlvbihlKXtudWxsIT11W2VdJiYia2V5d29yZHMiIT09ZSYmKGNbInRnX2kuIi5jb25jYXQoZSldPSJvYmplY3QiIT09aCh1W2VdKXx8QXJyYXkuaXNBcnJheSh1W2VdKT91W2VdLnRvU3RyaW5nKCk6SlNPTi5zdHJpbmdpZnkodVtlXSkpfSk7dmFyIGw9KGkua2V5d29yZHN8fFtdKS5jb25jYXQoZy5kZWVwQWNjZXNzKHYuYi5nZXRDb25maWcoImZwZC51c2VyIiksImtleXdvcmRzIil8fFtdLGcuZGVlcEFjY2Vzcyh2LmIuZ2V0Q29uZmlnKCJmcGQuY29udGV4dCIpLCJrZXl3b3JkcyIpfHxbXSk7Yy5rdz1BcnJheS5pc0FycmF5KGwpJiZsLmxlbmd0aD9sLmpvaW4oIiwiKToiIjt2YXIgbT1nLmRlZXBBY2Nlc3MoZSwiZnBkLmNvbnRleHQucGJBZFNsb3QiKTsic3RyaW5nIj09dHlwZW9mIG0mJm0mJihjWyJ0Z19pLnBiYWRzbG90Il09bS5yZXBsYWNlKC9eXC8rLywiIikpO3ZhciBmPWcuZGVlcEFjY2VzcyhlLCJmcGQuY29udGV4dC5hZFNlcnZlci5hZFNsb3QiKTtyZXR1cm4ic3RyaW5nIj09dHlwZW9mIGYmJmYmJihjWyJ0Z19pLmRmcF9hZF91bml0X2NvZGUiXT1mLnJlcGxhY2UoL15cLysvLCIiKSksITA9PT12LmIuZ2V0Q29uZmlnKCJjb3BwYSIpJiYoYy5jb3BwYT0xKSxlLnNjaGFpbiYmayhlLnNjaGFpbikmJihjLnJwX3NjaGFpbj1BLnNlcmlhbGl6ZVN1cHBseUNoYWluKGUuc2NoYWluKSksY30sc2VyaWFsaXplU3VwcGx5Q2hhaW46ZnVuY3Rpb24oZSl7aWYoIWsoZSkpcmV0dXJuIiI7dmFyIHI9ZS52ZXIsdD1lLmNvbXBsZXRlLGk9ZS5ub2RlcztyZXR1cm4iIi5jb25jYXQociwiLCIpLmNvbmNhdCh0LCIhIikuY29uY2F0KEEuc2VyaWFsaXplU3VwcGx5Q2hhaW5Ob2RlcyhpKSl9LHNlcmlhbGl6ZVN1cHBseUNoYWluTm9kZXM6ZnVuY3Rpb24oZSl7dmFyIHQ9WyJhc2kiLCJzaWQiLCJocCIsInJpZCIsIm5hbWUiLCJkb21haW4iXTtyZXR1cm4gZS5tYXAoZnVuY3Rpb24ocil7cmV0dXJuIHQubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlbmNvZGVVUklDb21wb25lbnQocltlXXx8IiIpfSkuam9pbigiLCIpfSkuam9pbigiISIpfSxpbnRlcnByZXRSZXNwb25zZTpmdW5jdGlvbihjLGUpe3ZhciBkPWUuYmlkUmVxdWVzdDtpZighKGM9Yy5ib2R5KXx8Im9iamVjdCIhPT1oKGMpKXJldHVybltdO2lmKGMuc2VhdGJpZCl7dmFyIHI9Zy5kZWVwQWNjZXNzKGMsImV4dC5lcnJvcnMucnViaWNvbiIpO0FycmF5LmlzQXJyYXkocikmJjA8ci5sZW5ndGgmJmcubG9nV2FybigiUnViaWNvbjogRXJyb3IgaW4gdmlkZW8gcmVzcG9uc2UiKTt2YXIgbz1bXTtyZXR1cm4gYy5zZWF0YmlkLmZvckVhY2goZnVuY3Rpb24obil7KG4uYmlkfHxbXSkuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgcj17cmVxdWVzdElkOmQuYmlkSWQsY3VycmVuY3k6Yy5jdXJ8fCJVU0QiLGNyZWF0aXZlSWQ6ZS5jcmlkLGNwbTplLnByaWNlfHwwLGJpZGRlckNvZGU6bi5zZWF0LHR0bDozMDAsbmV0UmV2ZW51ZTohMSE9PV8ubmV0UmV2ZW51ZSx3aWR0aDplLnd8fGcuZGVlcEFjY2VzcyhkLCJtZWRpYVR5cGVzLnZpZGVvLnciKXx8Zy5kZWVwQWNjZXNzKGQsInBhcmFtcy52aWRlby5wbGF5ZXJXaWR0aCIpLGhlaWdodDplLmh8fGcuZGVlcEFjY2VzcyhkLCJtZWRpYVR5cGVzLnZpZGVvLmgiKXx8Zy5kZWVwQWNjZXNzKGQsInBhcmFtcy52aWRlby5wbGF5ZXJIZWlnaHQiKX07ZS5pZCYmKHIuc2VhdEJpZElkPWUuaWQpLGUuZGVhbGlkJiYoci5kZWFsSWQ9ZS5kZWFsaWQpLGUuYWRvbWFpbiYmZy5kZWVwU2V0VmFsdWUociwibWV0YS5hZHZlcnRpc2VyRG9tYWlucyIsQXJyYXkuaXNBcnJheShlLmFkb21haW4pP2UuYWRvbWFpbjpbZS5hZG9tYWluXSksZy5kZWVwQWNjZXNzKGUsImV4dC5iaWRkZXIucnAuYWR2aWQiKSYmZy5kZWVwU2V0VmFsdWUociwibWV0YS5hZHZlcnRpc2VySWQiLGUuZXh0LmJpZGRlci5ycC5hZHZpZCk7dmFyIHQsaT1nLmRlZXBBY2Nlc3MoYywiZXh0LnJlc3BvbnNldGltZW1pbGxpcy5ydWJpY29uIik7ZCYmaSYmKGQuc2VydmVyUmVzcG9uc2VUaW1lTXM9aSksZy5kZWVwQWNjZXNzKGUsImV4dC5wcmViaWQudHlwZSIpPT09cC5kPyhyLm1lZGlhVHlwZT1wLmQsZy5kZWVwU2V0VmFsdWUociwibWV0YS5tZWRpYVR5cGUiLHAuZCksKHQ9Zy5kZWVwQWNjZXNzKGUsImV4dC5wcmViaWQudGFyZ2V0aW5nIikpJiYib2JqZWN0Ij09PWgodCkmJihyLmFkc2VydmVyVGFyZ2V0aW5nPXQpLGUuZXh0LnByZWJpZC5jYWNoZSYmIm9iamVjdCI9PT1oKGUuZXh0LnByZWJpZC5jYWNoZS52YXN0WG1sKSYmZS5leHQucHJlYmlkLmNhY2hlLnZhc3RYbWwuY2FjaGVJZCYmZS5leHQucHJlYmlkLmNhY2hlLnZhc3RYbWwudXJsPyhyLnZpZGVvQ2FjaGVLZXk9ZS5leHQucHJlYmlkLmNhY2hlLnZhc3RYbWwuY2FjaGVJZCxyLnZhc3RVcmw9ZS5leHQucHJlYmlkLmNhY2hlLnZhc3RYbWwudXJsKTp0JiZ0LmhiX3V1aWQmJnQuaGJfY2FjaGVfaG9zdCYmdC5oYl9jYWNoZV9wYXRoJiYoci52aWRlb0NhY2hlS2V5PXQuaGJfdXVpZCxyLnZhc3RVcmw9Imh0dHBzOi8vIi5jb25jYXQodC5oYl9jYWNoZV9ob3N0KS5jb25jYXQodC5oYl9jYWNoZV9wYXRoLCI/dXVpZD0iKS5jb25jYXQodC5oYl91dWlkKSksZS5hZG0mJihyLnZhc3RYbWw9ZS5hZG0pLGUubnVybCYmKHIudmFzdFVybD1lLm51cmwpLCFyLnZhc3RVcmwmJmUubnVybCYmKHIudmFzdFVybD1lLm51cmwpKTpnLmxvZ1dhcm4oIlJ1Ymljb246IHZpZGVvIHJlc3BvbnNlIHJlY2VpdmVkIG5vbi12aWRlbyBtZWRpYSB0eXBlIiksby5wdXNoKHIpfSl9KSxvfXZhciB0PWMuYWRzO3JldHVybiJvYmplY3QiIT09aChkKXx8QXJyYXkuaXNBcnJheShkKXx8InZpZGVvIiE9PW0oZCl8fCJvYmplY3QiIT09aCh0KXx8KHQ9dFtkLmFkVW5pdENvZGVdKSwhQXJyYXkuaXNBcnJheSh0KXx8dC5sZW5ndGg8MT9bXTp0LnJlZHVjZShmdW5jdGlvbihlLHIsdCl7aWYoIm9rIiE9PXIuc3RhdHVzKXJldHVybiBlO3ZhciBpLG4sbyxhLHM9QXJyYXkuaXNBcnJheShkKT9kW3RdOmQ7cmV0dXJuIHMmJiJvYmplY3QiPT09aChzKT8oaT17cmVxdWVzdElkOnMuYmlkSWQsY3VycmVuY3k6IlVTRCIsY3JlYXRpdmVJZDpyLmNyZWF0aXZlX2lkfHwiIi5jb25jYXQoci5uZXR3b3JrfHwiIiwiLSIpLmNvbmNhdChyLmFkdmVydGlzZXJ8fCIiKSxjcG06ci5jcG18fDAsZGVhbElkOnIuZGVhbCx0dGw6MzAwLG5ldFJldmVudWU6ITEhPT1fLm5ldFJldmVudWUscnViaWNvbjp7YWR2ZXJ0aXNlcklkOnIuYWR2ZXJ0aXNlcixuZXR3b3JrSWQ6ci5uZXR3b3JrfSxtZXRhOnthZHZlcnRpc2VySWQ6ci5hZHZlcnRpc2VyLG5ldHdvcmtJZDpyLm5ldHdvcmssbWVkaWFUeXBlOnAuYn19LHIuY3JlYXRpdmVfdHlwZSYmKGkubWVkaWFUeXBlPXIuY3JlYXRpdmVfdHlwZSksci5hZG9tYWluJiYoaS5tZXRhLmFkdmVydGlzZXJEb21haW5zPUFycmF5LmlzQXJyYXkoci5hZG9tYWluKT9yLmFkb21haW46W3IuYWRvbWFpbl0pLHIuY3JlYXRpdmVfdHlwZT09PXAuZD8oaS53aWR0aD1zLnBhcmFtcy52aWRlby5wbGF5ZXJXaWR0aCxpLmhlaWdodD1zLnBhcmFtcy52aWRlby5wbGF5ZXJIZWlnaHQsaS52YXN0VXJsPXIuY3JlYXRpdmVfZGVwb3RfdXJsLGkuaW1wcmVzc2lvbl9pZD1yLmltcHJlc3Npb25faWQsaS52aWRlb0NhY2hlS2V5PXIuaW1wcmVzc2lvbl9pZCk6KGkuYWQ9KG89ci5zY3JpcHQsYT1yLmltcHJlc3Npb25faWQsIjxodG1sPlxuPGhlYWQ+PHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPmluRGFwSUY9dHJ1ZTs8XC9zY3JpcHQ+PC9oZWFkPlxuPGJvZHkgc3R5bGU9J21hcmdpbiA6IDA7IHBhZGRpbmc6IDA7Jz5cblx4M2MhLS0gUnViaWNvbiBQcm9qZWN0IEFkIFRhZyAtLVx4M2VcbjxkaXYgZGF0YS1ycC1pbXByZXNzaW9uLWlkPSciLmNvbmNhdChhLCInPlxuPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPiIpLmNvbmNhdChvLCI8XC9zY3JpcHQ+XG48L2Rpdj5cbjwvYm9keT5cbjwvaHRtbD4iKSksbj15KHVbci5zaXplX2lkXS5zcGxpdCgieCIpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gTnVtYmVyKGUpfSksMiksaS53aWR0aD1uWzBdLGkuaGVpZ2h0PW5bMV0pLGkucnViaWNvblRhcmdldGluZz0oQXJyYXkuaXNBcnJheShyLnRhcmdldGluZyk/ci50YXJnZXRpbmc6W10pLnJlZHVjZShmdW5jdGlvbihlLHIpe3JldHVybiBlW3Iua2V5XT1yLnZhbHVlc1swXSxlfSx7cnBmbF9lbGVtaWQ6cy5hZFVuaXRDb2RlfSksZS5wdXNoKGkpKTpnLmxvZ0Vycm9yKCJSdWJpY29uOiBiaWRSZXF1ZXN0IHVuZGVmaW5lZCBhdCBpbmRleCBwb3NpdGlvbjoiLmNvbmNhdCh0KSxkLGMpLGV9LFtdKS5zb3J0KGZ1bmN0aW9uKGUscil7cmV0dXJuKHIuY3BtfHwwKS0oZS5jcG18fDApfSl9LGdldFVzZXJTeW5jczpmdW5jdGlvbihlLHIsdCxpKXtpZigheiYmZS5pZnJhbWVFbmFibGVkKXt2YXIgbj0iIjtyZXR1cm4gdCYmInN0cmluZyI9PXR5cGVvZiB0LmNvbnNlbnRTdHJpbmcmJigiYm9vbGVhbiI9PXR5cGVvZiB0LmdkcHJBcHBsaWVzP24rPSI/Z2Rwcj0iLmNvbmNhdChOdW1iZXIodC5nZHByQXBwbGllcyksIiZnZHByX2NvbnNlbnQ9IikuY29uY2F0KHQuY29uc2VudFN0cmluZyk6bis9Ij9nZHByX2NvbnNlbnQ9Ii5jb25jYXQodC5jb25zZW50U3RyaW5nKSksaSYmKG4rPSIiLmNvbmNhdChuPyImIjoiPyIsInVzX3ByaXZhY3k9IikuY29uY2F0KGVuY29kZVVSSUNvbXBvbmVudChpKSkpLHo9ITAse3R5cGU6ImlmcmFtZSIsdXJsOiJodHRwczovLyIuY29uY2F0KF8uc3luY0hvc3R8fCJldXMiLCIucnViaWNvbnByb2plY3QuY29tL3VzeW5jLmh0bWwiKStufX19LHRyYW5zZm9ybUJpZFBhcmFtczpmdW5jdGlvbihlKXtyZXR1cm4gZy5jb252ZXJ0VHlwZXMoe2FjY291bnRJZDoibnVtYmVyIixzaXRlSWQ6Im51bWJlciIsem9uZUlkOiJudW1iZXIifSxlKX19O2Z1bmN0aW9uIFMoZSxyKXt2YXIgdD12LmIuZ2V0Q29uZmlnKCJwYWdlVXJsIiksdD1lLnBhcmFtcy5yZWZlcnJlcj9lLnBhcmFtcy5yZWZlcnJlcjp0fHxyLnJlZmVyZXJJbmZvLnJlZmVyZXI7cmV0dXJuIGUucGFyYW1zLnNlY3VyZT90LnJlcGxhY2UoL15odHRwOi9pLCJodHRwczoiKTp0fWZ1bmN0aW9uIGooZSxyKXt2YXIgdD1lLnBhcmFtcztpZigidmlkZW8iPT09cil7dmFyIGk9W107cmV0dXJuIHQudmlkZW8mJnQudmlkZW8ucGxheWVyV2lkdGgmJnQudmlkZW8ucGxheWVySGVpZ2h0P2k9W3QudmlkZW8ucGxheWVyV2lkdGgsdC52aWRlby5wbGF5ZXJIZWlnaHRdOkFycmF5LmlzQXJyYXkoZy5kZWVwQWNjZXNzKGUsIm1lZGlhVHlwZXMudmlkZW8ucGxheWVyU2l6ZSIpKSYmMT09PWUubWVkaWFUeXBlcy52aWRlby5wbGF5ZXJTaXplLmxlbmd0aD9pPWUubWVkaWFUeXBlcy52aWRlby5wbGF5ZXJTaXplWzBdOkFycmF5LmlzQXJyYXkoZS5zaXplcykmJjA8ZS5zaXplcy5sZW5ndGgmJkFycmF5LmlzQXJyYXkoZS5zaXplc1swXSkmJjE8ZS5zaXplc1swXS5sZW5ndGgmJihpPWUuc2l6ZXNbMF0pLGl9dmFyIG49W107cmV0dXJuIEFycmF5LmlzQXJyYXkodC5zaXplcyk/bj10LnNpemVzOnZvaWQgMCE9PWcuZGVlcEFjY2VzcyhlLCJtZWRpYVR5cGVzLmJhbm5lci5zaXplcyIpP249YShlLm1lZGlhVHlwZXMuYmFubmVyLnNpemVzKTpBcnJheS5pc0FycmF5KGUuc2l6ZXMpJiYwPGUuc2l6ZXMubGVuZ3RoP249YShlLnNpemVzKTpnLmxvZ1dhcm4oIlJ1Ymljb246IG5vIHNpemVzIGFyZSBzZXR1cCBvciBmb3VuZCIpLGQobil9ZnVuY3Rpb24gYShlKXtyZXR1cm4gZy5wYXJzZVNpemVzSW5wdXQoZSkucmVkdWNlKGZ1bmN0aW9uKGUscil7dmFyIHQ9cGFyc2VJbnQodVtyXSwxMCk7cmV0dXJuIHQmJmUucHVzaCh0KSxlfSxbXSl9ZnVuY3Rpb24gcyhlKXtyZXR1cm4ib2JqZWN0Ij09PWgoZy5kZWVwQWNjZXNzKGUsInBhcmFtcy52aWRlbyIpKSYmdm9pZCAwIT09Zy5kZWVwQWNjZXNzKGUsIm1lZGlhVHlwZXMuIi5jb25jYXQocC5kKSl9ZnVuY3Rpb24gbShlLHIpe3ZhciB0PTE8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09ciYmcjtyZXR1cm4gcyhlKT8tMT09PVsib3V0c3RyZWFtIiwiaW5zdHJlYW0iXS5pbmRleE9mKGcuZGVlcEFjY2VzcyhlLCJtZWRpYVR5cGVzLiIuY29uY2F0KHAuZCwiLmNvbnRleHQiKSkpP3ZvaWQodCYmZy5sb2dFcnJvcigiUnViaWNvbjogbWVkaWFUeXBlcy52aWRlby5jb250ZXh0IG11c3QgYmUgb3V0c3RyZWFtIG9yIGluc3RyZWFtIikpOmooZSwidmlkZW8iKS5sZW5ndGg8Mj92b2lkKHQmJmcubG9nRXJyb3IoIlJ1Ymljb246IGNvdWxkIG5vdCBkZXRlcm1pbmUgdGhlIHBsYXllclNpemUgb2YgdGhlIHZpZGVvIikpOih0JiZnLmxvZ01lc3NhZ2UoIlJ1Ymljb246IG1ha2luZyB2aWRlbyByZXF1ZXN0IGZvciBhZFVuaXQiLGUuYWRVbml0Q29kZSksInZpZGVvIik6MD09PWooZSwiYmFubmVyIikubGVuZ3RoP3ZvaWQodCYmZy5sb2dFcnJvcigiUnViaWNvbjogY291bGQgbm90IGRldGVybWluZSB0aGUgc2l6ZXMgZm9yIGJhbm5lciByZXF1ZXN0IikpOih0JiZnLmxvZ01lc3NhZ2UoIlJ1Ymljb246IG1ha2luZyBiYW5uZXIgcmVxdWVzdCBmb3IgYWRVbml0IixlLmFkVW5pdENvZGUpLCJiYW5uZXIiKX12YXIgYz1mdW5jdGlvbigpe3JldHVybiBfPXt9fTtmdW5jdGlvbiBkKGUpe3ZhciBuPVsxNSwyLDldO3JldHVybiBlLnNvcnQoZnVuY3Rpb24oZSxyKXt2YXIgdD1uLmluZGV4T2YoZSksaT1uLmluZGV4T2Yocik7cmV0dXJuLTE8dHx8LTE8aT8tMT09PXQ/MTotMT09PWk/LTE6dC1pOmUtcn0pfWZ1bmN0aW9uIGYoZSl7dmFyIHI9cGFyc2VJbnQoZy5kZWVwQWNjZXNzKGUsInBhcmFtcy52aWRlby5zaXplX2lkIikpO3JldHVybiBpc05hTihyKT8ib3V0c3RyZWFtIj09PWcuZGVlcEFjY2VzcyhlLCJtZWRpYVR5cGVzLiIuY29uY2F0KHAuZCwiLmNvbnRleHQiKSk/MjAzOjIwMTpyfWZ1bmN0aW9uIEMoZSl7cmV0dXJue3Jhbmdlczp7bG93Olt7bWF4OjUsaW5jcmVtZW50Oi41fV0sbWVkaXVtOlt7bWF4OjIwLGluY3JlbWVudDouMX1dLGhpZ2g6W3ttYXg6MjAsaW5jcmVtZW50Oi4wMX1dLGF1dG86W3ttYXg6NSxpbmNyZW1lbnQ6LjA1fSx7bWluOjUsbWF4OjEwLGluY3JlbWVudDouMX0se21pbjoxMCxtYXg6MjAsaW5jcmVtZW50Oi41fV0sZGVuc2U6W3ttYXg6MyxpbmNyZW1lbnQ6LjAxfSx7bWluOjMsbWF4OjgsaW5jcmVtZW50Oi4wNX0se21pbjo4LG1heDoyMCxpbmNyZW1lbnQ6LjV9XSxjdXN0b206ZS5nZXRDb25maWcoImN1c3RvbVByaWNlQnVja2V0IikmJmUuZ2V0Q29uZmlnKCJjdXN0b21QcmljZUJ1Y2tldCIpLmJ1Y2tldHN9W2UuZ2V0Q29uZmlnKCJwcmljZUdyYW51bGFyaXR5IildfX1mdW5jdGlvbiBJKHIpe3ZhciB0PSEwLGU9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFtdKSxpPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCgwKSxuPXttaW1lczplLHByb3RvY29sczplLG1heGR1cmF0aW9uOmksbGluZWFyaXR5OmksYXBpOmV9O3JldHVybiBPYmplY3Qua2V5cyhuKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChnLmRlZXBBY2Nlc3MociwibWVkaWFUeXBlcy52aWRlby4iK2UpKSE9PW5bZV0mJih0PSExLGcubG9nRXJyb3IoIlJ1Ymljb246IG1lZGlhVHlwZXMudmlkZW8uIitlKyIgaXMgcmVxdWlyZWQgYW5kIG11c3QgYmUgb2YgdHlwZTogIituW2VdKSl9KSx0fWZ1bmN0aW9uIGsoZSl7dmFyIHI9ITEsdD1bImFzaSIsInNpZCIsImhwIl07cmV0dXJuIGUubm9kZXMmJigocj1lLm5vZGVzLnJlZHVjZShmdW5jdGlvbihlLHIpe3JldHVybiBlP3QuZXZlcnkoZnVuY3Rpb24oZSl7cmV0dXJuIHIuaGFzT3duUHJvcGVydHkoZSl9KTplfSwhMCkpfHxnLmxvZ0Vycm9yKCJSdWJpY29uOiByZXF1aXJlZCBzY2hhaW4gcGFyYW1zIG1pc3NpbmciKSkscn1mdW5jdGlvbiB3KGUscil7cmV0dXJuInJwX3NjaGFpbiI9PT1lPyJycF9zY2hhaW49Ii5jb25jYXQocik6IiIuY29uY2F0KGUsIj0iKS5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KHIpKX12YXIgej0hMTtPYmplY3QoaS5yZWdpc3RlckJpZGRlcikoQSl9fSxbNzM0XSk7CnVwYmpzQ2h1bmsoWzEyN10sezc0MjpmdW5jdGlvbihuLGksZSl7bi5leHBvcnRzPWUoNzQzKX0sNzQzOmZ1bmN0aW9uKG4saSxlKXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KGksIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLGkuaXNTY2hhaW5PYmplY3RWYWxpZD1PLGkuaXNWYWxpZFNjaGFpbkNvbmZpZz1sLGkubWFrZUJpZFJlcXVlc3RzSG9vaz1vLGkuaW5pdD1nO3ZhciB0PWUoMyksYz1lKDkpLGE9ZSgwKSxzPSJJbnZhbGlkIHNjaGFpbiBvYmplY3QgZm91bmQ6ICIscj0iIHNob3VsZCBiZSBhIHN0cmluZyIsZj0iIHNob3VsZCBiZSBhbiBJbnRlZ2VyIixkPSIgc2hvdWxkIGJlIGFuIG9iamVjdCIsYj0iIHNob3VsZCBiZSBhbiBBcnJheSIsaD17U1RSSUNUOiJzdHJpY3QiLFJFTEFYRUQ6InJlbGF4ZWQiLE9GRjoib2ZmIn0sdT1bXTtmdW5jdGlvbiBPKG4saSl7dmFyIGU9IkRldGVjdGVkIHNvbWV0aGluZyB3cm9uZyB3aXRoaW4gYW4gc2NoYWluIGNvbmZpZzoiLHQ9IiI7ZnVuY3Rpb24gYyhuKXt0Kz0iXG4iK259ZnVuY3Rpb24gbygpeyghMD09PWk/T2JqZWN0KGEubG9nRXJyb3IpOk9iamVjdChhLmxvZ1dhcm4pKShlLG4sdCl9aWYoIU9iamVjdChhLmlzUGxhaW5PYmplY3QpKG4pJiYoYygic2NoYWluLmNvbmZpZyIrZCksbygpLGkpKXJldHVybiExO2lmKE9iamVjdChhLmlzTnVtYmVyKShuLmNvbXBsZXRlKSYmT2JqZWN0KGEuaXNJbnRlZ2VyKShuLmNvbXBsZXRlKXx8Yygic2NoYWluLmNvbmZpZy5jb21wbGV0ZSIrZiksT2JqZWN0KGEuaXNTdHIpKG4udmVyKXx8Yygic2NoYWluLmNvbmZpZy52ZXIiK3IpLE9iamVjdChhLmhhc093bikobiwiZXh0IikmJihPYmplY3QoYS5pc1BsYWluT2JqZWN0KShuLmV4dCl8fGMoInNjaGFpbi5jb25maWcuZXh0IitkKSksT2JqZWN0KGEuaXNBcnJheSkobi5ub2Rlcykpbi5ub2Rlcy5mb3JFYWNoKGZ1bmN0aW9uKG4saSl7T2JqZWN0KGEuaXNTdHIpKG4uYXNpKXx8Yygic2NoYWluLmNvbmZpZy5ub2Rlc1siLmNvbmNhdChpLCJdLmFzaSIpK3IpLE9iamVjdChhLmlzU3RyKShuLnNpZCl8fGMoInNjaGFpbi5jb25maWcubm9kZXNbIi5jb25jYXQoaSwiXS5zaWQiKStyKSxPYmplY3QoYS5pc051bWJlcikobi5ocCkmJk9iamVjdChhLmlzSW50ZWdlcikobi5ocCl8fGMoInNjaGFpbi5jb25maWcubm9kZXNbIi5jb25jYXQoaSwiXS5ocCIpK2YpLE9iamVjdChhLmhhc093bikobiwicmlkIikmJihPYmplY3QoYS5pc1N0cikobi5yaWQpfHxjKCJzY2hhaW4uY29uZmlnLm5vZGVzWyIuY29uY2F0KGksIl0ucmlkIikrcikpLE9iamVjdChhLmhhc093bikobiwibmFtZSIpJiYoT2JqZWN0KGEuaXNTdHIpKG4ubmFtZSl8fGMoInNjaGFpbi5jb25maWcubm9kZXNbIi5jb25jYXQoaSwiXS5uYW1lIikrcikpLE9iamVjdChhLmhhc093bikobiwiZG9tYWluIikmJihPYmplY3QoYS5pc1N0cikobi5kb21haW4pfHxjKCJzY2hhaW4uY29uZmlnLm5vZGVzWyIuY29uY2F0KGksIl0uZG9tYWluIikrcikpLE9iamVjdChhLmhhc093bikobiwiZXh0IikmJihPYmplY3QoYS5pc1BsYWluT2JqZWN0KShuLmV4dCl8fGMoInNjaGFpbi5jb25maWcubm9kZXNbIi5jb25jYXQoaSwiXS5leHQiKStkKSl9KTtlbHNlIGlmKGMoInNjaGFpbi5jb25maWcubm9kZXMiK2IpLG8oKSxpKXJldHVybiExO3JldHVybiEoMDx0Lmxlbmd0aCYmKG8oKSxpKSl9ZnVuY3Rpb24gbChuKXtyZXR1cm4gdm9pZCAwIT09biYmKCEhT2JqZWN0KGEuaXNQbGFpbk9iamVjdCkobil8fChPYmplY3QoYS5sb2dFcnJvcikocysidGhlIGZvbGxvd2luZyBzY2hhaW4gY29uZmlnIHdpbGwgbm90IGJlIHVzZWQgYXMgc2NoYWluIGlzIG5vdCBhbiBvYmplY3QuIixuKSwhMSkpfWZ1bmN0aW9uIG8obixpKXt2YXIgYz10LmIuZ2V0Q29uZmlnKCJzY2hhaW4iKSxvPXQuYi5nZXRCaWRkZXJDb25maWcoKTtpLmZvckVhY2goZnVuY3Rpb24obil7dmFyIGksZT1uLmJpZGRlckNvZGUsdD1vW2k9ZV0mJm9baV0uc2NoYWlufHxjO24uYmlkcy5mb3JFYWNoKGZ1bmN0aW9uKG4pe3ZhciBpPWZ1bmN0aW9uKG4saSl7dmFyIGU9aC5TVFJJQ1Q7aWYobChuKSl7aWYoT2JqZWN0KGEuaXNTdHIpKG4udmFsaWRhdGlvbikmJi0xIT11LmluZGV4T2Yobi52YWxpZGF0aW9uKSYmKGU9bi52YWxpZGF0aW9uKSxlPT09aC5PRkYpcmV0dXJuIG4uY29uZmlnO2lmKE8obi5jb25maWcsIShlIT09aC5TVFJJQ1QpKSlyZXR1cm4gbi5jb25maWc7T2JqZWN0KGEubG9nRXJyb3IpKHMrImR1ZSB0byB0aGUgJ3N0cmljdCcgdmFsaWRhdGlvbiBzZXR0aW5nLCB0aGlzIHNjaGFpbiBjb25maWcgd2lsbCBub3QgYmUgcGFzc2VkIHRvIGJpZGRlciAnIi5jb25jYXQoaSwiJy4gIFNlZSBhYm92ZSBlcnJvciBmb3IgZGV0YWlscy4iKSl9cmV0dXJuIG51bGx9KHQsZSk7aSYmKG4uc2NoYWluPWkpfSl9KSxuKGkpfWZ1bmN0aW9uIGcoKXtjLmRlZmF1bHQubWFrZUJpZFJlcXVlc3RzLmFmdGVyKG8pfU9iamVjdChhLl9lYWNoKShoLGZ1bmN0aW9uKG4pe3JldHVybiB1LnB1c2gobil9KSxnKCl9fSxbNzQyXSk7CnVwYmpzQ2h1bmsoWzEyMV0sezc1NjpmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXIoNzU3KX0sNzU3OmZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHIuZCh0LCJzaGFyZXRocm91Z2hJbnRlcm5hbCIsZnVuY3Rpb24oKXtyZXR1cm4gc30pLHIuZCh0LCJzaGFyZXRocm91Z2hBZGFwdGVyU3BlYyIsZnVuY3Rpb24oKXtyZXR1cm4gY30pO3ZhciBuPXIoMSksaT1yKDApLG89InNoYXJldGhyb3VnaCIsYT1bMSwxXSxzPXtiNjRFbmNvZGVVbmljb2RlOmQsaGFuZGxlSWZyYW1lOmZ1bmN0aW9uKCl7dmFyIGU9ITE7aWYoIXdpbmRvdy5sb2NrZWRJbkZyYW1lKXt2YXIgdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTt0LnNyYz0iaHR0cHM6Ly9uYXRpdmUuc2hhcmV0aHJvdWdoLmNvbS9hc3NldHMvc2ZwLXNldC10YXJnZXRpbmcuanMiLHQudHlwZT0idGV4dC9qYXZhc2NyaXB0Ijt0cnl7d2luZG93LmRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJib2R5IilbMF0uYXBwZW5kQ2hpbGQodCksZT0hMH1jYXRjaChlKXtpLmxvZ0Vycm9yKCJUcm91YmxlIHdyaXRpbmcgZnJhbWUgYnVzdGVyIHNjcmlwdCwgZXJyb3IgZGV0YWlsczoiLGUpfX1pZighKGU/d2luZG93LnRvcC5TVFImJndpbmRvdy50b3AuU1RSLlRhZzp3aW5kb3cuU1RSJiZ3aW5kb3cuU1RSLlRhZykpe3ZhciByPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpO3Iuc3JjPSJodHRwczovL25hdGl2ZS5zaGFyZXRocm91Z2guY29tL2Fzc2V0cy9zZnAuanMiLHIudHlwZT0idGV4dC9qYXZhc2NyaXB0Ijt0cnl7ZT93aW5kb3cudG9wLmRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJib2R5IilbMF0uYXBwZW5kQ2hpbGQocik6d2luZG93LmRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJib2R5IilbMF0uYXBwZW5kQ2hpbGQocil9Y2F0Y2goZSl7aS5sb2dFcnJvcigiVHJvdWJsZSB3cml0aW5nIHNmcCBzY3JpcHQsIGVycm9yIGRldGFpbHM6IixlKX19fSxpc0xvY2tlZEluRnJhbWU6ZnVuY3Rpb24oKXt3aW5kb3cubG9ja2VkSW5GcmFtZT0hMTt0cnl7d2luZG93LmxvY2tlZEluRnJhbWU9IXdpbmRvdy50b3AuZG9jdW1lbnR9Y2F0Y2goZSl7d2luZG93LmxvY2tlZEluRnJhbWU9ZSBpbnN0YW5jZW9mIERPTUV4Y2VwdGlvbn19LGdldFByb3RvY29sOmZ1bmN0aW9uKCl7cmV0dXJuIGRvY3VtZW50LmxvY2F0aW9uLnByb3RvY29sfX0sYz17Y29kZTpvLGlzQmlkUmVxdWVzdFZhbGlkOmZ1bmN0aW9uKGUpe3JldHVybiEhZS5wYXJhbXMucGtleSYmZS5iaWRkZXI9PT1vfSxidWlsZFJlcXVlc3RzOmZ1bmN0aW9uKGUsbil7cmV0dXJuIGUubWFwKGZ1bmN0aW9uKGUpe3ZhciB0PXtwbGFjZW1lbnRfa2V5OmUucGFyYW1zLnBrZXksYmlkSWQ6ZS5iaWRJZCxjb25zZW50X3JlcXVpcmVkOiExLGluc3RhbnRfcGxheV9jYXBhYmxlOmZ1bmN0aW9uKCl7dmFyIGU9bmF2aWdhdG9yLnVzZXJBZ2VudDtpZighZSlyZXR1cm4hMTt2YXIgdD0vQW5kcm9pZC9pLnRlc3QoZSkscj0vaVBob25lfGlQYWR8aVBvZC9pLnRlc3QoZSksbj1wYXJzZUludCgoL0Nocm9tZVwvKFswLTldKykvLmV4ZWMoZSl8fFswLDBdKVsxXSksaT1wYXJzZUludCgoL0NyaU9TXC8oWzAtOV0rKS8uZXhlYyhlKXx8WzAsMF0pWzFdKSxvPXBhcnNlSW50KCgvVmVyc2lvblwvKFswLTldKykvLmV4ZWMoZSl8fFswLDBdKVsxXSk7cmV0dXJuISEodCYmNTM8PW58fHImJigxMDw9b3x8NTM8PWkpfHwhdCYmIXIpfSgpLGhiU291cmNlOiJwcmViaWQiLGhiVmVyc2lvbjoiNC4xNy4wIixzdHJWZXJzaW9uOiIzLjIuMSJ9LHI9cy5nZXRQcm90b2NvbCgpLmluZGV4T2YoImh0dHAiKTwwO3JldHVybiB0LnNlY3VyZT1yfHwtMTxzLmdldFByb3RvY29sKCkuaW5kZXhPZigiaHR0cHMiKSxuJiZuLmdkcHJDb25zZW50JiZuLmdkcHJDb25zZW50LmNvbnNlbnRTdHJpbmcmJih0LmNvbnNlbnRfc3RyaW5nPW4uZ2RwckNvbnNlbnQuY29uc2VudFN0cmluZyksbiYmbi5nZHByQ29uc2VudCYmKHQuY29uc2VudF9yZXF1aXJlZD0hIW4uZ2RwckNvbnNlbnQuZ2RwckFwcGxpZXMpLG4mJm4udXNwQ29uc2VudCYmKHQudXNfcHJpdmFjeT1uLnVzcENvbnNlbnQpLGUudXNlcklkJiZlLnVzZXJJZC50ZGlkJiYodC50dGR1aWQ9ZS51c2VySWQudGRpZCksZS51c2VySWQmJmUudXNlcklkLnB1YmNpZD90LnB1YmNpZD1lLnVzZXJJZC5wdWJjaWQ6ZS5jcnVtYnMmJmUuY3J1bWJzLnB1YmNpZCYmKHQucHViY2lkPWUuY3J1bWJzLnB1YmNpZCksZS5zY2hhaW4mJih0LnNjaGFpbj1KU09OLnN0cmluZ2lmeShlLnNjaGFpbikpLGUuYmlkZmxvb3ImJih0LmJpZGZsb29yPXBhcnNlRmxvYXQoZS5iaWRmbG9vcikpLHttZXRob2Q6IkdFVCIsdXJsOiJodHRwczovL2J0bHIuc2hhcmV0aHJvdWdoLmNvbS9XWXUyQlh2MS92MSIsZGF0YTp0LHN0ckRhdGE6e3NraXBJZnJhbWVCdXN0aW5nOmUucGFyYW1zLmlmcmFtZSxpZnJhbWVTaXplOmUucGFyYW1zLmlmcmFtZVNpemUsc2l6ZXM6ZS5zaXplc319fSl9LGludGVycHJldFJlc3BvbnNlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS5ib2R5O2lmKCFyfHwhci5jcmVhdGl2ZXN8fCFyLmNyZWF0aXZlcy5sZW5ndGgpcmV0dXJuW107dmFyIG49ci5jcmVhdGl2ZXNbMF0saT1hO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGVbMF0qZVsxXX1yZXR1cm4odC5zdHJEYXRhLmlmcmFtZVNpemV8fHQuc3RyRGF0YS5zaXplcy5sZW5ndGgpJiYoaT10LnN0ckRhdGEuaWZyYW1lU2l6ZT90LnN0ckRhdGEuaWZyYW1lU2l6ZTp0LnN0ckRhdGEuc2l6ZXMucmVkdWNlKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIG8odCk+byhlKT90OmV9KSksW3tyZXF1ZXN0SWQ6dC5kYXRhLmJpZElkLHdpZHRoOmlbMF0saGVpZ2h0OmlbMV0sY3BtOm4uY3BtLGNyZWF0aXZlSWQ6bi5jcmVhdGl2ZS5jcmVhdGl2ZV9rZXksZGVhbElkOm4uY3JlYXRpdmUuZGVhbF9pZCxjdXJyZW5jeToiVVNEIixuZXRSZXZlbnVlOiEwLHR0bDozNjAsYWQ6ZnVuY3Rpb24oZSx0KXt2YXIgcj0ic3RyX3Jlc3BvbnNlXyIuY29uY2F0KHQuZGF0YS5iaWRJZCksbj0nXG4gICAgPGRpdiBkYXRhLXN0ci1uYXRpdmUta2V5PSInLmNvbmNhdCh0LmRhdGEucGxhY2VtZW50X2tleSwnIiBkYXRhLXN0eC1yZXNwb25zZS1uYW1lPSInKS5jb25jYXQociwnIj5cbiAgICA8L2Rpdj5cbiAgICA8c2NyaXB0PnZhciAnKS5jb25jYXQociwnID0gIicpLmNvbmNhdChkKEpTT04uc3RyaW5naWZ5KGUpKSwnIjxcL3NjcmlwdD5cbiAgJyk7dC5zdHJEYXRhLnNraXBJZnJhbWVCdXN0aW5nP24rPSc8c2NyaXB0IHNyYz0iaHR0cHM6Ly9uYXRpdmUuc2hhcmV0aHJvdWdoLmNvbS9hc3NldHMvc2ZwLmpzIj48XC9zY3JpcHQ+JzpuKz0iXG4gICAgICA8c2NyaXB0PlxuICAgICAgICAoIi5jb25jYXQocy5pc0xvY2tlZEluRnJhbWUudG9TdHJpbmcoKSwiKSgpXG4gICAgICA8XC9zY3JpcHQ+XG4gICAgICA8c2NyaXB0PlxuICAgICAgICAoIikuY29uY2F0KHMuaGFuZGxlSWZyYW1lLnRvU3RyaW5nKCksIikoKVxuICAgICAgPFwvc2NyaXB0PiIpO3JldHVybiBufShyLHQpfV19LGdldFVzZXJTeW5jczpmdW5jdGlvbihlLHQscixuKXt2YXIgaT1uPyImdXNfcHJpdmFjeT0iLmNvbmNhdChuKToiIixvPVtdO3JldHVybiBlLnBpeGVsRW5hYmxlZCYmMDx0Lmxlbmd0aCYmdFswXS5ib2R5JiZ0WzBdLmJvZHkuY29va2llU3luY1VybHMmJnRbMF0uYm9keS5jb29raWVTeW5jVXJscy5mb3JFYWNoKGZ1bmN0aW9uKGUpe28ucHVzaCh7dHlwZToiaW1hZ2UiLHVybDplK2l9KX0pLG99LG9uVGltZW91dDpmdW5jdGlvbigpe30sb25CaWRXb246ZnVuY3Rpb24oKXt9LG9uU2V0VGFyZ2V0aW5nOmZ1bmN0aW9uKCl7fX07ZnVuY3Rpb24gZChlKXtyZXR1cm4gYnRvYShlbmNvZGVVUklDb21wb25lbnQoZSkucmVwbGFjZSgvJShbMC05QS1GXXsyfSkvZyxmdW5jdGlvbihlLHQpe3JldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKCIweCIrdCl9KSl9T2JqZWN0KG4ucmVnaXN0ZXJCaWRkZXIpKGMpfX0sWzc1Nl0pOwp1cGJqc0NodW5rKFsxM10sezIyOmZ1bmN0aW9uKGUscix0KXsidXNlIHN0cmljdCI7ci5hPWZ1bmN0aW9uKGUpe3ZhciByPVtdO2Zvcih2YXIgdCBpbiBlKXt2YXIgYTtlLmhhc093blByb3BlcnR5KHQpJiYoInB1YlByb3ZpZGVkSWQiPT09dD9yPXIuY29uY2F0KGUucHViUHJvdmlkZWRJZCk6KGE9ZnVuY3Rpb24oZSxyKXt2YXIgdD1wW3JdO2lmKHQmJmUpe3ZhciBhPXt9O2Euc291cmNlPXQuc291cmNlO3ZhciBpPXMuaXNGbih0LmdldFZhbHVlKT90LmdldFZhbHVlKGUpOmU7aWYocy5pc1N0cihpKSl7dmFyIG4sZCxvPXtpZDppLGF0eXBlOnQuYXR5cGV9O3JldHVybiFzLmlzRm4odC5nZXRVaWRFeHQpfHwobj10LmdldFVpZEV4dChlKSkmJihvLmV4dD1uKSxhLnVpZHM9W29dLCFzLmlzRm4odC5nZXRFaWRFeHQpfHwoZD10LmdldEVpZEV4dChlKSkmJihhLmV4dD1kKSxhfX1yZXR1cm4gbnVsbH0oZVt0XSx0KSkmJnIucHVzaChhKSl9cmV0dXJuIHJ9O3ZhciBzPXQoMCkscD17aW50ZW50SXFJZDp7c291cmNlOiJpbnRlbnRpcS5jb20iLGF0eXBlOjF9LHB1YmNpZDp7c291cmNlOiJwdWJjaWQub3JnIixhdHlwZToxfSx0ZGlkOntzb3VyY2U6ImFkc2VydmVyLm9yZyIsYXR5cGU6MSxnZXRVaWRFeHQ6ZnVuY3Rpb24oKXtyZXR1cm57cnRpUGFydG5lcjoiVERJRCJ9fX0saWQ1aWQ6e2dldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLnVpZH0sc291cmNlOiJpZDUtc3luYy5jb20iLGF0eXBlOjEsZ2V0RWlkRXh0OmZ1bmN0aW9uKGUpe2lmKGUuZXh0KXJldHVybiBlLmV4dH19LHBhcnJhYmxlSWQ6e3NvdXJjZToicGFycmFibGUuY29tIixhdHlwZToxLGdldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLmVpZD9lLmVpZDplLmNjcGFPcHRvdXQ/IiI6bnVsbH0sZ2V0VWlkRXh0OmZ1bmN0aW9uKGUpe3ZhciByPXMucGljayhlLFsiaWJhT3B0b3V0IiwiY2NwYU9wdG91dCJdKTtpZihPYmplY3Qua2V5cyhyKS5sZW5ndGgpcmV0dXJuIHJ9fSxpZGxfZW52Ontzb3VyY2U6ImxpdmVyYW1wLmNvbSIsYXR5cGU6MX0sbGlwYjp7Z2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUubGlwYmlkfSxzb3VyY2U6ImxpdmVpbnRlbnQuY29tIixhdHlwZToxLGdldEVpZEV4dDpmdW5jdGlvbihlKXtpZihBcnJheS5pc0FycmF5KGUuc2VnbWVudHMpJiZlLnNlZ21lbnRzLmxlbmd0aClyZXR1cm57c2VnbWVudHM6ZS5zZWdtZW50c319fSxicml0ZXBvb2xpZDp7c291cmNlOiJicml0ZXBvb2wuY29tIixhdHlwZToxfSxsb3RhbWVQYW5vcmFtYUlkOntzb3VyY2U6ImNyd2RjbnRybC5uZXQiLGF0eXBlOjF9LGNyaXRlb0lkOntzb3VyY2U6ImNyaXRlby5jb20iLGF0eXBlOjF9LG1lcmtsZUlkOntzb3VyY2U6Im1lcmtsZWluYy5jb20iLGF0eXBlOjF9LG5ldElkOntzb3VyY2U6Im5ldGlkLmRlIixhdHlwZToxfSxzaGFyZWRpZDp7c291cmNlOiJzaGFyZWRpZC5vcmciLGF0eXBlOjEsZ2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuaWR9LGdldFVpZEV4dDpmdW5jdGlvbihlKXtyZXR1cm4gZSYmZS50aGlyZD97dGhpcmQ6ZS50aGlyZH06dm9pZCAwfX0sSURQOntzb3VyY2U6Inplb3RhcC5jb20iLGF0eXBlOjF9LGhhbG9JZDp7c291cmNlOiJhdWRpZ2VudC5jb20iLGF0eXBlOjF9LHF1YW50Y2FzdElkOntzb3VyY2U6InF1YW50Y2FzdC5jb20iLGF0eXBlOjF9LGlkeDp7c291cmNlOiJpZHgubGF0IixhdHlwZToxfSx2bXVpZDp7c291cmNlOiJ2ZXJpem9ubWVkaWEuY29tIixhdHlwZToxfX19LDc2ODpmdW5jdGlvbihlLHIsdCl7ZS5leHBvcnRzPXQoNzY5KX0sNzY5OmZ1bmN0aW9uKGUscix0KXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHQuZChyLCJzcGVjIixmdW5jdGlvbigpe3JldHVybiB1fSk7dmFyIG89dCgwKSxzPXQoMikscD10KDMpLGE9dCgxKSxjPXQoMjIpLHU9e2NvZGU6InNtYXJ0YWRzZXJ2ZXIiLGd2bGlkOjQ1LGFsaWFzZXM6WyJzbWFydCJdLHN1cHBvcnRlZE1lZGlhVHlwZXM6W3MuYixzLmRdLGlzQmlkUmVxdWVzdFZhbGlkOmZ1bmN0aW9uKGUpe3JldHVybiEhKGUucGFyYW1zJiZlLnBhcmFtcy5zaXRlSWQmJmUucGFyYW1zLnBhZ2VJZCYmZS5wYXJhbXMuZm9ybWF0SWQpfSxzZXJpYWxpemVTdXBwbHlDaGFpbjpmdW5jdGlvbihlKXtpZighZXx8IWUubm9kZXMpcmV0dXJuIG51bGw7dmFyIHQ9WyJhc2kiLCJzaWQiLCJocCIsInJpZCIsIm5hbWUiLCJkb21haW4iXTtyZXR1cm4iIi5jb25jYXQoZS52ZXIsIiwiKS5jb25jYXQoZS5jb21wbGV0ZSwiISIpK2Uubm9kZXMubWFwKGZ1bmN0aW9uKHIpe3JldHVybiB0Lm1hcChmdW5jdGlvbihlKXtyZXR1cm4gcltlXT9lbmNvZGVVUklDb21wb25lbnQocltlXSk6IiJ9KS5qb2luKCIsIil9KS5qb2luKCIhIil9LGJ1aWxkUmVxdWVzdHM6ZnVuY3Rpb24oZSxkKXtyZXR1cm4gZS5tYXAoZnVuY3Rpb24oZSl7dmFyIHI9e3NpdGVpZDplLnBhcmFtcy5zaXRlSWQscGFnZWlkOmUucGFyYW1zLnBhZ2VJZCxmb3JtYXRpZDplLnBhcmFtcy5mb3JtYXRJZCxjdXJyZW5jeUNvZGU6cC5iLmdldENvbmZpZygiY3VycmVuY3kuYWRTZXJ2ZXJDdXJyZW5jeSIpLGJpZGZsb29yOmUucGFyYW1zLmJpZGZsb29yfHwwLHRhcmdldGluZzplLnBhcmFtcy50YXJnZXQmJiIiIT09ZS5wYXJhbXMudGFyZ2V0P2UucGFyYW1zLnRhcmdldDp2b2lkIDAsYnVpZDplLnBhcmFtcy5idUlkJiYiIiE9PWUucGFyYW1zLmJ1SWQ/ZS5wYXJhbXMuYnVJZDp2b2lkIDAsYXBwbmFtZTplLnBhcmFtcy5hcHBOYW1lJiYiIiE9PWUucGFyYW1zLmFwcE5hbWU/ZS5wYXJhbXMuYXBwTmFtZTp2b2lkIDAsY2tpZDplLnBhcmFtcy5ja0lkfHwwLHRhZ0lkOmUuYWRVbml0Q29kZSxwYWdlRG9tYWluOmQmJmQucmVmZXJlckluZm8mJmQucmVmZXJlckluZm8ucmVmZXJlcj9kLnJlZmVyZXJJbmZvLnJlZmVyZXI6dm9pZCAwLHRyYW5zYWN0aW9uSWQ6ZS50cmFuc2FjdGlvbklkLHRpbWVvdXQ6cC5iLmdldENvbmZpZygiYmlkZGVyVGltZW91dCIpLGJpZElkOmUuYmlkSWQscHJlYmlkVmVyc2lvbjoiNC4xNy4wIixzY2hhaW46dS5zZXJpYWxpemVTdXBwbHlDaGFpbihlLnNjaGFpbil9LHQ9by5kZWVwQWNjZXNzKGUsIm1lZGlhVHlwZXMudmlkZW8iKTtpZih0KXtpZighdHx8Imluc3RyZWFtIiE9PXQuY29udGV4dCYmIm91dHN0cmVhbSIhPT10LmNvbnRleHQpcmV0dXJue307dmFyIGE9dC5wbGF5ZXJTaXplWzBdO3IuaXNWaWRlbz0iaW5zdHJlYW0iPT09dC5jb250ZXh0LHIubWVkaWFUeXBlPXMuZCxyLnZpZGVvRGF0YT17dmlkZW9Qcm90b2NvbDplLnBhcmFtcy52aWRlby5wcm90b2NvbCxwbGF5ZXJXaWR0aDphWzBdLHBsYXllckhlaWdodDphWzFdLGFkQnJlYWs6ZS5wYXJhbXMudmlkZW8uc3RhcnREZWxheXx8MX19ZWxzZXt2YXIgaT1vLmRlZXBBY2Nlc3MoZSwibWVkaWFUeXBlcy5iYW5uZXIiKTtyLnNpemVzPWkuc2l6ZXMubWFwKGZ1bmN0aW9uKGUpe3JldHVybnt3OmVbMF0saDplWzFdfX0pfWQmJmQuZ2RwckNvbnNlbnQmJihyLmFkZHRsX2NvbnNlbnQ9ZC5nZHByQ29uc2VudC5hZGR0bENvbnNlbnQsci5nZHByX2NvbnNlbnQ9ZC5nZHByQ29uc2VudC5jb25zZW50U3RyaW5nLHIuZ2Rwcj1kLmdkcHJDb25zZW50LmdkcHJBcHBsaWVzKSxlJiZlLnVzZXJJZCYmKHIuZWlkcz1PYmplY3QoYy5hKShlLnVzZXJJZCkpLGQmJmQudXNwQ29uc2VudCYmKHIudXNfcHJpdmFjeT1kLnVzcENvbnNlbnQpO3ZhciBuPUpTT04uc3RyaW5naWZ5KHIpO3JldHVybnttZXRob2Q6IlBPU1QiLHVybDoodm9pZCAwIT09ZS5wYXJhbXMuZG9tYWluP2UucGFyYW1zLmRvbWFpbjoiaHR0cHM6Ly9wcmcuc21hcnRhZHNlcnZlci5jb20iKSsiL3ByZWJpZC92MSIsZGF0YTpufX0pfSxpbnRlcnByZXRSZXNwb25zZTpmdW5jdGlvbihlLHIpe3ZhciB0LGEsaT1bXSxuPWUuYm9keTt0cnl7biYmKGE9e3JlcXVlc3RJZDoodD1KU09OLnBhcnNlKHIuZGF0YSkpLmJpZElkLGNwbTpuLmNwbSx3aWR0aDpuLndpZHRoLGhlaWdodDpuLmhlaWdodCxjcmVhdGl2ZUlkOm4uY3JlYXRpdmVJZCxkZWFsSWQ6bi5kZWFsSWQsY3VycmVuY3k6bi5jdXJyZW5jeSxuZXRSZXZlbnVlOm4uaXNOZXRDcG0sdHRsOm4udHRsfSx0Lm1lZGlhVHlwZT09PXMuZD8oYS5tZWRpYVR5cGU9cy5kLGEudmFzdFVybD1uLmFkVXJsLGEudmFzdFhtbD1uLmFkLGEuY29udGVudD1uLmFkKTooYS5hZFVybD1uLmFkVXJsLGEuYWQ9bi5hZCksaS5wdXNoKGEpKX1jYXRjaChlKXtvLmxvZ0Vycm9yKCJFcnJvciB3aGlsZSBwYXJzaW5nIHNtYXJ0IHNlcnZlciByZXNwb25zZSIsZSl9cmV0dXJuIGl9LGdldFVzZXJTeW5jczpmdW5jdGlvbihlLHIpe3ZhciB0PVtdO3JldHVybiBlLmlmcmFtZUVuYWJsZWQmJjA8ci5sZW5ndGgmJnQucHVzaCh7dHlwZToiaWZyYW1lIix1cmw6clswXS5ib2R5LmNTeW5jVXJsfSksdH19O09iamVjdChhLnJlZ2lzdGVyQmlkZGVyKSh1KX19LFs3NjhdKTsKdXBianNDaHVuayhbMTEwXSx7Nzg0OmZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9cig3ODUpfSw3ODU6ZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtPYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksci5kKHQsInNwZWMiLGZ1bmN0aW9uKCl7cmV0dXJuIGF9KSxyLmQodCwiX2lzSW5ib3VuZHMiLGZ1bmN0aW9uKCl7cmV0dXJuIG19KSx0Ll9nZXRQbGF0Zm9ybT12O3ZhciBuPXIoMSkseT1yKDApLGk9cigyKSxvPXIoMyksZz1yKDExKSxjPXIoNDQpO2Z1bmN0aW9uIGgoZSx0KXtyZXR1cm4gZnVuY3Rpb24oZSl7aWYoQXJyYXkuaXNBcnJheShlKSlyZXR1cm4gZX0oZSl8fGZ1bmN0aW9uKGUsdCl7aWYoInVuZGVmaW5lZCI9PXR5cGVvZiBTeW1ib2x8fCEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChlKSkpcmV0dXJuO3ZhciByPVtdLG49ITAsaT0hMSxzPXZvaWQgMDt0cnl7Zm9yKHZhciBhLG89ZVtTeW1ib2wuaXRlcmF0b3JdKCk7IShuPShhPW8ubmV4dCgpKS5kb25lKSYmKHIucHVzaChhLnZhbHVlKSwhdHx8ci5sZW5ndGghPT10KTtuPSEwKTt9Y2F0Y2goZSl7aT0hMCxzPWV9ZmluYWxseXt0cnl7bnx8bnVsbD09by5yZXR1cm58fG8ucmV0dXJuKCl9ZmluYWxseXtpZihpKXRocm93IHN9fXJldHVybiByfShlLHQpfHxmdW5jdGlvbihlLHQpe2lmKCFlKXJldHVybjtpZigic3RyaW5nIj09dHlwZW9mIGUpcmV0dXJuIHMoZSx0KTt2YXIgcj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkuc2xpY2UoOCwtMSk7Ik9iamVjdCI9PT1yJiZlLmNvbnN0cnVjdG9yJiYocj1lLmNvbnN0cnVjdG9yLm5hbWUpO2lmKCJNYXAiPT09cnx8IlNldCI9PT1yKXJldHVybiBBcnJheS5mcm9tKGUpO2lmKCJBcmd1bWVudHMiPT09cnx8L14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QocikpcmV0dXJuIHMoZSx0KX0oZSx0KXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLiIpfSgpfWZ1bmN0aW9uIHMoZSx0KXsobnVsbD09dHx8dD5lLmxlbmd0aCkmJih0PWUubGVuZ3RoKTtmb3IodmFyIHI9MCxuPW5ldyBBcnJheSh0KTtyPHQ7cisrKW5bcl09ZVtyXTtyZXR1cm4gbn1mdW5jdGlvbiBkKCl7cmV0dXJuKGQ9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIHI9YXJndW1lbnRzW3RdO2Zvcih2YXIgbiBpbiByKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChyLG4pJiYoZVtuXT1yW25dKX1yZXR1cm4gZX0pLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1mdW5jdGlvbiB1KGUsdCxyKXtyZXR1cm4gdCBpbiBlP09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQse3ZhbHVlOnIsZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KTplW3RdPXIsZX12YXIgcD0ic29ub2JpIixiPU9iamVjdCh5LmdlbmVyYXRlVVVJRCkoKSxhPXtjb2RlOnAsc3VwcG9ydGVkTWVkaWFUeXBlczpbaS5iLGkuZF0saXNCaWRSZXF1ZXN0VmFsaWQ6ZnVuY3Rpb24oZSl7aWYoIWUucGFyYW1zKXJldHVybiExO2lmKCFlLnBhcmFtcy5hZF91bml0JiYhZS5wYXJhbXMucGxhY2VtZW50X2lkKXJldHVybiExO2lmKCFPYmplY3QoeS5kZWVwQWNjZXNzKShlLCJtZWRpYVR5cGVzLmJhbm5lciIpJiYhT2JqZWN0KHkuZGVlcEFjY2VzcykoZSwibWVkaWFUeXBlcy52aWRlbyIpKXJldHVybiExO2lmKE9iamVjdCh5LmRlZXBBY2Nlc3MpKGUsIm1lZGlhVHlwZXMuYmFubmVyIikpe2lmKCFPYmplY3QoeS5kZWVwQWNjZXNzKShlLCJtZWRpYVR5cGVzLmJhbm5lci5zaXplcyIpJiYhZS5wYXJhbXMuc2l6ZXMpcmV0dXJuITF9ZWxzZSBpZihPYmplY3QoeS5kZWVwQWNjZXNzKShlLCJtZWRpYVR5cGVzLnZpZGVvIikpe2lmKCJvdXRzdHJlYW0iPT09T2JqZWN0KHkuZGVlcEFjY2VzcykoZSwibWVkaWFUeXBlcy52aWRlby5jb250ZXh0IikmJiFlLnBhcmFtcy5zaXplcylyZXR1cm4hMTtpZigiaW5zdHJlYW0iPT09T2JqZWN0KHkuZGVlcEFjY2VzcykoZSwibWVkaWFUeXBlcy52aWRlby5jb250ZXh0IikmJiFPYmplY3QoeS5kZWVwQWNjZXNzKShlLCJtZWRpYVR5cGVzLnZpZGVvLnBsYXllclNpemUiKSlyZXR1cm4hMX1yZXR1cm4hMH0sYnVpbGRSZXF1ZXN0czpmdW5jdGlvbihlLHQpe3ZhciByPWUubWFwKGZ1bmN0aW9uKGUpe3ZhciB0PWZ1bmN0aW9uKGUpe2lmKGUucGFyYW1zLmFkX3VuaXQpcmV0dXJuIGUucGFyYW1zLmFkX3VuaXQ7cmV0dXJuIGUucGFyYW1zLnBsYWNlbWVudF9pZH0oZSk7cmV0dXJuL15bXC9dP1tcZF0rW1tcL10uK1tcL10/XT8kLy50ZXN0KHQpPyh0PSIvIj09PXQuY2hhckF0KDApP3Q6Ii8iK3QsdSh7fSwiIi5jb25jYXQodCwifCIpLmNvbmNhdChlLmJpZElkKSwiIi5jb25jYXQobChlKSkuY29uY2F0KGYoZSkpKSk6L15bMC05YS1mQS1GXXsyMH0kLy50ZXN0KHQpJiYyMD09PXQubGVuZ3RoP3Uoe30sZS5iaWRJZCwiIi5jb25jYXQodCwifCIpLmNvbmNhdChsKGUpKS5jb25jYXQoZihlKSkpOnZvaWQgT2JqZWN0KHkubG9nRXJyb3IpKCJUaGUgYWQgdW5pdCBjb2RlIG9yIFNvbm9iaSBQbGFjZW1lbnQgaWQgZm9yIHNsb3QgIi5jb25jYXQoZS5iaWRJZCwiIGlzIGludmFsaWQiKSl9KSxuPXt9O3IuZm9yRWFjaChmdW5jdGlvbihlKXtkKG4sZSl9KTt2YXIgaT17a2V5X21ha2VyOkpTT04uc3RyaW5naWZ5KG4pLHJlZjp0LnJlZmVyZXJJbmZvLnJlZmVyZXIsczpPYmplY3QoeS5nZW5lcmF0ZVVVSUQpKCkscHY6Yix2cDp2KCksbGliX25hbWU6InByZWJpZCIsbGliX3Y6IjQuMTcuMCIsdXM6MH07by5iLmdldENvbmZpZygidXNlclN5bmMiKSYmby5iLmdldENvbmZpZygidXNlclN5bmMiKS5zeW5jc1BlckJpZGRlciYmKGkudXM9by5iLmdldENvbmZpZygidXNlclN5bmMiKS5zeW5jc1BlckJpZGRlciksYy5hLmNhbkJpZGRlclJlZ2lzdGVyU3luYygiaWZyYW1lIixwKT9pLml1cz0xOmkuaXVzPTAsT2JqZWN0KHkuZGVlcEFjY2VzcykoZVswXSwicGFyYW1zLmhmYSIpJiYoaS5oZmE9T2JqZWN0KHkuZGVlcEFjY2VzcykoZVswXSwicGFyYW1zLmhmYSIpKSxlWzBdLnBhcmFtcy5yZWZlcnJlciYmKGkucmVmPWVbMF0ucGFyYW1zLnJlZmVycmVyKSx0JiZ0LmdkcHJDb25zZW50JiYoaS5nZHByPXQuZ2RwckNvbnNlbnQuZ2RwckFwcGxpZXM/InRydWUiOiJmYWxzZSIsdC5nZHByQ29uc2VudC5jb25zZW50U3RyaW5nJiYoaS5jb25zZW50X3N0cmluZz10LmdkcHJDb25zZW50LmNvbnNlbnRTdHJpbmcpKSxlWzBdLnNjaGFpbiYmKGkuc2NoYWluPUpTT04uc3RyaW5naWZ5KGVbMF0uc2NoYWluKSksT2JqZWN0KHkuZGVlcEFjY2VzcykoZVswXSwidXNlcklkIikmJjA8T2JqZWN0LmtleXMoZVswXS51c2VySWQpLmxlbmd0aCYmKGkudXNlcmlkPUpTT04uc3RyaW5naWZ5KGVbMF0udXNlcklkKSk7dmFyIHM9ZVswXS5wYXJhbXMua2V5d29yZHM7aWYocyYmKGkua3c9cyksdCYmdC51c3BDb25zZW50JiYoaS51c19wcml2YWN5PXQudXNwQ29uc2VudCksT2JqZWN0KHkuaXNFbXB0eSkobikpcmV0dXJuIG51bGw7dmFyIGE9Imh0dHBzOi8vYXBleC5nby5zb25vYmkuY29tL3RyaW5pdHkuanNvbiI7cmV0dXJuIE9iamVjdCh5LmRlZXBBY2Nlc3MpKGVbMF0sInBhcmFtcy5iaWRfcmVxdWVzdF91cmwiKSYmKGE9T2JqZWN0KHkuZGVlcEFjY2VzcykoZVswXSwicGFyYW1zLmJpZF9yZXF1ZXN0X3VybCIpKSx7bWV0aG9kOiJHRVQiLHVybDphLHdpdGhDcmVkZW50aWFsczohMCxkYXRhOmksYmlkZGVyUmVxdWVzdHM6ZX19LGludGVycHJldFJlc3BvbnNlOmZ1bmN0aW9uKGUsbCl7dmFyIGY9ZS5ib2R5LG09W10sdj1sLmRhdGEucmVmO3JldHVybiAwPT09T2JqZWN0LmtleXMoZi5zbG90cykubGVuZ3RofHxPYmplY3Qua2V5cyhmLnNsb3RzKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciB0PWYuc2xvdHNbZV0scj1lLnNwbGl0KCJ8Iikuc2xpY2UoLTEpWzBdLG49ZnVuY3Rpb24oZSx0KXtmb3IodmFyIHI9MDtyPGUubGVuZ3RoO3IrKylpZihlW3JdLmJpZElkPT09dClyZXR1cm4gZVtyXX0obC5iaWRkZXJSZXF1ZXN0cyxyKSxpPW51bGw7InZpZGVvIj09PXQuc2JpX2N0JiYoaT0idmlkZW8iLCJvdXRzdHJlYW0iPT09T2JqZWN0KHkuZGVlcEFjY2VzcykobiwibWVkaWFUeXBlcy52aWRlby5jb250ZXh0IikmJihpPSJvdXRzdHJlYW0iKSk7dmFyIHMsYSxvLGMsZCx1LHAsYj1qKGksdik7dC5zYmlfYWlkJiZ0LnNiaV9tb3VzZSYmdC5zYmlfc2l6ZSYmKG89dm9pZCAwPT09KGE9KHM9aCh0LnNiaV9zaXplLnNwbGl0KCJ4IiksMikpWzBdKT8xOmEsZD12b2lkIDA9PT0oYz1zWzFdKT8xOmMsdT17cmVxdWVzdElkOnIsY3BtOk51bWJlcih0LnNiaV9tb3VzZSksd2lkdGg6TnVtYmVyKG8pLGhlaWdodDpOdW1iZXIoZCksYWQ6YihmLnNiaV9kYyx0LnNiaV9haWQpLHR0bDo1MDAsY3JlYXRpdmVJZDp0LnNiaV9jcmlkfHx0LnNiaV9haWQsYWlkOnQuc2JpX2FpZCxuZXRSZXZlbnVlOiEwLGN1cnJlbmN5OiJVU0QifSx0LnNiaV9kb3plciYmKHUuZGVhbElkPXQuc2JpX2RvemVyKSwidmlkZW8iPT09aT8odS5tZWRpYVR5cGU9InZpZGVvIix1LnZhc3RVcmw9YihmLnNiaV9kYyx0LnNiaV9haWQpLGRlbGV0ZSB1LmFkLGRlbGV0ZSB1LndpZHRoLGRlbGV0ZSB1LmhlaWdodCk6Im91dHN0cmVhbSI9PT1pJiZuJiYodS5tZWRpYVR5cGU9InZpZGVvIix1LnZhc3RVcmw9YihmLnNiaV9kYyx0LnNiaV9haWQpLHUucmVuZGVyZXI9ZnVuY3Rpb24oZSx0KXt2YXIgcj0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06e30sbj1nLmEuaW5zdGFsbCh7aWQ6dC5haWQsdXJsOiJodHRwczovL210cnguZ28uc29ub2JpLmNvbS9zYmlfb3V0c3RyZWFtX3JlbmRlcmVyLmpzIixjb25maWc6cixsb2FkZWQ6ITEsYWRVbml0Q29kZTplfSk7dHJ5e24uc2V0UmVuZGVyKE8pfWNhdGNoKGUpe09iamVjdCh5LmxvZ1dhcm4pKCJQcmViaWQgRXJyb3IgY2FsbGluZyBzZXRSZW5kZXIgb24gcmVuZGVyZXIiLGUpfXJldHVybiBuLnNldEV2ZW50SGFuZGxlcnMoe2ltcHJlc3Npb246ZnVuY3Rpb24oKXtyZXR1cm4gT2JqZWN0KHkubG9nTWVzc2FnZSkoIlNvbm9iaSBvdXRzdHJlYW0gdmlkZW8gaW1wcmVzc2lvbiBldmVudCIpfSxsb2FkZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gT2JqZWN0KHkubG9nTWVzc2FnZSkoIlNvbm9iaSBvdXRzdHJlYW0gdmlkZW8gbG9hZGVkIGV2ZW50Iil9LGVuZGVkOmZ1bmN0aW9uKCl7T2JqZWN0KHkubG9nTWVzc2FnZSkoIlNvbm9iaSBvdXRzdHJlYW0gcmVuZGVyZXIgdmlkZW8gZXZlbnQiKX19KSxufShuLmFkVW5pdENvZGUsdSxPYmplY3QoeS5kZWVwQWNjZXNzKShuLCJyZW5kZXJlci5vcHRpb25zIikpLHA9T2JqZWN0KHkuZGVlcEFjY2VzcykobiwicGFyYW1zLnNpemVzIiksQXJyYXkuaXNBcnJheShwKSYmQXJyYXkuaXNBcnJheShwWzBdKSYmKHA9cFswXSkscCYmKHUud2lkdGg9cFswXSx1LmhlaWdodD1wWzFdKSksbS5wdXNoKHUpKX0pLG19LGdldFVzZXJTeW5jczpmdW5jdGlvbihlLHQpe3ZhciByPVtdO3RyeXtlLnBpeGVsRW5hYmxlZCYmdFswXS5ib2R5LnNiaV9weC5mb3JFYWNoKGZ1bmN0aW9uKGUpe3IucHVzaCh7dHlwZTplLnR5cGUsdXJsOmUudXJsfSl9KX1jYXRjaChlKXt9cmV0dXJuIHJ9fTtmdW5jdGlvbiBsKGUpe3JldHVybiBPYmplY3QoeS5kZWVwQWNjZXNzKShlLCJtZWRpYVR5cGVzLnZpZGVvIik/IiI6ZS5wYXJhbXMuc2l6ZXM/T2JqZWN0KHkucGFyc2VTaXplc0lucHV0KShlLnBhcmFtcy5zaXplcykuam9pbigiLCIpOk9iamVjdCh5LmRlZXBBY2Nlc3MpKGUsIm1lZGlhVHlwZXMuYmFubmVyLnNpemVzIik/T2JqZWN0KHkucGFyc2VTaXplc0lucHV0KShPYmplY3QoeS5kZWVwQWNjZXNzKShlLCJtZWRpYVR5cGVzLmJhbm5lci5zaXplcyIpKS5qb2luKCIsIik6ZS5zaXplcz9PYmplY3QoeS5wYXJzZVNpemVzSW5wdXQpKGUuc2l6ZXMpLmpvaW4oIiwiKTp2b2lkIDB9ZnVuY3Rpb24gZihlKXtyZXR1cm4gZS5wYXJhbXMuZmxvb3I/InxmPSIuY29uY2F0KGUucGFyYW1zLmZsb29yKToiIn12YXIgaj1mdW5jdGlvbihpLHMpe3JldHVybiBmdW5jdGlvbihlLHQpe3JldHVybiJ2aWRlbyI9PT1pfHwib3V0c3RyZWFtIj09PWk/KHI9dCxuPXMsImh0dHBzOi8vIi5jb25jYXQoZSwiYXBleC5nby5zb25vYmkuY29tL3Zhc3QueG1sP3ZpZD0iKS5jb25jYXQociwiJnJlZj0iKS5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KG4pKSk6JzxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9IicrImh0dHBzOi8vIi5jb25jYXQoZSwiYXBleC5nby5zb25vYmkuY29tL3NiaS5qcz9haWQ9IikuY29uY2F0KHQsIiZhcz1udWxsJnJlZj0iKS5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KHMpKSsnIj48XC9zY3JpcHQ+Jzt2YXIgcixufX07dmFyIG09ZnVuY3Rpb24oZSl7dmFyIHI9MDxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1lP2U6d2luZG93O3JldHVybiBmdW5jdGlvbigpe3ZhciBlPTA8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTowLHQ9MTxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOk51bWJlci5NQVhfU0FGRV9JTlRFR0VSO3JldHVybiByLmlubmVyV2lkdGg+PWUmJnIuaW5uZXJXaWR0aDx0fX07ZnVuY3Rpb24gdigpe3ZhciBlPTA8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp3aW5kb3csdD1tKGUpLHI9OTkyLG49NzY4O3JldHVybiB0KDAsNzY4KT8ibW9iaWxlIjp0KG4scik/InRhYmxldCI6ImRlc2t0b3AifWZ1bmN0aW9uIE8oaSl7aS5yZW5kZXJlci5wdXNoKGZ1bmN0aW9uKCl7dmFyIGU9aChpLmdldFNpemUoKS5zcGxpdCgieCIpLDIpLHQ9ZVswXSxyPWVbMV0sbj1uZXcgd2luZG93LlNiaU91dHN0cmVhbVJlbmRlcmVyO24uaW5pdCh7dmFzdFVybDppLnZhc3RVcmwsaGVpZ2h0OnIsd2lkdGg6dH0pLG4uc2V0Um9vdEVsZW1lbnQoaS5hZFVuaXRDb2RlKX0pfU9iamVjdChuLnJlZ2lzdGVyQmlkZGVyKShhKX19LFs3ODRdKTsKdXBianNDaHVuayhbOV0sezIyOmZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dC5hPWZ1bmN0aW9uKGUpe3ZhciB0PVtdO2Zvcih2YXIgciBpbiBlKXt2YXIgaTtlLmhhc093blByb3BlcnR5KHIpJiYoInB1YlByb3ZpZGVkSWQiPT09cj90PXQuY29uY2F0KGUucHViUHJvdmlkZWRJZCk6KGk9ZnVuY3Rpb24oZSx0KXt2YXIgcj1zW3RdO2lmKHImJmUpe3ZhciBpPXt9O2kuc291cmNlPXIuc291cmNlO3ZhciBuPW8uaXNGbihyLmdldFZhbHVlKT9yLmdldFZhbHVlKGUpOmU7aWYoby5pc1N0cihuKSl7dmFyIGEsZCx1PXtpZDpuLGF0eXBlOnIuYXR5cGV9O3JldHVybiFvLmlzRm4oci5nZXRVaWRFeHQpfHwoYT1yLmdldFVpZEV4dChlKSkmJih1LmV4dD1hKSxpLnVpZHM9W3VdLCFvLmlzRm4oci5nZXRFaWRFeHQpfHwoZD1yLmdldEVpZEV4dChlKSkmJihpLmV4dD1kKSxpfX1yZXR1cm4gbnVsbH0oZVtyXSxyKSkmJnQucHVzaChpKSl9cmV0dXJuIHR9O3ZhciBvPXIoMCkscz17aW50ZW50SXFJZDp7c291cmNlOiJpbnRlbnRpcS5jb20iLGF0eXBlOjF9LHB1YmNpZDp7c291cmNlOiJwdWJjaWQub3JnIixhdHlwZToxfSx0ZGlkOntzb3VyY2U6ImFkc2VydmVyLm9yZyIsYXR5cGU6MSxnZXRVaWRFeHQ6ZnVuY3Rpb24oKXtyZXR1cm57cnRpUGFydG5lcjoiVERJRCJ9fX0saWQ1aWQ6e2dldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLnVpZH0sc291cmNlOiJpZDUtc3luYy5jb20iLGF0eXBlOjEsZ2V0RWlkRXh0OmZ1bmN0aW9uKGUpe2lmKGUuZXh0KXJldHVybiBlLmV4dH19LHBhcnJhYmxlSWQ6e3NvdXJjZToicGFycmFibGUuY29tIixhdHlwZToxLGdldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLmVpZD9lLmVpZDplLmNjcGFPcHRvdXQ/IiI6bnVsbH0sZ2V0VWlkRXh0OmZ1bmN0aW9uKGUpe3ZhciB0PW8ucGljayhlLFsiaWJhT3B0b3V0IiwiY2NwYU9wdG91dCJdKTtpZihPYmplY3Qua2V5cyh0KS5sZW5ndGgpcmV0dXJuIHR9fSxpZGxfZW52Ontzb3VyY2U6ImxpdmVyYW1wLmNvbSIsYXR5cGU6MX0sbGlwYjp7Z2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUubGlwYmlkfSxzb3VyY2U6ImxpdmVpbnRlbnQuY29tIixhdHlwZToxLGdldEVpZEV4dDpmdW5jdGlvbihlKXtpZihBcnJheS5pc0FycmF5KGUuc2VnbWVudHMpJiZlLnNlZ21lbnRzLmxlbmd0aClyZXR1cm57c2VnbWVudHM6ZS5zZWdtZW50c319fSxicml0ZXBvb2xpZDp7c291cmNlOiJicml0ZXBvb2wuY29tIixhdHlwZToxfSxsb3RhbWVQYW5vcmFtYUlkOntzb3VyY2U6ImNyd2RjbnRybC5uZXQiLGF0eXBlOjF9LGNyaXRlb0lkOntzb3VyY2U6ImNyaXRlby5jb20iLGF0eXBlOjF9LG1lcmtsZUlkOntzb3VyY2U6Im1lcmtsZWluYy5jb20iLGF0eXBlOjF9LG5ldElkOntzb3VyY2U6Im5ldGlkLmRlIixhdHlwZToxfSxzaGFyZWRpZDp7c291cmNlOiJzaGFyZWRpZC5vcmciLGF0eXBlOjEsZ2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuaWR9LGdldFVpZEV4dDpmdW5jdGlvbihlKXtyZXR1cm4gZSYmZS50aGlyZD97dGhpcmQ6ZS50aGlyZH06dm9pZCAwfX0sSURQOntzb3VyY2U6Inplb3RhcC5jb20iLGF0eXBlOjF9LGhhbG9JZDp7c291cmNlOiJhdWRpZ2VudC5jb20iLGF0eXBlOjF9LHF1YW50Y2FzdElkOntzb3VyY2U6InF1YW50Y2FzdC5jb20iLGF0eXBlOjF9LGlkeDp7c291cmNlOiJpZHgubGF0IixhdHlwZToxfSx2bXVpZDp7c291cmNlOiJ2ZXJpem9ubWVkaWEuY29tIixhdHlwZToxfX19LDc5MjpmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXIoNzkzKX0sNzkzOmZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHIuZCh0LCJzcGVjIixmdW5jdGlvbigpe3JldHVybiBufSk7dmFyIGw9cigwKSxpPXIoMSksYT1yKDIpLGc9cigyMiksbj17Y29kZToic292cm4iLHN1cHBvcnRlZE1lZGlhVHlwZXM6W2EuYl0sZ3ZsaWQ6MTMsaXNCaWRSZXF1ZXN0VmFsaWQ6ZnVuY3Rpb24oZSl7cmV0dXJuISghZS5wYXJhbXMudGFnaWR8fGlzTmFOKHBhcnNlRmxvYXQoZS5wYXJhbXMudGFnaWQpKXx8IWlzRmluaXRlKGUucGFyYW1zLnRhZ2lkKSl9LGJ1aWxkUmVxdWVzdHM6ZnVuY3Rpb24oZSx0KXt0cnl7dmFyIGksbixhLGQsdT1bXSxvPVtdO2wuX2VhY2goZSxmdW5jdGlvbihlKXshYSYmZS51c2VySWQmJihhPU9iamVjdChnLmEpKGUudXNlcklkKSkuZm9yRWFjaChmdW5jdGlvbihlKXtlLnVpZHMmJmUudWlkc1swXSYmKCJjcml0ZW8uY29tIj09PWUuc291cmNlJiYoZD1lLnVpZHNbMF0uaWQpLG8ucHVzaCh7c291cmNlOmUuc291cmNlLHVpZDplLnVpZHNbMF0uaWR9KSl9KSxlLnNjaGFpbiYmKG49bnx8ZS5zY2hhaW4pLGk9aXx8bC5nZXRCaWRJZFBhcmFtZXRlcigiaXYiLGUucGFyYW1zKTt2YXIgdD1lLm1lZGlhVHlwZXMmJmUubWVkaWFUeXBlcy5iYW5uZXImJmUubWVkaWFUeXBlcy5iYW5uZXIuc2l6ZXN8fGUuc2l6ZXMscj0odD0odD1sLmlzQXJyYXkodCkmJmwuaXNBcnJheSh0WzBdKT90Olt0XSkuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBsLmlzQXJyYXkoZSl9KSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybnt3OnBhcnNlSW50KGVbMF0sMTApLGg6cGFyc2VJbnQoZVsxXSwxMCl9fSk7dS5wdXNoKHthZHVuaXRjb2RlOmUuYWRVbml0Q29kZSxpZDplLmJpZElkLGJhbm5lcjp7Zm9ybWF0OnIsdzoxLGg6MX0sdGFnaWQ6U3RyaW5nKGwuZ2V0QmlkSWRQYXJhbWV0ZXIoInRhZ2lkIixlLnBhcmFtcykpLGJpZGZsb29yOmwuZ2V0QmlkSWRQYXJhbWV0ZXIoImJpZGZsb29yIixlLnBhcmFtcyl9KX0pO3ZhciByPXQucmVmZXJlckluZm8ucmVmZXJlcixzPWwucGFyc2VVcmwocikuaG9zdG5hbWUsYz17aWQ6bC5nZXRVbmlxdWVJZGVudGlmaWVyU3RyKCksaW1wOnUsc2l0ZTp7cGFnZTpyLGRvbWFpbjpzfX07biYmKGMuc291cmNlPXtleHQ6e3NjaGFpbjpufX0pLHQuZ2RwckNvbnNlbnQmJihsLmRlZXBTZXRWYWx1ZShjLCJyZWdzLmV4dC5nZHByIiwrdC5nZHByQ29uc2VudC5nZHByQXBwbGllcyksbC5kZWVwU2V0VmFsdWUoYywidXNlci5leHQuY29uc2VudCIsdC5nZHByQ29uc2VudC5jb25zZW50U3RyaW5nKSksdC51c3BDb25zZW50JiZsLmRlZXBTZXRWYWx1ZShjLCJyZWdzLmV4dC51c19wcml2YWN5Iix0LnVzcENvbnNlbnQpLGEmJihsLmRlZXBTZXRWYWx1ZShjLCJ1c2VyLmV4dC5laWRzIixhKSxsLmRlZXBTZXRWYWx1ZShjLCJ1c2VyLmV4dC50cGlkIixvKSxkJiZsLmRlZXBTZXRWYWx1ZShjLCJ1c2VyLmV4dC5wcmViaWRfY3JpdGVvaWQiLGQpKTt2YXIgcD0iaHR0cHM6Ly9hcC5saWppdC5jb20vcnRiL2JpZD9zcmM9cHJlYmlkX3ByZWJpZF80LjE3LjAiO3JldHVybiBpJiYocCs9IiZpdj0iLmNvbmNhdChpKSkse21ldGhvZDoiUE9TVCIsdXJsOnAsZGF0YTpKU09OLnN0cmluZ2lmeShjKSxvcHRpb25zOntjb250ZW50VHlwZToidGV4dC9wbGFpbiJ9fX1jYXRjaChlKXtsLmxvZ0Vycm9yKCJDb3VsZCBub3QgYnVpbGQgYmlkcmVxdWVzdCwgZXJyb3IgZGVhdGlsczoiLGUpfX0saW50ZXJwcmV0UmVzcG9uc2U6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5ib2R5LHI9dC5pZCxpPXQuc2VhdGJpZDt0cnl7dmFyIG49W107cmV0dXJuIHImJmkmJjA8aS5sZW5ndGgmJmlbMF0uYmlkJiYwPGlbMF0uYmlkLmxlbmd0aCYmaVswXS5iaWQubWFwKGZ1bmN0aW9uKGUpe24ucHVzaCh7cmVxdWVzdElkOmUuaW1waWQsY3BtOnBhcnNlRmxvYXQoZS5wcmljZSksd2lkdGg6cGFyc2VJbnQoZS53KSxoZWlnaHQ6cGFyc2VJbnQoZS5oKSxjcmVhdGl2ZUlkOmUuY3JpZHx8ZS5pZCxkZWFsSWQ6ZS5kZWFsaWR8fG51bGwsY3VycmVuY3k6IlVTRCIsbmV0UmV2ZW51ZTohMCxtZWRpYVR5cGU6YS5iLGFkOmRlY29kZVVSSUNvbXBvbmVudCgiIi5jb25jYXQoZS5hZG0sJzxpbWcgc3JjPSInKS5jb25jYXQoZS5udXJsLCciPicpKSx0dGw6ZS50dGx8fDkwfSl9KSxufWNhdGNoKGUpe2wubG9nRXJyb3IoIkNvdWxkIG5vdCBpbnRyZXByZXQgYmlkcmVzcG9uc2UsIGVycm9yIGRlYXRpbHM6IixlKX19LGdldFVzZXJTeW5jczpmdW5jdGlvbihlLHQscixpKXt0cnl7dmFyIG4sYSxkPVtdO3JldHVybiB0JiYwIT09dC5sZW5ndGgmJihlLmlmcmFtZUVuYWJsZWQmJihuPXQuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBsLmRlZXBBY2Nlc3MoZSwiYm9keS5leHQuaWlkIil9KS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGUuYm9keS5leHQuaWlkfSksYT1bXSxyJiZyLmdkcHJBcHBsaWVzJiYic3RyaW5nIj09dHlwZW9mIHIuY29uc2VudFN0cmluZyYmYS5wdXNoKFsiZ2Rwcl9jb25zZW50IixyLmNvbnNlbnRTdHJpbmddKSxpJiZhLnB1c2goWyJ1c19wcml2YWN5IixpXSksblswXSYmKGEucHVzaChbImluZm9ybWVyIixuWzBdXSksZC5wdXNoKHt0eXBlOiJpZnJhbWUiLHVybDoiaHR0cHM6Ly9hcC5saWppdC5jb20vYmVhY29uPyIrYS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGUuam9pbigiPSIpfSkuam9pbigiJiIpfSkpKSxlLnBpeGVsRW5hYmxlZCYmdC5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGwuZGVlcEFjY2VzcyhlLCJib2R5LmV4dC5zeW5jLnBpeGVscyIpfSkucmVkdWNlKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUuY29uY2F0KHQuYm9keS5leHQuc3luYy5waXhlbHMpfSxbXSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLnVybH0pLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIGQucHVzaCh7dHlwZToiaW1hZ2UiLHVybDplfSl9KSksZH1jYXRjaChlKXtyZXR1cm5bXX19fTtPYmplY3QoaS5yZWdpc3RlckJpZGRlcikobil9fSxbNzkyXSk7CnVwYmpzQ2h1bmsoWzEwMV0sezgxMDpmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXIoODExKX0sODExOmZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHIuZCh0LCJzcGVjIixmdW5jdGlvbigpe3JldHVybiBpfSk7dmFyIG49cigxKSxhPXIoMCkscD0xMixjPTExLHU9MCxnPTIyLGk9e2NvZGU6InRlYWRzIixndmxpZDoxMzIsc3VwcG9ydGVkTWVkaWFUeXBlczpbInZpZGVvIiwiYmFubmVyIl0saXNCaWRSZXF1ZXN0VmFsaWQ6ZnVuY3Rpb24oZSl7dmFyIHQscixuPSExO3JldHVybiB2b2lkIDAhPT1lLnBhcmFtcyYmKHQ9cyhhLmdldFZhbHVlKGUucGFyYW1zLCJwbGFjZW1lbnRJZCIpKSxyPXMoYS5nZXRWYWx1ZShlLnBhcmFtcywicGFnZUlkIikpLG49dCYmciksbnx8YS5sb2dFcnJvcigiVGVhZHMgcGxhY2VtZW50SWQgYW5kIHBhZ2VJZCBwYXJhbWV0ZXJzIGFyZSByZXF1aXJlZC4gQmlkIGFib3J0ZWQuIiksbn0sYnVpbGRSZXF1ZXN0czpmdW5jdGlvbihlLHQpe3ZhciByLG49ZS5tYXAoZiksaT17cmVmZXJyZXI6ZnVuY3Rpb24oZSl7dmFyIHQ9IiI7ZSYmZS5yZWZlcmVySW5mbyYmZS5yZWZlcmVySW5mby5yZWZlcmVyJiYodD1lLnJlZmVyZXJJbmZvLnJlZmVyZXIpO3JldHVybiB0fSh0KSxwYWdlUmVmZXJyZXI6ZG9jdW1lbnQucmVmZXJyZXIsbmV0d29ya0JhbmR3aWR0aDoocj13aW5kb3cubmF2aWdhdG9yKSYmci5jb25uZWN0aW9uJiYwPD1yLmNvbm5lY3Rpb24uZG93bmxpbms/ci5jb25uZWN0aW9uLmRvd25saW5rLnRvU3RyaW5nKCk6IiIsdGltZVRvRmlyc3RCeXRlOmZ1bmN0aW9uKGUpe3ZhciB0PWUucGVyZm9ybWFuY2V8fGUud2Via2l0UGVyZm9ybWFuY2V8fGUubXNQZXJmb3JtYW5jZXx8ZS5tb3pQZXJmb3JtYW5jZSxyPXQmJiJmdW5jdGlvbiI9PXR5cGVvZiB0LmdldEVudHJpZXNCeVR5cGUmJiJbb2JqZWN0IEZ1bmN0aW9uXSI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodC5nZXRFbnRyaWVzQnlUeXBlKSYmdC5nZXRFbnRyaWVzQnlUeXBlKCJuYXZpZ2F0aW9uIilbMF0mJnQuZ2V0RW50cmllc0J5VHlwZSgibmF2aWdhdGlvbiIpWzBdLnJlc3BvbnNlU3RhcnQmJnQuZ2V0RW50cmllc0J5VHlwZSgibmF2aWdhdGlvbiIpWzBdLnJlcXVlc3RTdGFydCYmMDx0LmdldEVudHJpZXNCeVR5cGUoIm5hdmlnYXRpb24iKVswXS5yZXNwb25zZVN0YXJ0JiYwPHQuZ2V0RW50cmllc0J5VHlwZSgibmF2aWdhdGlvbiIpWzBdLnJlcXVlc3RTdGFydCYmTWF0aC5yb3VuZCh0LmdldEVudHJpZXNCeVR5cGUoIm5hdmlnYXRpb24iKVswXS5yZXNwb25zZVN0YXJ0LXQuZ2V0RW50cmllc0J5VHlwZSgibmF2aWdhdGlvbiIpWzBdLnJlcXVlc3RTdGFydCk7aWYocilyZXR1cm4gci50b1N0cmluZygpO3ZhciBuPXQmJnQudGltaW5nLnJlc3BvbnNlU3RhcnQmJnQudGltaW5nLnJlcXVlc3RTdGFydCYmMDx0LnRpbWluZy5yZXNwb25zZVN0YXJ0JiYwPHQudGltaW5nLnJlcXVlc3RTdGFydCYmdC50aW1pbmcucmVzcG9uc2VTdGFydC10LnRpbWluZy5yZXF1ZXN0U3RhcnQ7cmV0dXJuIG4/bi50b1N0cmluZygpOiIifSh3aW5kb3cpLGRhdGE6bixkZXZpY2VXaWR0aDpzY3JlZW4ud2lkdGgsaGJfdmVyc2lvbjoiNC4xNy4wIn07ZVswXS5zY2hhaW4mJihpLnNjaGFpbj1lWzBdLnNjaGFpbik7dmFyIGEscyxvLGQ9dC5nZHByQ29uc2VudDtyZXR1cm4gdCYmZCYmKGE9ImJvb2xlYW4iPT10eXBlb2YgZC5nZHByQXBwbGllcyxzPSJzdHJpbmciPT10eXBlb2YgZC5jb25zZW50U3RyaW5nLG89YT9mdW5jdGlvbihlLHQscil7dmFyIG49cDtlP2Z1bmN0aW9uKGUsdCl7cmV0dXJuIGUmJjE9PT10P2UuaGFzR2xvYmFsU2NvcGV8fGUuaGFzR2xvYmFsQ29uc2VudDohKCFlfHwyIT09dCkmJiFlLmlzU2VydmljZVNwZWNpZmljfSh0LHIpJiYobj1jKTpuPXU7cmV0dXJuIG59KGQuZ2RwckFwcGxpZXMsZC52ZW5kb3JEYXRhLGQuYXBpVmVyc2lvbik6ZyxpLmdkcHJfaWFiPXtjb25zZW50OnM/ZC5jb25zZW50U3RyaW5nOiIiLHN0YXR1czpvLGFwaVZlcnNpb246ZC5hcGlWZXJzaW9ufSksdCYmdC51c3BDb25zZW50JiYoaS51c19wcml2YWN5PXQudXNwQ29uc2VudCkse21ldGhvZDoiUE9TVCIsdXJsOiJodHRwczovL2EudGVhZHMudHYvaGIvYmlkLXJlcXVlc3QiLGRhdGE6SlNPTi5zdHJpbmdpZnkoaSl9fSxpbnRlcnByZXRSZXNwb25zZTpmdW5jdGlvbihlKXt2YXIgcj1bXTtyZXR1cm4oZT1lLmJvZHkpLnJlc3BvbnNlcyYmZS5yZXNwb25zZXMuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdD17Y3BtOmUuY3BtLHdpZHRoOmUud2lkdGgsaGVpZ2h0OmUuaGVpZ2h0LGN1cnJlbmN5OmUuY3VycmVuY3ksbmV0UmV2ZW51ZTohMCx0dGw6ZS50dGwsYWQ6ZS5hZCxyZXF1ZXN0SWQ6ZS5iaWRJZCxjcmVhdGl2ZUlkOmUuY3JlYXRpdmVJZCxwbGFjZW1lbnRJZDplLnBsYWNlbWVudElkfTtlLmRlYWxJZCYmKHQuZGVhbElkPWUuZGVhbElkKSxyLnB1c2godCl9KSxyfX07ZnVuY3Rpb24gZihlKXt2YXIgdCxyPXt9LG49YS5nZXRWYWx1ZShlLnBhcmFtcywicGxhY2VtZW50SWQiKSxpPWEuZ2V0VmFsdWUoZS5wYXJhbXMsInBhZ2VJZCIpO3JldHVybiByLnNpemVzPSh0PWUsYS5wYXJzZVNpemVzSW5wdXQoZnVuY3Rpb24oZSl7dmFyIHQ9YS5kZWVwQWNjZXNzKGUsIm1lZGlhVHlwZXMudmlkZW8ucGxheWVyU2l6ZSIpLHI9YS5kZWVwQWNjZXNzKGUsIm1lZGlhVHlwZXMudmlkZW8uc2l6ZXMiKSxuPWEuZGVlcEFjY2VzcyhlLCJtZWRpYVR5cGVzLmJhbm5lci5zaXplcyIpO3JldHVybiBhLmlzQXJyYXkobil8fGEuaXNBcnJheSh0KXx8YS5pc0FycmF5KHIpP1tuLHIsdF0ucmVkdWNlKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGEuaXNBcnJheShlKSYmKGEuaXNBcnJheShlWzBdKT9lLmZvckVhY2goZnVuY3Rpb24oZSl7dC5wdXNoKGUpfSk6dC5wdXNoKGUpKSx0fSxbXSk6ZS5zaXplc30odCkpKSxyLmJpZElkPWEuZ2V0QmlkSWRQYXJhbWV0ZXIoImJpZElkIixlKSxyLmJpZGRlclJlcXVlc3RJZD1hLmdldEJpZElkUGFyYW1ldGVyKCJiaWRkZXJSZXF1ZXN0SWQiLGUpLHIucGxhY2VtZW50SWQ9cGFyc2VJbnQobiwxMCksci5wYWdlSWQ9cGFyc2VJbnQoaSwxMCksci5hZFVuaXRDb2RlPWEuZ2V0QmlkSWRQYXJhbWV0ZXIoImFkVW5pdENvZGUiLGUpLHIuYXVjdGlvbklkPWEuZ2V0QmlkSWRQYXJhbWV0ZXIoImF1Y3Rpb25JZCIsZSksci50cmFuc2FjdGlvbklkPWEuZ2V0QmlkSWRQYXJhbWV0ZXIoInRyYW5zYWN0aW9uSWQiLGUpLHJ9ZnVuY3Rpb24gcyhlKXtyZXR1cm4gMDxwYXJzZUludChlKX1PYmplY3Qobi5yZWdpc3RlckJpZGRlcikoaSl9fSxbODEwXSk7CnVwYmpzQ2h1bmsoWzkyXSx7ODMwOmZ1bmN0aW9uKGUscix0KXtlLmV4cG9ydHM9dCg4MzEpfSw4MzE6ZnVuY3Rpb24oZSxyLHQpeyJ1c2Ugc3RyaWN0IjtPYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksdC5kKHIsInRyaXBsZWxpZnRBZGFwdGVyU3BlYyIsZnVuY3Rpb24oKXtyZXR1cm4gYn0pO3ZhciBuPXQoMiksaT10KDEpLHU9dCgwKSxhPXQoMyksZD10KDQzKTtmdW5jdGlvbiBwKCl7cmV0dXJuKHA9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl7dmFyIHQ9YXJndW1lbnRzW3JdO2Zvcih2YXIgbiBpbiB0KU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LG4pJiYoZVtuXT10W25dKX1yZXR1cm4gZX0pLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1mdW5jdGlvbiBjKGUpe3JldHVybihjPSJmdW5jdGlvbiI9PXR5cGVvZiBTeW1ib2wmJiJzeW1ib2wiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJiJmdW5jdGlvbiI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlPyJzeW1ib2wiOnR5cGVvZiBlfSkoZSl9ZnVuY3Rpb24gcyhyLGUpe3ZhciB0LG49T2JqZWN0LmtleXMocik7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMmJih0PU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMociksZSYmKHQ9dC5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IocixlKS5lbnVtZXJhYmxlfSkpLG4ucHVzaC5hcHBseShuLHQpKSxufWZ1bmN0aW9uIGYoaSl7Zm9yKHZhciBlPTE7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl7dmFyIG89bnVsbCE9YXJndW1lbnRzW2VdP2FyZ3VtZW50c1tlXTp7fTtlJTI/cyhPYmplY3QobyksITApLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHIsdCxuO3I9aSxuPW9bdD1lXSx0IGluIHI/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsdCx7dmFsdWU6bixlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOnJbdF09bn0pOk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzP09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGksT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMobykpOnMoT2JqZWN0KG8pKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShpLGUsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvLGUpKX0pfXJldHVybiBpfWZ1bmN0aW9uIGwoZSl7cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIG8oZSl9KGUpfHxmdW5jdGlvbihlKXtpZigidW5kZWZpbmVkIiE9dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChlKSlyZXR1cm4gQXJyYXkuZnJvbShlKX0oZSl8fGZ1bmN0aW9uKGUscil7aWYoIWUpcmV0dXJuO2lmKCJzdHJpbmciPT10eXBlb2YgZSlyZXR1cm4gbyhlLHIpO3ZhciB0PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKS5zbGljZSg4LC0xKTsiT2JqZWN0Ij09PXQmJmUuY29uc3RydWN0b3ImJih0PWUuY29uc3RydWN0b3IubmFtZSk7aWYoIk1hcCI9PT10fHwiU2V0Ij09PXQpcmV0dXJuIEFycmF5LmZyb20oZSk7aWYoIkFyZ3VtZW50cyI9PT10fHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdCh0KSlyZXR1cm4gbyhlLHIpfShlKXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC4iKX0oKX1mdW5jdGlvbiBvKGUscil7KG51bGw9PXJ8fHI+ZS5sZW5ndGgpJiYocj1lLmxlbmd0aCk7Zm9yKHZhciB0PTAsbj1uZXcgQXJyYXkocik7dDxyO3QrKyluW3RdPWVbdF07cmV0dXJuIG59dmFyIHk9ITAsbT1udWxsLGI9e2d2bGlkOjI4LGNvZGU6InRyaXBsZWxpZnQiLHN1cHBvcnRlZE1lZGlhVHlwZXM6W24uYixuLmRdLGlzQmlkUmVxdWVzdFZhbGlkOmZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDAhPT1lLnBhcmFtcy5pbnZlbnRvcnlDb2RlfSxidWlsZFJlcXVlc3RzOmZ1bmN0aW9uKGUscil7dmFyIHQsbj0iaHR0cHM6Ly90bHguM2xpZnQuY29tL2hlYWRlci9hdWN0aW9uPyIsaT1mdW5jdGlvbihlKXt2YXIgcj17fSx0PWVbMF0uc2NoYWluLG49ZnVuY3Rpb24oKXt2YXIgZT17fSxyPXAoe30sYS5iLmdldENvbmZpZygiZnBkLmNvbnRleHQiKSksdD1wKHt9LGEuYi5nZXRDb25maWcoImZwZC51c2VyIikpO3JldHVybiB2KGUsciksdihlLHQpLGV9KCk7ci5pbXA9ZS5tYXAoZnVuY3Rpb24oZSxyKXt2YXIgdD17aWQ6cix0YWdpZDplLnBhcmFtcy5pbnZlbnRvcnlDb2RlLGZsb29yOmZ1bmN0aW9uKGUpe3ZhciByPW51bGw7e3ZhciB0OyJmdW5jdGlvbiI9PXR5cGVvZiBlLmdldEZsb29yJiYoIm9iamVjdCIhPT1jKHQ9ZS5nZXRGbG9vcih7Y3VycmVuY3k6IlVTRCIsbWVkaWFUeXBlOiJiYW5uZXIiLHNpemU6aChlLnNpemVzKX0pKXx8IlVTRCIhPT10LmN1cnJlbmN5fHxpc05hTihwYXJzZUZsb2F0KHQuZmxvb3IpKXx8KHI9cGFyc2VGbG9hdCh0LmZsb29yKSkpfXJldHVybiBudWxsIT09cj9yOmUucGFyYW1zLmZsb29yfShlKX07cmV0dXJuIGcoZSk/dC52aWRlbz1mdW5jdGlvbihlKXt2YXIgcj1mKGYoe30sZS5wYXJhbXMudmlkZW8pLGUubWVkaWFUeXBlcy52aWRlbyk7ci53fHwoci53PXIucGxheWVyU2l6ZVswXVswXSk7ci5ofHwoci5oPXIucGxheWVyU2l6ZVswXVsxXSk7Imluc3RyZWFtIj09PXIuY29udGV4dCYmKHIucGxhY2VtZW50PTEpO3JldHVybiBkZWxldGUgci5wbGF5ZXJTaXplLHJ9KGUpOmUubWVkaWFUeXBlcy5iYW5uZXImJih0LmJhbm5lcj17Zm9ybWF0OmgoZS5zaXplcyl9KSx0fSk7dmFyIGk9W10uY29uY2F0KGwoZnVuY3Rpb24oZSl7cmV0dXJuIFMoZSwidGRpZCIsImFkc2VydmVyLm9yZyIsIlRESUQiKX0oZSkpLGwoZnVuY3Rpb24oZSl7cmV0dXJuIFMoZSwiaWRsX2VudiIsImxpdmVyYW1wLmNvbSIsImlkbCIpfShlKSksbChmdW5jdGlvbihlKXtyZXR1cm4gUyhlLCJjcml0ZW9JZCIsImNyaXRlby5jb20iLCJjcml0ZW9JZCIpfShlKSkpOzA8aS5sZW5ndGgmJihyLnVzZXI9e2V4dDp7ZWlkczppfX0pO3ZhciBvPWZ1bmN0aW9uKGUscil7dmFyIHQ9e307dS5pc0VtcHR5KGUpfHwodC5zY2hhaW49Zih7fSxlKSk7dS5pc0VtcHR5KHIpfHwodC5mcGQ9Zih7fSxyKSk7cmV0dXJuIHR9KHQsbik7dS5pc0VtcHR5KG8pfHwoci5leHQ9byk7cmV0dXJuIHJ9KGUpO3JldHVybiBuPXUudHJ5QXBwZW5kUXVlcnlTdHJpbmcobiwibGliIiwicHJlYmlkIiksbj11LnRyeUFwcGVuZFF1ZXJ5U3RyaW5nKG4sInYiLCI0LjE3LjAiKSxyJiZyLnJlZmVyZXJJbmZvJiYodD1yLnJlZmVyZXJJbmZvLnJlZmVyZXIsbj11LnRyeUFwcGVuZFF1ZXJ5U3RyaW5nKG4sInJlZmVycmVyIix0KSksciYmci50aW1lb3V0JiYobj11LnRyeUFwcGVuZFF1ZXJ5U3RyaW5nKG4sInRtYXgiLHIudGltZW91dCkpLHImJnIuZ2RwckNvbnNlbnQmJih2b2lkIDAhPT1yLmdkcHJDb25zZW50LmdkcHJBcHBsaWVzJiYoeT1yLmdkcHJDb25zZW50LmdkcHJBcHBsaWVzLG49dS50cnlBcHBlbmRRdWVyeVN0cmluZyhuLCJnZHByIix5LnRvU3RyaW5nKCkpKSx2b2lkIDAhPT1yLmdkcHJDb25zZW50LmNvbnNlbnRTdHJpbmcmJihtPXIuZ2RwckNvbnNlbnQuY29uc2VudFN0cmluZyxuPXUudHJ5QXBwZW5kUXVlcnlTdHJpbmcobiwiY21wX2NzIixtKSkpLHImJnIudXNwQ29uc2VudCYmKG49dS50cnlBcHBlbmRRdWVyeVN0cmluZyhuLCJ1c19wcml2YWN5IixyLnVzcENvbnNlbnQpKSwhMD09PWEuYi5nZXRDb25maWcoImNvcHBhIikmJihuPXUudHJ5QXBwZW5kUXVlcnlTdHJpbmcobiwiY29wcGEiLCEwKSksbi5sYXN0SW5kZXhPZigiJiIpPT09bi5sZW5ndGgtMSYmKG49bi5zdWJzdHJpbmcoMCxuLmxlbmd0aC0xKSksdS5sb2dNZXNzYWdlKCJ0bENhbGwgcmVxdWVzdCBidWlsdDogIituKSx7bWV0aG9kOiJQT1NUIix1cmw6bixkYXRhOmksYmlkZGVyUmVxdWVzdDpyfX0saW50ZXJwcmV0UmVzcG9uc2U6ZnVuY3Rpb24oZSxyKXt2YXIgdD1yLmJpZGRlclJlcXVlc3Q7cmV0dXJuKGUuYm9keS5iaWRzfHxbXSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbihlLHIpe3ZhciB0PXt9LG49ci53aWR0aHx8MSxpPXIuaGVpZ2h0fHwxLG89ci5kZWFsX2lkfHwiIix1PXIuY3JpZHx8IiIsYT1lLmJpZHNbci5pbXBfaWRdO3t2YXIgcCxjOzAhPXIuY3BtJiZyLmFkJiYodD17cmVxdWVzdElkOmEuYmlkSWQsY3BtOnIuY3BtLHdpZHRoOm4saGVpZ2h0OmksbmV0UmV2ZW51ZTohMCxhZDpyLmFkLGNyZWF0aXZlSWQ6dSxkZWFsSWQ6byxjdXJyZW5jeToiVVNEIix0dGw6MzAwLHRsX3NvdXJjZTpyLnRsX3NvdXJjZSxtZXRhOnt9fSxnKGEpJiYodC52YXN0WG1sPXIuYWQsdC5tZWRpYVR5cGU9InZpZGVvIiksci5hZHZlcnRpc2VyX25hbWUmJih0Lm1ldGEuYWR2ZXJ0aXNlck5hbWU9ci5hZHZlcnRpc2VyX25hbWUpLHQuYWQmJi0xPT09dC5hZC5pbmRleE9mKCI8Ym9keSIpJiYodC5hZD0iPGJvZHk+Iit0LmFkKyI8L2JvZHk+IiksdC5hZCYmKChwPS8iaW1hZ2VfdXJsIjoiKGh0dHA/czouKj8pIi9nbS5leGVjKHQuYWQpKSYmMDxwLmxlbmd0aCYmKGM9ZC5jKHBbMV0pLHQuYWQ9dC5hZC5yZXBsYWNlKHBbMV0sYykpKSl9cmV0dXJuIHR9KHQsZSl9KX0sZ2V0VXNlclN5bmNzOmZ1bmN0aW9uKGUscix0LG4pe3ZhciBpPWZ1bmN0aW9uKGUpe2lmKCFlKXJldHVybjtpZihlLmlmcmFtZUVuYWJsZWQpcmV0dXJuImlmcmFtZSI7aWYoZS5waXhlbEVuYWJsZWQpcmV0dXJuImltYWdlIn0oZSk7aWYoaSl7dmFyIG89Imh0dHBzOi8vZWIyLjNsaWZ0LmNvbS9zeW5jPyI7cmV0dXJuImltYWdlIj09PWkmJihvPXUudHJ5QXBwZW5kUXVlcnlTdHJpbmcobywicHgiLDEpLG89dS50cnlBcHBlbmRRdWVyeVN0cmluZyhvLCJzcmMiLCJwcmViaWQiKSksbnVsbCE9PW0mJihvPXUudHJ5QXBwZW5kUXVlcnlTdHJpbmcobywiZ2RwciIseSksbz11LnRyeUFwcGVuZFF1ZXJ5U3RyaW5nKG8sImNtcF9jcyIsbSkpLG4mJihvPXUudHJ5QXBwZW5kUXVlcnlTdHJpbmcobywidXNfcHJpdmFjeSIsbikpLFt7dHlwZTppLHVybDpvfV19fX07ZnVuY3Rpb24gZyhlKXtyZXR1cm4gZS5tZWRpYVR5cGVzLnZpZGVvJiZlLm1lZGlhVHlwZXMudmlkZW8uY29udGV4dCYmImluc3RyZWFtIj09PWUubWVkaWFUeXBlcy52aWRlby5jb250ZXh0LnRvTG93ZXJDYXNlKCl9ZnVuY3Rpb24gdihyLHQpe3UuaXNFbXB0eSh0KXx8T2JqZWN0LmtleXModCkuZm9yRWFjaChmdW5jdGlvbihlKXtudWxsIT10W2VdJiYocltlXT10W2VdKX0pfWZ1bmN0aW9uIFMoZSxyLHQsbil7cmV0dXJuIGUubWFwKCh1PXIsZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUudXNlcklkJiZlLnVzZXJJZFt1XX0pKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuISFlfSkubWFwKChpPXQsbz1uLGZ1bmN0aW9uKGUpe3JldHVybntzb3VyY2U6aSx1aWRzOlt7aWQ6ZSxleHQ6e3J0aVBhcnRuZXI6b319XX19KSk7dmFyIGksbyx1fWZ1bmN0aW9uIGgoZSl7cmV0dXJuIGUuZmlsdGVyKE8pLm1hcChmdW5jdGlvbihlKXtyZXR1cm57dzplWzBdLGg6ZVsxXX19KX1mdW5jdGlvbiBPKGUpe3JldHVybiAyPT09ZS5sZW5ndGgmJiJudW1iZXIiPT10eXBlb2YgZVswXSYmIm51bWJlciI9PXR5cGVvZiBlWzFdfU9iamVjdChpLnJlZ2lzdGVyQmlkZGVyKShiKX19LFs4MzBdKTsKdXBianNDaHVuayhbOTBdLHs4MzQ6ZnVuY3Rpb24oZSxyLHQpe2UuZXhwb3J0cz10KDgzNSl9LDgzNTpmdW5jdGlvbihlLHIsdCl7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSx0LmQociwic3BlYyIsZnVuY3Rpb24oKXtyZXR1cm4gdn0pO3ZhciBtPXQoMCkscz10KDEpLG89dCgxMSksYz10KDIpLGY9IkJpZCBmcm9tIHJlc3BvbnNlIGhhcyBubyBhdWlkIHBhcmFtZXRlciAtICIsbD0iQmlkIGZyb20gcmVzcG9uc2UgaGFzIG5vIGFkbSBwYXJhbWV0ZXIgLSAiLHA9IkFycmF5IG9mIGJpZCBvYmplY3RzIGlzIGVtcHR5IixnPSJDYW4ndCBmaW5kIGluIHJlcXVlc3RlZCBiaWRzIHRoZSBiaWQgd2l0aCBhdWlkIC0gIix1PSJTZWF0YmlkIGFycmF5IGZyb20gcmVzcG9uc2UgaGFzIGVtcHR5IGl0ZW0iLHk9IlJlc3BvbnNlIGlzIGVtcHR5IixiPSJSZXNwb25zZSBoYXMgZW1wdHkgc2VhdGJpZCBhcnJheSIsaD0iU2VhdGJpZCBmcm9tIHJlc3BvbnNlIGhhcyBubyBhcnJheSBvZiBiaWQgb2JqZWN0cyAtICIsdj17Y29kZToidHJ1c3R4IixzdXBwb3J0ZWRNZWRpYVR5cGVzOltjLmIsYy5kXSxpc0JpZFJlcXVlc3RWYWxpZDpmdW5jdGlvbihlKXtyZXR1cm4hIWUucGFyYW1zLnVpZH0sYnVpbGRSZXF1ZXN0czpmdW5jdGlvbihlLHIpe3ZhciBhLG8scD1bXSx1PXt9LGM9e30sZj17fSxsPSJuZXQiOyhlfHxbXSkuZm9yRWFjaChmdW5jdGlvbihlKXsiZ3Jvc3MiPT09ZS5wYXJhbXMucHJpY2VUeXBlJiYobD0iZ3Jvc3MiKSxvPWUuYmlkZGVyUmVxdWVzdElkO3ZhciByPWUucGFyYW1zLnVpZCx0PWUuYWRVbml0Q29kZTtwLnB1c2gocik7dmFyIHMsbj1tLnBhcnNlU2l6ZXNJbnB1dChlLnNpemVzKTthfHxtLmlzRW1wdHkoZS5wYXJhbXMua2V5d29yZHMpfHwoMDwocz1tLnRyYW5zZm9ybUJpZGRlclBhcmFtS2V5d29yZHMoZS5wYXJhbXMua2V5d29yZHMpKS5sZW5ndGgmJnMuZm9yRWFjaChFKSxhPXMpLGNbcl18fChjW3JdPXt9KTt2YXIgZD1jW3JdO2RbdF0/ZFt0XS5iaWRzLnB1c2goZSk6ZFt0XT17YWRVbml0Q29kZTp0LGJpZHM6W2VdLHBhcmVudHM6W119O3ZhciBpPWRbdF07bi5mb3JFYWNoKGZ1bmN0aW9uKGUpe2ZbZV09ITAsdVtyXXx8KHVbcl09e30pLHVbcl1bZV0/dVtyXVtlXS5wdXNoKGkpOnVbcl1bZV09W2ldLGkucGFyZW50cy5wdXNoKHtwYXJlbnQ6dVtyXSxrZXk6ZSx1aWQ6cn0pfSl9KTt2YXIgdD17cHQ6bCxhdWlkczpwLmpvaW4oIiwiKSxzaXplczptLmdldEtleXMoZikuam9pbigiLCIpLHI6byx3cmFwcGVyVHlwZToiUHJlYmlkX2pzIix3cmFwcGVyVmVyc2lvbjoiNC4xNy4wIn07cmV0dXJuIGEmJih0LmtleXdvcmRzPUpTT04uc3RyaW5naWZ5KGEpKSxyJiYoci5yZWZlcmVySW5mbyYmci5yZWZlcmVySW5mby5yZWZlcmVyJiYodC51PXIucmVmZXJlckluZm8ucmVmZXJlciksci50aW1lb3V0JiYodC53dGltZW91dD1yLnRpbWVvdXQpLHIuZ2RwckNvbnNlbnQmJihyLmdkcHJDb25zZW50LmNvbnNlbnRTdHJpbmcmJih0LmdkcHJfY29uc2VudD1yLmdkcHJDb25zZW50LmNvbnNlbnRTdHJpbmcpLHQuZ2Rwcl9hcHBsaWVzPSJib29sZWFuIj09dHlwZW9mIHIuZ2RwckNvbnNlbnQuZ2RwckFwcGxpZXM/TnVtYmVyKHIuZ2RwckNvbnNlbnQuZ2RwckFwcGxpZXMpOjEpLHIudXNwQ29uc2VudCYmKHQudXNfcHJpdmFjeT1yLnVzcENvbnNlbnQpKSx7bWV0aG9kOiJHRVQiLHVybDoiaHR0cHM6Ly9zb2ZpYS50cnVzdHgub3JnL2hiIixkYXRhOm0ucGFyc2VRdWVyeVN0cmluZ1BhcmFtZXRlcnModCkucmVwbGFjZSgvXCYkLywiIiksYmlkc01hcDp1fX0saW50ZXJwcmV0UmVzcG9uc2U6ZnVuY3Rpb24oZSxyLHQpe3ZhciBzPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09dD90Om8uYTtlPWUmJmUuYm9keTt2YXIgbixkPVtdLGk9ci5iaWRzTWFwLGE9ci5kYXRhLnB0O3JldHVybiBlP2Uuc2VhdGJpZCYmIWUuc2VhdGJpZC5sZW5ndGgmJihuPWIpOm49eSwhbiYmZS5zZWF0YmlkJiZlLnNlYXRiaWQuZm9yRWFjaChmdW5jdGlvbihlKXshZnVuY3Rpb24oZSxkLHIsdCxzKXtpZighZSlyZXR1cm47dmFyIG47ZS5hdWlkfHwobj1mK0pTT04uc3RyaW5naWZ5KGUpKTt7dmFyIGksYSxvLHAsdTtlLmFkbT8oaT1kW2UuYXVpZF0pPyhhPSIiLmNvbmNhdChlLncsIngiKS5jb25jYXQoZS5oKSxpW2FdJiYobz1pW2FdWzBdLHA9by5iaWRzLnNoaWZ0KCksdT17cmVxdWVzdElkOnAuYmlkSWQsYmlkZGVyQ29kZTp2LmNvZGUsY3BtOmUucHJpY2Usd2lkdGg6ZS53LGhlaWdodDplLmgsY3JlYXRpdmVJZDplLmF1aWQsY3VycmVuY3k6IlVTRCIsbmV0UmV2ZW51ZToiZ3Jvc3MiIT09cix0dGw6MzYwLGRlYWxJZDplLmRlYWxpZH0sInZpZGVvIj09PWUuY29udGVudF90eXBlPyh1LnZhc3RYbWw9ZS5hZG0sdS5tZWRpYVR5cGU9Yy5kLHUuYWRSZXNwb25zZT17Y29udGVudDp1LnZhc3RYbWx9LHAucmVuZGVyZXJ8fHAubWVkaWFUeXBlcyYmcC5tZWRpYVR5cGVzLnZpZGVvJiYib3V0c3RyZWFtIiE9PXAubWVkaWFUeXBlcy52aWRlby5jb250ZXh0fHwodS5yZW5kZXJlcj1mdW5jdGlvbihlLHIpe3ZhciB0PXIuaW5zdGFsbCh7aWQ6ZS5pZCx1cmw6ZS51cmwsbG9hZGVkOiExfSk7dHJ5e3Quc2V0UmVuZGVyKHcpfWNhdGNoKGUpe20ubG9nV2FybigiUHJlYmlkIEVycm9yIGNhbGxpbmcgc2V0UmVuZGVyIG9uIHJlbmRlcmVyIixlKX1yZXR1cm4gdH0oe2lkOnAuYmlkSWQsdXJsOiJodHRwczovL2FjZG4uYWRueHMuY29tL3ZpZGVvL291dHN0cmVhbS9BTk91dHN0cmVhbVZpZGVvLmpzIn0scykpKToodS5hZD1lLmFkbSx1Lm1lZGlhVHlwZT1jLmIpLHQucHVzaCh1KSxvLmJpZHMubGVuZ3RofHxvLnBhcmVudHMuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgcj1lLnBhcmVudCx0PWUua2V5LHM9ZS51aWQsbj1yW3RdLmluZGV4T2Yobyk7LTE8biYmclt0XS5zcGxpY2UobiwxKSxyW3RdLmxlbmd0aHx8KGRlbGV0ZSByW3RdLG0uZ2V0S2V5cyhyKS5sZW5ndGh8fGRlbGV0ZSBkW3NdKX0pKSk6bj1nK2UuYXVpZDpuPWwrSlNPTi5zdHJpbmdpZnkoZSl9biYmbS5sb2dFcnJvcihuKX0oZnVuY3Rpb24oZSl7ZT9lLmJpZD9lLmJpZFswXXx8bS5sb2dFcnJvcihwKTptLmxvZ0Vycm9yKGgrSlNPTi5zdHJpbmdpZnkoZSkpOm0ubG9nRXJyb3IodSk7cmV0dXJuIGUmJmUuYmlkJiZlLmJpZFswXX0oZSksaSxhLGQscyl9KSxuJiZtLmxvZ0Vycm9yKG4pLGR9LGdldFVzZXJTeW5jczpmdW5jdGlvbihlKXtpZihlLnBpeGVsRW5hYmxlZClyZXR1cm5be3R5cGU6ImltYWdlIix1cmw6Imh0dHBzOi8vc29maWEudHJ1c3R4Lm9yZy9wdXNoX3N5bmMifV19fTtmdW5jdGlvbiBFKGUpe3ZhciByO3I9ZS52YWx1ZSxtLmlzQXJyYXkocikmJjA8ci5sZW5ndGgmJiIiPT09ZS52YWx1ZVswXSYmZGVsZXRlIGUudmFsdWV9ZnVuY3Rpb24gdyhlKXtlLnJlbmRlcmVyLnB1c2goZnVuY3Rpb24oKXt3aW5kb3cuQU5PdXRzdHJlYW1WaWRlby5yZW5kZXJBZCh7dGFyZ2V0SWQ6ZS5hZFVuaXRDb2RlLGFkUmVzcG9uc2U6ZS5hZFJlc3BvbnNlfSl9KX1PYmplY3Qocy5yZWdpc3RlckJpZGRlcikodil9fSxbODM0XSk7CnVwYmpzQ2h1bmsoWzg3XSx7ODQyOmZ1bmN0aW9uKGUsbix0KXtlLmV4cG9ydHM9dCg4NDMpfSw4NDM6ZnVuY3Rpb24oZSxuLHQpeyJ1c2Ugc3RyaWN0IjtPYmplY3QuZGVmaW5lUHJvcGVydHkobiwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksbi5yZXNldFVzZXJTeW5jPWZ1bmN0aW9uKCl7aT0hMX0sdC5kKG4sInNwZWMiLGZ1bmN0aW9uKCl7cmV0dXJuIHB9KTt2YXIgZD10KDApLG89dCgzKSxzPXQoMSksYT0iMy41ViIsaT0hMTtkLmxvZ01lc3NhZ2UoIkluaXRpYWxpemluZyBVRE0gQWRhcHRlci4gUEJKUyBWZXJzaW9uOiAiLmNvbmNhdCgiNC4xNy4wIiwiIHdpdGggYWRhcHRlciB2ZXJzaW9uOiAiKS5jb25jYXQoYSwiICBVcGRhdGVkIDIwMTkxMDI4IikpO3ZhciBwPXtjb2RlOiJ1bmRlcmRvZ21lZGlhIixiaWRQYXJhbXM6W10saXNCaWRSZXF1ZXN0VmFsaWQ6ZnVuY3Rpb24oZSl7dmFyIG49ZS5tZWRpYVR5cGVzJiZlLm1lZGlhVHlwZXMuYmFubmVyJiZlLm1lZGlhVHlwZXMuYmFubmVyLnNpemVzP2UubWVkaWFUeXBlcy5iYW5uZXIuc2l6ZXM6ZS5zaXplcztyZXR1cm4hIShlLnBhcmFtcyYmZS5wYXJhbXMuc2l0ZUlkJiZuJiYwPG4ubGVuZ3RoKX0sYnVpbGRSZXF1ZXN0czpmdW5jdGlvbihlLG4pe3ZhciB0PVtdLHM9MDtlLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIG49ZS5tZWRpYVR5cGVzJiZlLm1lZGlhVHlwZXMuYmFubmVyJiZlLm1lZGlhVHlwZXMuYmFubmVyLnNpemVzP2UubWVkaWFUeXBlcy5iYW5uZXIuc2l6ZXM6ZS5zaXplczt0PWQuZmxhdHRlbih0LGQucGFyc2VTaXplc0lucHV0KG4pKSxzPWUucGFyYW1zLnNpdGVJZH0pO3ZhciBpPXt0aWQ6MSxkdDoxMCxzaWQ6cyxzaXplczp0LmpvaW4oIiwiKSx2ZXJzaW9uOmF9O2lmKG4mJm4uZ2RwckNvbnNlbnQmJih2b2lkIDAhPT1uLmdkcHJDb25zZW50LmdkcHJBcHBsaWVzJiYoaS5nZHByQXBwbGllcz0hIW4uZ2RwckNvbnNlbnQuZ2RwckFwcGxpZXMpLG4uZ2RwckNvbnNlbnQudmVuZG9yRGF0YSYmbi5nZHByQ29uc2VudC52ZW5kb3JEYXRhLnZlbmRvckNvbnNlbnRzJiZ2b2lkIDAhPT1uLmdkcHJDb25zZW50LnZlbmRvckRhdGEudmVuZG9yQ29uc2VudHNbMTU5XSYmKGkuY29uc2VudEdpdmVuPSEhbi5nZHByQ29uc2VudC52ZW5kb3JEYXRhLnZlbmRvckNvbnNlbnRzWzE1OV0pLHZvaWQgMCE9PW4uZ2RwckNvbnNlbnQuY29uc2VudFN0cmluZyYmKGkuY29uc2VudERhdGE9bi5nZHByQ29uc2VudC5jb25zZW50U3RyaW5nKSksbi51c3BDb25zZW50JiYoaS51c3BDb25zZW50PW4udXNwQ29uc2VudCksIWkuZ2RwckFwcGxpZXN8fGkuY29uc2VudEdpdmVuKXJldHVybnttZXRob2Q6IkdFVCIsdXJsOiJodHRwczovL3VkbXNlcnZlLm5ldC91ZG0vaW1nLmZldGNoIixkYXRhOmksYmlkUGFyYW1zOmV9fSxnZXRVc2VyU3luY3M6ZnVuY3Rpb24odCxlKXtpZighaSYmMDxlLmxlbmd0aCYmZVswXS5ib2R5JiZlWzBdLmJvZHkudXNlclN5bmNzJiYwPGVbMF0uYm9keS51c2VyU3luY3MubGVuZ3RoKXJldHVybiBpPSEwLGVbMF0uYm9keS51c2VyU3luY3MuZmlsdGVyKGZ1bmN0aW9uKGUpe3ZhciBuPWUudHlwZTtyZXR1cm4hKCF0LmlmcmFtZUVuYWJsZWR8fCJpZnJhbWUiIT09bil8fCghKCF0LnBpeGVsRW5hYmxlZHx8ImltYWdlIiE9PW4pfHx2b2lkIDApfSl9LGludGVycHJldFJlc3BvbnNlOmZ1bmN0aW9uKGUsbil7dmFyIHI9W107cmV0dXJuIG4uYmlkUGFyYW1zLmZvckVhY2goZnVuY3Rpb24oaSl7ZS5ib2R5Lm1pZHMuZm9yRWFjaChmdW5jdGlvbihuKXt2YXIgdCxlLHM7MDxuLnVzZUNvdW50fHwobi51c2VDb3VudHx8KG4udXNlQ291bnQ9MCksdD0hMCxlPWkubWVkaWFUeXBlcyYmaS5tZWRpYVR5cGVzLmJhbm5lciYmaS5tZWRpYVR5cGVzLmJhbm5lci5zaXplcz9pLm1lZGlhVHlwZXMuYmFubmVyLnNpemVzOmkuc2l6ZXMsZC5wYXJzZVNpemVzSW5wdXQoZSkuZm9yRWFjaChmdW5jdGlvbihlKXtlPT09bi53aWR0aCsieCIrbi5oZWlnaHQmJih0PSExKX0pLHR8fCgocz17cmVxdWVzdElkOmkuYmlkSWQsYmlkZGVyQ29kZTpwLmNvZGUsY3BtOnBhcnNlRmxvYXQobi5jcG0pLHdpZHRoOm4ud2lkdGgsaGVpZ2h0Om4uaGVpZ2h0LGFkOm4uYWRfY29kZV9odG1sLGNyZWF0aXZlSWQ6bi5taWQsY3VycmVuY3k6IlVTRCIsbmV0UmV2ZW51ZTohMSx0dGw6bi50dGx8fDYwfSkuY3BtPD0wfHxzLmFkLmxlbmd0aDw9MHx8KG4udXNlQ291bnQrKyxzLmFkKz1mdW5jdGlvbihlLG4sdCl7dmFyIHM9bi5ub3RpZmljYXRpb25fdXJsLGk9cy5pbmRleE9mKCI7dmVyc2lvbj0iKTtpKzEmJihzPXMuc3Vic3RyaW5nKDAsaSkpO3MrPSI7dmVyc2lvbj0iLmNvbmNhdChhKSxzKz0iO2NiPSIrTWF0aC5yYW5kb20oKSxzKz0iO3FxcT0iKzEvZS5jcG0scys9IjtoYnQ9IitvLmIuZ2V0Q29uZmlnKCJfYmlkZGVyVGltZW91dCIpLHMrPSI7c3R5bGU9YWRhcHRlciIscys9Ijt2aXM9IitlbmNvZGVVUklDb21wb25lbnQoZG9jdW1lbnQudmlzaWJpbGl0eVN0YXRlKSxzKz0iO3RyYWZmaWNfaW5mbz0iK2VuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShmdW5jdGlvbigpe2Zvcih2YXIgZSxuPXt9LHQ9d2luZG93LmxvY2F0aW9uLmhyZWYuc2xpY2Uod2luZG93LmxvY2F0aW9uLmhyZWYuaW5kZXhPZigiPyIpKzEpLnNwbGl0KCImIikscz0wO3M8dC5sZW5ndGg7cysrKShlPXRbc10uc3BsaXQoIj0iKSlbMF0ubWF0Y2goL151dG1fLykmJihuW2VbMF1dPWVbMV0uc3Vic3RyKDAsMTUwKSk7cmV0dXJuIG59KCkpKSx0LnBhcmFtcy5zdWJJZCYmKHMrPSI7c3ViaWQ9IitlbmNvZGVVUklDb21wb25lbnQodC5wYXJhbXMuc3ViSWQpKTtyZXR1cm4nPHNjcmlwdCBhc3luYyBzcmM9IicrcysnIj48XC9zY3JpcHQ+J30ocyxuLGkpLHIucHVzaChzKSkpKX0pfSkscn19O09iamVjdChzLnJlZ2lzdGVyQmlkZGVyKShwKX19LFs4NDJdKTsKdXBianNDaHVuayhbODJdLHs4NTI6ZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uKDg1Myl9LDg1MzpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxuLmQodCwic3BlYyIsZnVuY3Rpb24oKXtyZXR1cm4gcn0pO3ZhciBpPW4oMSksYT1uKDIpLHI9e2NvZGU6InVwbyIsc3VwcG9ydGVkTWVkaWFUeXBlczpbYS5iXSxpc0JpZFJlcXVlc3RWYWxpZDpmdW5jdGlvbihlKXtyZXR1cm4hKCFlLnBhcmFtcy5zcGFjZXx8aXNOYU4ocGFyc2VGbG9hdChlLnBhcmFtcy5zcGFjZSkpfHwhaXNGaW5pdGUoZS5wYXJhbXMuc3BhY2UpKX0sYnVpbGRSZXF1ZXN0czpmdW5jdGlvbihlKXtpZigwPT09ZS5sZW5ndGgpcmV0dXJuW107dmFyIHQ9W107cmV0dXJuIGUuZm9yRWFjaChmdW5jdGlvbihlKXt0LnB1c2goe21ldGhvZDoiR0VUIix1cmw6Ii8vbG4udXBhcGkubmV0L2Y/cz0iK2UucGFyYW1zLnNwYWNlKyImdz0iK2UucGFyYW1zLndlYnNpdGUrIiZkPSIrZS5iaWRJZCxvcHRpb25zOntjb250ZW50VHlwZToidGV4dC9wbGFpbiIsd2l0aENyZWRlbnRpYWxzOjB9LGJpZFJlcXVlc3Q6ZX0pfSksdH0saW50ZXJwcmV0UmVzcG9uc2U6ZnVuY3Rpb24oZSx0KXt2YXIgbj1lLmJvZHkuZGF0YVswXSxpPXQuYmlkUmVxdWVzdCxyPWF0b2Iobi5jb250ZW50KSxzPSIvL2xuLnVwYXBpLm5ldC9yP3Vwb25pdD10cnVlJnQ9MSZ0PTYmbj0wJms9IituLnRva2VuO3JldHVyblt7cmVxdWVzdElkOmkuYmlkSWQsY3BtOnBhcnNlRmxvYXQobi5vcHRpb25zLmNwbSksd2lkdGg6cGFyc2VJbnQoaS5zaXplc1swXVswXSksaGVpZ2h0OnBhcnNlSW50KGkuc2l6ZXNbMF1bMV0pLGNyZWF0aXZlSWQ6bi5jcmlkfHwwLGRlYWxJZDpuLmRlYWxpZHx8MCxjdXJyZW5jeToiVVNEIixuZXRSZXZlbnVlOiEwLG1lZGlhVHlwZTphLmIsYWQ6cix0dGw6NmU0LHJlbmRlclBpeGVsOnN9XX19O09iamVjdChpLnJlZ2lzdGVyQmlkZGVyKShyKX19LFs4NTJdKTsKdXBianNDaHVuayhbNV0sezIyOmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dC5hPWZ1bmN0aW9uKGUpe3ZhciB0PVtdO2Zvcih2YXIgbiBpbiBlKXt2YXIgbztlLmhhc093blByb3BlcnR5KG4pJiYoInB1YlByb3ZpZGVkSWQiPT09bj90PXQuY29uY2F0KGUucHViUHJvdmlkZWRJZCk6KG89ZnVuY3Rpb24oZSx0KXt2YXIgbj1zW3RdO2lmKG4mJmUpe3ZhciBvPXt9O28uc291cmNlPW4uc291cmNlO3ZhciByPXUuaXNGbihuLmdldFZhbHVlKT9uLmdldFZhbHVlKGUpOmU7aWYodS5pc1N0cihyKSl7dmFyIGEsaSxjPXtpZDpyLGF0eXBlOm4uYXR5cGV9O3JldHVybiF1LmlzRm4obi5nZXRVaWRFeHQpfHwoYT1uLmdldFVpZEV4dChlKSkmJihjLmV4dD1hKSxvLnVpZHM9W2NdLCF1LmlzRm4obi5nZXRFaWRFeHQpfHwoaT1uLmdldEVpZEV4dChlKSkmJihvLmV4dD1pKSxvfX1yZXR1cm4gbnVsbH0oZVtuXSxuKSkmJnQucHVzaChvKSl9cmV0dXJuIHR9O3ZhciB1PW4oMCkscz17aW50ZW50SXFJZDp7c291cmNlOiJpbnRlbnRpcS5jb20iLGF0eXBlOjF9LHB1YmNpZDp7c291cmNlOiJwdWJjaWQub3JnIixhdHlwZToxfSx0ZGlkOntzb3VyY2U6ImFkc2VydmVyLm9yZyIsYXR5cGU6MSxnZXRVaWRFeHQ6ZnVuY3Rpb24oKXtyZXR1cm57cnRpUGFydG5lcjoiVERJRCJ9fX0saWQ1aWQ6e2dldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLnVpZH0sc291cmNlOiJpZDUtc3luYy5jb20iLGF0eXBlOjEsZ2V0RWlkRXh0OmZ1bmN0aW9uKGUpe2lmKGUuZXh0KXJldHVybiBlLmV4dH19LHBhcnJhYmxlSWQ6e3NvdXJjZToicGFycmFibGUuY29tIixhdHlwZToxLGdldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLmVpZD9lLmVpZDplLmNjcGFPcHRvdXQ/IiI6bnVsbH0sZ2V0VWlkRXh0OmZ1bmN0aW9uKGUpe3ZhciB0PXUucGljayhlLFsiaWJhT3B0b3V0IiwiY2NwYU9wdG91dCJdKTtpZihPYmplY3Qua2V5cyh0KS5sZW5ndGgpcmV0dXJuIHR9fSxpZGxfZW52Ontzb3VyY2U6ImxpdmVyYW1wLmNvbSIsYXR5cGU6MX0sbGlwYjp7Z2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUubGlwYmlkfSxzb3VyY2U6ImxpdmVpbnRlbnQuY29tIixhdHlwZToxLGdldEVpZEV4dDpmdW5jdGlvbihlKXtpZihBcnJheS5pc0FycmF5KGUuc2VnbWVudHMpJiZlLnNlZ21lbnRzLmxlbmd0aClyZXR1cm57c2VnbWVudHM6ZS5zZWdtZW50c319fSxicml0ZXBvb2xpZDp7c291cmNlOiJicml0ZXBvb2wuY29tIixhdHlwZToxfSxsb3RhbWVQYW5vcmFtYUlkOntzb3VyY2U6ImNyd2RjbnRybC5uZXQiLGF0eXBlOjF9LGNyaXRlb0lkOntzb3VyY2U6ImNyaXRlby5jb20iLGF0eXBlOjF9LG1lcmtsZUlkOntzb3VyY2U6Im1lcmtsZWluYy5jb20iLGF0eXBlOjF9LG5ldElkOntzb3VyY2U6Im5ldGlkLmRlIixhdHlwZToxfSxzaGFyZWRpZDp7c291cmNlOiJzaGFyZWRpZC5vcmciLGF0eXBlOjEsZ2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuaWR9LGdldFVpZEV4dDpmdW5jdGlvbihlKXtyZXR1cm4gZSYmZS50aGlyZD97dGhpcmQ6ZS50aGlyZH06dm9pZCAwfX0sSURQOntzb3VyY2U6Inplb3RhcC5jb20iLGF0eXBlOjF9LGhhbG9JZDp7c291cmNlOiJhdWRpZ2VudC5jb20iLGF0eXBlOjF9LHF1YW50Y2FzdElkOntzb3VyY2U6InF1YW50Y2FzdC5jb20iLGF0eXBlOjF9LGlkeDp7c291cmNlOiJpZHgubGF0IixhdHlwZToxfSx2bXVpZDp7c291cmNlOiJ2ZXJpem9ubWVkaWEuY29tIixhdHlwZToxfX19LDg1NDpmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4oODU1KX0sODU1OmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLG4uZCh0LCJjb3JlU3RvcmFnZSIsZnVuY3Rpb24oKXtyZXR1cm4gQX0pLG4uZCh0LCJzeW5jRGVsYXkiLGZ1bmN0aW9uKCl7cmV0dXJuIEl9KSxuLmQodCwiYXVjdGlvbkRlbGF5IixmdW5jdGlvbigpe3JldHVybiBPfSksdC5zZXRTdWJtb2R1bGVSZWdpc3RyeT1mdW5jdGlvbihlKXtWPWV9LHQuc2V0U3RvcmVkVmFsdWU9VCx0LnNldFN0b3JlZENvbnNlbnREYXRhPUwsdC5yZXF1ZXN0Qmlkc0hvb2s9UixuLmQodCwidmFsaWRhdGVHZHByRW5mb3JjZW1lbnQiLGZ1bmN0aW9uKCl7cmV0dXJuIFd9KSx0LmF0dGFjaElkU3lzdGVtPVEsdC5pbml0PVg7dmFyIG89bigxMCkscj1uLm4obyksYT1uKDMpLGk9big4KSxjPW4ubihpKSxsPW4oMCksdT1uKDE5KSxkPW4oOSkscz1uKDUpLGY9bi5uKHMpLGc9bigxMykscD1uKDIyKSxtPW4oNyk7ZnVuY3Rpb24gYihlLHQpe3ZhciBuO2lmKCJ1bmRlZmluZWQiPT10eXBlb2YgU3ltYm9sfHxudWxsPT1lW1N5bWJvbC5pdGVyYXRvcl0pe2lmKEFycmF5LmlzQXJyYXkoZSl8fChuPWZ1bmN0aW9uKGUsdCl7aWYoIWUpcmV0dXJuO2lmKCJzdHJpbmciPT10eXBlb2YgZSlyZXR1cm4geShlLHQpO3ZhciBuPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKS5zbGljZSg4LC0xKTsiT2JqZWN0Ij09PW4mJmUuY29uc3RydWN0b3ImJihuPWUuY29uc3RydWN0b3IubmFtZSk7aWYoIk1hcCI9PT1ufHwiU2V0Ij09PW4pcmV0dXJuIEFycmF5LmZyb20oZSk7aWYoIkFyZ3VtZW50cyI9PT1ufHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSlyZXR1cm4geShlLHQpfShlKSl8fHQmJmUmJiJudW1iZXIiPT10eXBlb2YgZS5sZW5ndGgpe24mJihlPW4pO3ZhciBvPTAscj1mdW5jdGlvbigpe307cmV0dXJue3M6cixuOmZ1bmN0aW9uKCl7cmV0dXJuIG8+PWUubGVuZ3RoP3tkb25lOiEwfTp7ZG9uZTohMSx2YWx1ZTplW28rK119fSxlOmZ1bmN0aW9uKGUpe3Rocm93IGV9LGY6cn19dGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGl0ZXJhdGUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLiIpfXZhciBhLGk9ITAsYz0hMTtyZXR1cm57czpmdW5jdGlvbigpe249ZVtTeW1ib2wuaXRlcmF0b3JdKCl9LG46ZnVuY3Rpb24oKXt2YXIgZT1uLm5leHQoKTtyZXR1cm4gaT1lLmRvbmUsZX0sZTpmdW5jdGlvbihlKXtjPSEwLGE9ZX0sZjpmdW5jdGlvbigpe3RyeXtpfHxudWxsPT1uLnJldHVybnx8bi5yZXR1cm4oKX1maW5hbGx5e2lmKGMpdGhyb3cgYX19fX1mdW5jdGlvbiB5KGUsdCl7KG51bGw9PXR8fHQ+ZS5sZW5ndGgpJiYodD1lLmxlbmd0aCk7Zm9yKHZhciBuPTAsbz1uZXcgQXJyYXkodCk7bjx0O24rKylvW25dPWVbbl07cmV0dXJuIG99dmFyIHYsaCxJLE8sUz0iVXNlciBJRCIsRT0iY29va2llIixEPSJodG1sNSIsaj01MDAseD0wLGs9e25hbWU6Il9wYmpzX3VzZXJpZF9jb25zZW50X2RhdGEiLGV4cGlyZXM6MzB9LEE9T2JqZWN0KG0uYSkoInVzZXJpZCIpLF89W10sQz0hMSxVPVtdLHc9W10sVj1bXTtmdW5jdGlvbiBUKGUsdCl7dmFyIG49ZS5jb25maWcuc3RvcmFnZSxvPSJmdW5jdGlvbiI9PXR5cGVvZiBlLnN1Ym1vZHVsZS5kb21haW5PdmVycmlkZT9lLnN1Ym1vZHVsZS5kb21haW5PdmVycmlkZSgpOm51bGw7dHJ5e3ZhciByPWwuaXNQbGFpbk9iamVjdCh0KT9KU09OLnN0cmluZ2lmeSh0KTp0LGE9bmV3IERhdGUoRGF0ZS5ub3coKSs4NjRlNSpuLmV4cGlyZXMpLnRvVVRDU3RyaW5nKCk7bi50eXBlPT09RT8oQS5zZXRDb29raWUobi5uYW1lLHIsYSwiTGF4IixvKSwibnVtYmVyIj09dHlwZW9mIG4ucmVmcmVzaEluU2Vjb25kcyYmQS5zZXRDb29raWUoIiIuY29uY2F0KG4ubmFtZSwiX2xhc3QiKSwobmV3IERhdGUpLnRvVVRDU3RyaW5nKCksYSwiTGF4IixvKSk6bi50eXBlPT09RCYmKEEuc2V0RGF0YUluTG9jYWxTdG9yYWdlKCIiLmNvbmNhdChuLm5hbWUsIl9leHAiKSxhKSxBLnNldERhdGFJbkxvY2FsU3RvcmFnZShuLm5hbWUsZW5jb2RlVVJJQ29tcG9uZW50KHIpKSwibnVtYmVyIj09dHlwZW9mIG4ucmVmcmVzaEluU2Vjb25kcyYmQS5zZXREYXRhSW5Mb2NhbFN0b3JhZ2UoIiIuY29uY2F0KG4ubmFtZSwiX2xhc3QiKSwobmV3IERhdGUpLnRvVVRDU3RyaW5nKCkpKX1jYXRjaChlKXtsLmxvZ0Vycm9yKGUpfX1mdW5jdGlvbiBOKGUsdCl7dmFyIG4sbyxyPTE8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09dD90OnZvaWQgMCxhPXI/IiIuY29uY2F0KGUubmFtZSwiXyIpLmNvbmNhdChyKTplLm5hbWU7dHJ5e2UudHlwZT09PUU/bj1BLmdldENvb2tpZShhKTplLnR5cGU9PT1EJiYoIiI9PT0obz1BLmdldERhdGFGcm9tTG9jYWxTdG9yYWdlKCIiLmNvbmNhdChlLm5hbWUsIl9leHAiKSkpP249QS5nZXREYXRhRnJvbUxvY2FsU3RvcmFnZShhKTpvJiYwPG5ldyBEYXRlKG8pLmdldFRpbWUoKS1EYXRlLm5vdygpJiYobj1kZWNvZGVVUklDb21wb25lbnQoQS5nZXREYXRhRnJvbUxvY2FsU3RvcmFnZShhKSkpKSwic3RyaW5nIj09dHlwZW9mIG4mJiJ7Ij09PW4uY2hhckF0KDApJiYobj1KU09OLnBhcnNlKG4pKX1jYXRjaChlKXtsLmxvZ0Vycm9yKGUpfXJldHVybiBufWZ1bmN0aW9uIFAoZSl7dmFyIHQ9e2NvbnNlbnRTdHJpbmc6IiIsZ2RwckFwcGxpZXM6ITEsYXBpVmVyc2lvbjowfTtyZXR1cm4gZSYmKHQuY29uc2VudFN0cmluZz1lLmNvbnNlbnRTdHJpbmcsdC5nZHByQXBwbGllcz1lLmdkcHJBcHBsaWVzLHQuYXBpVmVyc2lvbj1lLmFwaVZlcnNpb24pLGwuY3lyYjUzSGFzaChKU09OLnN0cmluZ2lmeSh0KSl9ZnVuY3Rpb24gTChlKXt0cnl7dmFyIHQ9bmV3IERhdGUoRGF0ZS5ub3coKSs4NjRlNSprLmV4cGlyZXMpLnRvVVRDU3RyaW5nKCk7QS5zZXRDb29raWUoay5uYW1lLFAoZSksdCwiTGF4Iil9Y2F0Y2goZSl7bC5sb2dFcnJvcihlKX19ZnVuY3Rpb24gRigpe3RyeXtyZXR1cm4gQS5nZXRDb29raWUoay5uYW1lKX1jYXRjaChlKXtsLmxvZ0Vycm9yKGUpfX1mdW5jdGlvbiBxKGUpe2lmKGUmJiJib29sZWFuIj09dHlwZW9mIGUuZ2RwckFwcGxpZXMmJmUuZ2RwckFwcGxpZXMpe2lmKCFlLmNvbnNlbnRTdHJpbmcpcmV0dXJuO2lmKDE9PT1lLmFwaVZlcnNpb24mJiExPT09bC5kZWVwQWNjZXNzKGUsInZlbmRvckRhdGEucHVycG9zZUNvbnNlbnRzLjEiKSlyZXR1cm47aWYoMj09PWUuYXBpVmVyc2lvbiYmITE9PT1sLmRlZXBBY2Nlc3MoZSwidmVuZG9yRGF0YS5wdXJwb3NlLmNvbnNlbnRzLjEiKSlyZXR1cm59cmV0dXJuIDF9ZnVuY3Rpb24gTShlLHQpe3ZhciBuPWZ1bmN0aW9uKCl7fTt0JiYobj1sLmRlbGF5RXhlY3V0aW9uKGZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KGgpLHQoKX0sZS5sZW5ndGgpKSxlLmZvckVhY2goZnVuY3Rpb24odCl7dC5jYWxsYmFjayhmdW5jdGlvbihlKXtlPyh0LmNvbmZpZy5zdG9yYWdlJiZUKHQsZSksdC5pZE9iaj10LnN1Ym1vZHVsZS5kZWNvZGUoZSx0LmNvbmZpZykpOmwubG9nSW5mbygiIi5jb25jYXQoUywiOiAiKS5jb25jYXQodC5zdWJtb2R1bGUubmFtZSwiIC0gcmVxdWVzdCBpZCByZXNwb25kZWQgd2l0aCBhbiBlbXB0eSB2YWx1ZSIpKSxuKCl9KSx0LmNhbGxiYWNrPXZvaWQgMH0pfWZ1bmN0aW9uIEgoZSl7cmV0dXJuIEFycmF5LmlzQXJyYXkoZSkmJmUubGVuZ3RoP2UuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBsLmlzUGxhaW5PYmplY3QoZS5pZE9iaikmJk9iamVjdC5rZXlzKGUuaWRPYmopLmxlbmd0aH0pLnJlZHVjZShmdW5jdGlvbih0LG4pe3JldHVybiBPYmplY3Qua2V5cyhuLmlkT2JqKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3RbZV09bi5pZE9ialtlXX0pLHR9LHt9KTp7fX1mdW5jdGlvbiBKKGUpe3ZhciB0LG4sbyxyPSExO3ZvaWQgMD09PXYmJighKHY9ZnVuY3Rpb24oZSxuKXt2YXIgbz1GKCk7TChuKTt2YXIgdD1XKGUsbikscj10LnVzZXJJZE1vZHVsZXM7cmV0dXJuIHQuaGFzVmFsaWRhdGVkfHxxKG4pP3IucmVkdWNlKGZ1bmN0aW9uKGUsdCl7cmV0dXJuICQodCxuLG8sITEpLGUucHVzaCh0KSxlfSxbXSk6KGwubG9nV2FybigiIi5jb25jYXQoUywiIC0gZ2RwciBwZXJtaXNzaW9uIG5vdCB2YWxpZCBmb3IgbG9jYWwgc3RvcmFnZSBvciBjb29raWVzLCBleGl0IG1vZHVsZSIpKSxbXSl9KFUsZC5nZHByRGF0YUhhbmRsZXIuZ2V0Q29uc2VudERhdGEoKSkpLmxlbmd0aHx8KHQ9di5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGwuaXNGbihlLmNhbGxiYWNrKX0pKS5sZW5ndGgmJihlJiYwPE8/KG49IShyPSEwKSxvPWZ1bmN0aW9uKCl7bnx8KG49ITAsZSgpKX0sbC5sb2dJbmZvKCIiLmNvbmNhdChTLCIgLSBhdWN0aW9uIGRlbGF5ZWQgYnkgIikuY29uY2F0KE8sIiBhdCBtb3N0IHRvIGZldGNoIGlkcyIpKSxoPXNldFRpbWVvdXQobyxPKSxNKHQsbykpOmMuYS5vbihmLmEuRVZFTlRTLkFVQ1RJT05fRU5ELGZ1bmN0aW9uIGUoKXtjLmEub2ZmKGYuYS5FVkVOVFMuQVVDVElPTl9FTkQsZSksMDxJP3NldFRpbWVvdXQoZnVuY3Rpb24oKXtNKHQpfSxJKTpNKHQpfSkpKSxlJiYhciYmZSgpfWZ1bmN0aW9uIFIocixhKXtKKGZ1bmN0aW9uKCl7dmFyIGUsdCxuLG87ZT1hLmFkVW5pdHN8fE9iamVjdCh1LmEpKCkuYWRVbml0cyx0PXYsW2VdLnNvbWUoZnVuY3Rpb24oZSl7cmV0dXJuIUFycmF5LmlzQXJyYXkoZSl8fCFlLmxlbmd0aH0pfHwobj1IKHQpLG89T2JqZWN0KHAuYSkobiksT2JqZWN0LmtleXMobikubGVuZ3RoJiZlLmZvckVhY2goZnVuY3Rpb24oZSl7ZS5iaWRzJiZsLmlzQXJyYXkoZS5iaWRzKSYmZS5iaWRzLmZvckVhY2goZnVuY3Rpb24oZSl7ZS51c2VySWQ9bixlLnVzZXJJZEFzRWlkcz1vfSl9KSksci5jYWxsKHRoaXMsYSl9KX1mdW5jdGlvbiB6KCl7cmV0dXJuIEooKSxIKHYpfWZ1bmN0aW9uIEIoKXtyZXR1cm4gSigpLE9iamVjdChwLmEpKEgodikpfWZ1bmN0aW9uIEcoZSx1KXt2YXIgcz0ocz1lP2Uuc3VibW9kdWxlTmFtZXM6bnVsbCl8fFtdO0ooZnVuY3Rpb24oKXt2YXIgZT1kLmdkcHJEYXRhSGFuZGxlci5nZXRDb25zZW50RGF0YSgpLHQ9RigpO0woZSk7dmFyIG49VyhVLGUpLG89bi51c2VySWRNb2R1bGVzO2lmKG4uaGFzVmFsaWRhdGVkfHxxKGUpKXt2YXIgcixhPVtdLGk9YihvKTt0cnl7Zm9yKGkucygpOyEocj1pLm4oKSkuZG9uZTspe3ZhciBjPXIudmFsdWU7MDxzLmxlbmd0aCYmLTE9PT1zLmluZGV4T2YoYy5zdWJtb2R1bGUubmFtZSl8fChsLmxvZ0luZm8oIiIuY29uY2F0KFMsIiAtIHJlZnJlc2hpbmcgIikuY29uY2F0KGMuc3VibW9kdWxlLm5hbWUpKSwkKGMsZSx0LCEwKSxsLmlzRm4oYy5jYWxsYmFjaykmJmEucHVzaChjKSl9fWNhdGNoKGUpe2kuZShlKX1maW5hbGx5e2kuZigpfTA8YS5sZW5ndGgmJk0oYSksdSYmdSgpfWVsc2UgbC5sb2dXYXJuKCIiLmNvbmNhdChTLCIgLSBnZHByIHBlcm1pc3Npb24gbm90IHZhbGlkIGZvciBsb2NhbCBzdG9yYWdlIG9yIGNvb2tpZXMsIGV4aXQgbW9kdWxlIikpfSl9dmFyIFc9T2JqZWN0KGcuYikoInN5bmMiLGZ1bmN0aW9uKGUsdCl7cmV0dXJue3VzZXJJZE1vZHVsZXM6ZSxoYXNWYWxpZGF0ZWQ6dCYmdC5oYXNWYWxpZGF0ZWR9fSwidmFsaWRhdGVHZHByRW5mb3JjZW1lbnQiKTtmdW5jdGlvbiAkKGUsdCxuLG8pe3ZhciByLGEsaSxjLHUscyxkO2UuY29uZmlnLnN0b3JhZ2U/KHI9TihlLmNvbmZpZy5zdG9yYWdlKSxjPSExLCJudW1iZXIiPT10eXBlb2YgZS5jb25maWcuc3RvcmFnZS5yZWZyZXNoSW5TZWNvbmRzJiYoYz0oaT1uZXcgRGF0ZShOKGUuY29uZmlnLnN0b3JhZ2UsImxhc3QiKSkpJiZEYXRlLm5vdygpLWkuZ2V0VGltZSgpPjFlMyplLmNvbmZpZy5zdG9yYWdlLnJlZnJlc2hJblNlY29uZHMpLCFyfHxjfHxvfHwoZD10LG51bGwhPShzPW4pJiZzIT09UChkKSk/YT1lLnN1Ym1vZHVsZS5nZXRJZChlLmNvbmZpZyx0LHIpOiJmdW5jdGlvbiI9PXR5cGVvZiBlLnN1Ym1vZHVsZS5leHRlbmRJZCYmKGE9ZS5zdWJtb2R1bGUuZXh0ZW5kSWQoZS5jb25maWcscikpLGwuaXNQbGFpbk9iamVjdChhKSYmKGEuaWQmJihUKGUsYS5pZCkscj1hLmlkKSwiZnVuY3Rpb24iPT10eXBlb2YgYS5jYWxsYmFjayYmKGUuY2FsbGJhY2s9YS5jYWxsYmFjaykpLHImJihlLmlkT2JqPWUuc3VibW9kdWxlLmRlY29kZShyLGUuY29uZmlnKSkpOmUuY29uZmlnLnZhbHVlP2UuaWRPYmo9ZS5jb25maWcudmFsdWU6KHU9ZS5zdWJtb2R1bGUuZ2V0SWQoZS5jb25maWcsdCx2b2lkIDApLGwuaXNQbGFpbk9iamVjdCh1KSYmKCJmdW5jdGlvbiI9PXR5cGVvZiB1LmNhbGxiYWNrJiYoZS5jYWxsYmFjaz11LmNhbGxiYWNrKSx1LmlkJiYoZS5pZE9iaj1lLnN1Ym1vZHVsZS5kZWNvZGUodS5pZCxlLmNvbmZpZykpKSl9ZnVuY3Rpb24gSygpe3ZhciBlLG4sdCxvPShlPXcsbj1fLEFycmF5LmlzQXJyYXkoZSk/ZS5yZWR1Y2UoZnVuY3Rpb24oZSx0KXtyZXR1cm4hdHx8bC5pc0VtcHR5U3RyKHQubmFtZSl8fCghdC5zdG9yYWdlfHxsLmlzRW1wdHlTdHIodC5zdG9yYWdlLnR5cGUpfHxsLmlzRW1wdHlTdHIodC5zdG9yYWdlLm5hbWUpfHwtMT09PW4uaW5kZXhPZih0LnN0b3JhZ2UudHlwZSkpJiYhbC5pc1BsYWluT2JqZWN0KHQudmFsdWUpJiYodC5zdG9yYWdlfHx0LnZhbHVlKXx8ZS5wdXNoKHQpLGV9LFtdKTpbXSk7by5sZW5ndGgmJih0PVYuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiFyKCkoVSxmdW5jdGlvbihlKXtyZXR1cm4gZS5uYW1lPT09dC5uYW1lfSl9KSxVPXQubWFwKGZ1bmN0aW9uKHQpe3ZhciBlPXIoKShvLGZ1bmN0aW9uKGUpe3JldHVybiBlLm5hbWU9PT10Lm5hbWV9KTtyZXR1cm4gZT97c3VibW9kdWxlOnQsY29uZmlnOmUsY2FsbGJhY2s6dm9pZCAwLGlkT2JqOnZvaWQgMH06bnVsbH0pLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gbnVsbCE9PWV9KSwhQyYmVS5sZW5ndGgmJihPYmplY3QodS5hKSgpLnJlcXVlc3RCaWRzLmJlZm9yZShSLDQwKSxsLmxvZ0luZm8oIiIuY29uY2F0KFMsIiAtIHVzZXJzeW5jIGNvbmZpZyB1cGRhdGVkIGZvciAiKS5jb25jYXQoVS5sZW5ndGgsIiBzdWJtb2R1bGVzOiAiKSxVLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZS5zdWJtb2R1bGUubmFtZX0pKSxDPSEwKSl9ZnVuY3Rpb24gUSh0KXtyKCkoVixmdW5jdGlvbihlKXtyZXR1cm4gZS5uYW1lPT09dC5uYW1lfSl8fChWLnB1c2godCksSygpKX1mdW5jdGlvbiBYKGUpe1U9W10sQz0hKHc9W10pLHY9dm9pZCAwLC0xPT09KF89W0EubG9jYWxTdG9yYWdlSXNFbmFibGVkKCk/RDpudWxsLEEuY29va2llc0FyZUVuYWJsZWQoKT9FOm51bGxdLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gbnVsbCE9PWV9KSkuaW5kZXhPZihFKXx8IUEuZ2V0Q29va2llKCJfcGJqc19pZF9vcHRvdXQiKSYmIUEuZ2V0Q29va2llKCJfcHViY2lkX29wdG91dCIpPy0xPT09Xy5pbmRleE9mKEQpfHwhQS5nZXREYXRhRnJvbUxvY2FsU3RvcmFnZSgiX3BianNfaWRfb3B0b3V0IikmJiFBLmdldERhdGFGcm9tTG9jYWxTdG9yYWdlKCJfcHViY2lkX29wdG91dCIpPyhlLmdldENvbmZpZyhmdW5jdGlvbihlKXt2YXIgdD1lLnVzZXJTeW5jO3QmJnQudXNlcklkcyYmKHc9dC51c2VySWRzLEk9bC5pc051bWJlcih0LnN5bmNEZWxheSk/dC5zeW5jRGVsYXk6aixPPWwuaXNOdW1iZXIodC5hdWN0aW9uRGVsYXkpP3QuYXVjdGlvbkRlbGF5OngsSygpKX0pLE9iamVjdCh1LmEpKCkuZ2V0VXNlcklkcz16LE9iamVjdCh1LmEpKCkuZ2V0VXNlcklkc0FzRWlkcz1CLE9iamVjdCh1LmEpKCkucmVmcmVzaFVzZXJJZHM9Ryk6bC5sb2dJbmZvKCIiLmNvbmNhdChTLCIgLSBvcHQtb3V0IGxvY2FsU3RvcmFnZSBmb3VuZCwgZXhpdCBtb2R1bGUiKSk6bC5sb2dJbmZvKCIiLmNvbmNhdChTLCIgLSBvcHQtb3V0IGNvb2tpZSBmb3VuZCwgZXhpdCBtb2R1bGUiKSl9WChhLmIpLE9iamVjdChnLmMpKCJ1c2VySWQiLFEpfX0sWzg1NF0pOwp1cGJqc0NodW5rKFs2MV0sezg5NjpmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXIoODk3KX0sODk3OmZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHIuZCh0LCJCSURERVJfQ09ERSIsZnVuY3Rpb24oKXtyZXR1cm4gaX0pLHIuZCh0LCJFTkdJTkVfQkFTRV9VUkwiLGZ1bmN0aW9uKCl7cmV0dXJuIGR9KSxyLmQodCwiVVNFUklEIixmdW5jdGlvbigpe3JldHVybiBvfSksci5kKHQsIklNUFJFU1NJT05JRCIsZnVuY3Rpb24oKXtyZXR1cm4gY30pLHIuZCh0LCJSRUZFUkVSIixmdW5jdGlvbigpe3JldHVybiBwfSksci5kKHQsIkNIQVJTRVQiLGZ1bmN0aW9uKCl7cmV0dXJuIHV9KSxyLmQodCwic3BlYyIsZnVuY3Rpb24oKXtyZXR1cm4gdn0pLHQucmVzZXRVc2VyU3luYz1mdW5jdGlvbigpe2w9ITF9O3IoMCk7dmFyIGE9cigxKSxuPXIoMik7ZnVuY3Rpb24gcyhlLHQscil7cmV0dXJuIHQgaW4gZT9PYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHt2YWx1ZTpyLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwfSk6ZVt0XT1yLGV9dmFyIGk9InlhbmRleHJ0YiIsZD0iaHR0cHM6Ly9hbi55YW5kZXgucnUvbWV0YS8iLG89ImR1aWQiLGM9ImltcC1pZCIscD0idGFyZ2V0LXJlZiIsdT0iY2hhcnNldCIsZz1bXSxsPSExLGg9WyJodHRwczovL2FuLnlhbmRleC5ydS9tYXB1aWQvYXBwbmV4dXMvIiwiaHR0cHM6Ly9zdGF0cy5tb3MucnUvZ2MveW5kLyIsImh0dHBzOi8vYW4ueWFuZGV4LnJ1L21hcHVpZC9nb29nbGUvIiwiaHR0cHM6Ly9kbWcuZGlnaXRhbHRhcmdldC5ydS8xLzExOS9pL2k/aT0xNTQ3NDY2OTk5IiwiaHR0cHM6Ly95YW5kZXgtZG1wLXN5bmMucnV0YXJnZXQucnUvc3luYyIsImh0dHBzOi8veWFuZGV4LXN5bmMucnV0YXJnZXQucnUvc3luYyIsImh0dHBzOi8veDAxLmFpZGF0YS5pby8wLmdpZj9waWQ9WUFOREVYIiwiaHR0cHM6Ly9zeW5jLjFkbXAuaW8vcGl4ZWwuZ2lmP2NpZD0zY2JjMmVjOC0xNDIxLTQ2NzctODlmZS0yYWM2ZmM1MmEwOWEmcGlkPXcmbz1hdSIsImh0dHBzOi8vcmVkaXJlY3QuZnJvbnRlbmQud2Vib3JhbWEuZnIvcmVkaXJlY3Qvc3RhbmRhcmQ/dXJsPWh0dHBzOi8vYW4ueWFuZGV4LnJ1L21hcHVpZC9kbXB3ZWJvcmFtYS97V0VCT19DSUR9IiwiaHR0cHM6Ly9wcm9maWxlLnNzcC5yYW1ibGVyLnJ1L3N5bmMzLjMwMj9waWQ9MTg4IiwiaHR0cHM6Ly9hbi55YW5kZXgucnUvbWFwdWlkL2Fkb2JlZG1wLyJdLGY9TWF0aC5sb2csYj1NYXRoLkxOMix5PU1hdGguY2x6MzJ8fGZ1bmN0aW9uKGUpe3JldHVybiAzMS1mKGU+Pj4wKS9ifDB9LG09U3RyaW5nLmZyb21DaGFyQ29kZSxfPWF0b2I7YnRvYTtmdW5jdGlvbiB4KGUpe3ZhciB0PWUuY2hhckNvZGVBdCgwKTw8MjQscj15KH50KSxhPTAsbj1lLmxlbmd0aCxzPSIiO2lmKHI8NSYmcjw9bil7Zm9yKHQ9dDw8cj4+PjI0K3IsYT0xO2E8cjsrK2EpdD10PDw2fDYzJmUuY2hhckNvZGVBdChhKTt0PD02NTUzNT9zKz1tKHQpOnQ8PTExMTQxMTE/cys9bSg1NTI5NisoKHQtPTY1NTM2KT4+MTApLDU2MzIwKygxMDIzJnQpKTphPTB9Zm9yKDthPG47KythKXMrPSLvv70iO3JldHVybiBzfXZhciB2PXtjb2RlOmksc3VwcG9ydGVkTWVkaWFUeXBlczpbbi5iXSxpc0JpZFJlcXVlc3RWYWxpZDpmdW5jdGlvbigpe3JldHVybiEwfSxidWlsZFJlcXVlc3RzOmZ1bmN0aW9uKGUpe2cucHVzaChlWzBdKTtmb3IodmFyIHQ9W10scj0wO3I8ZS5sZW5ndGg7cisrKXt2YXIgYT1mdW5jdGlvbihlKXt2YXIgdCxyPWZ1bmN0aW9uKGUpe3ZhciB0PSgiOyAiK2RvY3VtZW50LmNvb2tpZSkuc3BsaXQoIjsgIitlKyI9Iik7aWYoMj09dC5sZW5ndGgpcmV0dXJuIHQucG9wKCkuc3BsaXQoIjsiKS5zaGlmdCgpfSgiX3ltX3VpZCIpLGE9IllhIitEYXRlLm5vdygpO3dpbmRvdy5ZYVNlc3Npb25JRD13aW5kb3cuWWFTZXNzaW9uSUR8fCgxZTYqTWF0aC5yYW5kb20oKSkudG9GaXhlZCgwKSsobmV3IERhdGUpLnZhbHVlT2YoKS50b1N0cmluZygpO3ZhciBuPShzKHQ9e30sdSwidXRmLTgiKSxzKHQsImdyYWIiLCJkQW89Iikscyh0LCJlbmFibGUtZmxhdC1oaWdobGlnaHQiLDEpLHModCwidGVzdC10YWciLDg1NzYxOTA2OTY2NTMwKSxzKHQsImFkLXNlc3Npb24taWQiLHdpbmRvdy5ZYVNlc3Npb25JRCkscyh0LCJ0YXJnZXQtaWQiLFN0cmluZygtMjU3Jk1hdGguZmxvb3IoMWU4K01hdGgucmFuZG9tKCkqKDItMWU4KSkpKSxzKHQsInBjb2RlLXZlcnNpb24iLDczMjQpLHModCwiZmxhc2gtdmVyIiwwKSxzKHQsImF2YWlsYWJsZS13aWR0aCIsZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoKSxzKHQsImNhbGxiYWNrIixhKSxzKHQsInRhZy1pZCIsZS5wYXJhbXMudGFnSUQpLHModCxjLGUucGFyYW1zLmJsb2NrSUQpLHModCxwLHdpbmRvdy5sb2NhdGlvbi5ocmVmKSx0KTtyJiYobltvXT13aW5kb3cuYnRvYShyKSk7cmV0dXJuIG59KGVbcl0pO3QucHVzaCh7bWV0aG9kOiJHRVQiLHVybDpkK2Vbcl0ucGFyYW1zLnRhZ0lELGRhdGE6YX0pfXJldHVybiB0fSxpbnRlcnByZXRSZXNwb25zZTpmdW5jdGlvbihlLHQpe3ZhciByLGEsbj1bXSxzPW5ldyBSZWdFeHAodC5kYXRhLmNhbGxiYWNrKyJcXCgnKC4qPyknXFwpJCIsImdtIiksaT1lLmJvZHksZD1zLmV4ZWMoaSk7dHJ5e3ZhciBvLGMscCx1LGw9SlNPTi5wYXJzZShkWzFdKTtpZihsLmRpcmVjdCYmIWwucnRiPyhvPSc8ZGl2IGlkPSJ5YW5kZXhfcnRiX1ItQS0nK3QuZGF0YVsidGFnLWlkIl0rIi0iK3QuZGF0YVsiaW1wLWlkIl0rIlwiPjwvZGl2PjxzY3JpcHQ+dmFyIHJlc3BvbnNlID0gJyIraS5yZXBsYWNlKC9cJy9nLCJcXCciKSsnXCc7dmFyIHJlYWR5U3RhdGVHZXR0ZXIgPSBYTUxIdHRwUmVxdWVzdC5wcm90b3R5cGUuX19sb29rdXBHZXR0ZXJfXygib25yZWFkeXN0YXRlY2hhbmdlIik7dmFyIHJlYWR5U3RhdGVTZXR0ZXIgPSBYTUxIdHRwUmVxdWVzdC5wcm90b3R5cGUuX19sb29rdXBTZXR0ZXJfXygib25yZWFkeXN0YXRlY2hhbmdlIik7WE1MSHR0cFJlcXVlc3QucHJvdG90eXBlLl9fZGVmaW5lR2V0dGVyX18oIm9ucmVhZHlzdGF0ZWNoYW5nZSIsZnVuY3Rpb24oKXtyZXR1cm4gcmVhZHlTdGF0ZUdldHRlci5jYWxsKHRoaXMpO30pO1hNTEh0dHBSZXF1ZXN0LnByb3RvdHlwZS5fX2RlZmluZVNldHRlcl9fKCJvbnJlYWR5c3RhdGVjaGFuZ2UiLGZ1bmN0aW9uKGEpe3JlYWR5U3RhdGVTZXR0ZXIuY2FsbCh0aGlzLGZ1bmN0aW9uKCl7aWYodGhpcy5zdGF0dXMgPT09IDIwMCAmJiB0aGlzLnJlYWR5U3RhdGUgPT09IDQpIHtyZXBsYWNlV2l0aE9sZFJlc3BvbnNlKHJlc3BvbnNlLCB0aGlzLCBhKTt9fSk7fSk7dmFyIHJlcGxhY2VXaXRoT2xkUmVzcG9uc2UgPSBmdW5jdGlvbihyZXNwb25zZSwgeGhyT2JqZWN0LCB4aHJDYWxsYmFjayl7dmFyIG5ld0NhbGxiYWNrID0gL1lhW1swLTldK10vLmV4ZWMoeGhyT2JqZWN0LnJlc3BvbnNlKTt2YXIgb2xkQ2FsbGJhY2sgPSAvWWFbMC05XSsvLmV4ZWMocmVzcG9uc2UpO2lmICghbmV3Q2FsbGJhY2sgfHwgIW9sZENhbGxiYWNrKSB7cmV0dXJuO31yZXNwb25zZSA9IHJlc3BvbnNlLnJlcGxhY2Uob2xkQ2FsbGJhY2tbMF0sbmV3Q2FsbGJhY2tbMF0pO3hock9iamVjdC5fX2RlZmluZUdldHRlcl9fKCJyZXNwb25zZVRleHQiLGZ1bmN0aW9uKCl7cmV0dXJuIHJlc3BvbnNlfSk7eGhyT2JqZWN0Ll9fZGVmaW5lR2V0dGVyX18oInJlc3BvbnNlIixmdW5jdGlvbigpe3JldHVybiByZXNwb25zZX0pO3hockNhbGxiYWNrLmNhbGwoeGhyT2JqZWN0KTt9OyhmdW5jdGlvbih3LCBkLCBuLCBzLCB0KSB7d1tuXSA9IHdbbl0gfHwgW107d1tuXS5wdXNoKGZ1bmN0aW9uKCkge1lhLkNvbnRleHQuQWR2TWFuYWdlci5yZW5kZXIoe2Jsb2NrSWQ6ICJSLUEtJyt0LmRhdGFbInRhZy1pZCJdKyItIit0LmRhdGFbImltcC1pZCJdKyciLHJlbmRlclRvOiAieWFuZGV4X3J0Yl9SLUEtJyt0LmRhdGFbInRhZy1pZCJdKyItIit0LmRhdGFbImltcC1pZCJdKyciLGFzeW5jOiB0cnVlfSk7fSk7dCA9IGQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInNjcmlwdCIpWzBdO3MgPSBkLmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpO3MudHlwZSA9ICJ0ZXh0L2phdmFzY3JpcHQiO3Muc3JjID0gIi8vYW4ueWFuZGV4LnJ1L3N5c3RlbS9jb250ZXh0LmpzIjtzLmFzeW5jID0gdHJ1ZTt0LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHMsIHQpO30pKHRoaXMsIHRoaXMuZG9jdW1lbnQsICJ5YW5kZXhDb250ZXh0QXN5bmNDYWxsYmFja3MiKTs8XC9zY3JpcHQ+JyxjPTEpOihjPWwuc2V0dGluZ3NbT2JqZWN0LmtleXMobC5zZXR0aW5ncylbMF1dLmJhbm5lcklkcyxyPWwucnRiLmh0bWwucmVwbGFjZSgvLS9nLCIrIikucmVwbGFjZSgvXy9nLCIvIiksYXx8IsOvwrvCvyIhPT1yLnN1YnN0cmluZygwLDMpfHwocj1yLnN1YnN0cmluZygzKSksbz1fKHIpLnJlcGxhY2UoL1tceGMwLVx4ZmZdW1x4ODAtXHhiZl0qL2cseCksbC5ydGImJmwucnRiLmh0bWw1JiYiIiE9PWwucnRiLmJhc2VQYXRoJiYobz1vLnJlcGxhY2UoIjxoZWFkPiIsJzxoZWFkPjxiYXNlIGhyZWY9IicrbC5ydGIuYmFzZVBhdGgrJyIgLz4nKSkpLGwuc2V0dGluZ3MmJmwuc2V0dGluZ3NbT2JqZWN0LmtleXMobC5zZXR0aW5ncylbMF1dLnZpZXdOb3RpY2VzKXt1PWwuc2V0dGluZ3NbT2JqZWN0LmtleXMobC5zZXR0aW5ncylbMF1dLnZpZXdOb3RpY2VzO2Zvcih2YXIgaD0wO2g8dS5sZW5ndGg7aCsrKW89bysnPHNjcmlwdD5uZXcgSW1hZ2UoKS5zcmM9IicrdVtoXSsnIjs8XC9zY3JpcHQ+J31mb3IoaD0wO2g8Zy5sZW5ndGg7aCsrKWlmKGdbaF0ucGFyYW1zLnRhZ0lEPT09dC5kYXRhWyJ0YWctaWQiXSYmZ1toXS5wYXJhbXMuYmxvY2tJRD09PXQuZGF0YVsiaW1wLWlkIl0mJiFnW2hdLl9fdXNlZCl7Z1toXS5fX3VzZWQ9ITAscD1nW2hdO2JyZWFrfW4ucHVzaCh7cmVxdWVzdElkOnAuYmlkSWQsY3BtOi4wMSx3aWR0aDpwLnNpemVzWzBdWzBdLGhlaWdodDpwLnNpemVzWzBdWzFdLGFkOm8sdHRsOjkwMCxjcmVhdGl2ZUlkOmMsbmV0UmV2ZW51ZTohMCxjdXJyZW5jeToiVVNEIn0pfWNhdGNoKGUpe31yZXR1cm4gbn0sZ2V0VXNlclN5bmNzOmZ1bmN0aW9uKGUsdCxyKXtpZighbCl7ciYmInN0cmluZyI9PXR5cGVvZiByLmNvbnNlbnRTdHJpbmcmJigiYm9vbGVhbiI9PXR5cGVvZiByLmdkcHJBcHBsaWVzPyI/Z2Rwcj0iLmNvbmNhdChOdW1iZXIoci5nZHByQXBwbGllcyksIiZnZHByX2NvbnNlbnQ9IikuY29uY2F0KHIuY29uc2VudFN0cmluZyk6Ij9nZHByX2NvbnNlbnQ9Ii5jb25jYXQoci5jb25zZW50U3RyaW5nKSksbD0hMDtmb3IodmFyIGE9W10sbj0wO248aC5sZW5ndGg7bisrKWEucHVzaCh7dHlwZToiaW1hZ2UiLHVybDpoW25dfSk7cmV0dXJuIGF9fX07T2JqZWN0KGEucmVnaXN0ZXJCaWRkZXIpKHYpfX0sWzg5Nl0pOwp1cGJqcy5wcm9jZXNzUXVldWUoKTs=");eval(g)}catch(h){debugger}T.cpbjs=window.upbjs};this.load=function(){T.cpbjs||(e(),l.invokeEventCallbacks("postset"))}}})(lb);var tb={};(function(J){J.postsetProvider=function(g){switch(g){case "prebid":return G}};var A=ya.new();A.setPrefix("prebidPostset: ");A.setLevel(ya.DEBUG);var H=ha.CustomEvents,D,G=function(){D=T.cpbjs;l();q();D.onBeforeRequest(function(h){return h&&Fa.addAcceptableParam(h)});D.aliasBidder("pulsepointLite","pulsepoint");D.aliasBidder("indexExchange",
"ix");D.aliasBidder("my6sense","upo2");D.aliasBidder("lockerdome","upo3");D.setConfig({priceGranularity:"high",userSync:{iframeEnabled:1,syncsPerBidder:25,syncEnabled:1,pixelEnabled:1}});var g=window.pbjs||window.jitaJS;g&&g.bidderSettings&&(D.bidderSettings=g.bidderSettings);H.fireEvent("addIndexExchangeWrappers")&&e();H.fireEvent("prebidDoneInit",{cpbjs:D})},q=function(){try{var g=window.pbjs,h=g&&g.version&&parseInt(g.version[1]);if(h&&!isNaN(h)&&4<=h){var c=g.getConfig("consentManagement");if(c&&
(c.gdpr||c.usp)){D.setConfig({consentManagement:c});return}}}catch(d){A.errorf(null,"setConsentConfig: copy publisher consentManagement settings: %o",d)}try{"function"===typeof window.__tcfapi&&window.__tcfapi("ping",2,function(d){d&&d.cmpLoaded&&d.gdprApplies&&(d={consentManagement:D.getConfig().consentManagement||{}},d.consentManagement.gdpr={cmpApi:"iab",timeout:3E3,allowAuctionWithoutConsent:!0,defaultGdprScope:!1},D.setConfig(d))})}catch(d){A.errorf(null,"setConsentConfig: __tcfapi: %o",d)}try{"function"===
typeof window.__cmp&&"function"!==typeof window.__tcfapi&&window.__cmp("getConsentData",null,function(d){d&&d.gdprApplies&&(d={consentManagement:D.getConfig().consentManagement||{}},d.consentManagement.gdpr={cmpApi:"iab",timeout:3E3,allowAuctionWithoutConsent:!0,defaultGdprScope:!1},D.setConfig(d))})}catch(d){A.errorf(null,"setConsentConfig: __cmp: %o",err)}try{"function"===typeof window.__uspapi&&window.__uspapi("getUSPData",1,function(d,f){f&&d.uspString&&(d={consentManagement:D.getConfig().consentManagement||
{}},d.consentManagement.usp={cmpApi:"iab",timeout:100},D.setConfig(d))})}catch(d){A.errorf(null,"setConsentConfig: __uspapi: %o",d)}},l=function(){T.whitelistedFrame?D.setUpCookieFrame(T.whitelistedFrame):H.addEventListener("whitelistedFrameLoaded",function(){D.setUpCookieFrame(T.whitelistedFrame)})},e=function(){var g={aol:"ix_aol_om",appnexus:"ix_apnx_om",beachfront:"ix_bft_cpm",colossusssp:"ix_clss_cpm",consumable:"ix_cnsm_cpm",conversant:"ix_conv_cpm",criteo:"ix_cdb_om",districtm:"ix_dism_om",
districtmDMX:"ix_dis_cpm",emx_digital:"ix_brt_cpm",gumgum:"ix_gum_cpm",improvedigital:"ix_imdi_cpm",justpremium:"ix_justp_cpm",kargo:"ix_karg_om",lockerdome:"ix_lkdm_cpm",onedisplay:"ix_oath_cpm",onemobile:"ix_oath_cpm",openx:"ix_ox_om",optimera:"ix_opti_cpm",piximedia:"ix_pix_cpm",pubmatic:"ix_pubm_om",pulsepoint:"ix_pp_om",pxyz:"ix_pxyz_cpm",quantcast:"ix_qua_cpm",rubicon:"ix_rubi_om",sharethrough:"ix_shth_cpm",sonobi:"ix_sbi_om",sovrn:"ix_sovrn_om",triplelift:"ix_tpl_cpm",trustx:"ix_trstx_cpm",
indexExchange:"IOM",ix:"IOM",undertone:"ix_undr_cpm"},h=function(d){return(100*parseFloat(d)).toFixed()},c;for(c in g)D.bidderSettings[c]={adserverTargeting:[{key:g[c],val:function(d){var f=D.getConfig().priceGranularity;return"auto"===f?d.size+"_"+h(d.pbAg):"dense"===f?d.size+"_"+h(d.pbDg):"low"===f?d.size+"_"+h(d.pbLg):"medium"===f?d.size+"_"+h(d.pbMg):"high"!==f&&"custom"===f?d.size+"_"+h(d.pbCg):d.size+"_"+h(d.pbHg)}}]}}})(tb);var Ta={};(function(J){var A=ha.CustomEvents,H=function(l){function e(n){window.setTimeout(function(){n&&
"none"==window.getComputedStyle(n).display&&n.style.setProperty("display","block","important")},1E3)}function g(n){var w=0;x.forEach(n.sizes,function(M){M=M.split("x")[0];M=parseInt(M);M>w&&(w=M)});return w}function h(n,w){if(!A.fireEvent("blacklistAdStatement",{space:w})&&(n=n.querySelector(".default-creative-container")||n.querySelector(".ahover")||n.querySelector('[id^="google_ads_iframe_"]'))&&!n.querySelector(".upo-label")){var M=c();M.className="upo-label";n.appendChild(M);window.setTimeout(function(){M.style.opacity=
"1"},2E3)}}function c(){var n=document.createElement("div");n.setAttribute("style","text-align:left;padding:0px;margin:0px;position:absolute;top:0;left:0;z-index:10000;transition:opacity 1s ease-out;opacity:0;");n.innerHTML='<span style="display:block;background:rgba(255, 255, 255, 0.7);height:fit-content;width:fit-content;top:0;left:0;color:#444;font-size:10px;font-weight:bold;font-family:sans-serif;line-height:normal;text-decoration:none;margin:0px;padding:6px;border-radius:0 0 5px 0;">&#65;&#68;</span>';
return n}var d=!1,f=new Fa.SubscriptionLayer;this.auctionId=ra.stringRange(8,9);this.unit=l.unit;this.state=H.States.UNOFFERED;this.lastUpdate=this.creationTime=new Date;this.bids=[];this.subscribeForEvent=function(n,w){f.subscribeForEvent(n,w)};this.cancelAuction=function(){d=!0};this.getWinningBid=function(){for(var n=void 0,w=void 0,M=0;M<this.bids.length;M++){var U=this.bids[M];(!n||U.cpm>n.cpm)&&U.complianceStatus==T.consts.complianceStatus.COMPLIANT&&(n=U);if(!w||U.cpm>w.cpm)w=U}return w&&w!=
n&&u(w)?w:n};this.addBids=function(n){if(n)for(var w=0;w<n.length;w++)this.bids.push(n[w])};var m=function(n){x.addClass("up-hide",n.element);x.removeClass("up-show",n.element)},y=function(n,w){x.addClass("up-show",n.element);x.removeClass("up-hide",n.element)};this.getComplianceBids=function(){for(var n=[],w=0;w<this.bids.length;w++){var M=this.bids[w];M.complianceStatus==T.consts.complianceStatus.COMPLIANT&&n.push(M)}return n};this.renderWinningBid=function(){var n=this.getWinningBid();this.renderBid(n)};
var E=function(n,w){for(var M=0;M<n.bids.length;M++){var U=n.bids[M];U!=w&&U.cancelBid()}};this.renderBid=function(n){try{if(A.fireEvent("renderBidInElementStarted",{element:this.unit&&this.unit.element}),this.state=H.States.DONE,r(),E(this,n),this.unit.element&&(document.documentElement||document.body).contains(this.unit.element))if(!n||d)this.unit.currentBid||m(this.unit),f.invokeEventCallbacks("renderBidDone",{successfulyRenderedBid:!1});else{this.unit.element.removeAttribute("data-guard-element");
this.unit.cleanup();v(this.unit.element);y(this.unit,n);this.unit.element._adData_=ob.bidDecoder(n);n.onRenderedEvent(function(){var U=this.unit.element,ea=this.unit.space;U=U.querySelector(".default-creative-container")||U.querySelector(".ahover")||U.querySelector('[id^="google_ads_iframe_"]');U.style.position||U.style.setProperty("position","relative");U.style.setProperty("width","max-content","important");if(0<=["sharethrough","triplelift"].indexOf(n.bidderCode)){var I=n.width;ea=g(ea);if(I>ea||
120>I)I=ea;U.style.setProperty("max-width",I+"px","important")}U.style.setProperty("z-index",0);U.style.setProperty("margin","0 auto");U.style.setProperty("display","block");h(this.unit.element,this.unit.space);try{if(!A.fireEvent("skipEnsureElementVisibility",{unit:this.unit})){var P=this.unit.element;P.classList.contains("up-show")||P.classList.add("up-show");e(P);e(P.parentElement);e(P.parentElement.parentElement)}}catch(a){G.errorf(null,"auction: bid.onRenderedEvent: ensureElementVisibility: %o",
a)}f.invokeEventCallbacks("auctionRendered",n);this.unit.rendered(n);T.SharedObject.getItem("renderedUnits")||T.SharedObject.setItem("renderedUnits",[]);T.SharedObject.getItem("renderedUnits").push(this.unit)}.bind(this));var w=u(n),M={placement:this.unit.element};w?(n.onRenderedEvent(function(){this.renderStaticAd(this.bid,this.element)}.bind({bid:n,renderStaticAd:K,element:this.unit.element})),n.renderStaticBid(M)):n.renderBid(M);this.unit.element.setAttribute("data-guard-element",!0);C(n);f.invokeEventCallbacks("renderBidDone",
{successfulyRenderedBid:!0})}else f.invokeEventCallbacks("renderBidDone",{successfulyRenderedBid:!1})}catch(U){G.errorf(null,"renderBid err:%o",U)}};var C=function(n){n=n.additionalBidsToRender;for(var w=0;w<n.length;w++)n[w].renderBid()},r=function(){if(!document.getElementById("UponitHideShow")){var n=document.createElement("style");n.id="UponitHideShow";n.type="text/css";n.textContent=".up-hide { display: none !important; }";(document.head||document.body||document.documentElement).appendChild(n)}},
u=function(n){return A.fireEvent("forceCompliant")&&n.complianceStatus==T.consts.complianceStatus.INCOMPLIANT},K=function(n,w){w.style.setProperty("background-image",'url("//mrb.upapi.net/fc?h='+(n.contentIdHash+'&upapi=true")'),"important");w.style.setProperty("background-repeat","no-repeat","important")},v=function(n){n.style.removeProperty("background-image");n.style.removeProperty("background-repeat")}};H.States={UNOFFERED:0,DISPATCHED:1,DONE:3};J.Auction=H;var D=function(l,e,g,h,c,d,f,m,y){this.bidId=
ra.stringRange(16,24);this.ad=l.ad;this.adId=l.adId;this.adUrl=l.adUrl;this.bidderId=l.bidderId;this.bidder=l.bidder;this.bidderCode=l.bidderCode;this.contentIdHash=l.contentIdHash;this.currency=l.currency;this.creativeId=l.creativeId;this.c=l.c;this.cpm=l.cpm;this.complianceStatus=l.complianceStatus||0;this.height=l.height;this.isBackupCreative=l.isBackupCreative;this.timeToRespond=l.timeToRespond;this.size=l.size;this.width=l.width;this.rawBid=e;this.type=g;this.status=D.Status.LIVE;this.renderBid=
c;this.renderStaticBid=d||function(){};this.cancelBid=function(){this.status=D.Status.CANCELED;f&&f()};this.getGPTTargeting=function(E){return h&&h.call(this,E)};this.onRenderedEvent=m||function(){};this.makeEntryForTestCompliance=y||function(){};this.additionalBidsToRender=[]};D.Types={EMPTY:0,PREBID:1,RTK:2,ADX:3,ADX_TEXT:4,DFP_PREBID:5,ADSENSE:6,DIRECT:7,SMART_AS:8,DEFAULT_CREATIVE:9};D.Status={LIVE:0,CANCELED:1};J.Bid=D;var G=ya.new();G.setPrefix("models: ");G.setLevel(ya.DEBUG);J.Slot=function(l){this.unit=
l.unit;this.auctionsList=[];this.slotName=this.unit.space.name;this.renderBid=function(c){var d=g(this.auctionsList);if(d){var f=c&&x.find(d.bids,function(m){return m.bidId==c.bidId});try{d.subscribeForEvent("renderBidDone",function(m){m.successfulyRenderedBid?A.fireEvent("onAuctionEnded",{auction:d,bid:f}):A.fireEvent("onAuctionEnded",{auction:d})}),d.renderBid(f),d.subscribeForEvent("auctionRendered",function(){A.fireEvent("onAuctionRendered",{auction:d,bid:f});eb.onVisible(d.unit.element,function(){A.fireEvent("onAdViewed",
{auction:d,bid:f})})})}catch(m){}}};this.getBids=function(){var c=g(this.auctionsList);if(c)return e(c.bids)};this.getLastAuctionBids=function(){var c=h(this.auctionsList);if(c)return e(c.bids)};var e=function(c){return x.map(c,function(d){return{bidId:d.bidId,adId:d.adId,bidder:d.bidder,cpm:d.cpm,height:d.height,width:d.width,size:d.size,complianceStatus:d.complianceStatus}})},g=function(c){return x.find(c,function(d){return d.state!=H.States.DONE})},h=function(c){c=c.reverse();return x.find(c,function(d){return d.state==
H.States.DONE})}};A=ha.CustomEvents;J.Space=function(l){this.id=l.id;this.name=l.name;this.staging=l.staging;this.selector={position:l.selector.position,value:l.selector.value};this.sizes=l.sizes;this.preBiddingSettings={enabled:!1};if(l.preBiddingSettings&&(this.preBiddingSettings={enabled:l.preBiddingSettings.enabled,biddingSettings:{}},l.preBiddingSettings.enabled&&l.preBiddingSettings.biddingSettings))for(var e in l.preBiddingSettings.biddingSettings)if(l.preBiddingSettings.biddingSettings.hasOwnProperty(e)){var g=
l.preBiddingSettings.biddingSettings[e];this.preBiddingSettings.biddingSettings[e]=[];for(var h=0;h<g.length;h++){var c=g[h];c.id&&c.name&&c.testCompliance&&c.params&&this.preBiddingSettings.biddingSettings[e].push({id:c.id,name:c.name,testCompliance:c.testCompliance,params:c.params})}}this.postBiddingSettings={enabled:!1};if(l.postBiddingSettings&&l.postBiddingSettings.enabled)for(this.postBiddingSettings={adxId:l.postBiddingSettings.adxId,directId:l.postBiddingSettings.directId,enabled:l.postBiddingSettings.enabled,
type:l.postBiddingSettings.type,order:[]},h=0;h<l.postBiddingSettings.order.length;h++)e=l.postBiddingSettings.order[h],A.fireEvent("removeAdServerRequestIteration",{iterationConfig:e})||this.postBiddingSettings.order.push({params:{keyValues:e.params.keyValues||{},queryParams:e.params.queryParams||{}},adx:{bidderID:e.adx.bidderID,testCompliance:e.adx.testCompliance},direct:{bidderID:e.direct.bidderID,testCompliance:e.direct.testCompliance}})};var q=function(l){this.unitID=ra.stringRange(16,24);this.element=
l.element;this.space=l.space;this.state=l.state||q.States.PENDING;this.currentBid;this.countOfDispatches=0;this.lastInvokeTime;this.cleanup=function(){for(var g=this.element.children,h=[],c=0;c<g.length;c++)h.push(e(g[c]));for(c=0;c<h.length;c++)h[c]()};this.rendered=function(g){this.currentBid=g};var e=function(g){return function(){g&&g.parentNode&&g.parentNode.removeChild(g)}}};q.States={PENDING:0,CHECKING:1,DISPATCHED:2};J.Unit=q})(Ta);var ub={};(function(J){var A=ya.new();A.setPrefix("testCompliance: ");
A.setLevel(ya.DEBUG);var H=!1;try{H=window.location.href&&0<=window.location.href.indexOf("bt_tc=false")||"false"==localStorage.getItem("bt_tc")}catch(G){A.errorf(null,"testComplianceDisabled: ",G)}A.debugf(null,"test Compliance disabled? ",H);var D=ha.CustomEvents;J.testBidsCompliance=function(G){var q={},l={},e=T.SharedObject.getItem("websiteConfig").websiteID,g={};x.forEach(G,function(d){var f=d.auction;d=d.bids;g[f.auctionId]=g[f.auctionId]||{};for(var m=0;m<d.length;m++){var y=d[m];if(H)g[f.auctionId][y.bidId]=
{bid:y,result:{status:T.consts.complianceStatus.COMPLIANT,backup:!1}},A.debugf(null,"compliance is disabled for the current bid: ",y);else{a:{var E=f,C=y;try{if(900<=parseInt(C.width)&&200<=parseInt(C.height)&&600>parseInt(C.height)){var r=E.unit.element;if(r&&900<=eb.calculateElementOffset(r).top){var u=!1;break a}}}catch(n){}u=[{width:728,height:201},{width:120,height:601}];for(E=0;E<u.length;E++){var K=u[E];if(C.width>=K.width&&C.height>=K.height){u=!0;break a}}u=void 0}if(u)g[f.auctionId][y.bidId]=
{bid:y,result:{status:T.consts.complianceStatus.INCOMPLIANT,backup:!1}};else if(y.complianceStatus!=T.consts.complianceStatus.UNKNOWN)g[f.auctionId][y.bidId]={bid:y,result:{status:y.complianceStatus,backup:!1}};else if(C=y.ad,E=y.type,-1<C.indexOf("video-box")?0:(-1<C.indexOf(".rhbodyurl")||C.indexOf("rh-image")||-1<C.indexOf("rh-title")||-1<C.indexOf(".rhbutton"))&&-1<C.indexOf(".rhurl")||-1<C.indexOf(".image-link")&&(-1<C.indexOf("call-to-action-link")||-1<C.indexOf(".attribution"))||-1<C.indexOf(".rhprice")&&
-1<C.indexOf(".rhsaleprice")&&-1<C.indexOf("gstatic.com/shopping")||-1<C.indexOf(".grid-link-container")&&-1<C.indexOf(".grid-link")||-1<C.indexOf(".rhsimpleprice")&&-1<C.indexOf(".rh-box-image")&&-1<C.indexOf("gstatic.com/shopping")||-1<C.indexOf(".product-image")&&-1<C.indexOf(".product-container")&&-1<C.indexOf("gstatic.com/shopping")||-1<C.indexOf("logoMCImageWidth")&&-1===C.indexOf("-webkit-animation")||-1<C.indexOf("productBannerSlot")&&-1<C.indexOf("logoBackColorDerived")||-1<C.indexOf("googletag.pubads().definePassback(")&&
E==Ta.Bid.Types.ADX||-1<C.indexOf("js/adsbygoogle.js")&&(-1<C.indexOf('data-ad-format="link"')||C.indexOf('data-ad-type="text"')))g[f.auctionId][y.bidId]={bid:y,result:{status:T.consts.complianceStatus.COMPLIANT,backup:!1}};else{a:{switch(y.bidderCode){case "adyoulike":case "ntv":case "upo":case "upo2":case "upo3":case "upo4":case "upo5":case "upo6":case "my6sense":case "lockerdome":case "sharethrough":C=!0;break a}C=!1}if(C)g[f.auctionId][y.bidId]={bid:y,result:{status:T.consts.complianceStatus.COMPLIANT,
backup:!1}};else if(C=y,C="triplelift"===C.bidderCode&&C.ad&&-1<C.ad.indexOf("tl_auction_response")&&-1<C.ad.indexOf("advertiser_name")&&-1<C.ad.indexOf("heading")&&-1===C.ad.indexOf("VAST version")&&-1===C.ad.indexOf("vast_xml")?!0:void 0,C)g[f.auctionId][y.bidId]={bid:y,result:{status:T.consts.complianceStatus.COMPLIANT,backup:!1}};else if(C=D.fireEvent("customComplianceCheck",{bid:ob.bidDecoder(y)}))g[f.auctionId][y.bidId]={bid:y,result:{status:C,backup:!1}};else{g[f.auctionId][y.bidId]={bid:y,
result:{}};C=y.makeEntryForTestCompliance();C.auctionID=f.auctionId;C.spaceExternalID=f.unit.space.id;C.websiteID=e;E=parseFloat(y.cpm);C.cpm=isNaN(E)?0:E;E=C;if(E.markup&&-1<E.markup.indexOf("://secure.ace.advertising.com/"))try{var v="https://secure.ace.advertising.com/site="+E.markup.split("Site: '")[1].split("'")[0]+"/size="+E.markup.split("Size: '")[1].split("'")[0]+"/rip="+E.markup.split("/rip=")[1].split("/")[0];v&&(E.markup='\x3c!-- "'+v+'"--\x3e'+E.markup)}catch(n){}E.markup&&!E.url&&-1===
E.markup.indexOf("<body")&&(E.markup="<body>"+E.markup+"</body>");E=ra.stringRange(5,8);q[E]=C;l[E]=y}}}}});if(0>=Object.keys(q).length){for(var h in g)if(g.hasOwnProperty(h)){G=g[h];for(var c in G)G.hasOwnProperty(c)&&(g[h][c]=G[c].result)}return x.CPromise.resolve(g)}return bb.Home.testCompliance(q).then(function(d){for(var f in d)if(d.hasOwnProperty(f)){var m=q[f].auctionID,y=g[m][l[f].bidId];y.result.status=d[f].status;y.result.bidContentIdHash=d[f].id;y.result.backup=d[f].backup}for(m in g)if(g.hasOwnProperty(m)){d=
g[m];for(var E in d)d.hasOwnProperty(E)&&(g[m][E]=d[E].result)}return g})}})(ub);var wb={};(function(J){var A=ya.new();A.setPrefix("postbidding: ");A.setLevel(ya.INFO);var H=new function(){var q=!1,l=new Fa.SubscriptionLayer,e=function(){q||(q=!0,G.subscribeForEvent("refresh",function(g){l.invokeEventCallbacks("refresh",g)}),G.subscribeForEvent("bidReceived",function(g){l.invokeEventCallbacks("bidReceived",g)}))};this.subscribeForEvent=function(g,h){l.subscribeForEvent(g,h)};this.dispatch=function(g,
h){e();var c=[];x.forEach(g,function(C){c.push({asAdUnit:C,promise:void 0})});for(var d={},f=0;f<g.length;f++){var m=g[f];d[m.type]=d[m.type]||[];d[m.type].push(m)}for(var y in d)if(y=parseInt(y),d.hasOwnProperty(y)){var E=d[y];g=h&&h[y];a:{switch(y){case H.Types.DFP:g=G.dispatch(E,g);break a}g=void 0}x.forEach(g,function(C,r){var u=E[r];x.find(c,function(K){return K.asAdUnit==u}).promise=C})}return x.map(c,function(C){return C.promise})}};H.Types={UNKNOWN:0,DFP:1,SMART_AS:2};J.AdServer=H;A=ya.new();
A.setPrefix("dfpAdapter: ");A.setLevel(ya.DEBUG);var D=ha.CustomEvents,G=new function(){function q(t){if(t)return{auctionId:t.auctionId,spaceName:t.spaceName,params:t.params,slotElementId:t.slotElementId,floorPrice:t.floorPrice,type:t.type}}function l(t){switch(t){case Ta.Bid.Types.ADX:return"gad";case Ta.Bid.Types.ADX_TEXT:return"gad_text";case Ta.Bid.Types.DIRECT:return"gad_dfp_direct"}}function e(t){t=h[t];t.deferred.resolve({auctionId:t.asAdUnit.auctionId,bids:[]})}var g=!1,h={},c={},d={},f=[],
m=[],y=new Fa.SubscriptionLayer,E={_type_:0,_expandable_:1,_afc_expandable_:2,_snippet_:4,_height_:5,_width_:6,_empty_:7,_is_afc_:8,_fluid_:9,_persistent_for_stream_:10,_use_safe_frame_:11,_use_sandbox_:12,_cookies_:13,_creative_ids_:14,_adgroup2_ids_:15,_advertiser_ids_:16,_campaign_ids_:17,_yield_group_ids_:18,_company_ids_:19,_creative_template_ids_:21,_host_page_libraries_:22,_is_3pas_:25,_a_exps_:26,_resources_:27,_margin_render_:28,_pvtoken_:32,_qqid_:33,_breakglass_mode_:35,_generate_slot_:39,
_rereq_:43,_ntis_:44,_safe_frame_uid_:46};this.init=function(){if(!g&&(g=!0,kb(),!document.getElementById("up-gpt-stylesheet"))){var t=document.createElement("style");t.id="up-gpt-stylesheet";t.type="text/css";t.textContent=".up-gpt-static { opacity: 0.001 !important; }";(document.head||document.body||document.documentElement).appendChild(t)}};this.dispatch=function(t,O){try{this.init();var ba=[];D.fireEvent("onBeforeDfpRefreshDispatch");D.fireEvent("tryDisableGoogletagLazyLoad")&&C();x.forEach(t,
function(fa){var pa=new x.CDefer;ba.push(pa.promise);h[fa.slotElementId]={asAdUnit:fa,deferred:pa};pa=new x.CDefer;c[fa.slotElementId]=pa});window.googletag.cmd.push(function(){try{A.debugf(null,"onAdsRequestPrepareStarted");var fa=window.googletag.pubads().getSlots(),pa=[];x.forEach(fa,function(va){x.forEach(t,function(Ka,Oa){Oa=va.getSlotElementId();if(Oa===Ka.slotElementId){pa.push(va);var Na=ra.stringRange(16,24);d[Na]=Oa;va.setTargeting("uponitSlotIterationId",Na);D.fireEvent("preTargetingSetting",
{dfpSlot:va,ASAdUnit:q(Ka)});Oa=Ka.params.keyValuesParams.toRemove;for(Na=0;Na<Oa.length;Na++)va.clearTargeting(Oa[Na]);va.__up_display||(va.__up_display=!0,window.googletag.display(Ka.slotElementId));Oa=Ka.params.keyValuesParams.toAdd;for(var wa in Oa)Oa.hasOwnProperty(wa)&&va.setTargeting(wa,Oa[wa]);if(window.uponit&&window.uponit.modifiers&&window.uponit.modifiers.dfpTargeting&&0<window.uponit.modifiers.dfpTargeting.length)try{var xa=window.uponit.modifiers.dfpTargeting;for(wa=0;wa<xa.length;wa++){var Ia=
va.getTargetingMap();Oa={};for(var Ca in Ia)Oa[Ca]=Ia[Ca];Na=null;!Ka||void 0==Ka.floorPrice&&null==Ka.floorPrice||(Na=Ka.floorPrice);var Sa=xa[wa](Oa,va,Na);if(Sa)for(Ca in Sa)Ia[Ca]&&Ia[Ca]===Sa[Ca]||va.setTargeting(Ca,Sa[Ca])}}catch(Ua){A.errorf(null,"dispatch: uponit-modifiers: %o",Ua)}va.setForceSafeFrame(!0);va.setCollapseEmptyDiv(!1)}})});A.debugf(null,"onAdsRequestSlotsPrepare - slots: %o",K(pa));r(pa);if(D.fireEvent("forceNotSingleRequestRefresh"))for(fa=0;fa<pa.length;fa++){var ua=pa[fa];
window.googletag.pubads().refresh([ua],void 0,!0)}else window.googletag.pubads().refresh(pa,void 0,!0)}catch(va){A.errorf(null,"dispatch: %o",va)}});return ba}catch(fa){ya.criticalf("google cmd function failed: %o",fa)}};var C=function(){window.googletag.cmd.push(function(){window.googletag.pubads().enableLazyLoad({fetchMarginPercent:-1,renderMarginPercent:-1})})},r=function(t){x.forEach(t,function(O){O.setTargeting("upstdfp",!0)})},u=function(t){var O=[];try{for(var ba=0;ba<t.length;ba++){var fa=
t[ba];"fluid"===fa?O.push(fa):O.push([fa.getWidth(),fa.getHeight()])}}catch(pa){A.errorf(null,"getNormalizedDfpSizes errored - %o",pa)}return O},K=function(t){var O=[];try{for(var ba=0;ba<t.length;ba++){var fa=t[ba];O.push({elementId:fa.getSlotElementId(),dfpAdUnitPath:fa.getAdUnitPath(),sizes:u(fa.getSizes()),targetingMap:fa.getTargetingMap()})}}catch(pa){A.errorf(null,"getNormalizedDFPAdSlots errored - %o",pa)}return O},v=function(t){x.forEach(t,function(O){O.clearTargeting("upstdfp")})},n=function(t,
O){if(-1<O.indexOf("fluid")){var ba=x.map(O,function(ua){return"fluid"!=ua&&ua.getWidth()});O=x.map(O,function(ua){return"fluid"!=ua&&ua.getHeight()});ba=x.filter(ba,function(ua){return void 0!=ua});O=x.filter(O,function(ua){return void 0!=ua});ba=x.reduce(ba,function(ua,va){return Math.max(ua,va)});O=x.reduce(O,function(ua,va){return Math.max(ua,va)});return!(t._width_<=ba&&t._height_<=O)}ba=t._width_;t=t._height_;for(var fa=0;fa<O.length;fa++){var pa=O[fa];if(pa.getWidth()==ba&&pa.getHeight()==
t)return!1}return!0},w=function(t){if(!t)return!1;var O=D.fireEvent("isPrebidResponse",{str:t});return void 0!=O?O:/\.(renderAd|renderAdNew)\(document,(\s+)?['"][a-zA-Z0-9\-_]+['"]/gm.test(t)||/apstag\.renderImp\(document,/gm.test(t)||/"hb_adid":[\s\r\n\t]{0,9}?\["[a-z-A-Z0-9\-_]+"\]/gm.test(t)||/ucTagData\.ad[Ii]d(:?\s+)?=(:?\s+)?['"]([a-zA-Z0-9\-_]+)['"]/gm.test(t)||-1<t.indexOf("districtm_adslot = ")?!0:!1},M=function(t,O,ba,fa){t&&t._html_&&-1<t._html_.indexOf("googletag.pubads().definePassback(")&&
(t._html_=t._html_.replace(").setTargeting('",").setTargeting('up_recovery','true').setTargeting('"),t._html_=t._html_.replace(').setTargeting("',').setTargeting("up_recovery","true").setTargeting("'));t&&t._html_&&-1===t._html_.indexOf("ca-pub-15988")&&(t._html_=t._html_.replace("data-ad-slot=",'data-ad-type="text" data-ad-slot=').replace("data-ad-client\\x3d","data-ad-type\\x3d\\x22text\\x22 data-ad-client\\x3d").replace('google_ad_client = "ca-pub','google_ad_type = "text";google_ad_client = "ca-pub'));
(O=D.fireEvent("dfpResponseCustomReplace",{googleReponse:t,googleFrame:fa,googleSlot:O}))&&(t=O);t&&0===t._height_&&0===t._width_&&fa&&fa.parentElement&&(t._height_=parseInt(window.getComputedStyle(fa.parentElement).height),t._width_=parseInt(window.getComputedStyle(fa.parentElement).width));if((!t._height_||!t._width_)&&0<ba.length)for(fa=0;fa<ba.length;fa++)if(O=ba[fa],"fluid"!=O&&120<=O.getWidth()){t._width_=parseInt(O.getWidth());t._height_=parseInt(O.getHeight());t._fluid_&&(t._fluid_=null);
break}},U=function(t,O){var ba=t._html_;return t._empty_?Ta.Bid.Types.EMPTY:w(ba)?Ta.Bid.Types.DFP_PREBID:t._is_afc_?"text"===Ea([O]).ad_type?Ta.Bid.Types.ADX_TEXT:Ta.Bid.Types.ADX:-1<ba.indexOf("js/adsbygoogle.js")||-1<ba.indexOf("pagead/show_ads.js")?Ta.Bid.Types.ADSENSE:Ta.Bid.Types.DIRECT},ea=function(t,O){switch(t){case Ta.Bid.Types.ADSENSE:case Ta.Bid.Types.ADX:case Ta.Bid.Types.ADX_TEXT:return O.adxBidderId;case Ta.Bid.Types.DIRECT:return O.directBidderId}},I=function(t,O){f.push(O);t._html_=
D.fireEvent("CustomPrebidHTMLModification",t._html_)||t._html_.replace(/w=w.parent/gm,"w=window").replace(/w = w.parent/gm,"w = window").replace(/pbjs/gm,"upbjs").replace(/renderAd/gm,"renderAdNew")},P=function(t){var O=t.getSlotElementId();O=Fa.escapeSelector("#"+O);var ba=ba||document.querySelector(O+' [id^="google_ads_iframe_"]');return ba=D.fireEvent("customInnerContainer",{googleSlot:t})||ba},a=function(t,O,ba){try{if(t){for(var fa={},pa=[],ua=0;ua<t.length;ua++){var va=t[ua].response,Ka=t[ua].slot;
if(Ka){var Oa=O[ua],Na=Ka.getSlotElementId(),wa;for(wa in va)if(va.hasOwnProperty(wa)){var xa=va[wa];D.fireEvent("bidReceivedDfp",{slot:Ka,bid:xa});var Ia=new x.CDefer;fa[Na]=Ia;pa.push(Ia.promise);var Ca=h[Na],Sa=P(Ka);M(xa,Ka,Oa,Sa);if(N(xa,Ka,Oa))fa[Na].resolve({injectToDom:!1}),e(Na);else{w(xa._html_)&&I(xa,Na);var Ua=U(xa,Ka),cb=D.fireEvent("forceCompliant"),mb=xa._html_,nb=l(Ua),ca=ea(Ua,Ca.asAdUnit.params),ia=l(Ua);a:{try{if(cb&&Ua==Ta.Bid.Types.DIRECT&&xa._adgroup2_ids_&&xa._adgroup2_ids_[0]&&
xa._creative_ids_&&xa._creative_ids_[0]){var qa=xa._adgroup2_ids_[0].toString()+"_"+xa._creative_ids_[0].toString();break a}}catch(da){A.errorf(null,"getCreativeId: %o",da)}qa=void 0}var sa=new Ta.Bid({ad:mb,adId:null,bidder:nb,bidderId:ca,bidderCode:ia,creativeId:qa,width:xa._width_,height:xa._height_,cpm:Ca.asAdUnit.floorPrice+.01},xa.originalResponse,Ua,void 0,function(da){return function(){var Ba=fa[da];this.onRenderedEvent(function(){var La=document.getElementById(da).querySelector('div[id^="google_ads_"]');
x.removeClass("up-gpt-static",La)});"unresolved"==Ba.fate&&Ba.resolve({injectToDom:!0})}}(Na),function(da){return function(){var Ba=fa[da];this.onRenderedEvent(function(){var La=document.getElementById(da).querySelector('div[id^="google_ads_"]');x.addClass("up-gpt-static",La)});"unresolved"==Ba.fate&&Ba.resolve({injectToDom:!0})}}(Na),function(da){return function(){var Ba=fa[da];"unresolved"==Ba.fate&&Ba.resolve({injectToDom:!1})}}(Na),function(da){return function(Ba){c[da].promise.then(function(){Ba()})}}(Na),
function(){return ba(this)});Ca.deferred.resolve({auctionId:Ca.asAdUnit.auctionId,bids:[sa]});y.invokeEventCallbacks("bidReceived",{auctionId:Ca.asAdUnit.auctionId,bid:sa})}}}else pa.push(x.CPromise.resolve({injectToDom:!1}))}return x.CPromise.all(pa).then(function(da){try{for(var Ba=[],La=0;La<this.uponitGoogletagResponeses.length;La++){var Va=this.uponitGoogletagResponeses[La].response,Pa=Object.keys(Va)[0],Ya=this.uponitGoogletagResponeses[La].slot,Za=Ya&&Ya.getSlotElementId();da[La]&&!da[La].injectToDom&&
(Za&&m.push(Za),Va[Pa]._html_="",Va[Pa]._empty_=!0,Va[Pa]._width_=1,Va[Pa]._height_=1);Ba.push(Va)}return Ba}catch($a){A.errorf(null,"handleDfpBidResponses: poly.CPromise.all: %o",$a)}}.bind({uponitGoogletagResponeses:t,deferredsPromises:pa}))}}catch(da){A.errorf(null,"handleDfpBidResponses: %o",da)}},z=function(t){return{bidderExternalID:t.bidderId,url:t.adUrl,domain:window.location.host,hint:{provider:t.bidderCode,uid:t.creativeId},width:parseInt(t.width),height:parseInt(t.height)}},k=function(t){var O=
z(t);O.markup=t.ad.replace(/\\(n|r|\\)/g,function(ba,fa){return"n"==fa?"\n":"r"==fa?"\r":"\\"});return O},N=function(t,O,ba){if(!t||t&&!t._html_)return!0;var fa=Ea([O]),pa=t._empty_;var ua=t._html_;ua=-1<ua.indexOf("google-native-video")||-1<ua.indexOf("imasdk.googleapis.com/formats/outstream")||-1<ua.indexOf("video-in-display")||-1<ua.indexOf("vix.eu.criteo.net/concat")||-1<ua.indexOf(".video-container")&&(-1<ua.indexOf("video-box")||-1<ua.indexOf("googlevideo.com"))||-1<ua.indexOf("product-video")&&
-1<ua.indexOf("googlevideo.com")||-1<ua.indexOf("twoOfTwoVertical")&&-1<ua.indexOf("animation-container")||-1<ua.indexOf("animation:text2Frames")&&-1<ua.indexOf("-webkit-animation")?!0:!1;ba="text"==fa.ad_type&&!w(t._html_)&&n(t,ba);t=Fa.isUnacceptable("#"+O.getSlotElementId(),{width:t._width_,height:t._height_});return pa||ua||ba||t},V=function(t,O){t=t.replace(/[\[\]]/g,"\\$&");return(t=(new RegExp("[?&]"+t+"(=([^&#]*)|&|#|$)")).exec(O))?t[2]?decodeURIComponent(t[2].replace(/\+/g," ")):"":null},
la=function(t,O){return(t=(new RegExp("(^|[&])"+t+"(=([^&#]*)|&|#|$)")).exec(O))?t[3]?decodeURIComponent(t[3].replace(/\+/g," ")):"":null},Ea=function(t){try{for(var O={},ba=0;ba<t.length;ba++){var fa=h[t[ba].getSlotElementId()].asAdUnit;if(fa&&fa.params&&fa.params.queryParams)for(var pa in fa.params.queryParams)fa.params.queryParams.hasOwnProperty(pa)&&(O[pa]=fa.params.queryParams[pa])}return O}catch(ua){A.errorf(null,"getSlotsQueryParams: %o",ua)}},aa=function(t,O){t=t.split("\n");for(var ba=[],
fa=0;fa<t.length;fa++){var pa=t[fa];if(0===fa%2&&""!=pa){try{var ua=window.JSON.parse(pa)}catch(wa){A.errorf(null,"parseGoogleExpandableResponse: 1 %o",wa)}pa=ua[Object.keys(ua)[0]];var va={};if(3==O){try{for(var Ka in E)if(E.hasOwnProperty(Ka)){var Oa=E[Ka];"undefined"!==typeof pa[Oa]&&null!==pa[Oa]&&(va[Ka]=1==pa[Oa]?!0:0==pa[Oa]?!1:pa[Oa])}}catch(wa){A.errorf(null,"parseGoogleExpandableResponse: 2 %o",wa)}ua[Object.keys(ua)[0]]=va}ba.push(ua)}else if(0!==fa%2){va=ba[ba.length-1];var Na=Object.keys(va)[0];
va[Na]._html_=pa}}1==ba.length&&(ba=ba[0]);return ba},Ma=function(t){var O={};a:if(0!==t.indexOf("{"))var ba=1;else{try{var fa=JSON.parse(t.split("\n")[0]);ba=Array.isArray(fa[Object.keys(fa)[0]])?3:2;break a}catch(pa){A.errorf(null,"getResponseType: %o",pa)}ba=0}switch(ba){case 1:t=t.substring(t.indexOf("(")+1,t.lastIndexOf(")")).replace(/\\x/g,"\\u00");try{O.data=window.JSON.parse(t),O.type=1}catch(pa){A.errorf(null,"parseGoogleTagResponse: RESPONSE_TYPES.regular: %o",pa)}break;case 2:O.data=aa(t,
2);O.type=2;break;case 3:O.data=aa(t,3),O.type=3}O.isArray=Array.isArray(O.data);O.isArray||(O.data=[O.data]);return O},L=function(t,O){var ba=[];x.forEach(t,function(fa){var pa={},ua=Object.keys(fa)[0],va=fa[ua];pa[ua]={originalResponse:fa,_html_:b(va),_empty_:va._empty_,_width_:va._width_,_height_:va._height_,_fluid_:va._fluid_,_is_afc_:va._is_afc_,_adgroup2_ids_:va._adgroup2_ids_&&0<va._adgroup2_ids_.length&&x.map(va._adgroup2_ids_,function(Ka){return Ka}),_creative_ids_:va._creative_ids_&&0<va._creative_ids_.length&&
x.map(va._creative_ids_,function(Ka){return Ka})};ba.push(pa)});return ba},b=function(t){return t._enc_&&t._enc_._html_?atob(t._enc_._html_):t._html_},p=function(t,O){O.__defineGetter__("responseText",function(){return t});O.__defineGetter__("response",function(){return t});O.__defineGetter__("status",function(){return 200});O.__defineGetter__("readyState",function(){return 4})},F=function(t){if(t=/googletag.impl.pubads.callbackProxy(\d+)/gm.exec(t))return t[1]},R=function(t,O,ba,fa,pa){return new x.CPromise(function(ua,
va){try{var Ka=L(t,O),Oa=x.map(Ka,function(wa,xa){if(-1<ba.indexOf(xa))return O[xa]}),Na=x.map(Ka,function(wa,xa){return{slot:Oa[xa],response:wa}});a(Na,fa,pa).then(function(wa){try{x.forEach(wa,function(Ia){var Ca=Object.keys(Ia)[0],Sa=Ia[Ca].originalResponse[Ca];Ia=Ia[Ca];Sa._enc_&&Sa._enc_._html_?Sa.enc._html_=btoa(Ia._html_):Sa._html_=Ia._html_;Sa._empty_=Ia._empty_;Sa._width_=Ia._width_;Sa._height_=Ia._height_;Sa._fluid_=Ia._fluid_});var xa=x.map(wa,function(Ia){return Ia[Object.keys(Ia)[0]].originalResponse});
x.forEach(xa,function(Ia){var Ca=Object.keys(Ia)[0];Ia[Ca]._use_safe_frame_=!0});ua(xa)}catch(Ia){A.errorf(null,"invokeMiddleware: handleDfpBidResponses: %o",Ia)}})}catch(wa){A.errorf(null,"invokeMiddleware: %o",wa)}})},W=function(t,O){if(O=Ea(O))for(var ba in O)if(O.hasOwnProperty(ba)){var fa=O[ba];0>t.indexOf("?")?t=t+"?"+ba+"="+fa:0>t.indexOf("&"+ba+"=")&&0>t.indexOf("?"+ba+"=")&&(t=t+"&"+ba+"="+fa)}return t},ma=function(t){var O=[],ba=V("scp",t);ba||(ba=V("prev_scp",t));if(ba){t=ba.split("|");
for(ba=0;ba<t.length;ba++){var fa=la("uponitSlotIterationId",t[ba]);d[fa]&&O.push(d[fa])}return O}},ka=function(t){for(var O=[],ba=window.googletag.pubads().getSlots(),fa=0;fa<ba.length;fa++)for(var pa=ba[fa],ua=0;ua<t.length;ua++){var va=t[ua];pa.getSlotElementId()==va&&O.push(pa)}return O},za=function(t){return function(O){switch(t){case 1:var ba=z(O);ba.markup=O.ad;return ba;case 2:case 3:return k(O)}}},ta=function(t,O,ba,fa){A.debugf(null,"onAdsServerResponse - slots: %o, relevantIndexes: %o",
K(O),ba);return new x.CPromise(function(pa,ua){try{if(""===t.responseText)O.forEach(function(xa){return e(xa.getSlotElementId())}),pa();else{var va=Ma(t.responseText),Ka=va.data,Oa=va.type,Na=va.isArray,wa=za(Oa);R(Ka,O,ba,fa,wa).then(function(xa){Na||(xa=xa[0]);a:{switch(Oa){case 1:var Ia="",Ca=F(t.responseText);try{Ia=JSON.stringify(xa)}catch(ca){A.errorf(null,"stringifyResponse: RESPONSE_TYPES.regular: %o",ca)}xa="googletag.impl.pubads.callbackProxy"+Ca+"("+Ia+")";break a;case 2:case 3:Ia="";Na||
(xa=[xa]);for(var Sa=0;Sa<xa.length;Sa++){var Ua=xa[Sa],cb=Ua[Object.keys(Ua)[0]],mb=cb._html_;delete cb._html_;if(3==Oa){var nb=[];try{for(Ca in E)E.hasOwnProperty(Ca)&&(nb[E[Ca]]=1==cb[Ca]?1:0==cb[Ca]?0:cb[Ca]);Ua[Object.keys(Ua)[0]]=nb}catch(ca){A.errorf(null,"stringifyResponse: RESPONSE_TYPES.arrayTypeExpandable: 1 %o",ca)}}try{Ia=Ia+JSON.stringify(Ua)+"\n"+mb+"\n"}catch(ca){A.errorf(null,"stringifyResponse: RESPONSE_TYPES.arrayTypeExpandable: 2 %o",ca)}}xa=Ia;break a}xa=void 0}p(xa,t);pa()})}}catch(xa){ya.criticalf(null,
"handleReponsesFromXHR errored: %o",xa)}})},Aa=function(t){var O=[],ba=["21063911","21063048","21063670","21063817","21063671"],fa=V("eid",t);if(!fa)return t;fa=fa.split(",");for(var pa=0;pa<fa.length;pa++){var ua=fa[pa];0>ba.indexOf(ua)&&O.push(ua)}return t=t.replace(/&eid=[^&]+&/g,"&eid="+encodeURIComponent(O.join(","))+"&")},Ra=function(t){var O=V("sz",t);O||(O=V("prev_iu_szs",t));if(O)return t=O.split(","),t=x.map(t,function(ba){return ba.split("|")}),t=x.map(t,function(ba,fa){return x.map(ba,
function(pa){pa=pa.split("x");return{width:parseInt(pa[0]),height:parseInt(pa[1])}})})},Q=function(t){return x.map(t,function(O){var ba={getWidth:function(){return O.width},getHeight:function(){return O.height}};320==O.width&&50==O.height&&(ba="fluid");return ba})},Z=function(t,O,ba){function fa(){var wa=D.fireEvent("removeSizesDfpConfig");if(wa){var xa=wa.forAll||[];va=x.map(va,function(Ia,Ca){Ca=O[Ca].getSlotElementId();var Sa=(wa[Ca]||[]).concat(xa);Sa=x.map(Sa,function(Ua){return"fluid"==Ua?(t=
t.replace(/fluid=(.*?)&/g,""),{width:320,height:50}):Ua});return x.filter(Ia,function(Ua){return!x.find(Sa,function(cb){return cb.width==Ua.width&&cb.height==Ua.height})})})}}if(t)try{if(-1<t.indexOf("&sz="))var pa="sz";else if(-1<t.indexOf("&prev_iu_szs="))pa="prev_iu_szs";else return;var ua=Ra(t);if(ua){var va=x.filter(ua,function(wa,xa){return-1<ba.indexOf(xa)});modifiedSizesPerSlot=[];modifiedSizesGoogletagFormat=[];va=x.map(va,function(wa,xa){xa=O[xa].getSlotElementId();var Ia=D.fireEvent("sizesToReplaceBySpace",
{spaceName:h[xa].asAdUnit.spaceName});if(!Ia)return wa;x.forEach(Ia,function(Ca){if("fluid"==Ca.size||320==Ca.size.width&&50==Ca.size.height)t=t.replace(/fluid=(.*?)&/g,"")});return x.map(wa,function(Ca){var Sa=x.find(Ia,function(Ua){return"fluid"==Ua.size?320==Ca.width&&50==Ca.height:Ua.size.width==Ca.width&&Ua.size.height==Ca.height});return Sa?{width:Sa.replacement.width,height:Sa.replacement.height}:Ca})});fa();va=x.map(va,function(wa,xa){xa=O[xa].getSlotElementId();var Ia=D.fireEvent("sizesToRemoveBySpace",
{spaceName:h[xa].asAdUnit.spaceName});if(!Ia)return wa;x.forEach(Ia,function(Ca){if("fluid"==Ca||320==Ca.width&&50==Ca.height)t=t.replace(/fluid=(.*?)&/g,"")});return x.filter(wa,function(Ca){return!x.find(Ia,function(Sa){return"fluid"==Sa?320==Ca.width&&50==Ca.height:Sa.width==Ca.width&&Sa.height==Ca.height})})});x.forEach(va,function(wa,xa){xa=O[xa].getSlotElementId();wa=Fa.sizesReplacer("#"+xa,wa);wa=x.filter(wa,function(Ia){return!!Ia});0==wa.length&&(wa=[{width:2,height:3}]);modifiedSizesPerSlot.push(wa);
wa=Q(wa);modifiedSizesGoogletagFormat.push(wa)});var Ka=0,Oa=x.map(ua,function(wa,xa){if(0>ba.indexOf(xa))return wa;wa=modifiedSizesPerSlot[Ka];Ka++;return wa});var Na=x.map(Oa,function(wa){return x.map(wa,function(xa){return xa.width+"x"+xa.height})});Na=x.map(Na,function(wa){return wa.join("|")});Na=Na.join(",");t=t.replace(new RegExp("&"+pa+"=[^&]+&","g"),"&"+pa+"="+encodeURIComponent(Na)+"&");return{url:t,modifiedSizes:modifiedSizesGoogletagFormat}}}catch(wa){return A.errorf(null,"modifySizesInUrl errored - %o",
wa),{url:t,modifiedSizes:x.map(O,function(xa){return xa.getSizes()})}}},oa=function(t){var O=[],ba=V("scp",t);ba||(ba=V("prev_scp",t));if(ba){t=V("csp",t);if(t){var fa=la("upstdfp",t);A.debugf(null,"onCommonSlotTargetDetected - upstdfp: %o",fa)}ba=ba.split("|");for(t=0;t<ba.length;t++){var pa=ba[t];(fa||la("upstdfp",pa))&&O.push(t)}return O}},Da=function(){na.Hooks.addEventListener(na.Hooks.Types.XHR_OPEN_PRE,function(t){try{var O=t.data;if(Ha(O[1])){try{O[1].includes("&trunc=1")&&D.fireEvent("sendLog",
{eventName:"trunc_in_ads_request",payload:{str_len:O[1].length}})}catch(wa){}var ba=ma(O[1]),fa=ka(ba),pa=oa(O[1]);v(fa);O[1]=Fa.addAcceptableParam(O[1]);O[1]=W(O[1],fa);sizeReplacmentObj=Z(O[1],fa,pa);O[1]=sizeReplacmentObj.url;var ua=sizeReplacmentObj.modifiedSizes;O[1]=Aa(O[1]);D.fireEvent("onBeforeDfpAdsRequest",{url:O[1]});A.debugf(null,"onDfpAdsRequest - url: %s, slots: %o, relevantIndexes: %o",O[1],K(fa),pa);var va=null,Ka=null,Oa=this,Na=!1;this.onload=function(){try{va&&!Na&&(Na=!0,ta(Oa,
fa,pa,ua).then(function(){va.call(Oa)}))}catch(wa){A.errorf(null,"addListenersOnHooks: onload: %o",wa)}};this.onreadystatechange=function(wa){try{Ka&&!Na&&4===this.readyState&&(200===this.status?(Na=!0,ta(Oa,fa,pa,ua).then(function(){Ka.call(Oa,wa)})):A.criticalf(null,"onDfpAdsRequestError, status: %s, responseText: %s",this.status,this.responseText))}catch(xa){A.criticalf(null,"onReadyStateChangeError, err %o",xa)}};this.__defineGetter__("onload",function(){return va});this.__defineSetter__("onload",
function(wa){return va=wa});this.__defineGetter__("onreadystatechange",function(){return Ka});this.__defineSetter__("onreadystatechange",function(wa){return Ka=wa})}}catch(wa){A.errorf(null,"addListenersOnHooks: %o",wa)}});na.Hooks.addEventListener(na.Hooks.Types.INSERT_BEFORE_PRE,function(t){t=t.data;if(Ha(t[0].src)){var O=ma(t[0].src),ba=ka(O),fa=oa(t[0].src);v(ba);t[0].src=Fa.addAcceptableParam(t[0].src);t[0].src=W(t[0].src,ba);sizeReplacmentObj=Z(t[0].src,ba,fa);t[0].src=sizeReplacmentObj.url;
var pa=sizeReplacmentObj.modifiedSizes;t[0].src=Aa(t[0].src);D.fireEvent("onBeforeDfpAdsRequest",{url:t[0].src});if(t=F(t[0].src)){var ua=window.googletag.impl.pubads["callbackProxy"+t];window.googletag.impl.pubads["callbackProxy"+t]=function(va){var Ka=Array.isArray(va);Ka||(va=[va]);var Oa=za(1);R(va,ba,fa,pa,Oa).then(function(Na){Ka||(va=Na[0]);ua(va)})}}}})},Ha=function(t){try{return t&&-1<t.indexOf("doubleclick.net/gampad/ads")&&-1<t.indexOf("upstdfp")}catch(O){debugger}};this.subscribeForEvent=
function(t,O){y.subscribeForEvent(t,O)};var Qa=function(){window.googletag.pubads().addEventListener("slotRenderEnded",function(t){var O=t.slot;t=O.getSlotElementId();O=P(O);if(0<=m.indexOf(t))m.splice(m.indexOf(t),1);else{var ba=c[t];ba&&"unresolved"==ba.fate&&ba.resolve();if(-1<f.indexOf(t)){f.splice(f.indexOf(t),1);try{O.style.width="1px",O.style.height="1px",O.querySelector("iframe").width="1",O.querySelector("iframe").height="1"}catch(fa){A.errorf(null,"setGoogletagEvents: %o",fa)}}}})},Xa=function(){var t=
window.googletag.pubads().refresh;window.googletag.pubads().refresh=function(O,ba,fa){A.debugf(null,"onGoogleTagRefreshInvoked - info: %o",{slots:O&&K(O),settings:ba,isRefreshInvokedByUs:fa});if(fa)return O?t(O,ba):t();O||(O=window.googletag.pubads().getSlots());ba=[];for(fa=0;fa<O.length;fa++)try{var pa=O[fa].getSlotElementId();pa&&ba.push(pa)}catch(ua){A.errorf(null,"wrapGoogleTagRefresh: refresh-invoked-by-the-publisher: %o",ua)}y.invokeEventCallbacks("refresh",ba)}},kb=function(){var t="push";
window.googletag.cmd.unshift&&(t="unshift");window.googletag.cmd[t](function(){D.fireEvent("shouldNotWrapGoogleTagRefresh")||Xa();Qa();Da(window)})}};J.DfpAdapter=G})(wb);var xb={};(function(J){var A=ya.new();A.setPrefix("prebidding: ");A.setLevel(ya.INFO);var H=new function(){var e=!1,g=new Fa.SubscriptionLayer,h=function(){e&&(e=!1);e=!0;G.subscribeForEvent("refresh",function(c){g.invokeEventCallbacks("refresh",c)});G.subscribeForEvent("bidReceived",function(c){g.invokeEventCallbacks("bidReceived",
c)})};this.subscribeForEvent=function(c,d){g.subscribeForEvent(c,d)};this.dispatch=function(c,d){h();var f=[],m={};x.forEach(c,function(C){f.push({hbAdUnit:C,promises:[]});var r=C.biddingSettings;for(u in r){var u=parseInt(u);if(r.hasOwnProperty(u)){var K=r[u];K&&0<K.length&&(m[u]=m[u]||[],m[u].push({biddersSettings:K,auctionId:C.auctionId,spaceName:C.spaceName,sizes:C.sizes,selector:C.selector}))}}});for(var y in m)if(y=parseInt(y),m.hasOwnProperty(y)){var E=m[y];c=d&&d[y];a:{switch(y){case H.Types.PREBID:c=
G.dispatch(E,c);break a}c=void 0}x.forEach(c,function(C,r){x.find(f,function(u){return u.hbAdUnit.auctionId==E[r].auctionId}).promises.push(C)})}return x.map(f,function(C){return x.CPromise.all(C.promises).then(function(r){r=x.map(r,function(u){return u.bids});return{auctionId:C.hbAdUnit.auctionId,bids:x.flat(r)}})})}};H.Types={UNKNOWN:0,PREBID:1,RTK:2};J.HB=H;var D=ha.CustomEvents,G=new function(){function e(I,P){return x.filter(I,function(a){return x.find(P,function(z){return a.width==z[0]&&a.height==
z[1]})})}function g(I,P,a){if(!1!==I.isBackupCreative)if(a)P.contentWindow.postMessage({type:"eval",code:l},"*");else try{P.contentWindow.eval(atob(q))}catch(z){A.errorf(null,"evalBackupCreativeScript: - %o",z)}}var h=!1,c={},d={},f=new Fa.SubscriptionLayer;this.subscribeForEvent=function(I,P){f.subscribeForEvent(I,P)};this.dispatch=function(I){try{h||(h=!0,c=T.cpbjs,v(),D.fireEvent("wrapPrebidRequestBids")&&w(),ea());var P={};x.forEach(I,function(N){P[N.spaceName]={hbAdUnit:N,deferred:new x.CDefer}});
var a=C(I),z=D.fireEvent("prebidTimeout")||3E3;m();c.requestBids({timeout:z,adUnits:a,bidsBackHandler:function(N){try{for(var V in P)if(P.hasOwnProperty(V)){var la=P[V],Ea=la.hbAdUnit;if(N){var aa=N[V],Ma=[];if(aa){var L=x.find(a,function(b){return b.code==V}).sizes;aa.bids=e(aa.bids,L);Ma=u(aa.bids,la.hbAdUnit)}la.deferred.resolve({auctionId:Ea.auctionId,bids:Ma});x.forEach(Ma,function(b){f.invokeEventCallbacks("bidReceived",{auctionId:Ea.auctionId,bid:b})})}else la.deferred.resolve({auctionId:Ea.auctionId,
bids:[]})}}catch(b){A.errorf(null,"prebidAdapter: dispatch: bidsBackHandler: - %o",b)}}});I=[];for(var k in P)P.hasOwnProperty(k)&&I.push(P[k].deferred.promise);return I}catch(N){A.errorf(null,"prebidAdapter: dispatch: - %o",N)}};var m=function(){if(c.bidderSettings&&c.bidderSettings.standard&&c.bidderSettings.standard.adserverTargeting){var I=!!x.find(c.bidderSettings.standard.adserverTargeting,function(a){return"hb_pb_org"==a.key}),P=!!x.find(c.bidderSettings.standard.adserverTargeting,function(a){return"hb_pb"==
a.key});!I&&P&&c.bidderSettings.standard.adserverTargeting.push({key:"hb_pb_org",val:function(a){var z=c.getConfig().priceGranularity;return"auto"===z?a.pbAg:"dense"===z?a.pbDg:"low"===z?a.pbLg:"medium"===z?a.pbMg:"high"!==z&&"custom"===z?a.pbCg:a.pbHg}})}},y=function(I){var P=I.split("x");if(2!==P.length)throw Error();I=parseInt(P[0]);P=parseInt(P[1]);if(isNaN(I)||isNaN(P))throw Error();return{width:I,height:P}},E=function(I){for(var P=[],a=0;a<I.sizes.length;a++){var z=y(I.sizes[a]);P.push({width:z.width,
height:z.height})}var k=D.fireEvent("sizesToReplaceBySpace",{spaceName:I.spaceName});k&&(P=x.map(P,function(V){var la=x.find(k,function(Ea){return Ea.size.width==V.width&&Ea.size.height==V.height});return la?{width:la.replacement.width,height:la.replacement.height}:V}));var N=D.fireEvent("sizesToRemoveBySpace",{spaceName:I.spaceName});N&&(P=x.filter(P,function(V){return!x.find(N,function(la){return la.width==V.width&&la.height==V.height})}));I=Fa.sizesReplacer(I.selector,P);I=x.filter(I,function(V){return!!V});
return I=x.map(I,function(V){return[V.width,V.height]})},C=function(I){return x.map(I,function(P){var a=E(P),z=[];x.forEach(P.biddersSettings,function(k){z.push({bidder:k.name,params:k.params})});return{code:P.spaceName,bids:z,sizes:a,mediaTypes:{banner:{sizes:a}}}})},r=function(I,P){if(I.ad&&-1<I.ad.indexOf(atob("c2VydmluZy1zeXMuY29t"))&&-1<I.ad.indexOf(atob("QnVyc3RpbmdQaXBlL2FkU2VydmVyLmJz"))){var a=atob("PHNjcmlwdD53aW5kb3cuZWJDZmcgPSB7fTt3aW5kb3cuZWJDZmdfXyA9IHt9O3dpbmRvdy5fX2RlZmluZUdldHRlcl9fKCdlYkNmZycsZnVuY3Rpb24oYSl7cmV0dXJuIHdpbmRvdy5lYkNmZ19fO30pO3dpbmRvdy5fX2RlZmluZVNldHRlcl9fKCdlYkNmZycsZnVuY3Rpb24oYSl7YS5hZEh0bWxQYXRoPScnO3JldHVybiB3aW5kb3cuZWJDZmdfXz1hO30pOzwvc2NyaXB0Pg==");
-1<I.ad.indexOf("<body>")?I.ad=I.ad.replace("<body>",a):I.ad=a+I.ad}if("amazonAAX"===I.bidder)try{var z=JSON.parse(I.adTargeting);z.amzniid=I.adId;for(var k in z)I.adserverTargeting[k]=z[k];I.ad=I.adHtml;try{delete I.adserverTargeting.hb_pb}catch(N){}delete I.adUrl}catch(N){}I.bidder&&"smartadserver"===I.bidder&&(I.bidder="smart");if(I.bidder&&("triplelift"===I.bidder&&-1<I.ad.indexOf("render_options_bm")||"sharethrough"===I.bidder)){z=I;P=E(P);for(I=k=0;I<P.length;I++)a=P[I][0],a>k&&(k=a);z.width=
k}},u=function(I,P){I=x.map(I,function(a){a.bidderId=K(a,P);if(a.bidderId)return r(a,P),d[a.adId]=new x.CDefer,new Ta.Bid({ad:a.ad,adId:a.adId,adUrl:a.adUrl,bidderId:a.bidderId,bidder:a.bidder,bidderCode:a.bidderCode,currency:a.currency,creativeId:"komoona"===a.bidder||"criteo"===a.bidder||"consumable"===a.bidder?null:a.c?String(a.c):a.adid&&"0"!=a.adid?String(a.adid):a.crid&&"0"!=a.crid?String(a.crid):a.creativeId&&"0"!=a.creativeId?String(a.creativeId):a.creative_id&&"0"!=a.creative_id?String(a.creative_id):
null,cpm:a.cpm,complianceStatus:0,height:a.height,timeToRespond:a.timeToRespond,size:a.size,width:a.width},a,Ta.Bid.Types.PREBID,function(z){z=0<z.complianceBidsInAuction.length?x.map(z.complianceBidsInAuction,function(N){return N.rawBid&&N.rawBid}):void 0;var k=a.adUnitCode;z=c.getAdserverTargeting(k,z)[k];""==z.hb_pb&&z.hb_pb_org&&(z.hb_pb=z.hb_pb_org);return z=D.fireEvent("customAdserverTargeting",{adServerTargeting:z})||z},function(z){try{n(this);var k=z.placement;this.onRenderedEvent(function(){var N=
k.parentElement.querySelector(".ahover");x.removeClass("up-pb-static",N)});M(k,this)}catch(N){}},function(z){n(this);var k=z.placement;this.onRenderedEvent(function(){var N=k.parentElement.querySelector(".ahover");x.addClass("up-pb-static",N)});M(k,this)},void 0,function(z){this.renderedDeferred.promise.then(function(){z()})}.bind({renderedDeferred:d[a.adId]}),function(){var z={bidderExternalID:this.bidderId,markup:this.ad,url:this.adUrl,domain:window.location.host,hint:{provider:this.bidderCode,
uid:this.creativeId},width:parseInt(this.width),height:parseInt(this.height)};if("152media"===this.bidderCode||"brealtime"===this.bidderCode||"districtm"===this.bidderCode||"defymedia"===this.bidderCode||"appnexusAst"===this.bidderCode)z.provider="appnexus";"ix"===this.bidderCode&&(z.provider="indexExchange");"underdogmedia"===this.bidderCode&&(z.hintID=z.hintID+"_"+this.width+"_"+this.height);"gumgum"===this.bidderCode&&this.creative&&(z.markup=this.creative);if("komoona"===this.bidderCode)try{var k=
0,N=JSON.parse(unescape(this.ad.split('"creative_data":"')[1].split('","')[0])),V;for(V in N.hdbd_data.hbbids){var la=N.hdbd_data.hbbids[V];la.cpm>k&&(k=la.cpm,z.markup=la.creative_data.creative)}}catch(Ea){}this.ad&&-1<this.ad.indexOf("https://googleads.g.doubleclick.net/pagead/adfetch?client=ca-pub-")&&(z.url="https://googleads.g.doubleclick.net/pagead/adfetch"+this.ad.split("https://googleads.g.doubleclick.net/pagead/adfetch")[1].split("&rfl=")[0],z.markup="");return z});A.errorf(null,"prebidAdapter: dispatch: bidsBackHandler: - No corresponding bidderSettings found in ad unit: %o for Prebid auction response bid: %o",
P,a)});return x.reject(I,Fa.isNil)},K=function(I,P){return(P=x.find(P.biddersSettings,function(a){return a.name==I.bidderCode}))?P.id:void 0},v=function(){c.onEvent("bidWon",function(I){d[I.adId].resolve()})},n=function(I){(I=I.rawBid)&&I.bidder&&(D.fireEvent("FirePublisherEvent",{eventName:"AcceptableAdsRender",payload:{detail:I}}),D.fireEvent("FirePublisherEvent",{eventName:"uponitRender",payload:{detail:I}}))},w=function(){var I=window.pbjs||window.jitaJS;if(I&&I.requestBids){var P=I.requestBids;
I.requestBids=function(a){for(var z=[],k=a&&a.adUnits,N=0;N<k.length;N++)z.push(k[N].code);f.invokeEventCallbacks("refresh",z);if(!D.fireEvent("skipOriginalRequestBidsFunction"))return P.apply(this,arguments)}}},M=function(I,P){var a=U(),z=a.container,k=a.iframe,N=function(){try{k.removeEventListener("load",N);var V=T.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame;k.style.setProperty("visibility","");V||(k.contentWindow.document.documentElement.innerHTML="<html><body></body></html>");var la=
!V&&k.contentWindow.document,Ea=ab.browser();"sharethrough"===P.bidder&&window.setTimeout(function(){for(var aa=document.querySelectorAll(".str-thumbnail"),Ma=0;Ma<aa.length;Ma++){var L=aa[Ma].style.backgroundImage;!L||-1!==L.indexOf("upapi")||-1!==L.indexOf("criteo.net")||-1!==L.indexOf("imgix.net")&&-1!==L.indexOf(".gif")?-1<L.indexOf("imgix.net")&&-1<L.indexOf(".gif")&&(-1<L.indexOf("?")?aa[Ma].style.backgroundImage=L.replace('")','&adunit=true")'):aa[Ma].style.backgroundImage=L.replace('")','?adunit=true")')):
-1<L.indexOf("?")?aa[Ma].style.backgroundImage=L.replace('")','&upapi=true")'):aa[Ma].style.backgroundImage=L.replace('")','?upapi=true")')}},3E3);"edge"===Ea&&(P.rawBid.ad=P.rawBid.ad.replace(/\.html[\?#]/,".html?upapi=true&"),P.rawBid.ad=P.rawBid.ad.replace(/\.html%23/,".html%23upapi=true%26"),window.setTimeout(function(){if(V)k.contentWindow.postMessage({type:"eval",code:"try { var styleSheets = document.styleSheets; for (var i = 0; i < styleSheets.length; i++) { if (styleSheets[i].cssText && styleSheets[i].cssText.indexOf(\"a[href^='http://ads2.williamhill.com/redirect.aspx?']\") > -1) { styleSheets[i].cssText = ''; } } } catch (e) { }"},
"*");else try{for(var aa=la.styleSheets,Ma=0;Ma<aa.length;Ma++)aa[Ma].cssText&&-1<aa[Ma].cssText.indexOf("a[href^='http://ads2.williamhill.com/redirect.aspx?']")&&(aa[Ma].cssText="")}catch(L){}},3E3));window.setTimeout(function(){var aa="edge"===Ea||"ie"===Ea;aa||g(P,k,V);var Ma=Fa.doesBrowserSupportDocOpen();c.version.includes("4.17")?c.renderAd(la,P.adId,{ifr:k,shouldOpenDocument:Ma}):c.renderAd(la,P.adId,Ma,k);aa&&g(P,k,V)},0);k.style.width=P.width+"px";k.style.height=P.height+"px"}catch(aa){A.errorf(null,
"renderBid - %o",aa)}};k.addEventListener("load",N);k.style.setProperty("visibility","hidden");I.appendChild(z)},U=function(){var I=document.createElement("div");I.className="ahover";var P=ob.createSafeFrame();P.style.width="1px";P.style.height="1px";P.style.border="0px";P.setAttribute("marginwidth","0");P.setAttribute("marginheight","0");P.scrolling="no";I.appendChild(P);return{container:I,iframe:P}},ea=function(){if(!document.getElementById("up-pb-stylesheet")){var I=document.createElement("style");
I.id="up-pb-stylesheet";I.type="text/css";I.textContent=".up-pb-static { opacity: 0.001 !important; }";(document.head||document.body||document.documentElement).appendChild(I)}}},q="",
l="try { eval(atob('"+q+"')) } catch (err) {}"})(xb);var pb={};(function(J){var A=new function(){var H=xb.HB,D=wb.AdServer,G=new Fa.SubscriptionLayer,q=ha.CustomEvents;this.subscribeForEvent=function(h,c){G.subscribeForEvent(h,c)};var l=function(h){return x.filter(h,function(c){return.01<=c.cpm})};this.dispatchHB=function(h,c){try{var d={},f=[],m=[];x.forEach(h,function(C){var r=new x.CDefer;d[C.auctionId]=r;f.push(r.promise);var u=C.unit.space.preBiddingSettings;u&&u.enabled?m.push(C):r.resolve({auctionId:C.auctionId,
bids:[]})});var y=x.map(m,function(C){return{auctionId:C.auctionId,biddingSettings:C.unit.space.preBiddingSettings.biddingSettings,spaceName:C.unit.space.name,sizes:C.unit.space.sizes,selector:C.unit.space.selector.value}}),E=H.dispatch(y,c);x.CPromise.all(E).then(function(C){try{for(var r=[],u=0;u<C.length;u++){var K=C[u],v=K.auctionId,n=x.find(m,function(ea){return ea.auctionId==v}),w=K.bids;w=q.fireEvent("passZeroCpmBidsFilter")?w:l(w);var M=q.fireEvent("filterPrebidBids");if(M){var U=x.map(w,
function(ea){return{bid:ea,rawBid:ea.rawBid}});w=M(U)}K.bids=w;r.push({auction:n,bids:w})}ub.testBidsCompliance(r).then(function(ea){for(var I in ea)if(ea.hasOwnProperty(I)){var P=ea[I],a=x.find(C,function(la){return la.auctionId==I}),z=a.bids,k;for(k in P)if(P.hasOwnProperty(k)){var N=P[k],V=x.find(z,function(la){return la.bidId==k});V.contentIdHash=N.bidContentIdHash;V.complianceStatus=N.status;V.isBackupCreative=N.backup}d[I].resolve(a)}})}catch(ea){}});return f}catch(C){}};this.dispatchAS=function(h,
c){try{var d={},f=[],m=[];x.forEach(h,function(E){var C=new x.CDefer;d[E.auctionId]=C;f.push(C.promise);var r=E.unit.space.postBiddingSettings;r&&r.enabled?m.push(E):C.resolve({auctionId:E.auctionId,bids:[]})});var y=e(m,c,0);x.forEach(y,function(E){E.then(function(C){d[C.auctionId].resolve(C)})});return f}catch(E){}};var e=function(h,c,d){try{var f={},m=[];x.forEach(h,function(r){var u=new x.CDefer;m.push(u.promise);f[r.auctionId]={auction:r,deferred:u}});var y=[];x.forEach(h,function(r){r.unit.space.postBiddingSettings.order[d]?
y.push(r):f[r.auctionId].deferred.resolve({auctionId:r.auctionId,bids:[]})});if(y){var E=x.map(y,function(r){var u=r.unit.space.postBiddingSettings,K=r.getWinningBid();K=K?K.cpm:0;var v=r.auctionId,n=r.unit.space.name;a:{switch(r.unit.space.postBiddingSettings.type){case D.Types.DFP:var w=u.order[d];var M={},U=r.getWinningBid(),ea=r.getComplianceBids(),I="true false undefined 152media 33across a4g aardvark adblade adbund adbutler adform adkernel adkerneladn admedia admixer adocean adsparc adspirit adsupply adtelligent adxcg adyoulike aerserv andbeyond aol appnexusAst appnexus arteebee atomx amazon amazonAAX audienceNetwork automatad beachfront betweendigital bidfluence brainy brealtime bridgewell brightcom buysellads c1x carambola clickonometrics clickforce colossus connectad consumable contentIgnite conversant cox cpx criteo defymedia dgads districtmDMX districtm engagebdr emxdigital emx_digital e-planning essens fairtrade featureForward fidelityMedia freewheel-ssp fyber gamoshi gamma getintent gourmetAds gumgum gxone imonomy improvedigital IndexExchange indexExchange ix inneractive innity inskin insticator invibes iqm justpremium kargo komoona kumma lifestreet lkqd lockerdome madvertise marsmedia matomy media.net medianet mobfox my6sense mytarget nginad upo upo1 upo2 upo3 upo4 upo5 upo6 upo7 upo8 upo9 upo10 oneplanetonly onetag openx optimatic optimera orbitsoft peak226 piximedia platform.io playgroundXyz polluxNetwork polymorph prebidServer pubgears pubmatic pulsepoint pulsepointLite quantcast quantum readpeak realvu rhythmone rockyou roxot rtbdemandBidder rtbdemandadk rtbhouse rubicon rxrtb sara sekindoum serverbid sharethrough smart smartyads somoAudience sonobi soloway sovrn spotx springserve stickyadstv tapsense teads thoughtleadr tremor trionInteractive triplelift trustx twenga ucfunnel underdogmedia undertone unruly vertamedia vertoz vi vidazoo vis.x vuble weborama wideorbit widespace xaxis xendiz yieldbot yieldlab yieldmo yieldone".split(" "),
P={up_bidder:!0};U&&U.bidder&&-1<I.indexOf(U.bidder)?P.up_bidder=U.bidder:U&&U.bidder&&0>I.indexOf(U.bidder)&&q.fireEvent("sendLog",{eventName:"upBidder_unknownBidder",payload:{bidder:U.bidder,bidderCode:U.bidderCode}});I=window.location.hostname;0===I.indexOf("www.")&&(I=I.replace("www.",""));var a=I;a=a.match(/(co\.il|co\.uk|org\.il)/)?a.replace("www.","").split(".").splice(-3).join("."):a.replace("www.","").split(".").splice(-2).join(".");P.up_recovery="true";var z=ab.browser(),k=ab.device(),N=
ab.platform();P.up_browser=z;P.up_device=k;P.up_platform=N;P.up_domain=I;P.up_website=a;P.up_website_id=T.SharedObject.getItem("websiteConfig").websiteID;U=U?U.getGPTTargeting({complianceBidsInAuction:ea}):{};P=x.objectAssign({},P||{},U,w.keyValues||{});U=g[r.unit.unitID]?Object.keys(g[r.unit.unitID]):[];g[r.unit.unitID]=P;M.keyValuesParams={toAdd:P,toRemove:U};M.queryParams=w.params.queryParams||{};M.adxBidderId=w.adx.bidderID;M.adxShouldTestCompliance=w.adx.testCompliance;M.directBidderId=w.direct.bidderID;
M.directShouldTestCompliance=w.direct.testCompliance;w=M;break a}w=void 0}return{auctionId:v,spaceName:n,params:w,slotElementId:r.unit.element.getAttribute("id"),floorPrice:K,type:u.type}}),C=D.dispatch(E,c);x.forEach(C,function(r){r.then(function(u){try{var K=u.auctionId,v=u.bids[0],n=x.find(y,function(M){return M.auctionId==K}),w=x.find(E,function(M){return M.auctionId==K});v?v.type==Ta.Bid.Types.DFP_PREBID?(v.complianceStatus=T.consts.complianceStatus.COMPLIANT,f[K].deferred.resolve(u)):v.type!=
Ta.Bid.Types.ADX_TEXT||w.params.adxShouldTestCompliance?v.type!=Ta.Bid.Types.DIRECT||w.params.directShouldTestCompliance?ub.testBidsCompliance([{auction:n,bids:[v]}]).then(function(M){v.contentIdHash=M[K][v.bidId].bidContentIdHash;v.complianceStatus=M[K][v.bidId].status;c.forceCompliantEnabled&&v.type==Ta.Bid.Types.DIRECT&&v.complianceStatus==T.consts.complianceStatus.INCOMPLIANT?f[K].deferred.resolve(u):v.complianceStatus!=T.consts.complianceStatus.COMPLIANT?(v.cancelBid(),e([n],c,d+1)[0].then(function(U){f[K].deferred.resolve(U)})):
f[K].deferred.resolve(u)}).catch(function(M){v.cancelBid();e([n],c,d+1)[0].then(function(U){f[K].deferred.resolve(U)})}):(v.complianceStatus=T.consts.complianceStatus.COMPLIANT,f[K].deferred.resolve(u)):(v.complianceStatus=T.consts.complianceStatus.COMPLIANT,f[K].deferred.resolve(u)):f[K].deferred.resolve(u)}catch(M){}})});return m}}catch(r){}},g={};(function(){D.subscribeForEvent("bidReceived",function(h){G.invokeEventCallbacks("bidReceived",h)});D.subscribeForEvent("refresh",function(h){G.invokeEventCallbacks("refresh",
h)});H.subscribeForEvent("bidReceived",function(h){G.invokeEventCallbacks("bidReceived",h)});H.subscribeForEvent("refresh",function(h){G.invokeEventCallbacks("refresh",h)})})()};J.dispatch=A})(pb);var yb={};(function(J){var A=new function(){var H=pb.dispatch,D=ha.CustomEvents,G={},q=!1,l=!1,e=function(){H.subscribeForEvent("bidReceived",function(v){v=K([v.bid])[0];g(A.UPONIT_EVENTS.BID_RECEIVED,v)})},g=function(v,n){v=G[v]||[];for(var w=v.length||0,M=0;M<w;M++){var U=v[M];setTimeout(function(){U(n)},
0)}};this.UPONIT_EVENTS={BID_RECEIVED:1};this.COMPLIANCE_STATUSES={UNKNOWN:0,COMPLIANT:1,INCOMPLIANT:2,ERROR:3,PENDING:4};this.init=function(v){var n=v.prebidConfig,w=v.dfpConfig;v=n&&n.init;var M=w&&w.init;q=n&&n.enabled;l=w&&w.enabled;n={prebid:q,dfp:l};for(var U in n)if(n.hasOwnProperty(U)&&n[U]){w=jb.presetProvider(U);var ea=tb.postsetProvider(U);w&&lb.addPresetCallback(U,w);ea&&lb.addPostsetCallback(U,ea)}for(U in n)n.hasOwnProperty(U)&&n[U]&&lb.loadThirdParty(U);v&&d(v);M&&f(M);e()};var h=function(v){v&&
v.adUnit&&v.sizes&&v.slotElementId&&window.googletag.cmd.push(function(){var n=window.googletag.defineSlot(v.adUnit,v.sizes,v.slotElementId).addService(window.googletag.pubads());if(v.targeting)for(var w in v.targeting)v.targeting.hasOwnProperty(w)&&n.setTargeting(w,v.targeting[w])})},c=function(v){return!!x.find(window.uponit.slots,function(n){return n.unit.space.selector.value==v})};this.defineSlot=function(v,n){var w={};w.id="space_"+Y.hashString(v.name+"_"+v.selector);w.id=w.id.substr(0,500);
w.name=v.name;w.sizes=v.sizes;w.selector={position:0,value:v.selector};if(v.prebid){w.preBiddingSettings={enabled:!0,biddingSettings:{}};w.preBiddingSettings.biddingSettings[1]=[];for(var M=0;M<v.prebid.bidders.length;M++){var U=v.prebid.bidders[M],ea="bidder_"+Y.hashString(w.id+"_"+U.name+"_"+JSON.stringify(U.params).trim());ea=ea.substr(0,500);w.preBiddingSettings.biddingSettings[1].push({id:ea,name:U.name,testCompliance:!0,params:U.params})}}v.dfp&&(w.postBiddingSettings={adxId:v.name+"_adx",directId:v.name+
"_direct",enabled:!0,type:1,order:[{params:{keyValues:v.keyValues},adx:{bidderID:v.name+"_adx",testCompliance:!0},direct:{bidderID:v.name+"_direct",testCompliance:!0}},{params:{queryParams:{ad_type:"text"},keyValues:v.keyValues},adx:{bidderID:v.name+"_adx",testCompliance:!1},direct:{bidderID:v.name+"_direct",testCompliance:!0}}]});M=!!document.querySelector(w.selector.value);U=c(w.selector.value);if(M&&!U)return!l||n&&n.dfpSlotAlreadyDefined||h(v.dfp),v=new Ta.Space(w),n=document.querySelector(v.selector.value),
n.alreadyWraped||(na.Hooks.hookFunction(n,"removeChild",na.Hooks.Types.REMOVE_CHILD_PRE,void 0,!0),na.Hooks.hookPropertySetter(n,"innerHTML",na.Hooks.Types.HTML_ELEMENT_INNERHTML_PRE,void 0,!0),na.Hooks.hookPropertySetter(n,"textContent",na.Hooks.Types.HTML_ELEMENT_TEXTCONTENT_PRE,void 0,!0),na.Hooks.hookFunction(n,"setAttribute",na.Hooks.Types.SET_ATTRIBUTE_PRE,void 0,!0),n.alreadyWraped=!0),v=new Ta.Unit({element:n,space:v}),v=new Ta.Slot({unit:v}),window.uponit.slots.push(v),v};var d=function(v){D.addEventListener("prebidDoneInit",
function(n){var w=(n=n.data)&&n.cpbjs;if(w){n={setConfig:function(ea){w.setConfig(ea)},aliasBidder:function(ea,I){w.aliasBidder(ea,I)},enableAnalytics:function(ea){w.enableAnalytics(ea)},bidderSettings:function(ea){w.bidderSettings=ea}};for(var M in v)if(v.hasOwnProperty(M)){var U=v[M];n[M]&&n[M].apply(this,U)}}})},f=function(v){window.googletag.cmd.push(function(){window.googletag.pubads().disableInitialLoad()})};this.enableServices=function(){l&&(window.googletag=window.googletag||{cmd:[]},window.googletag.cmd.push(function(){window.googletag.enableServices()}))};
this.fetchPrebid=function(v){return m(v)};var m=function(v){if(!q)return x.map(v,function(w){return x.CPromise.resolve({slotName:w.unit.space.name,bids:[]})});var n=u(v);v=H.dispatchHB(n);return x.map(v,function(w){return w.then(function(M){var U=M.auctionId,ea=x.find(n,function(a){return a.auctionId==U}),I=M.bids;M=ea.unit.space.name;var P=I;D.fireEvent("apiOnlyCompliantBids")&&(P=[],x.forEach(I,function(a){a.complianceStatus==T.consts.complianceStatus.COMPLIANT&&P.push(a)}));ea.addBids(P);ea=K(P);
return{slotName:M,bids:ea}})})};this.fetchDFP=function(v){return y(v)};var y=function(v){if(!l)return x.map(v,function(w){return x.CPromise.resolve({slotName:w.unit.space.name,bids:[]})});var n=u(v);v=H.dispatchAS(n);return x.map(v,function(w){return w.then(function(M){var U=M.auctionId,ea=x.find(n,function(z){return z.auctionId==U}),I=M.bids;M=ea.unit.space.name;var P=ea.getWinningBid();if(I&&0<I.length&&I[0].type==Ta.Bid.Types.DFP_PREBID)return P&&P.additionalBidsToRender.push(I[0]),{slotName:M,
bids:[]};var a=I;D.fireEvent("apiOnlyCompliantBids")&&(a=[],x.forEach(I,function(z){z.complianceStatus==T.consts.complianceStatus.COMPLIANT&&a.push(z)}));ea.addBids(a);ea=K(a);return{slotName:M,bids:ea}})})};this.renderBid=function(v,n){v.renderBid(n)};var E=function(v){if(!document.hasFocus())return v;for(var n=[],w=0;w<v.length;w++){var M=!1,U=v[w];if(0==U.auctionsList.length)n.push(U);else{var ea=U.unit.element;if(ea){if("none"===window.getComputedStyle(ea).display){var I=ea.style.getPropertyValue("display");
var P=ea.style.getPropertyPriority("display");ea.style.setProperty("display","block","important");M=!0}var a=eb.calculateElementOffset(ea),z=document.documentElement.scrollLeft||window.scrollX,k=document.documentElement.scrollTop||window.scrollY,N=window.innerHeight,V=window.innerWidth,la=ea.offsetHeight,Ea=ea.offsetWidth;a=a.left>=z&&a.top>=k&&Ea+a.left<=z+V&&la+a.top<=k+N?!0:(a.left<=z&&a.left+Ea>z||a.left>=z&&a.left<=z+V)&&(a.top<=k&&a.top+la>k||a.top>=k&&a.top<=k+N)?!0:!1;"hidden"===document.visibilityState&&
(a=!1);M&&ea.style.setProperty("display",I,P);a||n.push(U)}}}return n};this.fetchAndRender=function(v){return C(v)};var C=function(v){return new x.CPromise(function(n,w){v=v||window.uponit.slots;v=E(v);w=m(v);x.CPromise.all(w).then(function(M){M=y(v);x.forEach(M,function(U){U.then(function(ea){var I=ea.slotName;ea=x.find(window.uponit.slots,function(N){return N.unit.space.name==I});for(var P=ea.getBids(),a,z=0;z<P.length;z++){var k=P[z];(!a||a.cpm<k.cpm)&&k.complianceStatus==T.consts.complianceStatus.COMPLIANT&&
(a=k)}ea.renderBid(a)})});x.CPromise.all(M).then(function(){n()})})})};this.addEventListener=function(v,n){G[v]=G[v]||[];G[v].push(n)};var r=function(v){return x.find(v.auctionsList,function(n){return n.state!=Ta.Auction.States.DONE})},u=function(v){return x.map(v,function(n){var w=r(n);w||(w=new Ta.Auction({unit:n.unit}),n.auctionsList.push(w),D.fireEvent("onAuctionStarted",{auction:w}));return w})},K=function(v){return x.map(v,function(n){return{bidId:n.bidId,adId:n.adId,bidder:n.bidder,cpm:n.cpm,
height:n.height,width:n.width,size:n.size,complianceStatus:n.complianceStatus}})}};J.api=A})(yb);var zb={};(function(J){function A(L,b,p){(L=window.googletag.defineSlot(L,b,p))&&L.addService(window.googletag.pubads());return L}function H(L){var b=u.fireEvent("newGAMSlotsOnUnitCreation")||{},p=b.AD_UNIT_PATH_PREFIX,F=b.deriveDataFromUnitForSpaces,R=b.slotDataBySpaceName;0<L.length&&(F||R)&&window.googletag.cmd.push(function(){try{L.forEach(function(W){var ma=W.unitID,ka=W.element;W=W.space;var za=
F&&F.includes(W.name)&&p,ta=R&&R[W.name];if(za||ta){if(ta){var Aa=R[W.name]||{};var Ra=Aa.adUnitPath;var Q=Aa.sizes;Aa=Aa.slotElementId}!Ra&&p&&(Ra=""+p+W.name);Q||(Q=W.sizes.map(function(Z){return Z.split("x").map(function(oa){return parseInt(oa,10)})}).filter(function(Z){return 2===Z.length&&!isNaN(Z[0])&&!isNaN(Z[1])}));Aa||(ka.id||ka.setAttribute("id","bt-unit-"+ma),Aa=ka.id);Ra&&Q&&0<Q.length&&Aa&&A(Ra,Q,Aa)}})}catch(W){n.errorf(null,"error defining new GAM slots on Unit creation",W)}})}function D(L){if(L){var b=
u.fireEvent("rewriteGAMSlots")||u.fireEvent("GAMSpecialAdUnit");if(b&&b.parseSlotAdUnitPath&&!L._is_rewritten_slot){for(var p=L.getSlotElementId(),F=L.getSizes(),R=[],W=0;W<F.length;W++){var ma=F[W];ma&&ma.getWidth&&ma.getHeight?R.push([ma.getWidth(),ma.getHeight()]):ma&&"fluid"===ma&&R.push("fluid")}F=R;try{var ka=b.parseSlotAdUnitPath(L);if(!b.shouldSkipDestroySlot||!b.shouldSkipDestroySlot(L,ka)){var za=L.getSlotElementId();window.googletag.destroySlots([L]);var ta=document.getElementById(za),
Aa=ta&&ta.querySelector("div[id^='google_ads_iframe_']");if(ta&&Aa){var Ra=ta.getAttribute("data-guard-element");Ra&&ta.removeAttribute("data-guard-element");ta.removeChild(Aa);Ra&&ta.setAttribute("data-guard-element",!0)}}if(ka){if(newSlot=A(ka,F,p)){newSlot._is_rewritten_slot=!0;if(b.shouldCopyTargeting){p=newSlot;var Q=L.getTargetingMap(),Z;for(Z in Q)Q.hasOwnProperty(Z)&&p.setTargeting(Z,Q[Z][0])}b.postSlotCreation&&b.postSlotCreation(newSlot)}return newSlot}}catch(oa){n.errorf(null,"error redefining GAM slot (e.g. for SAU or BT AdX unit)",
oa)}}}}function G(L,b){function p(W){var ma=L.height+"px",ka=L.width+"px",za=L.creativeHTML,ta=document.createElement("div");ta.className="default-creative-container";ta.style.height=ma;ta.style.width=ka;var Aa=c.createSafeFrame();Aa.className="default-creative-iframe";Aa.setAttribute("scrolling","no");Aa.setAttribute("marginwidth","0");Aa.setAttribute("marginheight","0");Aa.setAttribute("height",ma);Aa.setAttribute("width",ka);ta.appendChild(Aa);Aa.addEventListener("load",function(){try{var Ra=Fa.doesBrowserSupportDocOpen();
if(d.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame){var Q="if("+Ra+") { document.open('text/html', 'replace'); } document.write(atob('"+btoa(za)+"')); document.close();";Aa.contentWindow.postMessage({type:"eval",code:Q},"*")}else{var Z=Aa.contentWindow.document;Ra&&Z.open("text/html","replace");Z.write(za);Z.close()}R=!0;f.forEach(F,function(oa){oa()})}catch(oa){n.errorf(null,"auction: createDefaultCreativeBid: renderDefaultCreative: %o",oa)}});W.appendChild(ta)}var F=[],R=!1;b={ad:L.creativeHTML,
bidder:"default-creative",bidderId:"default-creative-"+b.unit.space.name,bidderCode:"default-creative",width:L.width,height:L.height};return new m.Bid(b,b,m.Bid.Types.DEFAULT_CREATIVE,void 0,function(W){p(W.placement)},void 0,void 0,function(W){R?W():F.push(W)},void 0)}function q(L){var b=u.fireEvent("maxAmountOfUnitDispatches");return b?L.filter(function(p){return p.countOfDispatches<b}):L}function l(L,b){var p=d.upoSettings.minTimeBetweenRefreshes,F=u.fireEvent("minTimeBetweenRefreshes");isNaN(F)||
"number"!=typeof F||(p=F);isNaN(b.minTimeBetweenRefreshes)||"number"!=typeof b.minTimeBetweenRefreshes||(p=b.minTimeBetweenRefreshes);var R=new Date;return L.filter(function(W){if(!W)return!1;var ma=!0;if(W.lastInvokeTime){var ka=R.getTime()-W.lastInvokeTime.getTime();ka>p?n.infof(null,"refreshing %o",W.space.name):(ma=!1,n.infof(null,"waiting %o secs before next refresh for %o",(p-ka)/1E3,W.space.name))}return ma})}function e(L){return L.filter(function(b){return!u.fireEvent("filterOutUnitToBeAuctioned",
{unit:c.unitDecoder(b)})})}function g(L){var b=L.map(function(p){return p.element});return L.filter(function(p,F){return b.indexOf(p.element)==F})}function h(L,b){return new Promise(function(p,F){b&&b.definedSlotsFilteringSettings&&(b.definedSlotsFilteringSettings.dfpEnabled||b.definedSlotsFilteringSettings.alwaysFilterByGoogletagSlots)?window.googletag.cmd.push(function(){var R=window.googletag.pubads().getSlots(),W=[];L.forEach(function(ma){b.definedSlotsFilteringSettings.alwaysFilterByGoogletagSlots||
ma.space.postBiddingSettings.enabled?R.forEach(function(ka){ka.getSlotElementId()===ma.element.getAttribute("id")&&W.push(ma)}):W.push(ma)});p(W)}):p(L)})}var c=ob,d=T,f=x,m=Ta,y=function(L){try{var b=function(ta){return ta[0]+"x"+ta[1]},p=function(ta){return 2===ta.length&&ta.every(function(Aa){return!Array.isArray(Aa)&&!isNaN(Aa)})},F={},R=L.selector||Fa.escapeSelector("#"+L.code),W=L.sizes;W||L.mediaTypes&&L.mediaTypes.banner&&L.mediaTypes.banner.sizes&&(W=L.mediaTypes.banner.sizes);if(W){var ma=
p(W)?[b(W)]:W.filter(p).map(b);F.id=L.id;F.id||(F.id="space_"+Y.hashString(L.code+"_"+R));F.id=F.id.substr(0,500);F.name=L.code;F.sizes=ma;F.selector={position:0,value:R};if(L.bids)for(F.preBiddingSettings={enabled:!0,biddingSettings:[]},F.preBiddingSettings.biddingSettings[1]=[],b=0;b<L.bids.length;b++){var ka=L.bids[b];ka.params=ka.params||{};var za="bidder_"+Y.hashString(F.id+"_"+ka.bidder+"_"+JSON.stringify(ka.params).trim());za=za.substr(0,500);F.preBiddingSettings.biddingSettings[1].push({id:za,
testCompliance:!0,name:ka.bidder,params:ka.params})}else F.preBiddingSettings={enabled:!1};F.postBiddingSettings=v.dfpEnabled?{adxId:F.name+"_adx",directId:F.name+"_direct",enabled:!0,type:1,order:[{params:{},adx:{bidderID:F.name+"_adx",testCompliance:!0},direct:{bidderID:F.name+"_direct",testCompliance:!0}},{params:{queryParams:{ad_type:"text"}},adx:{bidderID:F.name+"_adx",testCompliance:!1},direct:{bidderID:F.name+"_direct",testCompliance:!0}}]}:{enabled:!1};return F}}catch(ta){n.errorf(null,"adUnitParser - error in parsing prebid ad unit - err: %o",
ta)}},E=new function(){var L=ha.CustomEvents;this.init=function(){L.addEventListener("onPageView",function(b){n.infof(null,"onPageView: %o",b)});L.addEventListener("onPageFocus",function(b){n.infof(null,"onPageFocus: %o",b)});L.addEventListener("onAuctionGroupStarted",function(b){n.infof(null,"onAuctionGroupStarted: %o",b)});L.addEventListener("onAuctionGroupEnded",function(b){n.infof(null,"onAuctionGroupEnded: %o",b)});L.addEventListener("onAuctionStarted",function(b){n.infof(null,"onAuctionStarted: %o",
b)});L.addEventListener("onAuctionEnded",function(b){n.infof(null,"onAuctionEnded: %o",b)});L.addEventListener("onPrebiddingStarted",function(b){n.infof(null,"onPrebiddingStarted: %o",b)});L.addEventListener("onPrebiddingEnded",function(b){n.infof(null,"onPrebiddingEnded: %o",b)});L.addEventListener("onPostbiddingStarted",function(b){n.infof(null,"onPostbiddingStarted: %o",b)});L.addEventListener("onPostbiddingEnded",function(b){n.infof(null,"onPostbiddingEnded: %o",b)});L.addEventListener("onAuctionBidResponse",
function(b){n.infof(null,"onAuctionBidResponse: %o",b)});L.addEventListener("onNewUnitFound",function(b){n.infof(null,"onNewUnitFound: %o",b)})}};window.__upo_d=window.__upo_d||{};window.__upo_d.v="v2";window.__bt_intrnl=window.__bt_intrnl||{};window.googletag=window.googletag||{};window.googletag.cmd=window.googletag.cmd||[];var C={"hideSelectors":null,"elementDisplay":"block","analyticsID":"","contentEnabled":true,"mobileContentEnabled":true,"dfpEnabled":true,"spaces":{}},r=C.spaces||{};if(0<=window.location.href.indexOf("bt_debug=true")||"true"==window.localStorage.getItem("bt_debug"))C.dfpEnabled="true"==localStorage.getItem("forceGAM")?
!0:C.dfpEnabled,C.mobileContentEnabled="true"==localStorage.getItem("forceMobileContent")?!0:C.mobileContentEnabled,C.contentEnabled="true"==localStorage.getItem("forceContent")?!0:C.contentEnabled;var u=ha.CustomEvents,K,v={websiteData:C,scriptSettings:db.settings,apiDomain:"api.btloader.com",websiteID:"5699819534286848",organizationID:"5714333134749696",dfpEnabled:C.dfpEnabled,prebidEnabled:!1,mobileContentEnabled:C.mobileContentEnabled,contentEnabled:C.contentEnabled};window.__upo_d.websiteConfig=
function(){return{websiteData:v.websiteData,scriptSettings:v.scriptSettings,apiDomain:v.apiDomain,websiteID:v.websiteID,organizationID:v.organizationID,dfpEnabled:v.dfpEnabled,prebidEnabled:v.prebidEnabled,mobileContentEnabled:v.mobileContentEnabled,contentEnabled:v.contentEnabled}};d.SharedObject.setItem("websiteConfig",v);var n=ya.new();n.setPrefix("main: ");n.setLevel(ya.INFO);var w=function(){try{var L=ya.new();L.setPrefix("hook: ");L.setLevel(ya.DEBUG);window.eval.call(window,"(function (CustomEvents, lg) {\n"+
atob("Q3VzdG9tRXZlbnRzLmFkZEV2ZW50TGlzdGVuZXIoIndoaXRlbGlzdGVkRnJhbWVTcmMiLCBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gewogICAgICAgIHVybDogIi8vbXJiLnVwYXBpLm5ldC9zYWZlRnJhbWUuaHRtbD91cGFwaT10cnVlIiwKICAgICAgICBkb250RG9TcmNNb2RpZmljYXRpb246IHRydWUKICAgIH0KfSk7CgovLyBhZGQgY3VzdG9tIHByaWNlIGJ1Y2tldApDdXN0b21FdmVudHMuYWRkRXZlbnRMaXN0ZW5lcigicHJlYmlkRG9uZUluaXQiLCBmdW5jdGlvbiAoZXZlbnQpIHsKCXZhciBjcGJqcyA9IGV2ZW50LmRhdGEuY3BianM7CgkvLyBCVCBwcmljZSBidWNrZXRzCgljcGJqcy5xdWUucHVzaChmdW5jdGlvbiAoKSB7CgkJY3BianMuc2V0Q29uZmlnKHsgJ2RlYnVnJzogZmFsc2UsICdlbmFibGVTZW5kQWxsQmlkcyc6IHRydWUsICdzeW5jc1BlckJpZGRlcic6IDIwLCAndXNlclN5bmMnOiB7ICdpZnJhbWVFbmFibGVkJzogMSB9IH0pOwoJCWNwYmpzLnNldENvbmZpZyh7CgkJCSd1c2VyU3luYyc6IHsKCQkJCSdpZnJhbWVFbmFibGVkJzogdHJ1ZQoJCQl9LAoJCQkncHJpY2VHcmFudWxhcml0eSc6IHsKCQkJCSJidWNrZXRzIjogW3sKCQkJCQkicHJlY2lzaW9uIjogMiwKCQkJCQkibWluIjogMCwKCQkJCQkibWF4IjogMzAsCgkJCQkJImluY3JlbWVudCI6IDAuMDEKCQkJCX1dCgkJCX0KCQl9KTsKCX0pOwp9KTsKCi8vIGFkcy50eHQgZG9lc24ndCBzZWVtIHRvIHdvcmsgd2l0aCBRUyBwYXJhbXMgYXR0YWNoZWQgKGllIGh0dHBzOi8vd3d3Lndvd2hlYWQuY29tL2Fkcy50eHQ/dXBhcGk9dHJ1ZSByZXR1cm5zIDQwNCBidXQgaHR0cHM6Ly93d3cud293aGVhZC5jb20vYWRzLnR4dCB3b3JrcykKQ3VzdG9tRXZlbnRzLmFkZEV2ZW50TGlzdGVuZXIoIndoaXRlbGlzdGVkRnJhbWVTcmMiLCBmdW5jdGlvbiAoKSB7CiAgICB2YXIgd2hpdGVsaXN0ZWRGcmFtZVNyY0Zyb21XZWJzaXRlSG9va3MgPSBDdXN0b21FdmVudHMuZmlyZUV2ZW50KCJvdmVycmlkZVdoaXRlbGlzdGVkRnJhbWVTcmMiKTsKICAgIHJldHVybiB3aGl0ZWxpc3RlZEZyYW1lU3JjRnJvbVdlYnNpdGVIb29rcyB8fCB7CiAgICAgICAgdXJsOiAiL3JvYm90cy50eHQ/dXBhcGk9dHJ1ZSIsCiAgICB9Cn0pOwoKLy9maXggc3R5bGUKdmFyIHN0eWxlRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7CnN0eWxlRWxlbWVudC50ZXh0Q29udGVudCA9CiAgJy52ZXJ0aWNhbC1ibG9jay1iZ3toZWlnaHQ6NjAwcHggIWltcG9ydGFudDt9LmJsb2NrLWJsb2NrLWJnIGlmcmFtZSwudmVydGljYWwtYmxvY2stYmcgaWZyYW1lLC5zaWRlYmFyLWJsb2NrLWJnIGlmcmFtZSwuaG9yaXpvbnRhbC1ibG9jay1iZyBpZnJhbWUsLmhlYWRlci1ibG9jay1iZyBpZnJhbWV7cG9zaXRpb246c3RhdGljICFpbXBvcnRhbnQ7d2lkdGg6OTcwcHggIWltcG9ydGFudDt9LmFob3ZlcntoZWlnaHQ6MTAwJTt9LnVwLXNob3d7b3ZlcmZsb3c6aGlkZGVuO30nOwooZG9jdW1lbnQuaGVhZCB8fCBkb2N1bWVudC5ib2R5IHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkuYXBwZW5kQ2hpbGQoc3R5bGVFbGVtZW50KTsKCi8vIFNldCBhIG1heCBsaW1pdCBvZiAzIHJlZnJlc2hlcyAoc28gNCBkaXNwYXRjaGVzKSBmb3IgYWQgdW5pdHMgW0FNLTY2XQpDdXN0b21FdmVudHMuYWRkRXZlbnRMaXN0ZW5lcignbWF4QW1vdW50T2ZVbml0RGlzcGF0Y2hlcycsIGZ1bmN0aW9uIChldmVudCkgewogIHJldHVybiA0Owp9KTsK")+"\n})")(u,L)}catch(b){debugger}},M=function(){a(window);z();u.fireEvent("noWhitelistedFrame")||I();u.fireEvent("clearSpaces")&&(r=[]);return la().then(function(){var L=f.CPromise.resolve();u.fireEvent("addAmazonBidder")&&(L=ea());U();return L})},U=function(){var L=f.map(r,function(p){return c.spaceDecoder(p)}),b=u.fireEvent("customSpacesFilter",{spaces:L});b&&(r=f.filter(r,function(p){return f.find(b,function(F){return F.id==p.id})}))},ea=function(){return new f.CPromise(function(L,
b){window.googletag.cmd.push(function(){var p=0,F=setInterval(function(){if(10<=p)L(),clearInterval(F);else{var R=window.googletag.pubads().getSlots(),W=window.apstag,ma=W&&W._Q&&W._Q[0]&&W._Q[0][1]&&W._Q[0][1][0]&&W._Q[0][1][0].pubID;ma&&R?(clearInterval(F),f.forEach(R,function(ka){var za=ka.getAdUnitPath(),ta=ka&&f.find(r,function(Aa){return u.fireEvent("useSlotPath")&&Aa.name==za?!0:Aa.name==ka.getSlotElementId()});ta&&ta.preBiddingSettings.biddingSettings[d.consts.headerBiddingType.prebid]&&(f.find(ta.preBiddingSettings.biddingSettings[d.consts.headerBiddingType.prebid],
function(Aa){return"amazonAAX"==Aa.name})||ta.preBiddingSettings.biddingSettings[d.consts.headerBiddingType.prebid].push({id:za+"_amazon_bidder",name:"amazonAAX",testCompliance:!0,params:{pubID:ma,adUnitGPTPath:za}}))}),L()):p++}},100)})})},I=function(){"chrome"!=K.browser||u.fireEvent("only3pSafeFrame")||(d.upoSettings.whitelistedFrameSettings.url="about:blank?upapi=true",d.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame=!1);var L=c.createSafeFrame();L.addEventListener("load",function(){d.whitelistedFrame=
L;u.fireEvent("whitelistedFrameLoaded",{whitelistedFrame:L})});L.style.width="0px";L.style.height="0px";L.style.display="none";document.body?document.body.appendChild(L):window.addEventListener("DOMContentLoaded",function(){document.body.appendChild(L)})},P=function(L,b){if(L.grumi){var p=document.createElement("iframe");p.style="display:none;width:1px;height:1px;";p.addEventListener("load",function(){p.done||(L.Node.prototype.appendChild=p.contentWindow.Node.prototype.appendChild,L.HTMLElement.prototype.appendChild=
p.contentWindow.Node.prototype.appendChild,b())});X.onDomLoaded(function(){document.body.appendChild(p);p.contentWindow&&(p.done=!0,L.Node.prototype.appendChild=p.contentWindow.Node.prototype.appendChild,L.HTMLElement.prototype.appendChild=p.contentWindow.Node.prototype.appendChild,b())})}else b()},a=function(L){L&&P(L,function(){try{L.XMLHttpRequest&&na.Hooks.hookFunction(L.XMLHttpRequest.prototype,"open",na.Hooks.Types.XHR_OPEN_PRE,void 0,!0);na.Hooks.hookFunction(L,"fetch",na.Hooks.Types.FETCH_PRE,
void 0,!0);L.HTMLElement&&na.Hooks.hookFunction(L.HTMLElement.prototype,"insertBefore",na.Hooks.Types.INSERT_BEFORE_PRE,void 0,!0);L.HTMLElement&&na.Hooks.hookFunction(L.HTMLElement.prototype,"appendChild",na.Hooks.Types.APPEND_CHILD_PRE,na.Hooks.Types.APPEND_CHILD_POST,!0);L.HTMLImageElement&&na.Hooks.hookFunction(L.HTMLImageElement.prototype,"setAttribute",na.Hooks.Types.IMG_SET_ATTRIBUTE_PRE,void 0,!0);na.Hooks.hookFunction(L,"open",na.Hooks.Types.WIN_OPEN_PRE,void 0,!0);L.HTMLElement&&na.Hooks.hookPropertySetter(L.HTMLElement.prototype,
"innerHTML",na.Hooks.Types.HTML_ELEMENT_INNERHTML_PRE,na.Hooks.Types.HTML_ELEMENT_INNERHTML_POST,!0);L.HTMLElement&&na.Hooks.hookFunction(L.HTMLElement.prototype,"hasChildNodes",na.Hooks.Types.HTML_ELEMENT_HAS_CHILD_NODES_PRE,void 0,!0);L.HTMLElement&&na.Hooks.hookFunction(L.HTMLElement.prototype,"removeChild",na.Hooks.Types.REMOVE_CHILD_PRE,void 0,!0);L.HTMLElement&&na.Hooks.hookPropertySetter(L.HTMLElement.prototype,"textContent",na.Hooks.Types.HTML_ELEMENT_TEXTCONTENT_PRE,void 0,!0);L.HTMLElement&&
na.Hooks.hookFunction(L.HTMLElement.prototype,"setAttribute",na.Hooks.Types.SET_ATTRIBUTE_PRE,void 0,!0);for(var b="HTMLScriptElement HTMLElement HTMLVideoElement HTMLAudioElement HTMLHtmlElement HTMLHeadElement HTMLLinkElement HTMLStyleElement HTMLBodyElement HTMLFormElement HTMLSelectElement HTMLOptionElement HTMLInputElement HTMLTextAreaElement HTMLButtonElement HTMLLabelElement HTMLFieldSetElement HTMLLegendElement HTMLUListElement HTMLOListElement HTMLDListElement HTMLDirectoryElement HTMLMenuElement HTMLLIElement HTMLDivElement HTMLParagraphElement HTMLHeadingElement HTMLQuoteElement HTMLPreElement HTMLBRElement HTMLFontElement HTMLHRElement HTMLAnchorElement HTMLImageElement HTMLObjectElement HTMLParamElement HTMLMapElement HTMLModElement HTMLAreaElement HTMLTableElement HTMLTableCaptionElement HTMLTableColElement HTMLTableSectionElement HTMLTableRowElement HTMLTableCellElement HTMLFrameSetElement HTMLFrameElement HTMLIFrameElement".split(" "),
p=0;p<b.length;p++)L[b[p]]&&na.Hooks.hookPropertySetter(L[b[p]].prototype,"src",na.Hooks.Types.HTML_SRC_PROP_PRE,void 0,!0)}catch(F){}})},z=function(){na.Hooks.addEventListener(na.Hooks.Types.HTML_SRC_PROP_PRE,function(b){b=b.data;"object"===typeof b[0]&&b[0].toString&&(b[0]=b[0].toString());if(Fa.isWhitelistURL(b[0],this.tagName))b[0]=Fa.addAcceptableParam(b[0]);else if(Fa.isSyncUrl(b[0],this.tagName)&&d.whitelistedFrame)return d.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame?(d.whitelistedFrame.postMessage({type:"eval",
code:"new window.Image().src = '"+b[0]+"'"},"*"),b[0]):(new d.whitelistedFrame.contentWindow.Image).src=b[0]});na.Hooks.addEventListener(na.Hooks.Types.HTML_ELEMENT_HAS_CHILD_NODES_PRE,function(b){try{if(f.hasClass(this,"up-show"))return!1;if(this.childNodes&&0<this.childNodes.length){b=!1;for(var p=0;p<this.children.length;p++)if(f.hasClass(this.children[p],"up-show")){b=!0;break}if(b)return!1}}catch(F){}});na.Hooks.addEventListener(na.Hooks.Types.HTML_ELEMENT_INNERHTML_POST,function(b){if(this&&
this.classList&&"adsbygoogle"===this.classList[0]){b=this.querySelector("iframe");var p=b.contentWindow;"about:blank"!==b.src&&""!==b.src||a(p);var F=p.document.write;p.document.write=function(R){R&&-1<R.indexOf("show_ads_impl.js")&&(R=Fa.addAcceptableParam(R));F.call(this,R)}}});na.Hooks.addEventListener(na.Hooks.Types.XHR_OPEN_PRE,function(b){b=b.data;Fa.isWhitelistURL(b[1],"SCRIPT")&&(b[1]=Fa.addAcceptableParam(b[1]))});na.Hooks.addEventListener(na.Hooks.Types.IMG_SET_ATTRIBUTE_PRE,function(b){b=
b.data;if("srcset"===b[0].toLowerCase()){this.src&&Fa.isWhitelistURL(this.src,this.tagName)&&(this.src=Fa.addAcceptableParam(this.src));for(var p=b[1].split(","),F=0;F<p.length;F++){var R=p[F];R=R.trim();var W=R.split(" ")[0];R=R.split(" ")[1]||"";Fa.isWhitelistURL(W,this.tagName)&&(R=Fa.addAcceptableParam(W)+" "+R,p[F]=R)}b[1]=p.join(",")}else"src"===b[0].toLowerCase()&&Fa.isWhitelistURL(b[1],this.tagName)&&(b[1]=Fa.addAcceptableParam(b[1]))});na.Hooks.addEventListener(na.Hooks.Types.INSERT_BEFORE_PRE,
function(b){b=b.data;u.fireEvent("InsertBeforeWebsiteHooksIntercept",{element:b[0]});-1<["SCRIPT","IFRAME"].indexOf(b[0].tagName)&&b[0].src&&Fa.isWhitelistURL(b[0].src,b[0].tagName)&&(b[0].src=Fa.addAcceptableParam(b[0].src));"LINK"===b[0].tagName&&b[0].href&&Fa.isWhitelistURL(b[0].href,b[0].tagName)&&(b[0].href=Fa.addAcceptableParam(b[0].href))});na.Hooks.addEventListener(na.Hooks.Types.APPEND_CHILD_PRE,function(b){var p=b.data;if(p[0]&&p[0].src&&0===p[0].src.indexOf("blob:"))b.shouldStop=!0;else{if(p[0].children&&
0<p[0].children.length)for(b=0;b<p[0].children.length;b++){var F=p[0].children[b];F.src&&Fa.isWhitelistURL(F.src,F.tagName)&&(F.src=Fa.addAcceptableParam(F.src));if(F.src&&Fa.isSyncUrl(F.src,F.tagName)&&d.whitelistedFrame)return d.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame?(b="new Image().src = '"+p[0].src+"'",d.whitelistedFrame.postMessage({type:"eval",code:b},"*"),p[0]):d.whitelistedFrame.contentDocument.body.appendChild(p[0])}"LINK"===p[0].tagName&&p[0].href&&Fa.isWhitelistURL(p[0].href,
p[0].tagName)&&(p[0].href=Fa.addAcceptableParam(p[0].href));-1<["SCRIPT","IFRAME"].indexOf(p[0].tagName)&&p[0].src&&Fa.isWhitelistURL(p[0].src,p[0].tagName)&&(p[0].src=Fa.addAcceptableParam(p[0].src));if(Fa.isSyncUrl(p[0].src,p[0].tagName)&&d.whitelistedFrame)return d.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame?(b="new Image().src = '"+p[0].src+"'",d.whitelistedFrame.postMessage({type:"eval",code:b},"*"),p[0]):d.whitelistedFrame.contentDocument.body.appendChild(p[0])}});na.Hooks.addEventListener(na.Hooks.Types.APPEND_CHILD_POST,
function(b){b=b.data;"IFRAME"!==b.tagName||"about:blank"!==b.src&&""!==b.src||a(b.contentWindow)});na.Hooks.addEventListener(na.Hooks.Types.WIN_OPEN_PRE,function(b){if(b.data[0]&&(-1<b.data[0].indexOf("clickout.sharethrough.com")||-1<b.data[0].indexOf("3lift.com/pass"))&&d.whitelistedFrame&&!d.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame)return d.whitelistedFrame.contentWindow.open(b.data[0])});var L=function(b){if(u.fireEvent("disableElementGuarding"))return!1;var p=u.fireEvent("allowRemovalOfAdUnitParents"),
F=document.querySelectorAll("[data-guard-element='true']");return!!f.find(F,function(R){return R===b||R.contains(b)||R.parentNode===b&&!p})};na.Hooks.addEventListener(na.Hooks.Types.REMOVE_CHILD_PRE,function(b){b=b.data[0];if(L(b))return b});na.Hooks.addEventListener(na.Hooks.Types.HTML_ELEMENT_INNERHTML_PRE,function(b){b=b.data[0];if("undefined"!==typeof b&&""===b&&L(this))return""});na.Hooks.addEventListener(na.Hooks.Types.HTML_ELEMENT_TEXTCONTENT_PRE,function(b){b=b.data[0];if("undefined"!==typeof b&&
""===b&&L(this))return""});na.Hooks.addEventListener(na.Hooks.Types.SET_ATTRIBUTE_PRE,function(b){var p=b.data[1];"class"===b.data[0]&&0<=this.className.indexOf("up-show")&&0>p.indexOf("up-show")&&(b.data[1]+=" up-show")})},k=function(){var L=yb.api;window.uponit=window.uponit||{que:[]};window.uponit.slots=[];window.uponit.COMPLIANCE_STATUSES=L.COMPLIANCE_STATUSES;window.uponit.defineSlot=L.defineSlot;window.uponit.init=L.init;window.uponit.enableServices=L.enableServices;window.uponit.UPONIT_EVENTS=
L.UPONIT_EVENTS;window.uponit.fetchPrebid=L.fetchPrebid;window.uponit.fetchDFP=L.fetchDFP;window.uponit.renderBid=L.renderBid;window.uponit.fetchAndRender=L.fetchAndRender;window.uponit.addEventListener=L.addEventListener;window.uponit.addModifier=function(p,F){window.uponit.modifiers=window.uponit.modifiers||{};window.uponit.modifiers[p]=window.uponit.modifiers[p]||[];window.uponit.modifiers[p].push(F)};for(L=0;L<window.uponit.que.length;L++){var b=window.uponit.que[L];try{b()}catch(p){}}window.uponit.que.push=
function(p){p()}},N=function(L){L=Object.entries(L).map(function(b){var p=$jscomp.makeIterator(b);b=p.next().value;p=p.next().value;var F={};F.id=b;F.name=p.unit;F.staging=p.staging;F.selector={position:p.selector.position,value:p.selector.value};F.sizes=p.sizes;var R=p.prebids&&0<Object.keys(p.prebids).length;F.preBiddingSettings={enabled:R,biddingSettings:{}};R&&(F.preBiddingSettings.biddingSettings[1]=[],Object.entries(p.prebids).forEach(function(W){var ma=$jscomp.makeIterator(W);W=ma.next().value;
ma=ma.next().value;F.preBiddingSettings.biddingSettings[1].push({id:W,name:ma.bidder,testCompliance:!0,params:ma.params})}));F.postBiddingSettings={adxId:p.adx,directId:p.direct,enabled:v.dfpEnabled&&"0"!=p.adx,type:1,order:[{params:{},adx:{bidderID:p.adx,testCompliance:!0},direct:{bidderID:p.direct,testCompliance:!0}},{params:{queryParams:{ad_type:"text"}},adx:{bidderID:p.adx,testCompliance:!1},direct:{bidderID:p.direct,testCompliance:!0}}]};return[b,F]});return Object.fromEntries(L)},V=function(L){var b=
[],p;for(p in L)if(L.hasOwnProperty(p)){var F=L[p];F.id=p;F=new m.Space(F);b.push(F)}return b},la=function(){var L=u.fireEvent("extractPublisherSpacesSettings");if(!L)return f.CPromise.resolve();var b=L.timeout||2E3;return new f.CPromise(function(p,F){L.callback(function(R){R=R.adUnits;for(var W=0;W<R.length;W++){var ma=y(R[W]);(ma=ma&&new m.Space(ma))&&r.push(ma)}p()});setTimeout(function(){p()},b)})};J.init=function(){if(!window.uponitAlreadyLoaded){window.uponitAlreadyLoaded=!0;bb.$XHRService.init("api.btloader.com",
{secure:!0});try{E.init(),sb.Verifications.run(),sb.Report.init()}catch(p){}K={browser:ab.browser(),device:ab.device(),platform:ab.platform(),isMobile:ab.isMobile()};window.__upo_d.isMobile=K.isMobile;var L={browser:K.browser,device:K.device,platform:K.platform,isMobile:K.isMobile};u.addEventListener("getUserEnvDataWebsiteHooks",function(){return L});window.__upo_d.userEvnData=L;db.loadSettings();w();var b=u.fireEvent("hookDFPEnabledValue");b&&(v.dfpEnabled=b);try{r=V(N(r)),r=(new URLSearchParams(window.location.search)).has("blockthrough_staging")?
r.filter(function(p){return p.staging}):r.filter(function(p){return!p.staging})}catch(p){n.errorf(null,"main: init - parsing static spaces - %o",p)}k();u.fireEvent("shouldDisableUponit")?n.noticef(null,"halting: we have been disabled by hooks"):(u.fireEvent("FirePublisherEvent",{eventName:"AcceptableAdsInit",payload:{detail:!0}}),u.fireEvent("FirePublisherEvent",{eventName:"uponitInit",payload:{detail:!0}}),M().then(function(){var p=f.map(r,function(R){return c.spaceDecoder(R)});v.prebidEnabled=!(!f.find(r,
function(R){return R.preBiddingSettings&&R.preBiddingSettings.enabled})&&!u.fireEvent("scrapePrebidAdUnits"));var F={spaces:r,settings:{prebid:u.fireEvent("forcePrebidEnabled")||v.prebidEnabled,dfp:v.dfpEnabled}};X.onDomLoaded(function(){u.fireEvent("onDomLoaded");u.fireEvent("onBeforeRecovery",{spaces:p,settings:F.settings});Ea.invoke(F)})}))}};var Ea=new function(){function L(){window.googletag.cmd.push(function(){var ca=window.googletag.pubads().getSlots();f.forEach(ca,function(ia){D(ia)})})}function b(){return window.pbjs&&
window.pbjs.adUnits}function p(){var ca=[],ia=u.fireEvent("auctionBlockerHook");ia&&ca.push(ia);return ca}function F(ca,ia){var qa=p();return Promise.all(qa).then(function(){return Oa(ca)}).then(function(sa){return wa(sa,ia)}).then(function(sa){return sa.map(function(da){return da.space})})}function R(ca,ia){var qa=c.getElementWithSelector('[id="'+ca+'"]');if(qa)return(ca=Ma.getByElement(qa))?ca.space:ma(ia).find(function(sa){return(sa=c.getSpaceElement(sa))&&sa===qa})}function W(ca,ia){var qa,sa,
da,Ba,La,Va;return $jscomp.asyncExecutePromiseGeneratorProgram(function(Pa){switch(Pa.nextAddress){case 1:qa={definedSlotsFilteringSettings:{dfpEnabled:za.dfp,alwaysFilterByGoogletagSlots:Z}},ia=Object.assign({},qa,ia),sa=ca.filter(function(Ya){return Ya.state===m.Unit.States.PENDING}),sa.forEach(function(Ya){Ya.state=m.Unit.States.CHECKING}),da=[].concat($jscomp.arrayFromIterable(sa)),Ba=$jscomp.makeIterator(Ka),La=Ba.next();case 2:if(La.done){Pa.jumpTo(4);break}Va=La.value;return Pa.yield(Va(sa,
ia),5);case 5:sa=Pa.yieldResult;da=da.filter(function(Ya){var Za=sa.includes(Ya);Za||(Ya.state=m.Unit.States.PENDING);return Za});La=Ba.next();Pa.jumpTo(2);break;case 4:return Pa.return(sa)}})}function ma(ca){ca=void 0===ca?[]:ca;return ca.filter(function(ia){return!Ma.getBySpace(ia)})}var ka=!1,za,ta={};ta[d.consts.refreshType.ALL]=[];ta[d.consts.refreshType.VISIBLE]=[];ta[d.consts.refreshType.HIDDEN]=[];var Aa=[],Ra=[],Q=[],Z=!1,oa=function(ca,ia){if(!ka){ka=!0;aa.set(ca);za=ia||{};Z=u.fireEvent("alwaysFilterByGoogletagSlots");
va(za);(za.dfp||Z)&&fa();L();kb();(Q=u.fireEvent("movePositionRules")||[],0<Q.length)&&c.movePositionService.setMovePositionRules(Q);X.onScroll(function(){var da=aa.getAll();nb();Ca(d.consts.refreshType.HIDDEN);Xa(da)});X.onBlur(function(){Ca(d.consts.refreshType.HIDDEN)});if(ca=u.fireEvent("refreshOnInterval")){var qa=ca.refreshInterval||2E3;n.infof(null,"going to dispatch refresher on a %o sec(s) interval",qa/1E3);var sa=function(){Ca(d.consts.refreshType.VISIBLE)};refreshOnIntervalCallbackID=setInterval(sa,
qa);X.onFocus(function(){refreshOnIntervalCallbackID||(refreshOnIntervalCallbackID=setInterval(sa,qa))});X.onBlur(function(){refreshOnIntervalCallbackID&&(clearInterval(refreshOnIntervalCallbackID),refreshOnIntervalCallbackID=null)})}pb.dispatch.subscribeForEvent("refresh",function(da){var Ba=aa.getAll();f.forEach(da,function(La){f.forEach(Ba,function(Va){Va&&Va.name==La&&(0>ta[d.consts.refreshType.HIDDEN].indexOf(Va)&&ta[d.consts.refreshType.HIDDEN].push(Va),Ca(d.consts.refreshType.HIDDEN))})})});
u.addEventListener("refreshByForce",function(da){da=(da=da.data)&&da.settings;var Ba=aa.getAll(),La=da&&da.spacesNames,Va=da&&da.shouldRefreshAllSpaces,Pa=[],Ya={filteringSettings:{minTimeBetweenRefreshes:da&&da.minTimeBetweenRefreshes}};da&&da.shouldRefreshFailedSpaces&&f.forEach(Aa,function(Za){Pa.push(Za)});La&&(Pa=f.filter(Ba,function(Za){return-1<La.indexOf(Za.name)}));Va&&(Pa=Ba);Pa=f.distict(Pa);F(Pa,Ya).then(function(Za){Aa=f.filter(Pa,function($a){return 0>Za.indexOf($a)})})});u.addEventListener("websiteHooksGetSpaces",
function(){return Qa()});if(ca=u.fireEvent("scrapePrebidAdUnits"))"boolean"===typeof ca&&(ca={}),Da(ca);u.fireEvent("scrapeGoogletagSlots")&&window.googletag.cmd.push(function(){var da=window.googletag.pubads().getSlots();da=f.map(da,function(Ba){var La=pa(Ba);u.fireEvent("addAmazonBidder")&&ua(La,Ba.getAdUnitPath());return La});f.forEach(da,function(Ba){Ba&&aa.set(Ba)})});(za.dfp||Z)&&window.googletag.cmd.push(function(){var da=window.googletag.pubads().getSlots();da&&f.forEach(da,function(Ba){ba(Ba)})});
Ha()}},Da=function(ca){var ia=ca.getAdUnits||b,qa=ca.filterOutAdUnit,sa=ca.parseAdUnit,da=ca.postParsingAdUnits;ca=ca.parseInterval||1E3;var Ba,La=[],Va=function(){Ba=ia()||[];if(0<Ba.length){for(var Pa=[],Ya=[],Za=0;Za<Ba.length;Za++){var $a=Ba[Za];!$a||0<=La.indexOf($a)||($a=JSON.parse(JSON.stringify($a)),$a=sa?sa($a):$a,qa&&qa($a)||(La.push($a),Pa.push($a)))}0!==Pa.length&&(Pa=da?da(Pa):Pa,f.forEach(Pa,function(hb){(hb=(hb=y(hb))&&new m.Space(hb))&&(0<aa.getSpacesByName(hb.name).length||Ya.push(hb))}),
0!==Ya.length&&(aa.set(Ya),Xa(Ya)))}};Va();setInterval(function(){Va()},ca)},Ha=function(){window.__upo_d.getSpaces=function(){return Qa()};window.__upo_d.getUnits=function(){var ca=Ma.getAll();return f.map(ca,function(ia){return c.unitDecoder(ia)})};window.__upo_d.getAuctions=function(){return f.map(Ra,function(ca){return c.auctionDecoder(ca)})}},Qa=function(){var ca=aa.getAll();return f.map(ca,function(ia){return c.spaceDecoder(ia)})},Xa=function(ca){ca=ma(ca);return F(ca)},kb=function(){var ca=
Qa();u.fireEvent("listenToNewSpaces",{spaces:ca,callback:function(ia){if(ia){for(var qa=aa.getAll(),sa=0;sa<ia.length;sa++){var da=ia[sa];(da=da&&new m.Space(da))&&aa.set(da)}Xa(qa)}}})},t=[],O,ba=function(ca){var ia=ca.getSlotElementId(),qa=ca.getAdUnitPath(),sa=aa.getAll(),da=R(ia,sa);if(!da){if(u.fireEvent("useSlotPath"))da=aa.getSpacesByName(qa.split("/")[qa.split("/").length-1])[0];else{var Ba=Qa(),La=u.fireEvent("customGetSpace",{spaces:Ba,divId:ia,slot:ca});La&&(da=f.find(sa,function(Va){return Va.name==
La.name}))}if(da=da&&JSON.parse(JSON.stringify(da)))da.selector.value=Fa.escapeSelector("#"+ia),aa.set(da)}da||(ia=u.fireEvent("extractPublisherSpaceLaterDefineSlot",{name:ia}))&&(da=(da=y(ia))&&new m.Space(da))&&aa.set(da);!da&&u.fireEvent("scrapeGoogletagSlots")&&(da=pa(ca))&&aa.set(da);da&&0>t.indexOf(da)&&(u.fireEvent("addAmazonBidder")&&ua(da,qa),t.push(da),clearTimeout(O),O=setTimeout(function(){F(t);t=[]},100))},fa=function(){var ca="push";window.googletag&&window.googletag.cmd.unshift&&(ca=
"unshift");window.googletag.cmd[ca](function(){var ia=window.googletag.defineSlot;window.googletag.defineSlot=function(sa,da,Ba){var La=ia(sa,da,Ba);setTimeout(function(){La&&!D(La)&&ba(La)},0);return La};if(u.fireEvent("overrideDefineOutOfPageSlot")){var qa=window.googletag.defineOutOfPageSlot;window.googletag.defineOutOfPageSlot=function(sa,da){var Ba=qa(sa,da);setTimeout(function(){Ba&&!D(Ba)&&ba(Ba)},0);return Ba}}})},pa=function(ca){if(ca&&!u.fireEvent("shouldIgnoreGoogletagSlotScraping",{slot:ca})){var ia=
ca.getSlotElementId();ca=ca.getSizes();ca=f.map(ca,function(da){if("fluid"===da)return"fluid";if(da.getWidth)return da.getWidth()+"x"+da.getHeight()});if((ca=f.filter(ca,function(da){return!!da}))&&!(0>=ca.length)){var qa="adxId_"+ia,sa="directId_"+ia;ia={id:ia,name:ia,staging:!1,selector:{value:Fa.escapeSelector("#"+ia),position:d.consts.selectorPosition.APPEND_CHILD},sizes:ca,preBiddingSettings:{enabled:!0,biddingSettings:{}},postBiddingSettings:{adxId:qa,directId:sa,enabled:za.dfp,type:1,order:[{params:{},
adx:{bidderID:qa,testCompliance:!0},direct:{bidderID:sa,testCompliance:!0}},{params:{queryParams:{ad_type:"text"}},adx:{bidderID:qa,testCompliance:!1},direct:{bidderID:sa,testCompliance:!0}}]}};ia.preBiddingSettings.biddingSettings[d.consts.headerBiddingType.prebid]=[];return new m.Space(ia)}}},ua=function(ca,ia){if(ca&&ca.preBiddingSettings.biddingSettings[d.consts.headerBiddingType.prebid]&&!f.find(ca.preBiddingSettings.biddingSettings[d.consts.headerBiddingType.prebid],function(sa){return"amazonAAX"==
sa.name})){var qa=window.apstag;(qa=qa&&qa._Q&&qa._Q[0]&&qa._Q[0][1]&&qa._Q[0][1][0]&&qa._Q[0][1][0].pubID)&&ia&&ca.preBiddingSettings.biddingSettings[d.consts.headerBiddingType.prebid].push({id:ia+"_amazon_bidder",name:"amazonAAX",testCompliance:!0,params:{pubID:qa,adUnitGPTPath:ia}})}},va=function(ca){for(var ia in ca)if(ca.hasOwnProperty(ia)&&ca[ia]){presetsCbs=[];postsetsCbs=[];var qa=jb.presetProvider(ia),sa=tb.postsetProvider(ia);qa&&presetsCbs.push(qa);sa&&postsetsCbs.push(sa);qa=u.fireEvent("thirdPartyModulePreset",
{type:ia});sa=u.fireEvent("thirdPartyModulePostset",{type:ia});qa&&presetsCbs.push(qa);sa&&postsetsCbs.push(sa);f.forEach(presetsCbs,function(da){lb.addPresetCallback(ia,da)});f.forEach(postsetsCbs,function(da){lb.addPostsetCallback(ia,da)});lb.loadThirdParty(ia)}},Ka=[q,l,e,g,h];this.invoke=function(ca){if(!window.__bt_intrnl.stopFlag){var ia=ca.spaces;oa(ia,ca.settings);Xa(ia);var qa=1,sa=setInterval(function(){15==qa&&clearInterval(sa);qa++;Xa(ia)},100)}};var Oa=function(ca){var ia=[],qa=[];f.forEach(ca,
function(sa){var da=c.getSpaceElement(sa);if(da){var Ba=Ma.getByElement(da);Ba||(da.alreadyWraped||(na.Hooks.hookFunction(da,"removeChild",na.Hooks.Types.REMOVE_CHILD_PRE,void 0,!0),na.Hooks.hookPropertySetter(da,"innerHTML",na.Hooks.Types.HTML_ELEMENT_INNERHTML_PRE,void 0,!0),na.Hooks.hookPropertySetter(da,"textContent",na.Hooks.Types.HTML_ELEMENT_TEXTCONTENT_PRE,void 0,!0),na.Hooks.hookFunction(da,"setAttribute",na.Hooks.Types.SET_ATTRIBUTE_PRE,void 0,!0),da.alreadyWraped=!0),da.setAttribute("data-guard-element",
!0),Ba=new m.Unit({element:da,space:sa}),u.fireEvent("onNewUnitFound",Ba),Ma.set(Ba),qa.push(Ba));Ba&&Ba.space==sa&&ia.push(Ba)}});H(qa);return ia},Na=function(ca){for(var ia=0;ia<ca.length;ia++){var qa=ca[ia],sa=c.spaceDecoder(qa.space),da=u.fireEvent("modifySpacesOnBeforeFetching",{space:sa});if(da){sa=aa.getAll();da=new m.Space(da);qa.space=da;for(qa=0;qa<sa.length;qa++){var Ba=sa[qa];if(Ba.id==da.id){aa.remove(Ba);break}}aa.set(da)}}},wa=function(ca,ia){return new f.CPromise(function(qa,sa){u.fireEvent("onBeforeInvokeDispatch",
{spaces:f.map(ca,function(da){return c.spaceDecoder(da.space)})});Na(ca);sa={};ia&&(sa=ia.filteringSettings||{});W(ca,sa).then(function(da){try{if(qa(da),da&&!(0>=da.length)){var Ba=f.map(da,function(Pa){return Pa.space});c.movePositionService.dispatch(Ba);var La=f.map(da,function(Pa){return new m.Auction({unit:Pa})});u.fireEvent("onAuctionGroupStarted",La);Sa(La);if(!window.__bt_intrnl.stopFlag){u.fireEvent("onPrebiddingStarted",La);var Va=pb.dispatch.dispatchHB(La);f.CPromise.all(Va).then(function(Pa){u.fireEvent("onPrebiddingEnded",
La);for(var Ya=0;Ya<Pa.length;Ya++){var Za=Pa[Ya],$a=Za.auctionId,hb=Za.bids;f.forEach(La,function(rb){rb.auctionId==$a&&rb.addBids(hb)})}Pa={forceCompliantEnabled:u.fireEvent("forceCompliant")};window.__bt_intrnl.stopFlag||(Pa=pb.dispatch.dispatchAS(La,Pa),f.forEach(Pa,function(rb,Bb){rb.then(function(Ab){var Wa=f.find(La,function(ib){return ib.auctionId==Ab.auctionId}),vb=Wa.getWinningBid(),gb=Ab.bids;gb&&0<gb.length?f.forEach(gb,function(ib){ib.type==m.Bid.Types.DFP_PREBID?vb&&vb.additionalBidsToRender.push(ib):
Wa.addBids([ib])}):za.dfp&&Wa.unit.space.postBiddingSettings.enabled&&vb&&Wa.cancelAuction();if(!window.__bt_intrnl.stopFlag){var fb=Wa.getWinningBid();localStorage.getItem("forceDefaultCreative")&&(fb=void 0);!fb&&(gb=u.fireEvent("getDefaultCreative",{auction:c.auctionDecoder(Wa)}))&&(gb={width:gb.width,height:gb.height,creativeHTML:gb.creativeHTML},fb=G(gb,Wa),Wa.addBids([fb]));Wa.subscribeForEvent("auctionRendered",function(){u.fireEvent("onAuctionRendered",{auction:Wa,bid:fb});u.fireEvent("onAuctionRenderedWebsiteHook",
{space:c.spaceDecoder(Wa.unit.space),element:Wa.unit.element,winningBid:c.bidDecoder(fb)});eb.onVisible(Wa.unit.element,function(){u.fireEvent("onAdViewed",{auction:Wa,bid:fb});u.fireEvent("onAdViewedWebsiteHook",{space:c.spaceDecoder(Wa.unit.space),element:Wa.unit.element,winningBid:c.bidDecoder(fb)})})});Wa.subscribeForEvent("renderBidDone",function(ib){u.fireEvent("onAuctionEnded",{auction:Wa,bid:ib.successfulyRenderedBid&&fb});u.fireEvent("onAuctionEndedWebsiteHook",{element:Wa.unit.element,bid:ib.successfulyRenderedBid&&
c.bidDecoder(fb)})});Wa.renderBid(fb);Wa.unit.state=m.Unit.States.PENDING;xa(Wa.unit.space)}})}))})}}}catch(Pa){n.errorf(null,"recovery: filterUnits %o",Pa)}})})},xa=function(ca){var ia=u.fireEvent("spaceRefreshSettings",{space:c.spaceDecoder(ca)});if(ia){var qa=c.refreshTypeDecoder(ia.type);qa==d.consts.refreshType.UNKNOWN?n.errorf(null,"invalid refresh type setting %o",ia.type):(ia=ia.rate||3E4,0>ta[qa].indexOf(ca)&&ta[qa].push(ca),n.infof(null,"setting up refresh(%s) for space %o in %o secs",qa,
ca.name,ia/1E3),setTimeout(function(){Ca(qa)},ia))}},Ia,Ca=function(ca){clearTimeout(Ia);Ia=setTimeout(function(){var ia=[];switch(ca){case d.consts.refreshType.ALL:ia=ta[ca];break;case d.consts.refreshType.VISIBLE:ia=Ua(ta[ca]);break;case d.consts.refreshType.HIDDEN:ia=cb(ta[ca]);break;default:ia=cb(ta[ca])}1>ia.length?n.infof(null,"nothing to refresh"):(n.infof(null,"dispatch trying to refresh %o spaces out of %o with type %o",ia.length,ta[ca].length,ca),F(ia).then(function(qa){qa=qa||[];var sa=
[];f.forEach(ia,function(da){0>qa.indexOf(da)&&sa.push(da)});n.infof(null,"refreshed %o spaces out of %o",qa.length,ia.length);ta[ca]=sa}))},1E3)},Sa=function(ca){f.forEach(ca,function(ia){ia.state=m.Auction.States.DISPATCHED;ia.unit.state=m.Unit.States.DISPATCHED;Ra.push(ia);ia.unit.countOfDispatches++;ia.unit.lastInvokeTime=new Date;u.fireEvent("onAuctionStarted",{auction:ia})})},Ua=function(ca){for(var ia=[],qa=0;qa<ca.length;qa++){var sa=ca[qa];eb.isElementVisible(sa.selector.value)&&ia.push(sa)}return ia},
cb=function(ca){if(!document.hasFocus())return ca;for(var ia=[],qa=0;qa<ca.length;qa++){var sa=ca[qa];eb.isElementVisible(sa.selector.value)||ia.push(sa)}return ia},mb,nb=function(){clearTimeout(mb);mb=setTimeout(function(){try{var ca=u.fireEvent("extractPublisherSpacesLaterDefinedUnits");if(ca)for(var ia=0;ia<ca.length;ia++){var qa=y(ca[ia]),sa=qa&&new m.Space(qa);sa&&aa.set(sa)}}catch(da){}},1E3)}},aa=new function(){var L=[],b={},p={};this.set=function(F){Array.isArray(F)||(F=[F]);for(var R=0;R<
F.length;R++){var W=F[R];W&&(L.push(W),b[W.name]=b[W.name]||[],b[W.name].push(W),p[W.id]=p[W.id]||[],p[W.id].push(W))}};this.getSpacesByName=function(F){return b[F]||[]};this.getSpacesByID=function(F){return p[F]||[]};this.getAll=function(){return L};this.remove=function(F){L=f.filter(L,function(W){return W!=F});var R=p[F.id].indexOf(F);0<=R&&p[F.id].splice(R,1);R=b[F.name].indexOf(F);0<=R&&b[F.name].splice(R,1)}},Ma=new function(){var L=[];this.set=function(b){L.push(b)};this.getBySpace=function(b){for(var p=
0;p<L.length;p++){var F=L[p];if(F.space==b)return F}};this.getByElement=function(b){for(var p=0;p<L.length;p++){var F=L[p];if(F.element==b)return F}};this.getAll=function(){return L}}})(zb);zb.init(B[0])})(arguments);

})({});
